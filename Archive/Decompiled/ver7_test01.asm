0000:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
0002:	00-20       	and r0, r0            ; Logical AND
0004:	BD-01       	movw r22, r26         ; Copy Register Word
0006:	00-00       	nop                   ; No Operation
0008:	2D-09       	sbc r18, r13          ; Subtract with Carry
000A:	01-00       	.data 0x0001          ; Binary data
000C:	F1-08       	sbc r15, r1           ; Subtract with Carry
000E:	01-00       	.data 0x0001          ; Binary data
0010:	F1-08       	sbc r15, r1           ; Subtract with Carry
0012:	01-00       	.data 0x0001          ; Binary data
0014:	F1-08       	sbc r15, r1           ; Subtract with Carry
0016:	01-00       	.data 0x0001          ; Binary data
0018:	F1-08       	sbc r15, r1           ; Subtract with Carry
001A:	01-00       	.data 0x0001          ; Binary data
001C:	F1-08       	sbc r15, r1           ; Subtract with Carry
001E:	01-00       	.data 0x0001          ; Binary data
0020:	F1-08       	sbc r15, r1           ; Subtract with Carry
0022:	01-00       	.data 0x0001          ; Binary data
0024:	F1-08       	sbc r15, r1           ; Subtract with Carry
0026:	01-00       	.data 0x0001          ; Binary data
0028:	F1-08       	sbc r15, r1           ; Subtract with Carry
002A:	01-00       	.data 0x0001          ; Binary data
002C:	2D-09       	sbc r18, r13          ; Subtract with Carry
002E:	01-00       	.data 0x0001          ; Binary data
0030:	2D-09       	sbc r18, r13          ; Subtract with Carry
0032:	01-00       	.data 0x0001          ; Binary data
0034:	F1-08       	sbc r15, r1           ; Subtract with Carry
0036:	01-00       	.data 0x0001          ; Binary data
0038:	2D-09       	sbc r18, r13          ; Subtract with Carry
003A:	01-00       	.data 0x0001          ; Binary data
003C:	E1-08       	sbc r14, r1           ; Subtract with Carry
003E:	01-00       	.data 0x0001          ; Binary data
0040:	2D-09       	sbc r18, r13          ; Subtract with Carry
0042:	01-00       	.data 0x0001          ; Binary data
0044:	2D-09       	sbc r18, r13          ; Subtract with Carry
0046:	01-00       	.data 0x0001          ; Binary data
0048:	2D-09       	sbc r18, r13          ; Subtract with Carry
004A:	01-00       	.data 0x0001          ; Binary data
004C:	2D-09       	sbc r18, r13          ; Subtract with Carry
004E:	01-00       	.data 0x0001          ; Binary data
0050:	2D-09       	sbc r18, r13          ; Subtract with Carry
0052:	01-00       	.data 0x0001          ; Binary data
0054:	2D-09       	sbc r18, r13          ; Subtract with Carry
0056:	01-00       	.data 0x0001          ; Binary data
0058:	2D-09       	sbc r18, r13          ; Subtract with Carry
005A:	01-00       	.data 0x0001          ; Binary data
005C:	2D-09       	sbc r18, r13          ; Subtract with Carry
005E:	01-00       	.data 0x0001          ; Binary data
0060:	2D-09       	sbc r18, r13          ; Subtract with Carry
0062:	01-00       	.data 0x0001          ; Binary data
0064:	2D-09       	sbc r18, r13          ; Subtract with Carry
0066:	01-00       	.data 0x0001          ; Binary data
0068:	2D-09       	sbc r18, r13          ; Subtract with Carry
006A:	01-00       	.data 0x0001          ; Binary data
006C:	2D-09       	sbc r18, r13          ; Subtract with Carry
006E:	01-00       	.data 0x0001          ; Binary data
0070:	2D-09       	sbc r18, r13          ; Subtract with Carry
0072:	01-00       	.data 0x0001          ; Binary data
0074:	2D-09       	sbc r18, r13          ; Subtract with Carry
0076:	01-00       	.data 0x0001          ; Binary data
0078:	2D-09       	sbc r18, r13          ; Subtract with Carry
007A:	01-00       	.data 0x0001          ; Binary data
007C:	2D-09       	sbc r18, r13          ; Subtract with Carry
007E:	01-00       	.data 0x0001          ; Binary data
0080:	2D-09       	sbc r18, r13          ; Subtract with Carry
0082:	01-00       	.data 0x0001          ; Binary data
0084:	2D-09       	sbc r18, r13          ; Subtract with Carry
0086:	01-00       	.data 0x0001          ; Binary data
0088:	2D-09       	sbc r18, r13          ; Subtract with Carry
008A:	01-00       	.data 0x0001          ; Binary data
008C:	2D-09       	sbc r18, r13          ; Subtract with Carry
008E:	01-00       	.data 0x0001          ; Binary data
0090:	2D-09       	sbc r18, r13          ; Subtract with Carry
0092:	01-00       	.data 0x0001          ; Binary data
0094:	2D-09       	sbc r18, r13          ; Subtract with Carry
0096:	01-00       	.data 0x0001          ; Binary data
0098:	2D-09       	sbc r18, r13          ; Subtract with Carry
009A:	01-00       	.data 0x0001          ; Binary data
009C:	2D-09       	sbc r18, r13          ; Subtract with Carry
009E:	01-00       	.data 0x0001          ; Binary data
00A0:	F1-01       	movw r30, r2          ; Copy Register Word
00A2:	01-00       	.data 0x0001          ; Binary data
00A4:	2D-09       	sbc r18, r13          ; Subtract with Carry
00A6:	01-00       	.data 0x0001          ; Binary data
00A8:	2D-09       	sbc r18, r13          ; Subtract with Carry
00AA:	01-00       	.data 0x0001          ; Binary data
00AC:	2D-09       	sbc r18, r13          ; Subtract with Carry
00AE:	01-00       	.data 0x0001          ; Binary data
00B0:	2D-09       	sbc r18, r13          ; Subtract with Carry
00B2:	01-00       	.data 0x0001          ; Binary data
00B4:	2D-09       	sbc r18, r13          ; Subtract with Carry
00B6:	01-00       	.data 0x0001          ; Binary data
00B8:	2D-09       	sbc r18, r13          ; Subtract with Carry
00BA:	01-00       	.data 0x0001          ; Binary data
00BC:	2D-09       	sbc r18, r13          ; Subtract with Carry
00BE:	01-00       	.data 0x0001          ; Binary data
00C0:	2D-09       	sbc r18, r13          ; Subtract with Carry
00C2:	01-00       	.data 0x0001          ; Binary data
00C4:	2D-09       	sbc r18, r13          ; Subtract with Carry
00C6:	01-00       	.data 0x0001          ; Binary data
00C8:	2D-09       	sbc r18, r13          ; Subtract with Carry
00CA:	01-00       	.data 0x0001          ; Binary data
00CC:	2D-09       	sbc r18, r13          ; Subtract with Carry
00CE:	01-00       	.data 0x0001          ; Binary data
00D0:	2D-09       	sbc r18, r13          ; Subtract with Carry
00D2:	01-00       	.data 0x0001          ; Binary data
00D4:	2D-09       	sbc r18, r13          ; Subtract with Carry
00D6:	01-00       	.data 0x0001          ; Binary data
00D8:	2D-09       	sbc r18, r13          ; Subtract with Carry
00DA:	01-00       	.data 0x0001          ; Binary data
00DC:	2D-09       	sbc r18, r13          ; Subtract with Carry
00DE:	01-00       	.data 0x0001          ; Binary data
00E0:	2D-09       	sbc r18, r13          ; Subtract with Carry
00E2:	01-00       	.data 0x0001          ; Binary data
00E4:	2D-09       	sbc r18, r13          ; Subtract with Carry
00E6:	01-00       	.data 0x0001          ; Binary data
00E8:	2D-09       	sbc r18, r13          ; Subtract with Carry
00EA:	01-00       	.data 0x0001          ; Binary data
00EC:	2D-09       	sbc r18, r13          ; Subtract with Carry
00EE:	01-00       	.data 0x0001          ; Binary data
00F0:	2D-09       	sbc r18, r13          ; Subtract with Carry
00F2:	01-00       	.data 0x0001          ; Binary data
00F4:	55-32       	cpi r21, 0x25         ; Compare with Immediate
00F6:	01-00       	.data 0x0001          ; Binary data
00F8:	2D-09       	sbc r18, r13          ; Subtract with Carry
00FA:	01-00       	.data 0x0001          ; Binary data
00FC:	AD-13       	cpse r26, r29         ; Compare Skip if Equal
00FE:	01-00       	.data 0x0001          ; Binary data
0100:	2D-09       	sbc r18, r13          ; Subtract with Carry
0102:	01-00       	.data 0x0001          ; Binary data
0104:	D1-37       	cpi r29, 0x71         ; Compare with Immediate
0106:	01-00       	.data 0x0001          ; Binary data
0108:	2D-09       	sbc r18, r13          ; Subtract with Carry
010A:	01-00       	.data 0x0001          ; Binary data
010C:	2D-09       	sbc r18, r13          ; Subtract with Carry
010E:	01-00       	.data 0x0001          ; Binary data
0110:	2D-09       	sbc r18, r13          ; Subtract with Carry
0112:	01-00       	.data 0x0001          ; Binary data
0114:	2D-09       	sbc r18, r13          ; Subtract with Carry
0116:	01-00       	.data 0x0001          ; Binary data
0118:	2D-09       	sbc r18, r13          ; Subtract with Carry
011A:	01-00       	.data 0x0001          ; Binary data
011C:	2D-09       	sbc r18, r13          ; Subtract with Carry
011E:	01-00       	.data 0x0001          ; Binary data
0120:	2D-09       	sbc r18, r13          ; Subtract with Carry
0122:	01-00       	.data 0x0001          ; Binary data
0124:	2D-09       	sbc r18, r13          ; Subtract with Carry
0126:	01-00       	.data 0x0001          ; Binary data
0128:	2D-09       	sbc r18, r13          ; Subtract with Carry
012A:	01-00       	.data 0x0001          ; Binary data
012C:	2D-09       	sbc r18, r13          ; Subtract with Carry
012E:	01-00       	.data 0x0001          ; Binary data
0130:	2D-09       	sbc r18, r13          ; Subtract with Carry
0132:	01-00       	.data 0x0001          ; Binary data
0134:	2D-09       	sbc r18, r13          ; Subtract with Carry
0136:	01-00       	.data 0x0001          ; Binary data
0138:	2D-09       	sbc r18, r13          ; Subtract with Carry
013A:	01-00       	.data 0x0001          ; Binary data
013C:	2D-09       	sbc r18, r13          ; Subtract with Carry
013E:	01-00       	.data 0x0001          ; Binary data
0140:	2D-09       	sbc r18, r13          ; Subtract with Carry
0142:	01-00       	.data 0x0001          ; Binary data
0144:	2D-09       	sbc r18, r13          ; Subtract with Carry
0146:	01-00       	.data 0x0001          ; Binary data
0148:	2D-09       	sbc r18, r13          ; Subtract with Carry
014A:	01-00       	.data 0x0001          ; Binary data
014C:	2D-09       	sbc r18, r13          ; Subtract with Carry
014E:	01-00       	.data 0x0001          ; Binary data
0150:	2D-09       	sbc r18, r13          ; Subtract with Carry
0152:	01-00       	.data 0x0001          ; Binary data
0154:	2D-09       	sbc r18, r13          ; Subtract with Carry
0156:	01-00       	.data 0x0001          ; Binary data
0158:	2D-09       	sbc r18, r13          ; Subtract with Carry
015A:	01-00       	.data 0x0001          ; Binary data
015C:	2D-09       	sbc r18, r13          ; Subtract with Carry
015E:	01-00       	.data 0x0001          ; Binary data
0160:	2D-09       	sbc r18, r13          ; Subtract with Carry
0162:	01-00       	.data 0x0001          ; Binary data
0164:	95-16       	cp r9, r21            ; Compare
0166:	01-00       	.data 0x0001          ; Binary data
0168:	2D-09       	sbc r18, r13          ; Subtract with Carry
016A:	01-00       	.data 0x0001          ; Binary data
016C:	2D-09       	sbc r18, r13          ; Subtract with Carry
016E:	01-00       	.data 0x0001          ; Binary data
0170:	2D-09       	sbc r18, r13          ; Subtract with Carry
0172:	01-00       	.data 0x0001          ; Binary data
0174:	2D-09       	sbc r18, r13          ; Subtract with Carry
0176:	01-00       	.data 0x0001          ; Binary data
0178:	2D-09       	sbc r18, r13          ; Subtract with Carry
017A:	01-00       	.data 0x0001          ; Binary data
017C:	2D-09       	sbc r18, r13          ; Subtract with Carry
017E:	01-00       	.data 0x0001          ; Binary data
0180:	2D-09       	sbc r18, r13          ; Subtract with Carry
0182:	01-00       	.data 0x0001          ; Binary data
0184:	2D-09       	sbc r18, r13          ; Subtract with Carry
0186:	01-00       	.data 0x0001          ; Binary data
0188:	2D-09       	sbc r18, r13          ; Subtract with Carry
018A:	01-00       	.data 0x0001          ; Binary data
018C:	2D-09       	sbc r18, r13          ; Subtract with Carry
018E:	01-00       	.data 0x0001          ; Binary data
0190:	2D-09       	sbc r18, r13          ; Subtract with Carry
0192:	01-00       	.data 0x0001          ; Binary data
0194:	2D-09       	sbc r18, r13          ; Subtract with Carry
0196:	01-00       	.data 0x0001          ; Binary data
0198:	2D-09       	sbc r18, r13          ; Subtract with Carry
019A:	01-00       	.data 0x0001          ; Binary data
019C:	2D-09       	sbc r18, r13          ; Subtract with Carry
019E:	01-00       	.data 0x0001          ; Binary data
01A0:	2D-09       	sbc r18, r13          ; Subtract with Carry
01A2:	01-00       	.data 0x0001          ; Binary data
01A4:	2D-09       	sbc r18, r13          ; Subtract with Carry
01A6:	01-00       	.data 0x0001          ; Binary data
01A8:	2D-09       	sbc r18, r13          ; Subtract with Carry
01AA:	01-00       	.data 0x0001          ; Binary data
01AC:	2D-09       	sbc r18, r13          ; Subtract with Carry
01AE:	01-00       	.data 0x0001          ; Binary data
01B0:	2D-09       	sbc r18, r13          ; Subtract with Carry
01B2:	01-00       	.data 0x0001          ; Binary data
01B4:	2D-09       	sbc r18, r13          ; Subtract with Carry
01B6:	01-00       	.data 0x0001          ; Binary data
01B8:	59-23       	and r21, r25          ; Logical AND
01BA:	01-00       	.data 0x0001          ; Binary data
01BC:	57-4B       	sbci r21, 0xb7        ; Subtract Immediate with Carry SBI
01BE:	4C-F2       	brbs 4, .-110         ; Branch if Bit in SREG is Set
01C0:	20-52       	subi r18, 0x20        ; Subtract Immediate
01C2:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
01C4:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
01C6:	4D-F6       	brbc 5, .-110         ; Branch if Bit in SREG is Cleared
01C8:	28-12       	cpse r2, r24          ; Compare Skip if Equal
01CA:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
01CC:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
01CE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
01D0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
01D2:	FE-FC       	.data 0xfcfe          ; Binary data
01D4:	52-4B       	sbci r21, 0xb2        ; Subtract Immediate with Carry SBI
01D6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
01D8:	10-62       	ori r17, 0x20         ; Logical OR with Immediate
01DA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
01DC:	51-4A       	sbci r21, 0xa1        ; Subtract Immediate with Carry SBI
01DE:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
01E0:	51-4A       	sbci r21, 0xa1        ; Subtract Immediate with Carry SBI
01E2:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
01E4:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
01E6:	30-43       	sbci r19, 0x30        ; Subtract Immediate with Carry SBI
01E8:	20-3B       	cpi r18, 0xb0         ; Compare with Immediate
01EA:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
01EC:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
01EE:	80-72       	andi r24, 0x20        ; Logical AND with Immediate
01F0:	04-D1       	rcall .+520           ; Relative Call to Subroutine
01F2:	4E-49       	sbci r20, 0x9e        ; Subtract Immediate with Carry SBI
01F4:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
01F6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
01F8:	A8-52       	subi r26, 0x28        ; Subtract Immediate
01FA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
01FC:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
01FE:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
0200:	11-07       	cpc r17, r17          ; Compare with Carry
0202:	03-D5       	rcall .+2566          ; Relative Call to Subroutine
0204:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
0206:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
0208:	08-02       	muls r16, r24         ; Multiply Signed
020A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
020C:	49-4B       	sbci r20, 0xb9        ; Subtract Immediate with Carry SBI
020E:	4A-4C       	sbci r20, 0xca        ; Subtract Immediate with Carry SBI
0210:	4A-48       	sbci r20, 0x8a        ; Subtract Immediate with Carry SBI
0212:	2A-22       	and r2, r26           ; Logical AND
0214:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
0216:	4A-4A       	sbci r20, 0xaa        ; Subtract Immediate with Carry SBI
0218:	00-23       	and r16, r16          ; Logical AND
021A:	99-18       	sub r9, r9            ; Subtract Without Carry
021C:	A1-42       	sbci r26, 0x21        ; Subtract Immediate with Carry SBI
021E:	03-D2       	rcall .+1030          ; Relative Call to Subroutine
0220:	19-58       	subi r17, 0x89        ; Subtract Immediate
0222:	99-50       	subi r25, 0x09        ; Subtract Immediate
0224:	04-33       	cpi r16, 0x34         ; Compare with Immediate
0226:	F8-E7       	ldi r31, 0x78         ; Load Immediate
0228:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
022A:	47-49       	sbci r20, 0x97        ; Subtract Immediate with Carry SBI
022C:	00-22       	and r0, r16           ; Logical AND
022E:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
0230:	02-D2       	rcall .+1028          ; Relative Call to Subroutine
0232:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
0234:	04-2B       	or r16, r20           ; Logical OR
0236:	FA-E7       	ldi r31, 0x7a         ; Load Immediate
0238:	44-48       	sbci r20, 0x84        ; Subtract Immediate with Carry SBI
023A:	45-49       	sbci r20, 0x95        ; Subtract Immediate with Carry SBI
023C:	00-23       	and r16, r16          ; Logical AND
023E:	5A-58       	subi r21, 0x8a        ; Subtract Immediate
0240:	1A-50       	subi r17, 0x0a        ; Subtract Immediate
0242:	04-33       	cpi r16, 0x34         ; Compare with Immediate
0244:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
0246:	DE-7F       	andi r29, 0xfe        ; Logical AND with Immediate
0248:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
024A:	42-4B       	sbci r20, 0xb2        ; Subtract Immediate with Carry SBI
024C:	42-4A       	sbci r20, 0xa2        ; Subtract Immediate with Carry SBI
024E:	80-21       	and r24, r0           ; Logical AND
0250:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
0252:	01-1B       	sub r16, r17          ; Subtract Without Carry
0254:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
0256:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
0258:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
025A:	3C-4A       	sbci r19, 0xac        ; Subtract Immediate with Carry SBI
025C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
025E:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
0260:	8A-22       	and r8, r26           ; Logical AND
0262:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
0264:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
0266:	80-53       	subi r24, 0x30        ; Subtract Immediate
0268:	24-22       	and r2, r20           ; Logical AND
026A:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
026C:	A0-22       	and r10, r16          ; Logical AND
026E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
0270:	9A-79       	andi r25, 0x9a        ; Logical AND with Immediate
0272:	92-07       	cpc r25, r18          ; Compare with Carry
0274:	FC-D5       	rcall .+3064          ; Relative Call to Subroutine
0276:	9A-79       	andi r25, 0x9a        ; Logical AND with Immediate
0278:	D4-06       	cpc r13, r20          ; Compare with Carry
027A:	FC-D4       	rcall .+2552          ; Relative Call to Subroutine
027C:	39-4A       	sbci r19, 0xa9        ; Subtract Immediate with Carry SBI
027E:	93-79       	andi r25, 0x93        ; Logical AND with Immediate
0280:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
0282:	0C-03       	fmul r16, r20         ; Fractional Multiply Unsigned
0284:	08-2B       	or r16, r24           ; Logical OR
0286:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
0288:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
028A:	03-22       	and r0, r19           ; Logical AND
028C:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
028E:	4C-22       	and r4, r28           ; Logical AND
0290:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
0292:	9A-79       	andi r25, 0x9a        ; Logical AND with Immediate
0294:	90-06       	cpc r9, r16           ; Compare with Carry
0296:	FC-D5       	rcall .+3064          ; Relative Call to Subroutine
0298:	32-4A       	sbci r19, 0xa2        ; Subtract Immediate with Carry SBI
029A:	91-79       	andi r25, 0x91        ; Logical AND with Immediate
029C:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
029E:	49-06       	cpc r4, r25           ; Compare with Carry
02A0:	FB-D5       	rcall .+3062          ; Relative Call to Subroutine
02A2:	31-4A       	sbci r19, 0xa1        ; Subtract Immediate with Carry SBI
02A4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
02A6:	01-71       	andi r16, 0x11        ; Logical AND with Immediate
02A8:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
02AA:	04-21       	and r16, r4           ; Logical AND
02AC:	51-60       	ori r21, 0x01         ; Logical OR with Immediate
02AE:	20-22       	and r2, r16           ; Logical AND
02B0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
02B2:	9A-79       	andi r25, 0x9a        ; Logical AND with Immediate
02B4:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
02B6:	0C-02       	muls r16, r28         ; Multiply Signed
02B8:	0C-2A       	or r0, r28            ; Logical OR
02BA:	FA-D1       	rcall .+1012          ; Relative Call to Subroutine
02BC:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
02BE:	2C-4A       	sbci r18, 0xac        ; Subtract Immediate with Carry SBI
02C0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
02C2:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
02C4:	2C-4A       	sbci r18, 0xac        ; Subtract Immediate with Carry SBI
02C6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
02C8:	00-22       	and r0, r16           ; Logical AND
02CA:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
02CC:	07-22       	and r0, r23           ; Logical AND
02CE:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
02D0:	04-2C       	mov r0, r4            ; Copy Register
02D2:	2A-4A       	sbci r18, 0xaa        ; Subtract Immediate with Carry SBI
02D4:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
02D6:	0C-2D       	mov r16, r12          ; Copy Register
02D8:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
02DA:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
02DC:	E9-FC       	.data 0xfce9          ; Binary data
02DE:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
02E0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
02E2:	DA-07       	cpc r29, r26          ; Compare with Carry
02E4:	05-D5       	rcall .+2570          ; Relative Call to Subroutine
02E6:	26-48       	sbci r18, 0x86        ; Subtract Immediate with Carry SBI
02E8:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
02EA:	A6-FB       	bst r26, 6            ; Bit Store from Bit in Register to T Flag in SREG
02EC:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
02EE:	26-4A       	sbci r18, 0xa6        ; Subtract Immediate with Carry SBI
02F0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
02F2:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
02F4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
02F6:	5B-06       	cpc r5, r27           ; Compare with Carry
02F8:	09-D5       	rcall .+2578          ; Relative Call to Subroutine
02FA:	22-4C       	sbci r18, 0xc2        ; Subtract Immediate with Carry SBI
02FC:	22-4A       	sbci r18, 0xa2        ; Subtract Immediate with Carry SBI
02FE:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0300:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
0302:	04-D1       	rcall .+520           ; Relative Call to Subroutine
0304:	1E-48       	sbci r17, 0x8e        ; Subtract Immediate with Carry SBI
0306:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
0308:	97-FB       	bst r25, 7            ; Bit Store from Bit in Register to T Flag in SREG
030A:	00-23       	and r16, r16          ; Logical AND
030C:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
030E:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
0310:	E7-FA       	bst r14, 7            ; Bit Store from Bit in Register to T Flag in SREG
0312:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
0314:	0F-FB       	.data 0xfb0f          ; Binary data
0316:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
0318:	09-FA       	.data 0xfa09          ; Binary data
031A:	FE-E7       	ldi r31, 0x7e         ; Load Immediate
031C:	0E-20       	and r0, r14           ; Logical AND
031E:	05-40       	sbci r16, 0x05        ; Subtract Immediate with Carry SBI
0320:	30-80       	ld r3, Z              ; Load Indirect from Data Space to Register
0322:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
0324:	82-3F       	cpi r24, 0xf2         ; Compare with Immediate
0326:	04-00       	.data 0x0004          ; Binary data
0328:	01-00       	.data 0x0001          ; Binary data
032A:	00-2B       	or r16, r16           ; Logical OR
032C:	14-D0       	rcall .+40            ; Relative Call to Subroutine
032E:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
0330:	02-D0       	rcall .+4             ; Relative Call to Subroutine
0332:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
0334:	00-E0       	ldi r16, 0x00         ; Load Immediate
0336:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
0338:	DC-9C       	mul r13, r12          ; Multiply Unsigned
033A:	FF-1F       	adc r31, r31          ; Add with Carry
033C:	D8-86       	std Y+8, r13          ; Store Indirect From Register to Data Space
033E:	01-00       	.data 0x0001          ; Binary data
0340:	60-91-FF-1F 	lds r22, 0x1fff       ; Load Direct from Data Space (32-bit)
0344:	DC-9C       	mul r13, r12          ; Multiply Unsigned
0346:	FF-1F       	adc r31, r31          ; Add with Carry
0348:	58-03       	fmul r21, r16         ; Fractional Multiply Unsigned
034A:	00-20       	and r0, r0            ; Logical AND
034C:	00-8C       	std Y+24, r0          ; Store Indirect From Register to Data Space
034E:	FF-1F       	adc r31, r31          ; Add with Carry
0350:	00-00       	nop                   ; No Operation
0352:	00-00       	nop                   ; No Operation
0354:	00-E4       	ldi r16, 0x40         ; Load Immediate
0356:	00-E0       	ldi r16, 0x00         ; Load Immediate
0358:	5F-E4       	ldi r21, 0x4f         ; Load Immediate
035A:	00-E0       	ldi r16, 0x00         ; Load Immediate
035C:	08-ED       	ldi r16, 0xd8         ; Load Immediate
035E:	00-E0       	ldi r16, 0x00         ; Load Immediate
0360:	00-50       	subi r16, 0x00        ; Subtract Immediate
0362:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
0364:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
0366:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
0368:	44-80       	ldd r4, Y+4           ; Load Indirect from Data Space to Register
036A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
036C:	04-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
036E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
0370:	C0-10       	cpse r12, r0          ; Compare Skip if Equal
0372:	05-00       	.data 0x0005          ; Binary data
0374:	14-E0       	ldi r17, 0x04         ; Load Immediate
0376:	00-E0       	ldi r16, 0x00         ; Load Immediate
0378:	7F-32       	cpi r23, 0x2f         ; Compare with Immediate
037A:	02-00       	.data 0x0002          ; Binary data
037C:	00-00       	nop                   ; No Operation
037E:	20-20       	and r2, r0            ; Logical AND
0380:	A7-3A       	cpi r26, 0xa7         ; Compare with Immediate
0382:	19-05       	cpc r17, r9           ; Compare with Carry
0384:	1C-E0       	ldi r17, 0x0c         ; Load Immediate
0386:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
0388:	A5-C3       	rjmp .+1866           ; Relative Jump
038A:	94-5A       	subi r25, 0xa4        ; Subtract Immediate
038C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
038E:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
0390:	FF-FF       	.data 0xffff          ; Binary data
0392:	FF-FF       	.data 0xffff          ; Binary data
0394:	FF-FF       	.data 0xffff          ; Binary data
0396:	FF-FF       	.data 0xffff          ; Binary data
0398:	FF-FF       	.data 0xffff          ; Binary data
039A:	FF-FF       	.data 0xffff          ; Binary data
039C:	FF-FF       	.data 0xffff          ; Binary data
039E:	FF-FF       	.data 0xffff          ; Binary data
03A0:	FF-FF       	.data 0xffff          ; Binary data
03A2:	FF-FF       	.data 0xffff          ; Binary data
03A4:	FF-FF       	.data 0xffff          ; Binary data
03A6:	FF-FF       	.data 0xffff          ; Binary data
03A8:	FF-FF       	.data 0xffff          ; Binary data
03AA:	FF-FF       	.data 0xffff          ; Binary data
03AC:	FF-FF       	.data 0xffff          ; Binary data
03AE:	FF-FF       	.data 0xffff          ; Binary data
03B0:	FF-FF       	.data 0xffff          ; Binary data
03B2:	FF-FF       	.data 0xffff          ; Binary data
03B4:	FF-FF       	.data 0xffff          ; Binary data
03B6:	FF-FF       	.data 0xffff          ; Binary data
03B8:	FF-FF       	.data 0xffff          ; Binary data
03BA:	FF-FF       	.data 0xffff          ; Binary data
03BC:	FF-FF       	.data 0xffff          ; Binary data
03BE:	FF-FF       	.data 0xffff          ; Binary data
03C0:	FF-FF       	.data 0xffff          ; Binary data
03C2:	FF-FF       	.data 0xffff          ; Binary data
03C4:	FF-FF       	.data 0xffff          ; Binary data
03C6:	FF-FF       	.data 0xffff          ; Binary data
03C8:	FF-FF       	.data 0xffff          ; Binary data
03CA:	FF-FF       	.data 0xffff          ; Binary data
03CC:	FF-FF       	.data 0xffff          ; Binary data
03CE:	FF-FF       	.data 0xffff          ; Binary data
03D0:	FF-FF       	.data 0xffff          ; Binary data
03D2:	FF-FF       	.data 0xffff          ; Binary data
03D4:	FF-FF       	.data 0xffff          ; Binary data
03D6:	FF-FF       	.data 0xffff          ; Binary data
03D8:	FF-FF       	.data 0xffff          ; Binary data
03DA:	FF-FF       	.data 0xffff          ; Binary data
03DC:	FF-FF       	.data 0xffff          ; Binary data
03DE:	FF-FF       	.data 0xffff          ; Binary data
03E0:	FF-FF       	.data 0xffff          ; Binary data
03E2:	FF-FF       	.data 0xffff          ; Binary data
03E4:	FF-FF       	.data 0xffff          ; Binary data
03E6:	FF-FF       	.data 0xffff          ; Binary data
03E8:	FF-FF       	.data 0xffff          ; Binary data
03EA:	FF-FF       	.data 0xffff          ; Binary data
03EC:	FF-FF       	.data 0xffff          ; Binary data
03EE:	FF-FF       	.data 0xffff          ; Binary data
03F0:	FF-FF       	.data 0xffff          ; Binary data
03F2:	FF-FF       	.data 0xffff          ; Binary data
03F4:	FF-FF       	.data 0xffff          ; Binary data
03F6:	FF-FF       	.data 0xffff          ; Binary data
03F8:	FF-FF       	.data 0xffff          ; Binary data
03FA:	FF-FF       	.data 0xffff          ; Binary data
03FC:	FF-FF       	.data 0xffff          ; Binary data
03FE:	FF-FF       	.data 0xffff          ; Binary data
0400:	FF-FF       	.data 0xffff          ; Binary data
0402:	FF-FF       	.data 0xffff          ; Binary data
0404:	FF-FF       	.data 0xffff          ; Binary data
0406:	FF-FF       	.data 0xffff          ; Binary data
0408:	FF-FF       	.data 0xffff          ; Binary data
040A:	FF-FF       	.data 0xffff          ; Binary data
040C:	DE-F9       	.data 0xf9de          ; Binary data
040E:	FF-FF       	.data 0xffff          ; Binary data
0410:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
0412:	05-4C       	sbci r16, 0xc5        ; Subtract Immediate with Carry SBI
0414:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
0416:	33-B9       	out 0x03, r19         ; Store Register to I/O Location
0418:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
041A:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
041C:	04-48       	sbci r16, 0x84        ; Subtract Immediate with Carry SBI
041E:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
0420:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
0422:	01-23       	and r16, r17          ; Logical AND
0424:	23-70       	andi r18, 0x03        ; Logical AND with Immediate
0426:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
0428:	DC-9C       	mul r13, r12          ; Multiply Unsigned
042A:	FF-1F       	adc r31, r31          ; Add with Carry
042C:	00-00       	nop                   ; No Operation
042E:	00-00       	nop                   ; No Operation
0430:	D8-86       	std Y+8, r13          ; Store Indirect From Register to Data Space
0432:	01-00       	.data 0x0001          ; Binary data
0434:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
0436:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
0438:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
043A:	06-48       	sbci r16, 0x86        ; Subtract Immediate with Carry SBI
043C:	06-49       	sbci r16, 0x96        ; Subtract Immediate with Carry SBI
043E:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
0440:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
0442:	06-48       	sbci r16, 0x86        ; Subtract Immediate with Carry SBI
0444:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
0446:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
0448:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
044A:	03-B1       	in r16, 0x03          ; Load an I/O Location to Register
044C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
044E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
0450:	00-00       	nop                   ; No Operation
0452:	00-00       	nop                   ; No Operation
0454:	D8-86       	std Y+8, r13          ; Store Indirect From Register to Data Space
0456:	01-00       	.data 0x0001          ; Binary data
0458:	E0-9C       	mul r14, r0           ; Multiply Unsigned
045A:	FF-1F       	adc r31, r31          ; Add with Carry
045C:	DC-9C       	mul r13, r12          ; Multiply Unsigned
045E:	FF-1F       	adc r31, r31          ; Add with Carry
0460:	00-00       	nop                   ; No Operation
0462:	00-00       	nop                   ; No Operation
0464:	40-69       	ori r20, 0x90         ; Logical OR with Immediate
0466:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
0468:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
046A:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
046C:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
046E:	00-23       	and r16, r16          ; Logical AND
0470:	8D-F8       	.data 0xf88d          ; Binary data
0472:	00-30       	cpi r16, 0x00         ; Compare with Immediate
0474:	8D-F8       	.data 0xf88d          ; Binary data
0476:	01-30       	cpi r16, 0x01         ; Compare with Immediate
0478:	8D-F8       	.data 0xf88d          ; Binary data
047A:	02-30       	cpi r16, 0x02         ; Compare with Immediate
047C:	04-68       	ori r16, 0x84         ; Logical OR with Immediate
047E:	24-68       	ori r18, 0x84         ; Logical OR with Immediate
0480:	8D-F8       	.data 0xf88d          ; Binary data
0482:	04-30       	cpi r16, 0x04         ; Compare with Immediate
0484:	8D-F8       	.data 0xf88d          ; Binary data
0486:	05-30       	cpi r16, 0x05         ; Compare with Immediate
0488:	8D-F8       	.data 0xf88d          ; Binary data
048A:	06-30       	cpi r16, 0x06         ; Compare with Immediate
048C:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
048E:	01-AB       	std Y+49, r16         ; Store Indirect From Register to Data Space
0490:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
0492:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
0494:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
0496:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0498:	00-20       	and r0, r0            ; Logical AND
049A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
049C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
049E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
04A0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
04A2:	99-4B       	sbci r25, 0xb9        ; Subtract Immediate with Carry SBI
04A4:	DA-68       	ori r29, 0x8a         ; Logical OR with Immediate
04A6:	C2-61       	ori r28, 0x12         ; Logical OR with Immediate
04A8:	1B-69       	ori r17, 0x9b         ; Logical OR with Immediate
04AA:	03-62       	ori r16, 0x23         ; Logical OR with Immediate
04AC:	97-4B       	sbci r25, 0xb7        ; Subtract Immediate with Carry SBI
04AE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
04B0:	43-62       	ori r20, 0x23         ; Logical OR with Immediate
04B2:	97-4B       	sbci r25, 0xb7        ; Subtract Immediate with Carry SBI
04B4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
04B6:	83-62       	ori r24, 0x23         ; Logical OR with Immediate
04B8:	96-4B       	sbci r25, 0xb6        ; Subtract Immediate with Carry SBI
04BA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
04BC:	C3-62       	ori r28, 0x23         ; Logical OR with Immediate
04BE:	96-4B       	sbci r25, 0xb6        ; Subtract Immediate with Carry SBI
04C0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
04C2:	03-63       	ori r16, 0x33         ; Logical OR with Immediate
04C4:	80-69       	ori r24, 0x90         ; Logical OR with Immediate
04C6:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
04C8:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
04CA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
04CC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
04CE:	8E-4B       	sbci r24, 0xbe        ; Subtract Immediate with Carry SBI
04D0:	DA-68       	ori r29, 0x8a         ; Logical OR with Immediate
04D2:	92-4B       	sbci r25, 0xb2        ; Subtract Immediate with Carry SBI
04D4:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
04D6:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
04D8:	33-81       	ldd r19, Y+3          ; Load Indirect from Data Space to Register
04DA:	8B-4B       	sbci r24, 0xbb        ; Subtract Immediate with Carry SBI
04DC:	1A-69       	ori r17, 0x9a         ; Logical OR with Immediate
04DE:	90-4B       	sbci r25, 0xb0        ; Subtract Immediate with Carry SBI
04E0:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
04E2:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
04E4:	2D-81       	ldd r18, Y+5          ; Load Indirect from Data Space to Register
04E6:	12-E0       	ldi r17, 0x02         ; Load Immediate
04E8:	87-4B       	sbci r24, 0xb7        ; Subtract Immediate with Carry SBI
04EA:	8C-4A       	sbci r24, 0xac        ; Subtract Immediate with Carry SBI
04EC:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
04EE:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
04F0:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
04F2:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
04F4:	0B-E0       	ldi r16, 0x0b         ; Load Immediate
04F6:	43-F4       	brbc 3, .+16          ; Branch if Bit in SREG is Cleared
04F8:	80-41       	sbci r24, 0x10        ; Subtract Immediate with Carry SBI
04FA:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
04FC:	01-01       	movw r0, r2           ; Copy Register Word
04FE:	82-4A       	sbci r24, 0xa2        ; Subtract Immediate with Carry SBI
0500:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
0502:	86-49       	sbci r24, 0x96        ; Subtract Immediate with Carry SBI
0504:	D1-60       	ori r29, 0x01         ; Logical OR with Immediate
0506:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
0508:	80-41       	sbci r24, 0x10        ; Subtract Immediate with Carry SBI
050A:	11-61       	ori r17, 0x11         ; Logical OR with Immediate
050C:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
050E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
0510:	10-72       	andi r17, 0x20        ; Logical AND with Immediate
0512:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
0514:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
0516:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
0518:	A2-73       	andi r26, 0x32        ; Logical AND with Immediate
051A:	7C-49       	sbci r23, 0x9c        ; Subtract Immediate with Carry SBI
051C:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
051E:	A1-F6       	brbc 1, .-88          ; Branch if Bit in SREG is Cleared
0520:	F4-71       	andi r31, 0x14        ; Logical AND with Immediate
0522:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
0524:	7C-4A       	sbci r23, 0xac        ; Subtract Immediate with Carry SBI
0526:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
0528:	77-4A       	sbci r23, 0xa7        ; Subtract Immediate with Carry SBI
052A:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
052C:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
052E:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
0530:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
0532:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0534:	74-4B       	sbci r23, 0xb4        ; Subtract Immediate with Carry SBI
0536:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
0538:	80-52       	subi r24, 0x20        ; Subtract Immediate
053A:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
053C:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
053E:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
0540:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
0542:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
0544:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
0546:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
0548:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
054A:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
054C:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
054E:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
0550:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0552:	6D-4B       	sbci r22, 0xbd        ; Subtract Immediate with Carry SBI
0554:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
0556:	80-52       	subi r24, 0x20        ; Subtract Immediate
0558:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
055A:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
055C:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
055E:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
0560:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
0562:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
0564:	AB-68       	ori r26, 0x8b         ; Logical OR with Immediate
0566:	00-2B       	or r16, r16           ; Logical OR
0568:	5D-DD       	rcall .+6842          ; Relative Call to Subroutine
056A:	00-20       	and r0, r0            ; Logical AND
056C:	66-4B       	sbci r22, 0xb6        ; Subtract Immediate with Carry SBI
056E:	2A-68       	ori r18, 0x8a         ; Logical OR with Immediate
0570:	92-78       	andi r25, 0x82        ; Logical AND with Immediate
0572:	22-B1       	in r18, 0x02          ; Load an I/O Location to Register
0574:	A9-7B       	andi r26, 0xb9        ; Logical AND with Immediate
0576:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
0578:	51-F2       	brbs 1, .-108         ; Branch if Bit in SREG is Set
057A:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
057C:	00-E0       	ldi r16, 0x00         ; Load Immediate
057E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
0580:	29-7D       	andi r18, 0xd9        ; Logical AND with Immediate
0582:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
0584:	02-22       	and r0, r18           ; Logical AND
0586:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
0588:	07-21       	and r16, r7           ; Logical AND
058A:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
058C:	7F-41       	sbci r23, 0x1f        ; Subtract Immediate with Carry SBI
058E:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
0590:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
0592:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
0594:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
0596:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0598:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
059A:	80-52       	subi r24, 0x20        ; Subtract Immediate
059C:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
059E:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
05A0:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
05A2:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
05A4:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
05A6:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
05A8:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
05AA:	4A-78       	andi r20, 0x8a        ; Logical AND with Immediate
05AC:	22-B1       	in r18, 0x02          ; Load an I/O Location to Register
05AE:	6E-7B       	andi r22, 0xbe        ; Logical AND with Immediate
05B0:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
05B2:	56-F2       	brbs 6, .-108         ; Branch if Bit in SREG is Set
05B4:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
05B6:	00-E0       	ldi r16, 0x00         ; Load Immediate
05B8:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
05BA:	EE-7C       	andi r30, 0xce        ; Logical AND with Immediate
05BC:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
05BE:	02-22       	and r0, r18           ; Logical AND
05C0:	02-F4       	brbc 2, .+0           ; Branch if Bit in SREG is Cleared
05C2:	7F-46       	sbci r23, 0x6f        ; Subtract Immediate with Carry SBI
05C4:	0A-78       	andi r16, 0x8a        ; Logical AND with Immediate
05C6:	22-B1       	in r18, 0x02          ; Load an I/O Location to Register
05C8:	29-7B       	andi r18, 0xb9        ; Logical AND with Immediate
05CA:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
05CC:	51-F2       	brbs 1, .-108         ; Branch if Bit in SREG is Set
05CE:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
05D0:	00-E0       	ldi r16, 0x00         ; Load Immediate
05D2:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
05D4:	A9-7C       	andi r26, 0xc9        ; Logical AND with Immediate
05D6:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
05D8:	02-22       	and r0, r18           ; Logical AND
05DA:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
05DC:	07-21       	and r16, r7           ; Logical AND
05DE:	31-43       	sbci r19, 0x31        ; Subtract Immediate with Carry SBI
05E0:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
05E2:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
05E4:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
05E6:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
05E8:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
05EA:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
05EC:	80-52       	subi r24, 0x20        ; Subtract Immediate
05EE:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
05F0:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
05F2:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
05F4:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
05F6:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
05F8:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
05FA:	E9-7B       	andi r30, 0xb9        ; Logical AND with Immediate
05FC:	2A-7B       	andi r18, 0xba        ; Logical AND with Immediate
05FE:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0600:	2A-73       	andi r18, 0x3a        ; Logical AND with Immediate
0602:	29-7C       	andi r18, 0xc9        ; Logical AND with Immediate
0604:	6A-7B       	andi r22, 0xba        ; Logical AND with Immediate
0606:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0608:	6A-73       	andi r22, 0x3a        ; Logical AND with Immediate
060A:	69-7C       	andi r22, 0xc9        ; Logical AND with Immediate
060C:	AA-7B       	andi r26, 0xba        ; Logical AND with Immediate
060E:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0610:	AA-73       	andi r26, 0x3a        ; Logical AND with Immediate
0612:	95-F9       	bld r25, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
0614:	15-10       	cpse r1, r5           ; Compare Skip if Equal
0616:	2A-68       	ori r18, 0x8a         ; Logical OR with Immediate
0618:	0A-44       	sbci r16, 0x4a        ; Subtract Immediate with Carry SBI
061A:	2A-60       	ori r18, 0x0a         ; Logical OR with Immediate
061C:	AA-68       	ori r26, 0x8a         ; Logical OR with Immediate
061E:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
0620:	AA-60       	ori r26, 0x0a         ; Logical OR with Immediate
0622:	00-2A       	or r0, r16            ; Logical OR
0624:	A3-DC       	rcall .+6470          ; Relative Call to Subroutine
0626:	68-68       	ori r22, 0x88         ; Logical OR with Immediate
0628:	00-28       	or r0, r0             ; Logical OR
062A:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
062C:	1F-30       	cpi r17, 0x0f         ; Compare with Immediate
062E:	40-11       	cpse r20, r0          ; Compare Skip if Equal
0630:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
0632:	FF-25       	clr r511              ; Clear Register
0634:	00-21       	and r16, r0           ; Logical AND
0636:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
0638:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
063A:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
063C:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
063E:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0640:	5D-63       	ori r21, 0x3d         ; Logical OR with Immediate
0642:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
0644:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
0646:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
0648:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
064A:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
064C:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
064E:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
0650:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
0652:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
0654:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0656:	59-63       	ori r21, 0x39         ; Logical OR with Immediate
0658:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
065A:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
065C:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
065E:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
0660:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
0662:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
0664:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
0666:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
0668:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
066A:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
066C:	59-63       	ori r21, 0x39         ; Logical OR with Immediate
066E:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
0670:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
0672:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
0674:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
0676:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
0678:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
067A:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
067C:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
067E:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
0680:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0682:	59-63       	ori r21, 0x39         ; Logical OR with Immediate
0684:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
0686:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
0688:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
068A:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
068C:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
068E:	01-38       	cpi r16, 0x81         ; Compare with Immediate
0690:	B0-F1       	brbs 0, .+108         ; Branch if Bit in SREG is Set
0692:	FF-3F       	cpi r31, 0xff         ; Compare with Immediate
0694:	CF-D1       	rcall .+926           ; Relative Call to Subroutine
0696:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
0698:	01-20       	and r0, r1            ; Logical AND
069A:	00-21       	and r16, r0           ; Logical AND
069C:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
069E:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
06A0:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
06A2:	70-4F       	sbci r23, 0xf0        ; Subtract Immediate with Carry SBI
06A4:	05-D0       	rcall .+10            ; Relative Call to Subroutine
06A6:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
06A8:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
06AA:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
06AC:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
06AE:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
06B0:	00-E0       	ldi r16, 0x00         ; Load Immediate
06B2:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
06B4:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
06B6:	00-2A       	or r0, r16            ; Logical OR
06B8:	F0-D0       	rcall .+480           ; Relative Call to Subroutine
06BA:	13-4A       	sbci r17, 0xa3        ; Subtract Immediate with Carry SBI
06BC:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
06BE:	00-2B       	or r16, r16           ; Logical OR
06C0:	FC-DA       	rcall .+5624          ; Relative Call to Subroutine
06C2:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
06C4:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
06C6:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
06C8:	10-42       	sbci r17, 0x20        ; Subtract Immediate with Carry SBI
06CA:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
06CC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
06CE:	A2-73       	andi r26, 0x32        ; Logical AND with Immediate
06D0:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
06D2:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
06D4:	62-6A       	ori r22, 0xa2         ; Logical OR with Immediate
06D6:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
06D8:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
06DA:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
06DC:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
06DE:	23-6B       	ori r18, 0xb3         ; Logical OR with Immediate
06E0:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
06E2:	7F-62       	ori r23, 0x2f         ; Logical OR with Immediate
06E4:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
06E6:	A0-69       	ori r26, 0x90         ; Logical OR with Immediate
06E8:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
06EA:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
06EC:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
06EE:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
06F0:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
06F2:	20-6A       	ori r18, 0xa0         ; Logical OR with Immediate
06F4:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
06F6:	D2-68       	ori r29, 0x82         ; Logical OR with Immediate
06F8:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
06FA:	28-D1       	rcall .+592           ; Relative Call to Subroutine
06FC:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
06FE:	12-69       	ori r17, 0x92         ; Logical OR with Immediate
0700:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
0702:	24-D1       	rcall .+584           ; Relative Call to Subroutine
0704:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
0706:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0708:	00-C0       	rjmp .+0              ; Relative Jump
070A:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
070C:	08-C0       	rjmp .+16             ; Relative Jump
070E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
0710:	18-B0       	in r1, 0x08           ; Load an I/O Location to Register
0712:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
0714:	14-B0       	in r1, 0x04           ; Load an I/O Location to Register
0716:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
0718:	04-C0       	rjmp .+8              ; Relative Jump
071A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
071C:	01-10       	cpse r0, r1           ; Compare Skip if Equal
071E:	00-38       	cpi r16, 0x80         ; Compare with Immediate
0720:	01-10       	cpse r0, r1           ; Compare Skip if Equal
0722:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
0724:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
0726:	D3-60       	ori r29, 0x03         ; Logical OR with Immediate
0728:	10-61       	ori r17, 0x10         ; Logical OR with Immediate
072A:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
072C:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
072E:	80-44       	sbci r24, 0x40        ; Subtract Immediate with Carry SBI
0730:	44-F0       	brbs 4, .+16          ; Branch if Bit in SREG is Set
0732:	01-04       	cpc r0, r1            ; Compare with Carry
0734:	09-49       	sbci r16, 0x99        ; Subtract Immediate with Carry SBI
0736:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
0738:	CB-60       	ori r28, 0x0b         ; Logical OR with Immediate
073A:	08-61       	ori r16, 0x18         ; Logical OR with Immediate
073C:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
073E:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
0740:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
0742:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
0744:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
0746:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
0748:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
074A:	D5-AE       	std Y+61, r13         ; Store Indirect From Register to Data Space
074C:	CC-E6       	ldi r28, 0x6c         ; Load Immediate
074E:	03-4A       	sbci r16, 0xa3        ; Subtract Immediate with Carry SBI
0750:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
0752:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
0754:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
0756:	E9-D0       	rcall .+466           ; Relative Call to Subroutine
0758:	E4-E7       	ldi r30, 0x74         ; Load Immediate
075A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
075C:	00-C0       	rjmp .+0              ; Relative Jump
075E:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
0760:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
0762:	89-B0       	in r8, 0x09           ; Load an I/O Location to Register
0764:	84-7C       	andi r24, 0xc4        ; Logical AND with Immediate
0766:	01-91       	ld r16, Z+            ; Load Indirect from Data Space to Register
0768:	02-92       	st -Z, r0             ; Store Indirect From Register to Data Space
076A:	03-92       	.data 0x9203          ; Binary data
076C:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
076E:	8D-F8       	.data 0xf88d          ; Binary data
0770:	16-20       	and r1, r6            ; Logical AND
0772:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
0774:	8D-F8       	.data 0xf88d          ; Binary data
0776:	17-20       	and r1, r7            ; Logical AND
0778:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
077A:	8D-F8       	.data 0xf88d          ; Binary data
077C:	18-30       	cpi r17, 0x08         ; Compare with Immediate
077E:	01-2C       	mov r0, r1            ; Copy Register
0780:	39-D1       	rcall .+626           ; Relative Call to Subroutine
0782:	29-4A       	sbci r18, 0xa9        ; Subtract Immediate with Carry SBI
0784:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
0786:	01-33       	cpi r16, 0x31         ; Compare with Immediate
0788:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
078A:	07-03       	mulsu r16, r23        ; Multiply Signed with Unsigned
078C:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
078E:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
0790:	01-05       	cpc r16, r1           ; Compare with Carry
0792:	ED-01       	movw r28, r26         ; Copy Register Word
0794:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0796:	02-0F       	add r16, r18          ; Add without Carry
0798:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
079A:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
079C:	40-05       	cpc r20, r0           ; Compare with Carry
079E:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
07A0:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
07A2:	04-0F       	add r16, r20          ; Add without Carry
07A4:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
07A6:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
07A8:	20-05       	cpc r18, r0           ; Compare with Carry
07AA:	10-35       	cpi r17, 0x50         ; Compare with Immediate
07AC:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
07AE:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
07B0:	15-03       	mulsu r17, r21        ; Multiply Signed with Unsigned
07B2:	06-AF       	std Y+62, r16         ; Store Indirect From Register to Data Space
07B4:	00-26       	clr r512              ; Clear Register
07B6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
07B8:	80-7E       	andi r24, 0xe0        ; Logical AND with Immediate
07BA:	01-33       	cpi r16, 0x31         ; Compare with Immediate
07BC:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
07BE:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
07C0:	22-B1       	in r18, 0x02          ; Load an I/O Location to Register
07C2:	9E-FB       	.data 0xfb9e          ; Binary data
07C4:	F2-F2       	brbs 2, .-68          ; Branch if Bit in SREG is Set
07C6:	01-32       	cpi r16, 0x21         ; Compare with Immediate
07C8:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
07CA:	00-E0       	ldi r16, 0x00         ; Load Immediate
07CC:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
07CE:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
07D0:	03-2C       	mov r0, r3            ; Copy Register
07D2:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
07D4:	05-54       	subi r16, 0x45        ; Subtract Immediate
07D6:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
07D8:	07-24       	clr r7                ; Clear Register
07DA:	14-B9       	out 0x04, r17         ; Store Register to I/O Location
07DC:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
07DE:	06-6C       	ori r16, 0xc6         ; Logical OR with Immediate
07E0:	02-E0       	ldi r16, 0x02         ; Load Immediate
07E2:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
07E4:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
07E6:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
07E8:	12-B1       	in r17, 0x02          ; Load an I/O Location to Register
07EA:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
07EC:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
07EE:	03-2C       	mov r0, r3            ; Copy Register
07F0:	BB-42       	sbci r27, 0x2b        ; Subtract Immediate with Carry SBI
07F2:	E2-D1       	rcall .+964           ; Relative Call to Subroutine
07F4:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
07F6:	00-23       	and r16, r16          ; Logical AND
07F8:	8D-F8       	.data 0xf88d          ; Binary data
07FA:	15-30       	cpi r17, 0x05         ; Compare with Immediate
07FC:	8D-F8       	.data 0xf88d          ; Binary data
07FE:	14-30       	cpi r17, 0x04         ; Compare with Immediate
0800:	8D-F8       	.data 0xf88d          ; Binary data
0802:	13-30       	cpi r17, 0x03         ; Compare with Immediate
0804:	8D-F8       	.data 0xf88d          ; Binary data
0806:	12-30       	cpi r17, 0x02         ; Compare with Immediate
0808:	8D-F8       	.data 0xf88d          ; Binary data
080A:	11-30       	cpi r17, 0x01         ; Compare with Immediate
080C:	8D-F8       	.data 0xf88d          ; Binary data
080E:	10-30       	cpi r17, 0x00         ; Compare with Immediate
0810:	03-23       	and r16, r19          ; Logical AND
0812:	8D-F8       	.data 0xf88d          ; Binary data
0814:	19-30       	cpi r17, 0x09         ; Compare with Immediate
0816:	00-23       	and r16, r16          ; Logical AND
0818:	07-93       	lat Z, r16            ; Load and Toggle
081A:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
081C:	9B-69       	ori r25, 0x9b         ; Logical OR with Immediate
081E:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
0820:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0822:	09-B0       	in r0, 0x09           ; Load an I/O Location to Register
0824:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
0826:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0828:	F8-9C       	mul r15, r8           ; Multiply Unsigned
082A:	FF-1F       	adc r31, r31          ; Add with Carry
082C:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
082E:	89-B0       	in r8, 0x09           ; Load an I/O Location to Register
0830:	84-7C       	andi r24, 0xc4        ; Logical AND with Immediate
0832:	01-91       	ld r16, Z+            ; Load Indirect from Data Space to Register
0834:	02-92       	st -Z, r0             ; Store Indirect From Register to Data Space
0836:	03-92       	.data 0x9203          ; Binary data
0838:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
083A:	8D-F8       	.data 0xf88d          ; Binary data
083C:	16-20       	and r1, r6            ; Logical AND
083E:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
0840:	8D-F8       	.data 0xf88d          ; Binary data
0842:	17-20       	and r1, r7            ; Logical AND
0844:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
0846:	8D-F8       	.data 0xf88d          ; Binary data
0848:	18-30       	cpi r17, 0x08         ; Compare with Immediate
084A:	01-2C       	mov r0, r1            ; Copy Register
084C:	39-D1       	rcall .+626           ; Relative Call to Subroutine
084E:	28-4A       	sbci r18, 0xa8        ; Subtract Immediate with Carry SBI
0850:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
0852:	01-33       	cpi r16, 0x31         ; Compare with Immediate
0854:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
0856:	07-03       	mulsu r16, r23        ; Multiply Signed with Unsigned
0858:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
085A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
085C:	01-05       	cpc r16, r1           ; Compare with Carry
085E:	ED-01       	movw r28, r26         ; Copy Register Word
0860:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0862:	02-0F       	add r16, r18          ; Add without Carry
0864:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
0866:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
0868:	40-05       	cpc r20, r0           ; Compare with Carry
086A:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
086C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
086E:	04-0F       	add r16, r20          ; Add without Carry
0870:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
0872:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
0874:	20-05       	cpc r18, r0           ; Compare with Carry
0876:	10-35       	cpi r17, 0x50         ; Compare with Immediate
0878:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
087A:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
087C:	15-03       	mulsu r17, r21        ; Multiply Signed with Unsigned
087E:	06-AF       	std Y+62, r16         ; Store Indirect From Register to Data Space
0880:	00-26       	clr r512              ; Clear Register
0882:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
0884:	80-7E       	andi r24, 0xe0        ; Logical AND with Immediate
0886:	01-33       	cpi r16, 0x31         ; Compare with Immediate
0888:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
088A:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
088C:	22-B1       	in r18, 0x02          ; Load an I/O Location to Register
088E:	9E-FB       	.data 0xfb9e          ; Binary data
0890:	F2-F2       	brbs 2, .-68          ; Branch if Bit in SREG is Set
0892:	01-32       	cpi r16, 0x21         ; Compare with Immediate
0894:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
0896:	00-E0       	ldi r16, 0x00         ; Load Immediate
0898:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
089A:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
089C:	03-2C       	mov r0, r3            ; Copy Register
089E:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
08A0:	05-54       	subi r16, 0x45        ; Subtract Immediate
08A2:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
08A4:	07-24       	clr r7                ; Clear Register
08A6:	14-B9       	out 0x04, r17         ; Store Register to I/O Location
08A8:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
08AA:	06-6C       	ori r16, 0xc6         ; Logical OR with Immediate
08AC:	02-E0       	ldi r16, 0x02         ; Load Immediate
08AE:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
08B0:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
08B2:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
08B4:	12-B1       	in r17, 0x02          ; Load an I/O Location to Register
08B6:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
08B8:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
08BA:	03-2C       	mov r0, r3            ; Copy Register
08BC:	BB-42       	sbci r27, 0x2b        ; Subtract Immediate with Carry SBI
08BE:	E2-D1       	rcall .+964           ; Relative Call to Subroutine
08C0:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
08C2:	00-23       	and r16, r16          ; Logical AND
08C4:	8D-F8       	.data 0xf88d          ; Binary data
08C6:	15-30       	cpi r17, 0x05         ; Compare with Immediate
08C8:	8D-F8       	.data 0xf88d          ; Binary data
08CA:	14-30       	cpi r17, 0x04         ; Compare with Immediate
08CC:	8D-F8       	.data 0xf88d          ; Binary data
08CE:	13-30       	cpi r17, 0x03         ; Compare with Immediate
08D0:	8D-F8       	.data 0xf88d          ; Binary data
08D2:	12-30       	cpi r17, 0x02         ; Compare with Immediate
08D4:	8D-F8       	.data 0xf88d          ; Binary data
08D6:	11-30       	cpi r17, 0x01         ; Compare with Immediate
08D8:	8D-F8       	.data 0xf88d          ; Binary data
08DA:	10-30       	cpi r17, 0x00         ; Compare with Immediate
08DC:	00-23       	and r16, r16          ; Logical AND
08DE:	8D-F8       	.data 0xf88d          ; Binary data
08E0:	19-30       	cpi r17, 0x09         ; Compare with Immediate
08E2:	07-93       	lat Z, r16            ; Load and Toggle
08E4:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
08E6:	9B-69       	ori r25, 0x9b         ; Logical OR with Immediate
08E8:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
08EA:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
08EC:	09-B0       	in r0, 0x09           ; Load an I/O Location to Register
08EE:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
08F0:	F8-9C       	mul r15, r8           ; Multiply Unsigned
08F2:	FF-1F       	adc r31, r31          ; Add with Carry
08F4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
08F6:	0B-20       	and r0, r11           ; Logical AND
08F8:	01-21       	and r16, r1           ; Logical AND
08FA:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
08FC:	DF-F8       	.data 0xf8df          ; Binary data
08FE:	0D-20       	and r0, r13           ; Logical AND
0900:	01-21       	and r16, r1           ; Logical AND
0902:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
0904:	DB-F8       	.data 0xf8db          ; Binary data
0906:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
0908:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
090A:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
090C:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
090E:	06-D1       	rcall .+524           ; Relative Call to Subroutine
0910:	43-F4       	brbc 3, .+16          ; Branch if Bit in SREG is Cleared
0912:	80-53       	subi r24, 0x30        ; Subtract Immediate
0914:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
0916:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
0918:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
091A:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
091C:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
091E:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
0920:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
0922:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
0924:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
0926:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
0928:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
092A:	22-F4       	brbc 2, .+8           ; Branch if Bit in SREG is Cleared
092C:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
092E:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
0930:	01-02       	muls r16, r17         ; Multiply Signed
0932:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
0934:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
0936:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0938:	3C-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
093A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
093C:	01-00       	.data 0x0001          ; Binary data
093E:	01-38       	cpi r16, 0x81         ; Compare with Immediate
0940:	00-C0       	rjmp .+0              ; Relative Jump
0942:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
0944:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
0946:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
0948:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
094A:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
094C:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
094E:	5E-FD       	.data 0xfd5e          ; Binary data
0950:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
0952:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
0954:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0956:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
0958:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
095A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
095C:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
095E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0960:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
0962:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
0964:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
0966:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
0968:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
096A:	50-FD       	sbrc r21, 0           ; Skip if Bit in Register is Cleared
096C:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
096E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0970:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0972:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0974:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
0976:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0978:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
097A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
097C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
097E:	F2-FE       	sbrs r15, 2           ; Skip if Bit in Register is Set
0980:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
0982:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
0984:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
0986:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
0988:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
098A:	38-FF       	.data 0xff38          ; Binary data
098C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
098E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
0990:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0992:	E8-FE       	.data 0xfee8          ; Binary data
0994:	20-44       	sbci r18, 0x40        ; Subtract Immediate with Carry SBI
0996:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
0998:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
099A:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
099C:	41-72       	andi r20, 0x21        ; Logical AND with Immediate
099E:	02-61       	ori r16, 0x12         ; Logical OR with Immediate
09A0:	00-23       	and r16, r16          ; Logical AND
09A2:	03-72       	andi r16, 0x23        ; Logical AND with Immediate
09A4:	C3-60       	ori r28, 0x03         ; Logical OR with Immediate
09A6:	39-B1       	in r19, 0x09          ; Load an I/O Location to Register
09A8:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
09AA:	02-69       	ori r16, 0x92         ; Logical OR with Immediate
09AC:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
09AE:	23-10       	cpse r2, r3           ; Compare Skip if Equal
09B0:	01-33       	cpi r16, 0x31         ; Compare with Immediate
09B2:	42-7A       	andi r20, 0xa2        ; Logical AND with Immediate
09B4:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
09B6:	F8-DC       	rcall .+6640          ; Relative Call to Subroutine
09B8:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
09BA:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
09BC:	0A-B9       	out 0x0a, r16         ; Store Register to I/O Location
09BE:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
09C0:	04-E0       	ldi r16, 0x04         ; Load Immediate
09C2:	53-69       	ori r21, 0x93         ; Logical OR with Immediate
09C4:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
09C6:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
09C8:	FB-E7       	ldi r31, 0x7b         ; Load Immediate
09CA:	50-61       	ori r21, 0x10         ; Logical OR with Immediate
09CC:	00-23       	and r16, r16          ; Logical AND
09CE:	43-61       	ori r20, 0x13         ; Logical OR with Immediate
09D0:	83-80       	ldd r8, Y+3           ; Load Indirect from Data Space to Register
09D2:	C3-80       	ldd r12, Y+3          ; Load Indirect from Data Space to Register
09D4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
09D6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
09D8:	98-77       	andi r25, 0x78        ; Logical AND with Immediate
09DA:	01-00       	.data 0x0001          ; Binary data
09DC:	80-01       	movw r16, r0          ; Copy Register Word
09DE:	00-20       	and r0, r0            ; Logical AND
09E0:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
09E2:	00-31       	cpi r16, 0x10         ; Compare with Immediate
09E4:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
09E6:	01-21       	and r16, r1           ; Logical AND
09E8:	02-78       	andi r16, 0x82        ; Logical AND with Immediate
09EA:	2A-B1       	in r18, 0x0a          ; Load an I/O Location to Register
09EC:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
09EE:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
09F0:	01-EB       	ldi r16, 0xb1         ; Load Immediate
09F2:	22-22       	and r2, r18           ; Logical AND
09F4:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
09F6:	00-E0       	ldi r16, 0x00         ; Load Immediate
09F8:	00-22       	and r0, r16           ; Logical AND
09FA:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
09FC:	42-78       	andi r20, 0x82        ; Logical AND with Immediate
09FE:	2A-B1       	in r18, 0x0a          ; Load an I/O Location to Register
0A00:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0A02:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
0A04:	01-EB       	ldi r16, 0xb1         ; Load Immediate
0A06:	22-22       	and r2, r18           ; Logical AND
0A08:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
0A0A:	00-E0       	ldi r16, 0x00         ; Load Immediate
0A0C:	00-22       	and r0, r16           ; Logical AND
0A0E:	42-70       	andi r20, 0x02        ; Logical AND with Immediate
0A10:	82-78       	andi r24, 0x82        ; Logical AND with Immediate
0A12:	2A-B1       	in r18, 0x0a          ; Load an I/O Location to Register
0A14:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0A16:	02-F3       	brbs 2, .-64          ; Branch if Bit in SREG is Set
0A18:	01-EB       	ldi r16, 0xb1         ; Load Immediate
0A1A:	23-21       	and r18, r3           ; Logical AND
0A1C:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
0A1E:	00-E0       	ldi r16, 0x00         ; Load Immediate
0A20:	00-21       	and r16, r0           ; Logical AND
0A22:	81-70       	andi r24, 0x01        ; Logical AND with Immediate
0A24:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
0A26:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0A28:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
0A2A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
0A2C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
0A2E:	00-93-00-9B 	sts 0x9b00, r16       ; Store Direct to Data Space
0A32:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
0A34:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
0A36:	32-32       	cpi r19, 0x22         ; Compare with Immediate
0A38:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
0A3A:	0E-D8       	rcall .+4124          ; Relative Call to Subroutine
0A3C:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
0A3E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
0A40:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
0A42:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
0A44:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
0A46:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
0A48:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
0A4A:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
0A4C:	4A-F2       	brbs 2, .-110         ; Branch if Bit in SREG is Set
0A4E:	02-62       	ori r16, 0x22         ; Logical OR with Immediate
0A50:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
0A52:	4B-F2       	brbs 3, .-110         ; Branch if Bit in SREG is Set
0A54:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
0A56:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
0A58:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
0A5A:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
0A5C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
0A5E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0A60:	0C-00       	.data 0x000c          ; Binary data
0A62:	00-20       	and r0, r0            ; Logical AND
0A64:	30-F9       	bld r19, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
0A66:	FF-1F       	adc r31, r31          ; Add with Carry
0A68:	0C-20       	and r0, r12           ; Logical AND
0A6A:	05-40       	sbci r16, 0x05        ; Subtract Immediate with Carry SBI
0A6C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
0A6E:	4B-4B       	sbci r20, 0xbb        ; Subtract Immediate with Carry SBI
0A70:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0A72:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0A74:	20-0F       	add r18, r16          ; Add without Carry
0A76:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0A78:	49-4C       	sbci r20, 0xc9        ; Subtract Immediate with Carry SBI
0A7A:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0A7C:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0A7E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0A80:	48-49       	sbci r20, 0x98        ; Subtract Immediate with Carry SBI
0A82:	2E-22       	and r2, r30           ; Logical AND
0A84:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0A86:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0A88:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0A8A:	6C-FE       	.data 0xfe6c          ; Binary data
0A8C:	43-4B       	sbci r20, 0xb3        ; Subtract Immediate with Carry SBI
0A8E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0A90:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0A92:	08-0F       	add r16, r24          ; Add without Carry
0A94:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0A96:	42-4C       	sbci r20, 0xc2        ; Subtract Immediate with Carry SBI
0A98:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0A9A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0A9C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0A9E:	42-49       	sbci r20, 0x92        ; Subtract Immediate with Carry SBI
0AA0:	19-22       	and r1, r25           ; Logical AND
0AA2:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0AA4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0AA6:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0AA8:	5D-FE       	.data 0xfe5d          ; Binary data
0AAA:	3C-4B       	sbci r19, 0xbc        ; Subtract Immediate with Carry SBI
0AAC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0AAE:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0AB0:	04-0F       	add r16, r20          ; Add without Carry
0AB2:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0AB4:	3A-4C       	sbci r19, 0xca        ; Subtract Immediate with Carry SBI
0AB6:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0AB8:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0ABA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0ABC:	3B-49       	sbci r19, 0x9b        ; Subtract Immediate with Carry SBI
0ABE:	1B-22       	and r1, r27           ; Logical AND
0AC0:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0AC2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0AC4:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0AC6:	4E-FE       	.data 0xfe4e          ; Binary data
0AC8:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
0ACA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0ACC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0ACE:	02-0F       	add r16, r18          ; Add without Carry
0AD0:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0AD2:	33-4C       	sbci r19, 0xc3        ; Subtract Immediate with Carry SBI
0AD4:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0AD6:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0AD8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0ADA:	35-49       	sbci r19, 0x95        ; Subtract Immediate with Carry SBI
0ADC:	24-22       	and r2, r20           ; Logical AND
0ADE:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0AE0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0AE2:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0AE4:	3F-FE       	.data 0xfe3f          ; Binary data
0AE6:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
0AE8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0AEA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0AEC:	80-0F       	add r24, r16          ; Add without Carry
0AEE:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0AF0:	2B-4C       	sbci r18, 0xcb        ; Subtract Immediate with Carry SBI
0AF2:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0AF4:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0AF6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0AF8:	2F-49       	sbci r18, 0x9f        ; Subtract Immediate with Carry SBI
0AFA:	1B-22       	and r1, r27           ; Logical AND
0AFC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0AFE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B00:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0B02:	30-FE       	sbrs r3, 0            ; Skip if Bit in Register is Set
0B04:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
0B06:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0B08:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0B0A:	40-0F       	add r20, r16          ; Add without Carry
0B0C:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0B0E:	24-4C       	sbci r18, 0xc4        ; Subtract Immediate with Carry SBI
0B10:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0B12:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0B14:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B16:	29-49       	sbci r18, 0x99        ; Subtract Immediate with Carry SBI
0B18:	1F-22       	and r1, r31           ; Logical AND
0B1A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0B1C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B1E:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0B20:	21-FE       	sbrs r2, 1            ; Skip if Bit in Register is Set
0B22:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
0B24:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0B26:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0B28:	20-0F       	add r18, r16          ; Add without Carry
0B2A:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0B2C:	1C-4C       	sbci r17, 0xcc        ; Subtract Immediate with Carry SBI
0B2E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0B30:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0B32:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B34:	22-49       	sbci r18, 0x92        ; Subtract Immediate with Carry SBI
0B36:	20-22       	and r2, r16           ; Logical AND
0B38:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0B3A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B3C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0B3E:	12-FE       	sbrs r1, 2            ; Skip if Bit in Register is Set
0B40:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
0B42:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0B44:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0B46:	04-0F       	add r16, r20          ; Add without Carry
0B48:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0B4A:	15-4C       	sbci r17, 0xc5        ; Subtract Immediate with Carry SBI
0B4C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0B4E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0B50:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B52:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
0B54:	29-22       	and r2, r25           ; Logical AND
0B56:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0B58:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B5A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0B5C:	03-FE       	sbrs r0, 3            ; Skip if Bit in Register is Set
0B5E:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
0B60:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0B62:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0B64:	08-0F       	add r16, r24          ; Add without Carry
0B66:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0B68:	0D-4C       	sbci r16, 0xcd        ; Subtract Immediate with Carry SBI
0B6A:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0B6C:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0B6E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B70:	15-49       	sbci r17, 0x95        ; Subtract Immediate with Carry SBI
0B72:	26-22       	and r2, r22           ; Logical AND
0B74:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0B76:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B78:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0B7A:	F4-FD       	sbrc r31, 4           ; Skip if Bit in Register is Cleared
0B7C:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
0B7E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
0B80:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
0B82:	02-0F       	add r16, r18          ; Add without Carry
0B84:	09-D0       	rcall .+18            ; Relative Call to Subroutine
0B86:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
0B88:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0B8A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0B8C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B8E:	0F-49       	sbci r16, 0x9f        ; Subtract Immediate with Carry SBI
0B90:	25-22       	and r2, r21           ; Logical AND
0B92:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0B94:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0B96:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0B98:	E5-FD       	sbrc r30, 5           ; Skip if Bit in Register is Cleared
0B9A:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
0B9C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
0B9E:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
0BA0:	C0-01       	movw r24, r0          ; Copy Register Word
0BA2:	00-20       	and r0, r0            ; Logical AND
0BA4:	C8-77       	andi r28, 0x78        ; Logical AND with Immediate
0BA6:	01-00       	.data 0x0001          ; Binary data
0BA8:	F8-77       	andi r31, 0x78        ; Logical AND with Immediate
0BAA:	01-00       	.data 0x0001          ; Binary data
0BAC:	14-78       	andi r17, 0x84        ; Logical AND with Immediate
0BAE:	01-00       	.data 0x0001          ; Binary data
0BB0:	30-78       	andi r19, 0x80        ; Logical AND with Immediate
0BB2:	01-00       	.data 0x0001          ; Binary data
0BB4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
0BB6:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
0BB8:	58-78       	andi r21, 0x88        ; Logical AND with Immediate
0BBA:	01-00       	.data 0x0001          ; Binary data
0BBC:	74-78       	andi r23, 0x84        ; Logical AND with Immediate
0BBE:	01-00       	.data 0x0001          ; Binary data
0BC0:	94-78       	andi r25, 0x84        ; Logical AND with Immediate
0BC2:	01-00       	.data 0x0001          ; Binary data
0BC4:	B8-78       	andi r27, 0x88        ; Logical AND with Immediate
0BC6:	01-00       	.data 0x0001          ; Binary data
0BC8:	E4-78       	andi r30, 0x84        ; Logical AND with Immediate
0BCA:	01-00       	.data 0x0001          ; Binary data
0BCC:	0C-79       	andi r16, 0x9c        ; Logical AND with Immediate
0BCE:	01-00       	.data 0x0001          ; Binary data
0BD0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
0BD2:	7A-72       	andi r23, 0x2a        ; Logical AND with Immediate
0BD4:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
0BD6:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
0BD8:	00-22       	and r0, r16           ; Logical AND
0BDA:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
0BDC:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
0BDE:	D1-22       	and r13, r17          ; Logical AND
0BE0:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
0BE2:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
0BE4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
0BE6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0BE8:	06-20       	and r0, r6            ; Logical AND
0BEA:	05-40       	sbci r16, 0x05        ; Subtract Immediate with Carry SBI
0BEC:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
0BEE:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
0BF0:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
0BF2:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
0BF4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0BF6:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
0BF8:	0D-FA       	.data 0xfa0d          ; Binary data
0BFA:	1F-4A       	sbci r17, 0xaf        ; Subtract Immediate with Carry SBI
0BFC:	2C-23       	and r18, r28          ; Logical AND
0BFE:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0C00:	06-F3       	brbs 6, .-64          ; Branch if Bit in SREG is Set
0C02:	D5-18       	sub r13, r5           ; Subtract Without Carry
0C04:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
0C06:	00-10       	cpse r0, r0           ; Compare Skip if Equal
0C08:	09-11       	cpse r16, r9          ; Compare Skip if Equal
0C0A:	D1-52       	subi r29, 0x21        ; Subtract Immediate
0C0C:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
0C0E:	02-30       	cpi r16, 0x02         ; Compare with Immediate
0C10:	1B-11       	cpse r17, r11         ; Compare Skip if Equal
0C12:	6B-80       	ldd r6, Y+3           ; Load Indirect from Data Space to Register
0C14:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
0C16:	04-30       	cpi r16, 0x04         ; Compare with Immediate
0C18:	1B-11       	cpse r17, r11         ; Compare Skip if Equal
0C1A:	AB-80       	ldd r10, Y+3          ; Load Indirect from Data Space to Register
0C1C:	01-23       	and r16, r17          ; Logical AND
0C1E:	EB-80       	ldd r14, Y+3          ; Load Indirect from Data Space to Register
0C20:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0C22:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
0C24:	57-FA       	bst r5, 7             ; Bit Store from Bit in Register to T Flag in SREG
0C26:	E2-88       	std Y+18, r14         ; Store Indirect From Register to Data Space
0C28:	2A-81       	ldd r18, Y+2          ; Load Indirect from Data Space to Register
0C2A:	22-89       	std Y+18, r18         ; Store Indirect From Register to Data Space
0C2C:	6A-81       	ldd r22, Y+2          ; Load Indirect from Data Space to Register
0C2E:	62-89       	std Y+18, r22         ; Store Indirect From Register to Data Space
0C30:	AA-81       	ldd r26, Y+2          ; Load Indirect from Data Space to Register
0C32:	EF-B9       	out 0x0f, r30         ; Store Register to I/O Location
0C34:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
0C36:	2C-23       	and r18, r28          ; Logical AND
0C38:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0C3A:	06-F6       	brbc 6, .-128         ; Branch if Bit in SREG is Cleared
0C3C:	29-69       	ori r18, 0x99         ; Logical OR with Immediate
0C3E:	90-5B       	subi r25, 0xb0        ; Subtract Immediate
0C40:	41-1A       	sub r4, r17           ; Subtract Without Carry
0C42:	91-53       	subi r25, 0x31        ; Subtract Immediate
0C44:	6A-69       	ori r22, 0x9a         ; Logical OR with Immediate
0C46:	69-88       	std Y+17, r6          ; Store Indirect From Register to Data Space
0C48:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0C4A:	6A-80       	ldd r6, Y+2           ; Load Indirect from Data Space to Register
0C4C:	AA-69       	ori r26, 0x9a         ; Logical OR with Immediate
0C4E:	A9-88       	std Y+17, r10         ; Store Indirect From Register to Data Space
0C50:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0C52:	AA-80       	ldd r10, Y+2          ; Load Indirect from Data Space to Register
0C54:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
0C56:	08-02       	muls r16, r24         ; Multiply Signed
0C58:	29-6A       	ori r18, 0xa9         ; Logical OR with Immediate
0C5A:	28-89       	std Y+16, r18         ; Store Indirect From Register to Data Space
0C5C:	41-1A       	sub r4, r17           ; Subtract Without Carry
0C5E:	29-81       	ldd r18, Y+1          ; Load Indirect from Data Space to Register
0C60:	69-6A       	ori r22, 0xa9         ; Logical OR with Immediate
0C62:	68-89       	std Y+16, r22         ; Store Indirect From Register to Data Space
0C64:	41-1A       	sub r4, r17           ; Subtract Without Carry
0C66:	69-81       	ldd r22, Y+1          ; Load Indirect from Data Space to Register
0C68:	AB-6A       	ori r26, 0xab         ; Logical OR with Immediate
0C6A:	91-88       	std Y+17, r9          ; Store Indirect From Register to Data Space
0C6C:	CB-1A       	sub r12, r27          ; Subtract Without Carry
0C6E:	93-80       	ldd r9, Y+3           ; Load Indirect from Data Space to Register
0C70:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
0C72:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0C74:	64-F9       	bld r22, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
0C76:	FF-1F       	adc r31, r31          ; Add with Carry
0C78:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
0C7A:	FF-1F       	adc r31, r31          ; Add with Carry
0C7C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
0C7E:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
0C80:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
0C82:	8A-46       	sbci r24, 0x6a        ; Subtract Immediate with Carry SBI
0C84:	DF-F8       	.data 0xf8df          ; Binary data
0C86:	BC-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
0C88:	27-4F       	sbci r18, 0xf7        ; Subtract Immediate with Carry SBI
0C8A:	28-4E       	sbci r18, 0xe8        ; Subtract Immediate with Carry SBI
0C8C:	28-4D       	sbci r18, 0xd8        ; Subtract Immediate with Carry SBI
0C8E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
0C90:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
0C92:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
0C94:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
0C96:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0C98:	13-FD       	sbrc r17, 3           ; Skip if Bit in Register is Cleared
0C9A:	26-4A       	sbci r18, 0xa6        ; Subtract Immediate with Carry SBI
0C9C:	2C-23       	and r18, r28          ; Logical AND
0C9E:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0CA0:	09-F3       	brbs 1, .-62          ; Branch if Bit in SREG is Set
0CA2:	D4-18       	sub r13, r4           ; Subtract Without Carry
0CA4:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
0CA6:	00-10       	cpse r0, r0           ; Compare Skip if Equal
0CA8:	09-11       	cpse r16, r9          ; Compare Skip if Equal
0CAA:	D1-52       	subi r29, 0x21        ; Subtract Immediate
0CAC:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
0CAE:	00-30       	cpi r16, 0x00         ; Compare with Immediate
0CB0:	1B-11       	cpse r17, r11         ; Compare Skip if Equal
0CB2:	63-80       	ldd r6, Y+3           ; Load Indirect from Data Space to Register
0CB4:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
0CB6:	00-30       	cpi r16, 0x00         ; Compare with Immediate
0CB8:	1B-11       	cpse r17, r11         ; Compare Skip if Equal
0CBA:	A3-80       	ldd r10, Y+3          ; Load Indirect from Data Space to Register
0CBC:	01-23       	and r16, r17          ; Logical AND
0CBE:	E3-80       	ldd r14, Y+3          ; Load Indirect from Data Space to Register
0CC0:	1D-4F       	sbci r17, 0xfd        ; Subtract Immediate with Carry SBI
0CC2:	1E-4E       	sbci r17, 0xee        ; Subtract Immediate with Carry SBI
0CC4:	1E-4D       	sbci r17, 0xde        ; Subtract Immediate with Carry SBI
0CC6:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
0CC8:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
0CCA:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
0CCC:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
0CCE:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0CD0:	1D-FD       	.data 0xfd1d          ; Binary data
0CD2:	3A-88       	std Y+18, r3          ; Store Indirect From Register to Data Space
0CD4:	22-81       	ldd r18, Y+2          ; Load Indirect from Data Space to Register
0CD6:	32-88       	std Y+18, r3          ; Store Indirect From Register to Data Space
0CD8:	62-81       	ldd r22, Y+2          ; Load Indirect from Data Space to Register
0CDA:	2A-88       	std Y+18, r2          ; Store Indirect From Register to Data Space
0CDC:	A2-81       	ldd r26, Y+2          ; Load Indirect from Data Space to Register
0CDE:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
0CE0:	00-0F       	add r16, r16          ; Add without Carry
0CE2:	1F-D1       	rcall .+574           ; Relative Call to Subroutine
0CE4:	13-4A       	sbci r17, 0xa3        ; Subtract Immediate with Carry SBI
0CE6:	2C-23       	and r18, r28          ; Logical AND
0CE8:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0CEA:	09-F9       	.data 0xf909          ; Binary data
0CEC:	21-69       	ori r18, 0x91         ; Logical OR with Immediate
0CEE:	32-F8       	bld r3, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
0CF0:	09-00       	.data 0x0009          ; Binary data
0CF2:	41-1A       	sub r4, r17           ; Subtract Without Carry
0CF4:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
0CF6:	09-10       	cpse r0, r9           ; Compare Skip if Equal
0CF8:	62-69       	ori r22, 0x92         ; Logical OR with Immediate
0CFA:	61-88       	std Y+17, r6          ; Store Indirect From Register to Data Space
0CFC:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0CFE:	62-80       	ldd r6, Y+2           ; Load Indirect from Data Space to Register
0D00:	A2-69       	ori r26, 0x92         ; Logical OR with Immediate
0D02:	A1-88       	std Y+17, r10         ; Store Indirect From Register to Data Space
0D04:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0D06:	A2-80       	ldd r10, Y+2          ; Load Indirect from Data Space to Register
0D08:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
0D0A:	08-02       	muls r16, r24         ; Multiply Signed
0D0C:	21-6A       	ori r18, 0xa1         ; Logical OR with Immediate
0D0E:	20-89       	std Y+16, r18         ; Store Indirect From Register to Data Space
0D10:	41-1A       	sub r4, r17           ; Subtract Without Carry
0D12:	21-81       	ldd r18, Y+1          ; Load Indirect from Data Space to Register
0D14:	61-6A       	ori r22, 0xa1         ; Logical OR with Immediate
0D16:	60-89       	std Y+16, r22         ; Store Indirect From Register to Data Space
0D18:	41-1A       	sub r4, r17           ; Subtract Without Carry
0D1A:	61-81       	ldd r22, Y+1          ; Load Indirect from Data Space to Register
0D1C:	A3-6A       	ori r26, 0xa3         ; Logical OR with Immediate
0D1E:	91-88       	std Y+17, r9          ; Store Indirect From Register to Data Space
0D20:	CB-1A       	sub r12, r27          ; Subtract Without Carry
0D22:	93-80       	ldd r9, Y+3           ; Load Indirect from Data Space to Register
0D24:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
0D26:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
0D28:	D0-FB       	bst r29, 0            ; Bit Store from Bit in Register to T Flag in SREG
0D2A:	FF-1F       	adc r31, r31          ; Add with Carry
0D2C:	3A-9D       	mul r19, r10          ; Multiply Unsigned
0D2E:	FF-1F       	adc r31, r31          ; Add with Carry
0D30:	3C-9D       	mul r19, r12          ; Multiply Unsigned
0D32:	FF-1F       	adc r31, r31          ; Add with Carry
0D34:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
0D36:	FF-1F       	adc r31, r31          ; Add with Carry
0D38:	B4-FB       	bst r27, 4            ; Bit Store from Bit in Register to T Flag in SREG
0D3A:	FF-1F       	adc r31, r31          ; Add with Carry
0D3C:	B6-FB       	bst r27, 6            ; Bit Store from Bit in Register to T Flag in SREG
0D3E:	FF-1F       	adc r31, r31          ; Add with Carry
0D40:	B8-FB       	.data 0xfbb8          ; Binary data
0D42:	FF-1F       	adc r31, r31          ; Add with Carry
0D44:	B0-FC       	sbrc r11, 0           ; Skip if Bit in Register is Cleared
0D46:	FF-1F       	adc r31, r31          ; Add with Carry
0D48:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
0D4A:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
0D4C:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
0D4E:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
0D50:	05-91       	lpm r16, Z+           ; Load Program Memory
0D52:	DF-F8       	.data 0xf8df          ; Binary data
0D54:	0C-B1       	in r16, 0x0c          ; Load an I/O Location to Register
0D56:	DF-F8       	.data 0xf8df          ; Binary data
0D58:	0C-A1       	ldd r16, Y+36         ; Load Indirect from Data Space to Register
0D5A:	DF-F8       	.data 0xf8df          ; Binary data
0D5C:	0C-91       	ld r16, X             ; Load Indirect from Data Space to Register
0D5E:	DF-F8       	.data 0xf8df          ; Binary data
0D60:	0C-81       	ldd r16, Y+4          ; Load Indirect from Data Space to Register
0D62:	CD-F8       	.data 0xf8cd          ; Binary data
0D64:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
0D66:	3A-4F       	sbci r19, 0xfa        ; Subtract Immediate with Carry SBI
0D68:	01-97       	sbiw r24, 0x01        ; Subtract Immediate from Word
0D6A:	3A-4E       	sbci r19, 0xea        ; Subtract Immediate with Carry SBI
0D6C:	02-96       	adiw r24, 0x02        ; Add Immediate to Word
0D6E:	3A-48       	sbci r19, 0x8a        ; Subtract Immediate with Carry SBI
0D70:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
0D72:	52-46       	sbci r21, 0x62        ; Subtract Immediate with Carry SBI
0D74:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
0D76:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
0D78:	A9-FA       	.data 0xfaa9          ; Binary data
0D7A:	38-4A       	sbci r19, 0xa8        ; Subtract Immediate with Carry SBI
0D7C:	2C-23       	and r18, r28          ; Logical AND
0D7E:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0D80:	05-F3       	brbs 5, .-64          ; Branch if Bit in SREG is Set
0D82:	D4-18       	sub r13, r4           ; Subtract Without Carry
0D84:	BB-F8       	.data 0xf8bb          ; Binary data
0D86:	00-10       	cpse r0, r0           ; Compare Skip if Equal
0D88:	D1-52       	subi r29, 0x21        ; Subtract Immediate
0D8A:	BA-F8       	.data 0xf8ba          ; Binary data
0D8C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
0D8E:	63-80       	ldd r6, Y+3           ; Load Indirect from Data Space to Register
0D90:	B9-F8       	.data 0xf8b9          ; Binary data
0D92:	00-30       	cpi r16, 0x00         ; Compare with Immediate
0D94:	A3-80       	ldd r10, Y+3          ; Load Indirect from Data Space to Register
0D96:	30-48       	sbci r19, 0x80        ; Subtract Immediate with Carry SBI
0D98:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
0D9A:	CE-FA       	.data 0xface          ; Binary data
0D9C:	E0-80       	ld r14, Z             ; Load Indirect from Data Space to Register
0D9E:	B8-F8       	.data 0xf8b8          ; Binary data
0DA0:	00-20       	and r0, r0            ; Logical AND
0DA2:	22-81       	ldd r18, Y+2          ; Load Indirect from Data Space to Register
0DA4:	3A-88       	std Y+18, r3          ; Store Indirect From Register to Data Space
0DA6:	62-81       	ldd r22, Y+2          ; Load Indirect from Data Space to Register
0DA8:	32-88       	std Y+18, r3          ; Store Indirect From Register to Data Space
0DAA:	A2-81       	ldd r26, Y+2          ; Load Indirect from Data Space to Register
0DAC:	05-9B       	sbis 0x00, 5          ; Skip if Bit in I/O Register is Set
0DAE:	00-2B       	or r16, r16           ; Logical OR
0DB0:	4A-D1       	rcall .+660           ; Relative Call to Subroutine
0DB2:	2A-4A       	sbci r18, 0xaa        ; Subtract Immediate with Carry SBI
0DB4:	2C-23       	and r18, r28          ; Logical AND
0DB6:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
0DB8:	05-F3       	brbs 5, .-64          ; Branch if Bit in SREG is Set
0DBA:	D0-5E       	subi r29, 0xe0        ; Subtract Immediate
0DBC:	21-69       	ori r18, 0x91         ; Logical OR with Immediate
0DBE:	41-1A       	sub r4, r17           ; Subtract Without Carry
0DC0:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
0DC2:	1F-31       	cpi r17, 0x1f         ; Compare with Immediate
0DC4:	49-11       	cpse r20, r9          ; Compare Skip if Equal
0DC6:	D1-52       	subi r29, 0x21        ; Subtract Immediate
0DC8:	2C-22       	and r2, r28           ; Logical AND
0DCA:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
0DCC:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
0DCE:	05-33       	cpi r16, 0x35         ; Compare with Immediate
0DD0:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
0DD2:	02-10       	cpse r0, r2           ; Compare Skip if Equal
0DD4:	5A-69       	ori r21, 0x9a         ; Logical OR with Immediate
0DD6:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0DD8:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
0DDA:	1F-32       	cpi r17, 0x2f         ; Compare with Immediate
0DDC:	52-11       	cpse r21, r2          ; Compare Skip if Equal
0DDE:	5A-80       	ldd r5, Y+2           ; Load Indirect from Data Space to Register
0DE0:	2C-22       	and r2, r28           ; Logical AND
0DE2:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
0DE4:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
0DE6:	05-33       	cpi r16, 0x35         ; Compare with Immediate
0DE8:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
0DEA:	04-10       	cpse r0, r4           ; Compare Skip if Equal
0DEC:	9A-69       	ori r25, 0x9a         ; Logical OR with Immediate
0DEE:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0DF0:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
0DF2:	1F-32       	cpi r17, 0x2f         ; Compare with Immediate
0DF4:	52-11       	cpse r21, r2          ; Compare Skip if Equal
0DF6:	9A-80       	ldd r9, Y+2           ; Load Indirect from Data Space to Register
0DF8:	2C-22       	and r2, r28           ; Logical AND
0DFA:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
0DFC:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
0DFE:	05-33       	cpi r16, 0x35         ; Compare with Immediate
0E00:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
0E02:	08-10       	cpse r0, r8           ; Compare Skip if Equal
0E04:	1A-6A       	ori r17, 0xaa         ; Logical OR with Immediate
0E06:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0E08:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
0E0A:	1F-32       	cpi r17, 0x2f         ; Compare with Immediate
0E0C:	52-11       	cpse r21, r2          ; Compare Skip if Equal
0E0E:	1A-81       	ldd r17, Y+2          ; Load Indirect from Data Space to Register
0E10:	2C-22       	and r2, r28           ; Logical AND
0E12:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
0E14:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
0E16:	05-32       	cpi r16, 0x25         ; Compare with Immediate
0E18:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
0E1A:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
0E1C:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
0E1E:	02-10       	cpse r0, r2           ; Compare Skip if Equal
0E20:	52-6A       	ori r21, 0xa2         ; Logical OR with Immediate
0E22:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0E24:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
0E26:	1F-32       	cpi r17, 0x2f         ; Compare with Immediate
0E28:	52-11       	cpse r21, r2          ; Compare Skip if Equal
0E2A:	5A-80       	ldd r5, Y+2           ; Load Indirect from Data Space to Register
0E2C:	2C-22       	and r2, r28           ; Logical AND
0E2E:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
0E30:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
0E32:	05-35       	cpi r16, 0x55         ; Compare with Immediate
0E34:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
0E36:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
0E38:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
0E3A:	04-10       	cpse r0, r4           ; Compare Skip if Equal
0E3C:	AA-6A       	ori r26, 0xaa         ; Logical OR with Immediate
0E3E:	8A-1A       	sub r8, r26           ; Subtract Without Carry
0E40:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
0E42:	1F-32       	cpi r17, 0x2f         ; Compare with Immediate
0E44:	52-11       	cpse r21, r2          ; Compare Skip if Equal
0E46:	9A-80       	ldd r9, Y+2           ; Load Indirect from Data Space to Register
0E48:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
0E4A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
0E4C:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
0E4E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0E50:	B6-FB       	bst r27, 6            ; Bit Store from Bit in Register to T Flag in SREG
0E52:	FF-1F       	adc r31, r31          ; Add with Carry
0E54:	B8-FB       	.data 0xfbb8          ; Binary data
0E56:	FF-1F       	adc r31, r31          ; Add with Carry
0E58:	C0-FB       	bst r28, 0            ; Bit Store from Bit in Register to T Flag in SREG
0E5A:	FF-1F       	adc r31, r31          ; Add with Carry
0E5C:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
0E5E:	FF-1F       	adc r31, r31          ; Add with Carry
0E60:	D0-FB       	bst r29, 0            ; Bit Store from Bit in Register to T Flag in SREG
0E62:	FF-1F       	adc r31, r31          ; Add with Carry
0E64:	3A-9D       	mul r19, r10          ; Multiply Unsigned
0E66:	FF-1F       	adc r31, r31          ; Add with Carry
0E68:	3C-9D       	mul r19, r12          ; Multiply Unsigned
0E6A:	FF-1F       	adc r31, r31          ; Add with Carry
0E6C:	B4-FB       	bst r27, 4            ; Bit Store from Bit in Register to T Flag in SREG
0E6E:	FF-1F       	adc r31, r31          ; Add with Carry
0E70:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
0E72:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
0E74:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
0E76:	1B-B9       	out 0x0b, r17         ; Store Register to I/O Location
0E78:	00-20       	and r0, r0            ; Logical AND
0E7A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
0E7C:	65-FF       	sbrs r22, 5           ; Skip if Bit in Register is Set
0E7E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
0E80:	01-2B       	or r16, r17           ; Logical OR
0E82:	03-D1       	rcall .+518           ; Relative Call to Subroutine
0E84:	00-20       	and r0, r0            ; Logical AND
0E86:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
0E88:	B1-FE       	sbrs r11, 1           ; Skip if Bit in Register is Set
0E8A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
0E8C:	00-20       	and r0, r0            ; Logical AND
0E8E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
0E90:	F5-FE       	sbrs r15, 5           ; Skip if Bit in Register is Set
0E92:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
0E94:	EC-FB       	.data 0xfbec          ; Binary data
0E96:	FF-1F       	adc r31, r31          ; Add with Carry
0E98:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
0E9A:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
0E9C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
0E9E:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
0EA0:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
0EA2:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
0EA4:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
0EA6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0EA8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
0EAA:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
0EAC:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EAE:	B2-FC       	sbrc r11, 2           ; Skip if Bit in Register is Cleared
0EB0:	48-BB       	out 0x18, r20         ; Store Register to I/O Location
0EB2:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
0EB4:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
0EB6:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EB8:	E7-F9       	bld r30, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
0EBA:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
0EBC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
0EBE:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EC0:	E5-F9       	bld r30, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
0EC2:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
0EC4:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EC6:	EA-FA       	.data 0xfaea          ; Binary data
0EC8:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
0ECA:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
0ECC:	10-49       	sbci r17, 0x90        ; Subtract Immediate with Carry SBI
0ECE:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0ED0:	E5-FA       	bst r14, 5            ; Bit Store from Bit in Register to T Flag in SREG
0ED2:	0F-49       	sbci r16, 0x9f        ; Subtract Immediate with Carry SBI
0ED4:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0ED6:	E2-FA       	bst r14, 2            ; Bit Store from Bit in Register to T Flag in SREG
0ED8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
0EDA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0EDC:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EDE:	DE-FA       	.data 0xfade          ; Binary data
0EE0:	00-21       	and r16, r0           ; Logical AND
0EE2:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EE4:	D3-F9       	bld r29, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
0EE6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
0EE8:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
0EEA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EEC:	CF-F9       	.data 0xf9cf          ; Binary data
0EEE:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
0EF0:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EF2:	CC-F9       	.data 0xf9cc          ; Binary data
0EF4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
0EF6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0EF8:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0EFA:	D0-FA       	bst r13, 0            ; Bit Store from Bit in Register to T Flag in SREG
0EFC:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
0EFE:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
0F00:	C5-F9       	bld r28, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
0F02:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
0F04:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
0F06:	00-20       	and r0, r0            ; Logical AND
0F08:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
0F0A:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
0F0C:	70-92-FF-1F 	sts 0x1fff, r7        ; Store Direct to Data Space
0F10:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
0F12:	A6-3F       	cpi r26, 0xf6         ; Compare with Immediate
0F14:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
0F16:	15-48       	sbci r17, 0x85        ; Subtract Immediate with Carry SBI
0F18:	01-21       	and r16, r1           ; Logical AND
0F1A:	69-22       	and r6, r25           ; Logical AND
0F1C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
0F1E:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
0F20:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0F22:	1A-FC       	.data 0xfc1a          ; Binary data
0F24:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
0F26:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
0F28:	58-B9       	out 0x08, r21         ; Store Register to I/O Location
0F2A:	12-4C       	sbci r17, 0xc2        ; Subtract Immediate with Carry SBI
0F2C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0F2E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0F30:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F32:	11-49       	sbci r17, 0x91        ; Subtract Immediate with Carry SBI
0F34:	10-22       	and r1, r16           ; Logical AND
0F36:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0F38:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F3A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0F3C:	13-FC       	sbrc r1, 3            ; Skip if Bit in Register is Cleared
0F3E:	00-20       	and r0, r0            ; Logical AND
0F40:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
0F42:	0A-4C       	sbci r16, 0xca        ; Subtract Immediate with Carry SBI
0F44:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F46:	08-21       	and r16, r8           ; Logical AND
0F48:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0F4A:	1E-FD       	.data 0xfd1e          ; Binary data
0F4C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F4E:	08-21       	and r16, r8           ; Logical AND
0F50:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0F52:	28-FB       	.data 0xfb28          ; Binary data
0F54:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F56:	00-21       	and r16, r0           ; Logical AND
0F58:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0F5A:	30-FB       	bst r19, 0            ; Bit Store from Bit in Register to T Flag in SREG
0F5C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F5E:	08-21       	and r16, r8           ; Logical AND
0F60:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0F62:	38-FB       	.data 0xfb38          ; Binary data
0F64:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
0F66:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
0F68:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
0F6A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0F6C:	B0-FC       	sbrc r11, 0           ; Skip if Bit in Register is Cleared
0F6E:	FF-1F       	adc r31, r31          ; Add with Carry
0F70:	4C-F9       	.data 0xf94c          ; Binary data
0F72:	FF-1F       	adc r31, r31          ; Add with Carry
0F74:	C0-01       	movw r24, r0          ; Copy Register Word
0F76:	00-20       	and r0, r0            ; Logical AND
0F78:	34-79       	andi r19, 0x94        ; Logical AND with Immediate
0F7A:	01-00       	.data 0x0001          ; Binary data
0F7C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
0F7E:	1E-48       	sbci r17, 0x8e        ; Subtract Immediate with Carry SBI
0F80:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
0F82:	F0-F8       	bld r15, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
0F84:	64-20       	and r6, r4            ; Logical AND
0F86:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
0F88:	7D-FE       	.data 0xfe7d          ; Binary data
0F8A:	1C-4C       	sbci r17, 0xcc        ; Subtract Immediate with Carry SBI
0F8C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0F8E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0F90:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F92:	1B-49       	sbci r17, 0x9b        ; Subtract Immediate with Carry SBI
0F94:	10-22       	and r1, r16           ; Logical AND
0F96:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0F98:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0F9A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0F9C:	E3-FB       	bst r30, 3            ; Bit Store from Bit in Register to T Flag in SREG
0F9E:	19-4C       	sbci r17, 0xc9        ; Subtract Immediate with Carry SBI
0FA0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0FA2:	01-21       	and r16, r1           ; Logical AND
0FA4:	02-22       	and r0, r18           ; Logical AND
0FA6:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
0FA8:	1B-F9       	.data 0xf91b          ; Binary data
0FAA:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
0FAC:	16-4E       	sbci r17, 0xe6        ; Subtract Immediate with Carry SBI
0FAE:	30-70       	andi r19, 0x00        ; Logical AND with Immediate
0FB0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0FB2:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
0FB4:	1B-F8       	.data 0xf81b          ; Binary data
0FB6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0FB8:	10-21       	and r17, r0           ; Logical AND
0FBA:	3C-22       	and r3, r28           ; Logical AND
0FBC:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0FBE:	FE-FF       	.data 0xfffe          ; Binary data
0FC0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0FC2:	11-21       	and r17, r1           ; Logical AND
0FC4:	4C-22       	and r4, r28           ; Logical AND
0FC6:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
0FC8:	F9-FF       	.data 0xfff9          ; Binary data
0FCA:	36-78       	andi r19, 0x86        ; Logical AND with Immediate
0FCC:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
0FCE:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
0FD0:	00-2E       	mov r0, r16           ; Copy Register
0FD2:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
0FD4:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
0FD6:	1E-46       	sbci r17, 0x6e        ; Subtract Immediate with Carry SBI
0FD8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
0FDA:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
0FDC:	17-FA       	bst r1, 7             ; Bit Store from Bit in Register to T Flag in SREG
0FDE:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
0FE0:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
0FE2:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
0FE4:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
0FE6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0FE8:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
0FEA:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
0FEC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
0FEE:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
0FF0:	B9-FB       	.data 0xfbb9          ; Binary data
0FF2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
0FF4:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
0FF6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
0FF8:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
0FFA:	FF-1F       	adc r31, r31          ; Add with Carry
0FFC:	C0-01       	movw r24, r0          ; Copy Register Word
0FFE:	00-20       	and r0, r0            ; Logical AND
1000:	84-79       	andi r24, 0x94        ; Logical AND with Immediate
1002:	01-00       	.data 0x0001          ; Binary data
1004:	64-F9       	bld r22, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1006:	FF-1F       	adc r31, r31          ; Add with Carry
1008:	4C-F9       	.data 0xf94c          ; Binary data
100A:	FF-1F       	adc r31, r31          ; Add with Carry
100C:	48-79       	andi r20, 0x98        ; Logical AND with Immediate
100E:	01-00       	.data 0x0001          ; Binary data
1010:	68-79       	andi r22, 0x98        ; Logical AND with Immediate
1012:	01-00       	.data 0x0001          ; Binary data
1014:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1016:	1D-4C       	sbci r17, 0xcd        ; Subtract Immediate with Carry SBI
1018:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
101A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
101C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
101E:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
1020:	18-22       	and r1, r24           ; Logical AND
1022:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1024:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1026:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1028:	9D-FB       	.data 0xfb9d          ; Binary data
102A:	1A-48       	sbci r17, 0x8a        ; Subtract Immediate with Carry SBI
102C:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
102E:	9A-F8       	.data 0xf89a          ; Binary data
1030:	19-4D       	sbci r17, 0xd9        ; Subtract Immediate with Carry SBI
1032:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1034:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1036:	AA-F9       	.data 0xf9aa          ; Binary data
1038:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
103A:	00-21       	and r16, r0           ; Logical AND
103C:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
103E:	D4-F9       	bld r29, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1040:	0A-20       	and r0, r10           ; Logical AND
1042:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1044:	1F-FE       	.data 0xfe1f          ; Binary data
1046:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1048:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
104A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
104C:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
104E:	1D-22       	and r1, r29           ; Logical AND
1050:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1052:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1054:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1056:	86-FB       	bst r24, 6            ; Bit Store from Bit in Register to T Flag in SREG
1058:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
105A:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
105C:	BD-F9       	.data 0xf9bd          ; Binary data
105E:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
1060:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
1062:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
1064:	10-4D       	sbci r17, 0xd0        ; Subtract Immediate with Carry SBI
1066:	00-28       	or r0, r0             ; Logical OR
1068:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
106A:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
106C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
106E:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
1070:	CD-F9       	.data 0xf9cd          ; Binary data
1072:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1074:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1076:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1078:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
107A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
107C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
107E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1080:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1082:	70-FB       	bst r23, 0            ; Bit Store from Bit in Register to T Flag in SREG
1084:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
1086:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
1088:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
108A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
108C:	C0-01       	movw r24, r0          ; Copy Register Word
108E:	00-20       	and r0, r0            ; Logical AND
1090:	D4-79       	andi r29, 0x94        ; Logical AND with Immediate
1092:	01-00       	.data 0x0001          ; Binary data
1094:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
1096:	FF-1F       	adc r31, r31          ; Add with Carry
1098:	C0-FB       	bst r28, 0            ; Bit Store from Bit in Register to T Flag in SREG
109A:	FF-1F       	adc r31, r31          ; Add with Carry
109C:	F0-79       	andi r31, 0x90        ; Logical AND with Immediate
109E:	01-00       	.data 0x0001          ; Binary data
10A0:	4C-F9       	.data 0xf94c          ; Binary data
10A2:	FF-1F       	adc r31, r31          ; Add with Carry
10A4:	98-79       	andi r25, 0x98        ; Logical AND with Immediate
10A6:	01-00       	.data 0x0001          ; Binary data
10A8:	B8-79       	andi r27, 0x98        ; Logical AND with Immediate
10AA:	01-00       	.data 0x0001          ; Binary data
10AC:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
10AE:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
10B0:	25-4C       	sbci r18, 0xc5        ; Subtract Immediate with Carry SBI
10B2:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
10B4:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
10B6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10B8:	24-49       	sbci r18, 0x94        ; Subtract Immediate with Carry SBI
10BA:	00-22       	and r0, r16           ; Logical AND
10BC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
10BE:	24-4A       	sbci r18, 0xa4        ; Subtract Immediate with Carry SBI
10C0:	2C-23       	and r18, r28          ; Logical AND
10C2:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
10C4:	05-F3       	brbs 5, .-64          ; Branch if Bit in SREG is Set
10C6:	D6-18       	sub r13, r6           ; Subtract Without Carry
10C8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10CA:	D1-5E       	subi r29, 0xe1        ; Subtract Immediate
10CC:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
10CE:	96-FB       	bst r25, 6            ; Bit Store from Bit in Register to T Flag in SREG
10D0:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
10D2:	20-4D       	sbci r18, 0xd0        ; Subtract Immediate with Carry SBI
10D4:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
10D6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10D8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
10DA:	01-22       	and r0, r17           ; Logical AND
10DC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
10DE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10E0:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
10E2:	02-10       	cpse r0, r2           ; Compare Skip if Equal
10E4:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
10E6:	8A-FB       	.data 0xfb8a          ; Binary data
10E8:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
10EA:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
10EC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10EE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
10F0:	01-22       	and r0, r17           ; Logical AND
10F2:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
10F4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10F6:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
10F8:	04-10       	cpse r0, r4           ; Compare Skip if Equal
10FA:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
10FC:	7F-FB       	.data 0xfb7f          ; Binary data
10FE:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1100:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1102:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1104:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1106:	01-22       	and r0, r17           ; Logical AND
1108:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
110A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
110C:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
110E:	08-10       	cpse r0, r8           ; Compare Skip if Equal
1110:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1112:	74-FB       	bst r23, 4            ; Bit Store from Bit in Register to T Flag in SREG
1114:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1116:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1118:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
111A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
111C:	01-22       	and r0, r17           ; Logical AND
111E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1120:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1122:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
1124:	0A-10       	cpse r0, r10          ; Compare Skip if Equal
1126:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1128:	69-FB       	.data 0xfb69          ; Binary data
112A:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
112C:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
112E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1130:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1132:	01-22       	and r0, r17           ; Logical AND
1134:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1136:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1138:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
113A:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
113C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
113E:	5E-FB       	.data 0xfb5e          ; Binary data
1140:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1142:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1144:	0F-FB       	.data 0xfb0f          ; Binary data
1146:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
1148:	C0-01       	movw r24, r0          ; Copy Register Word
114A:	00-20       	and r0, r0            ; Logical AND
114C:	C4-7B       	andi r28, 0xb4        ; Logical AND with Immediate
114E:	01-00       	.data 0x0001          ; Binary data
1150:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
1152:	FF-1F       	adc r31, r31          ; Add with Carry
1154:	10-7A       	andi r17, 0xa0        ; Logical AND with Immediate
1156:	01-00       	.data 0x0001          ; Binary data
1158:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
115A:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
115C:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
115E:	01-90       	ld r0, Z+             ; Load Indirect from Data Space to Register
1160:	49-4C       	sbci r20, 0xc9        ; Subtract Immediate with Carry SBI
1162:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1164:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1166:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1168:	48-49       	sbci r20, 0x98        ; Subtract Immediate with Carry SBI
116A:	0F-22       	and r0, r31           ; Logical AND
116C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
116E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1170:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1172:	F8-FA       	.data 0xfaf8          ; Binary data
1174:	46-4A       	sbci r20, 0xa6        ; Subtract Immediate with Carry SBI
1176:	2C-23       	and r18, r28          ; Logical AND
1178:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
117A:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
117C:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
117E:	D1-18       	sub r13, r1           ; Subtract Without Carry
1180:	D3-5E       	subi r29, 0xe3        ; Subtract Immediate
1182:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
1184:	B1-F9       	bld r27, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
1186:	02-10       	cpse r0, r2           ; Compare Skip if Equal
1188:	03-91       	.data 0x9103          ; Binary data
118A:	64-21       	and r22, r4           ; Logical AND
118C:	00-91-00-25 	lds r16, 0x2500       ; Load Direct from Data Space (32-bit)
1190:	2E-46       	sbci r18, 0x6e        ; Subtract Immediate with Carry SBI
1192:	2F-46       	sbci r18, 0x6f        ; Subtract Immediate with Carry SBI
1194:	A8-46       	sbci r26, 0x68        ; Subtract Immediate with Carry SBI
1196:	A9-46       	sbci r26, 0x69        ; Subtract Immediate with Carry SBI
1198:	AA-46       	sbci r26, 0x6a        ; Subtract Immediate with Carry SBI
119A:	AB-46       	sbci r26, 0x6b        ; Subtract Immediate with Carry SBI
119C:	2C-24       	clr r44               ; Clear Register
119E:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
11A0:	00-24       	clr r0                ; Clear Register
11A2:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
11A4:	01-21       	and r16, r1           ; Logical AND
11A6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11A8:	63-FE       	sbrs r6, 3            ; Skip if Bit in Register is Set
11AA:	3A-4A       	sbci r19, 0xaa        ; Subtract Immediate with Carry SBI
11AC:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
11AE:	05-93       	las Z, r16            ; Load and Set
11B0:	05-9A       	sbi 0x00, 5           ; Set Bit in I/O Register
11B2:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
11B4:	10-73       	andi r17, 0x30        ; Logical AND with Immediate
11B6:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
11B8:	13-D9       	rcall .+4646          ; Relative Call to Subroutine
11BA:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11BC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11BE:	02-98       	cbi 0x00, 2           ; Clear Bit in I/O Register
11C0:	1B-1A       	sub r1, r27           ; Subtract Without Carry
11C2:	00-2B       	or r16, r16           ; Logical OR
11C4:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
11C6:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
11C8:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
11CA:	7A-7F       	andi r23, 0xfa        ; Logical AND with Immediate
11CC:	59-DC       	rcall .+6322          ; Relative Call to Subroutine
11CE:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11D0:	02-30       	cpi r16, 0x02         ; Compare with Immediate
11D2:	03-99       	sbic 0x00, 3          ; Skip if Bit in I/O Register is Cleared
11D4:	5B-1A       	sub r5, r27           ; Subtract Without Carry
11D6:	00-2B       	or r16, r16           ; Logical OR
11D8:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
11DA:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
11DC:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
11DE:	7A-7F       	andi r23, 0xfa        ; Logical AND with Immediate
11E0:	4F-DC       	rcall .+6302          ; Relative Call to Subroutine
11E2:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11E4:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11E6:	9B-44       	sbci r25, 0x4b        ; Subtract Immediate with Carry SBI
11E8:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11EA:	02-30       	cpi r16, 0x02         ; Compare with Immediate
11EC:	9A-44       	sbci r25, 0x4a        ; Subtract Immediate with Carry SBI
11EE:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11F0:	04-30       	cpi r16, 0x04         ; Compare with Immediate
11F2:	99-44       	sbci r25, 0x49        ; Subtract Immediate with Carry SBI
11F4:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11F6:	06-30       	cpi r16, 0x06         ; Compare with Immediate
11F8:	98-44       	sbci r25, 0x48        ; Subtract Immediate with Carry SBI
11FA:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
11FC:	08-20       	and r0, r8            ; Logical AND
11FE:	17-44       	sbci r17, 0x47        ; Subtract Immediate with Carry SBI
1200:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1202:	0A-20       	and r0, r10           ; Logical AND
1204:	16-44       	sbci r17, 0x46        ; Subtract Immediate with Carry SBI
1206:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1208:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
120A:	1D-44       	sbci r17, 0x4d        ; Subtract Immediate with Carry SBI
120C:	05-20       	and r0, r5            ; Logical AND
120E:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1210:	39-FD       	.data 0xfd39          ; Binary data
1212:	00-9A       	sbi 0x00, 0           ; Set Bit in I/O Register
1214:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
1216:	00-92-C3-D1 	sts 0xd1c3, r0        ; Store Direct to Data Space
121A:	2C-22       	and r2, r28           ; Logical AND
121C:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
121E:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
1220:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
1222:	00-33       	cpi r16, 0x30         ; Compare with Immediate
1224:	1C-4A       	sbci r17, 0xac        ; Subtract Immediate with Carry SBI
1226:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1228:	0B-01       	movw r0, r22          ; Copy Register Word
122A:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
122C:	EB-7B       	andi r30, 0xbb        ; Logical AND with Immediate
122E:	CB-EB       	ldi r28, 0xbb         ; Load Immediate
1230:	61-11       	cpse r22, r1          ; Compare Skip if Equal
1232:	19-61       	ori r17, 0x19         ; Logical OR with Immediate
1234:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1236:	0A-01       	movw r0, r20          ; Copy Register Word
1238:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
123A:	EA-7A       	andi r30, 0xaa        ; Logical AND with Immediate
123C:	CA-EB       	ldi r28, 0xba         ; Load Immediate
123E:	61-11       	cpse r22, r1          ; Compare Skip if Equal
1240:	59-61       	ori r21, 0x19         ; Logical OR with Immediate
1242:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1244:	09-01       	movw r0, r18          ; Copy Register Word
1246:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1248:	E9-79       	andi r30, 0x99        ; Logical AND with Immediate
124A:	C9-EB       	ldi r28, 0xb9         ; Load Immediate
124C:	61-11       	cpse r22, r1          ; Compare Skip if Equal
124E:	99-61       	ori r25, 0x19         ; Logical OR with Immediate
1250:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1252:	08-01       	movw r0, r16          ; Copy Register Word
1254:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1256:	E8-78       	andi r30, 0x88        ; Logical AND with Immediate
1258:	C8-EB       	ldi r28, 0xb8         ; Load Immediate
125A:	61-11       	cpse r22, r1          ; Compare Skip if Equal
125C:	D9-61       	ori r29, 0x19         ; Logical OR with Immediate
125E:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1260:	07-01       	movw r0, r14          ; Copy Register Word
1262:	FF-17       	cp r31, r31           ; Compare
1264:	C7-EB       	ldi r28, 0xb7         ; Load Immediate
1266:	61-11       	cpse r22, r1          ; Compare Skip if Equal
1268:	19-62       	ori r17, 0x29         ; Logical OR with Immediate
126A:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
126C:	06-01       	movw r0, r12          ; Copy Register Word
126E:	F6-17       	cp r31, r22           ; Compare
1270:	C6-EB       	ldi r28, 0xb6         ; Load Immediate
1272:	61-11       	cpse r22, r1          ; Compare Skip if Equal
1274:	59-62       	ori r21, 0x29         ; Logical OR with Immediate
1276:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1278:	05-12       	cpse r0, r21          ; Compare Skip if Equal
127A:	ED-17       	cp r30, r29           ; Compare
127C:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
127E:	62-12       	cpse r6, r18          ; Compare Skip if Equal
1280:	9A-62       	ori r25, 0x2a         ; Logical OR with Immediate
1282:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
1284:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1286:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
1288:	C0-01       	movw r24, r0          ; Copy Register Word
128A:	00-20       	and r0, r0            ; Logical AND
128C:	14-7A       	andi r17, 0xa4        ; Logical AND with Immediate
128E:	01-00       	.data 0x0001          ; Binary data
1290:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
1292:	FF-1F       	adc r31, r31          ; Add with Carry
1294:	0C-00       	.data 0x000c          ; Binary data
1296:	00-20       	and r0, r0            ; Logical AND
1298:	1F-85       	std Y+15, r17         ; Store Indirect From Register to Data Space
129A:	EB-51       	subi r30, 0x1b        ; Subtract Immediate
129C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
129E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12A0:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
12A2:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
12A4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12A6:	3B-B9       	out 0x0b, r19         ; Store Register to I/O Location
12A8:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
12AA:	00-22       	and r0, r16           ; Logical AND
12AC:	1A-83       	std Y+2, r17          ; Store Indirect From Register to Data Space
12AE:	23-49       	sbci r18, 0x93        ; Subtract Immediate with Carry SBI
12B0:	99-62       	ori r25, 0x29         ; Logical OR with Immediate
12B2:	DA-61       	ori r29, 0x1a         ; Logical OR with Immediate
12B4:	9E-85       	std Y+14, r25         ; Store Indirect From Register to Data Space
12B6:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
12B8:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12BA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
12BC:	9B-F8       	.data 0xf89b          ; Binary data
12BE:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
12C0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12C2:	00-21       	and r16, r0           ; Logical AND
12C4:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
12C6:	88-FA       	.data 0xfa88          ; Binary data
12C8:	50-B9       	out 0x00, r21         ; Store Register to I/O Location
12CA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12CC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
12CE:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
12D0:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
12D2:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
12D4:	58-BB       	out 0x18, r21         ; Store Register to I/O Location
12D6:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
12D8:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
12DA:	18-30       	cpi r17, 0x08         ; Compare with Immediate
12DC:	0B-B9       	out 0x0b, r16         ; Store Register to I/O Location
12DE:	00-E0       	ldi r16, 0x00         ; Load Immediate
12E0:	00-24       	clr r0                ; Clear Register
12E2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12E4:	16-49       	sbci r17, 0x96        ; Subtract Immediate with Carry SBI
12E6:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
12E8:	D9-F8       	.data 0xf8d9          ; Binary data
12EA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
12EC:	9D-FA       	.data 0xfa9d          ; Binary data
12EE:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
12F0:	18-83       	st Y, r17             ; Store Indirect From Register to Data Space
12F2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
12F4:	00-21       	and r16, r0           ; Logical AND
12F6:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
12F8:	6F-FA       	.data 0xfa6f          ; Binary data
12FA:	28-B9       	out 0x08, r18         ; Store Register to I/O Location
12FC:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
12FE:	11-49       	sbci r17, 0x91        ; Subtract Immediate with Carry SBI
1300:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1302:	88-FA       	.data 0xfa88          ; Binary data
1304:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
1306:	02-E0       	ldi r16, 0x02         ; Load Immediate
1308:	00-25       	clr r256              ; Clear Register
130A:	00-E0       	ldi r16, 0x00         ; Load Immediate
130C:	0D-4D       	sbci r16, 0xdd        ; Subtract Immediate with Carry SBI
130E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1310:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
1312:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1314:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
1316:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1318:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
131A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
131C:	B7-FF       	sbrs r27, 7           ; Skip if Bit in Register is Set
131E:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1320:	A9-FA       	.data 0xfaa9          ; Binary data
1322:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1324:	98-62       	ori r25, 0x28         ; Logical OR with Immediate
1326:	00-22       	and r0, r16           ; Logical AND
1328:	DA-61       	ori r29, 0x1a         ; Logical OR with Immediate
132A:	9E-85       	std Y+14, r25         ; Store Indirect From Register to Data Space
132C:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
132E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1330:	7E-54       	subi r23, 0x4e        ; Subtract Immediate
1332:	D6-E7       	ldi r29, 0x76         ; Load Immediate
1334:	4C-F9       	.data 0xf94c          ; Binary data
1336:	FF-1F       	adc r31, r31          ; Add with Carry
1338:	F4-FB       	bst r31, 4            ; Bit Store from Bit in Register to T Flag in SREG
133A:	FF-1F       	adc r31, r31          ; Add with Carry
133C:	2E-46       	sbci r18, 0x6e        ; Subtract Immediate with Carry SBI
133E:	4A-00       	.data 0x004a          ; Binary data
1340:	00-FE       	sbrs r0, 0            ; Skip if Bit in Register is Set
1342:	FF-46       	sbci r31, 0x6f        ; Subtract Immediate with Carry SBI
1344:	A6-55       	subi r26, 0x56        ; Subtract Immediate
1346:	AC-46       	sbci r26, 0x6c        ; Subtract Immediate with Carry SBI
1348:	4B-24       	clr r75               ; Clear Register
134A:	3E-47       	sbci r19, 0x7e        ; Subtract Immediate with Carry SBI
134C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
134E:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
1350:	30-4C       	sbci r19, 0xc0        ; Subtract Immediate with Carry SBI
1352:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1354:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1356:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1358:	2F-49       	sbci r18, 0x9f        ; Subtract Immediate with Carry SBI
135A:	27-22       	and r2, r23           ; Logical AND
135C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
135E:	2F-4D       	sbci r18, 0xdf        ; Subtract Immediate with Carry SBI
1360:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1362:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
1364:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1366:	4A-FA       	.data 0xfa4a          ; Binary data
1368:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
136A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
136C:	FB-F9       	.data 0xf9fb          ; Binary data
136E:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
1370:	33-B9       	out 0x03, r19         ; Store Register to I/O Location
1372:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1374:	4F-FE       	.data 0xfe4f          ; Binary data
1376:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1378:	18-B9       	out 0x08, r17         ; Store Register to I/O Location
137A:	01-22       	and r0, r17           ; Logical AND
137C:	2A-60       	ori r18, 0x0a         ; Logical OR with Immediate
137E:	04-E0       	ldi r16, 0x04         ; Load Immediate
1380:	00-22       	and r0, r16           ; Logical AND
1382:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
1384:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1386:	01-2B       	or r16, r17           ; Logical OR
1388:	07-D1       	rcall .+526           ; Relative Call to Subroutine
138A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
138C:	F7-FD       	sbrc r31, 7           ; Skip if Bit in Register is Cleared
138E:	00-28       	or r0, r0             ; Logical OR
1390:	39-D1       	rcall .+626           ; Relative Call to Subroutine
1392:	02-22       	and r0, r18           ; Logical AND
1394:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
1396:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1398:	03-E0       	ldi r16, 0x03         ; Load Immediate
139A:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
139C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
139E:	02-2B       	or r16, r18           ; Logical OR
13A0:	07-D1       	rcall .+526           ; Relative Call to Subroutine
13A2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A4:	B7-FD       	sbrc r27, 7           ; Skip if Bit in Register is Cleared
13A6:	28-B9       	out 0x08, r18         ; Store Register to I/O Location
13A8:	00-22       	and r0, r16           ; Logical AND
13AA:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
13AC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
13AE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13B0:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
13B2:	6A-B3       	in r22, 0x1a          ; Load an I/O Location to Register
13B4:	19-4C       	sbci r17, 0xc9        ; Subtract Immediate with Carry SBI
13B6:	19-20       	and r1, r9            ; Logical AND
13B8:	21-78       	andi r18, 0x81        ; Logical AND with Immediate
13BA:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
13BC:	6F-FA       	.data 0xfa6f          ; Binary data
13BE:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
13C0:	00-29       	or r16, r0            ; Logical OR
13C2:	25-DB       	rcall .+5706          ; Relative Call to Subroutine
13C4:	00-25       	clr r256              ; Clear Register
13C6:	DF-F8       	.data 0xf8df          ; Binary data
13C8:	58-80       	ld r5, Y              ; Load Indirect from Data Space to Register
13CA:	00-27       	clr r768              ; Clear Register
13CC:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
13CE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
13D0:	FA-74       	andi r31, 0x4a        ; Logical AND with Immediate
13D2:	D8-F8       	.data 0xf8d8          ; Binary data
13D4:	00-00       	nop                   ; No Operation
13D6:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
13D8:	04-41       	sbci r16, 0x14        ; Subtract Immediate with Carry SBI
13DA:	02-22       	and r0, r18           ; Logical AND
13DC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13DE:	5E-FF       	.data 0xff5e          ; Binary data
13E0:	1E-20       	and r1, r14           ; Logical AND
13E2:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
13E4:	4F-FC       	.data 0xfc4f          ; Binary data
13E6:	31-68       	ori r19, 0x81         ; Logical OR with Immediate
13E8:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
13EA:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
13EC:	04-41       	sbci r16, 0x14        ; Subtract Immediate with Carry SBI
13EE:	02-22       	and r0, r18           ; Logical AND
13F0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13F2:	54-FF       	sbrs r21, 4           ; Skip if Bit in Register is Set
13F4:	1E-20       	and r1, r14           ; Logical AND
13F6:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
13F8:	45-FC       	sbrc r4, 5            ; Skip if Bit in Register is Cleared
13FA:	01-35       	cpi r16, 0x51         ; Compare with Immediate
13FC:	31-68       	ori r19, 0x81         ; Logical OR with Immediate
13FE:	A9-42       	sbci r26, 0x29        ; Subtract Immediate with Carry SBI
1400:	E5-DA       	rcall .+5578          ; Relative Call to Subroutine
1402:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1404:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1406:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1408:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
140A:	02-2B       	or r16, r18           ; Logical OR
140C:	D2-D1       	rcall .+932           ; Relative Call to Subroutine
140E:	C8-E7       	ldi r28, 0x78         ; Load Immediate
1410:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1412:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1414:	C0-01       	movw r24, r0          ; Copy Register Word
1416:	00-20       	and r0, r0            ; Logical AND
1418:	24-7A       	andi r18, 0xa4        ; Logical AND with Immediate
141A:	01-00       	.data 0x0001          ; Binary data
141C:	EC-FB       	.data 0xfbec          ; Binary data
141E:	FF-1F       	adc r31, r31          ; Add with Carry
1420:	E4-92       	xch Z, r14            ; Exchange
1422:	FF-1F       	adc r31, r31          ; Add with Carry
1424:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
1426:	0C-4D       	sbci r16, 0xdc        ; Subtract Immediate with Carry SBI
1428:	00-24       	clr r0                ; Clear Register
142A:	0C-4F       	sbci r16, 0xfc        ; Subtract Immediate with Carry SBI
142C:	0C-4E       	sbci r16, 0xec        ; Subtract Immediate with Carry SBI
142E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1430:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1432:	E0-FF       	sbrs r30, 0           ; Skip if Bit in Register is Set
1434:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
1436:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1438:	E5-F8       	bld r14, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
143A:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
143C:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
143E:	2E-F8       	.data 0xf82e          ; Binary data
1440:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1442:	98-FB       	.data 0xfb98          ; Binary data
1444:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
1446:	2E-FB       	.data 0xfb2e          ; Binary data
1448:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
144A:	CA-FE       	.data 0xfeca          ; Binary data
144C:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
144E:	04-0F       	add r16, r20          ; Add without Carry
1450:	01-34       	cpi r16, 0x41         ; Compare with Immediate
1452:	C8-2C       	mov r12, r8           ; Copy Register
1454:	EB-D1       	rcall .+982           ; Relative Call to Subroutine
1456:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
1458:	A0-EF       	ldi r26, 0xf0         ; Load Immediate
145A:	FF-1F       	adc r31, r31          ; Add with Carry
145C:	00-00       	nop                   ; No Operation
145E:	48-43       	sbci r20, 0x38        ; Subtract Immediate with Carry SBI
1460:	DB-0F       	add r29, r27          ; Add without Carry
1462:	49-40       	sbci r20, 0x09        ; Subtract Immediate with Carry SBI
1464:	FF-FF       	.data 0xffff          ; Binary data
1466:	FF-FF       	.data 0xffff          ; Binary data
1468:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
146A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
146C:	00-21       	and r16, r0           ; Logical AND
146E:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1470:	D1-F9       	bld r29, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
1472:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
1474:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1476:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
1478:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
147A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
147C:	7B-FB       	.data 0xfb7b          ; Binary data
147E:	14-A3       	std Y+36, r17         ; Store Indirect From Register to Data Space
1480:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1482:	00-23       	and r16, r16          ; Logical AND
1484:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
1486:	4C-FC       	.data 0xfc4c          ; Binary data
1488:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
148A:	AA-FE       	.data 0xfeaa          ; Binary data
148C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
148E:	12-49       	sbci r17, 0x92        ; Subtract Immediate with Carry SBI
1490:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1492:	C0-F9       	bld r28, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
1494:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
1496:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1498:	0F-49       	sbci r16, 0x9f        ; Subtract Immediate with Carry SBI
149A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
149C:	F5-FE       	sbrs r15, 5           ; Skip if Bit in Register is Set
149E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
14A0:	0D-48       	sbci r16, 0x8d        ; Subtract Immediate with Carry SBI
14A2:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
14A4:	F1-FE       	sbrs r15, 1           ; Skip if Bit in Register is Set
14A6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14A8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14AA:	0B-49       	sbci r16, 0x9b        ; Subtract Immediate with Carry SBI
14AC:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
14AE:	AA-F8       	.data 0xf8aa          ; Binary data
14B0:	0A-49       	sbci r16, 0x9a        ; Subtract Immediate with Carry SBI
14B2:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
14B4:	F3-FF       	sbrs r31, 3           ; Skip if Bit in Register is Set
14B6:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
14B8:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
14BA:	C8-28       	or r12, r8            ; Logical OR
14BC:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
14BE:	C8-20       	and r12, r8           ; Logical AND
14C0:	20-EA       	ldi r18, 0xa0         ; Load Immediate
14C2:	E0-70       	andi r30, 0x00        ; Logical AND with Immediate
14C4:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
14C6:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
14C8:	20-00       	.data 0x0020          ; Binary data
14CA:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
14CC:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
14CE:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14D0:	00-00       	nop                   ; No Operation
14D2:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
14D4:	FB-21       	and r31, r11          ; Logical AND
14D6:	19-40       	sbci r17, 0x09        ; Subtract Immediate with Carry SBI
14D8:	DB-0F       	add r29, r27          ; Add without Carry
14DA:	49-40       	sbci r20, 0x09        ; Subtract Immediate with Carry SBI
14DC:	00-00       	nop                   ; No Operation
14DE:	48-43       	sbci r20, 0x38        ; Subtract Immediate with Carry SBI
14E0:	A4-EF       	ldi r26, 0xf4         ; Load Immediate
14E2:	FF-1F       	adc r31, r31          ; Add with Carry
14E4:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
14E6:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14E8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
14EA:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
14EC:	02-48       	sbci r16, 0x82        ; Subtract Immediate with Carry SBI
14EE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
14F0:	CB-FE       	.data 0xfecb          ; Binary data
14F2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
14F4:	B9-FF       	.data 0xffb9          ; Binary data
14F6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
14F8:	DB-0F       	add r29, r27          ; Add without Carry
14FA:	C9-3F       	cpi r28, 0xf9         ; Compare with Immediate
14FC:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
14FE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1500:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
1502:	04-D0       	rcall .+8             ; Relative Call to Subroutine
1504:	03-2B       	or r16, r19           ; Logical OR
1506:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
1508:	00-20       	and r0, r0            ; Logical AND
150A:	01-20       	and r0, r1            ; Logical AND
150C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
150E:	01-20       	and r0, r1            ; Logical AND
1510:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1512:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1514:	EC-92       	st X, r14             ; Store Indirect From Register to Data Space
1516:	FF-1F       	adc r31, r31          ; Add with Carry
1518:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
151A:	16-4C       	sbci r17, 0xc6        ; Subtract Immediate with Carry SBI
151C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
151E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1520:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1522:	15-49       	sbci r17, 0x95        ; Subtract Immediate with Carry SBI
1524:	18-22       	and r1, r24           ; Logical AND
1526:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1528:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
152A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
152C:	1B-F9       	.data 0xf91b          ; Binary data
152E:	00-20       	and r0, r0            ; Logical AND
1530:	2F-21       	and r18, r15          ; Logical AND
1532:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1534:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
1536:	01-20       	and r0, r1            ; Logical AND
1538:	00-21       	and r16, r0           ; Logical AND
153A:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
153C:	AF-F9       	.data 0xf9af          ; Binary data
153E:	02-20       	and r0, r2            ; Logical AND
1540:	32-21       	and r19, r2           ; Logical AND
1542:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1544:	AB-F9       	.data 0xf9ab          ; Binary data
1546:	03-24       	clr r3                ; Clear Register
1548:	00-25       	clr r256              ; Clear Register
154A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
154C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
154E:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1550:	A5-F9       	bld r26, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
1552:	01-34       	cpi r16, 0x41         ; Compare with Immediate
1554:	B4-F5       	brbc 4, .+108         ; Branch if Bit in SREG is Cleared
1556:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
1558:	F7-D1       	rcall .+1006          ; Relative Call to Subroutine
155A:	09-20       	and r0, r9            ; Logical AND
155C:	06-21       	and r16, r6           ; Logical AND
155E:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1560:	9D-F9       	.data 0xf99d          ; Binary data
1562:	0A-20       	and r0, r10           ; Logical AND
1564:	FF-21       	and r31, r15          ; Logical AND
1566:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1568:	99-F9       	.data 0xf999          ; Binary data
156A:	18-20       	and r1, r8            ; Logical AND
156C:	05-21       	and r16, r5           ; Logical AND
156E:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1570:	95-F9       	bld r25, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
1572:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1574:	C0-01       	movw r24, r0          ; Copy Register Word
1576:	00-20       	and r0, r0            ; Logical AND
1578:	4C-7A       	andi r20, 0xac        ; Logical AND with Immediate
157A:	01-00       	.data 0x0001          ; Binary data
157C:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
157E:	B0-F5       	brbc 0, .+108         ; Branch if Bit in SREG is Cleared
1580:	2D-7F       	andi r18, 0xfd        ; Logical AND with Immediate
1582:	09-D2       	rcall .+1042          ; Relative Call to Subroutine
1584:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
1586:	00-EB       	ldi r16, 0xb0         ; Load Immediate
1588:	40-00       	.data 0x0040          ; Binary data
158A:	13-18       	sub r1, r3            ; Subtract Without Carry
158C:	0C-78       	andi r16, 0x8c        ; Logical AND with Immediate
158E:	14-54       	subi r17, 0x44        ; Subtract Immediate
1590:	4A-78       	andi r20, 0x8a        ; Logical AND with Immediate
1592:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
1594:	8A-78       	andi r24, 0x8a        ; Logical AND with Immediate
1596:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
1598:	5D-F8       	.data 0xf85d          ; Binary data
159A:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
159C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
159E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15A0:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
15A2:	FF-1F       	adc r31, r31          ; Add with Carry
15A4:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
15A6:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
15A8:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
15AA:	00-23       	and r16, r16          ; Logical AND
15AC:	C2-17       	cp r28, r18           ; Compare
15AE:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
15B0:	63-13       	cpse r22, r19         ; Compare Skip if Equal
15B2:	0A-2B       	or r16, r26           ; Logical OR
15B4:	1B-D8       	rcall .+4150          ; Relative Call to Subroutine
15B6:	00-28       	or r0, r0             ; Logical OR
15B8:	19-DB       	rcall .+5682          ; Relative Call to Subroutine
15BA:	03-EB       	ldi r16, 0xb3         ; Load Immediate
15BC:	C3-02       	muls r28, r19         ; Multiply Signed
15BE:	A0-EB       	ldi r26, 0xb0         ; Load Immediate
15C0:	02-12       	cpse r0, r18          ; Compare Skip if Equal
15C2:	0D-48       	sbci r16, 0x8d        ; Subtract Immediate with Carry SBI
15C4:	C0-5C       	subi r28, 0xc0        ; Subtract Immediate
15C6:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
15C8:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
15CA:	8F-02       	muls r24, r31         ; Multiply Signed
15CC:	0B-48       	sbci r16, 0x8b        ; Subtract Immediate with Carry SBI
15CE:	0C-4C       	sbci r16, 0xcc        ; Subtract Immediate with Carry SBI
15D0:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
15D2:	23-30       	cpi r18, 0x03         ; Compare with Immediate
15D4:	03-EB       	ldi r16, 0xb3         ; Load Immediate
15D6:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
15D8:	02-EB       	ldi r16, 0xb2         ; Load Immediate
15DA:	03-12       	cpse r0, r19          ; Compare Skip if Equal
15DC:	02-EB       	ldi r16, 0xb2         ; Load Immediate
15DE:	42-02       	muls r20, r18         ; Multiply Signed
15E0:	83-18       	sub r8, r3            ; Subtract Without Carry
15E2:	0C-78       	andi r16, 0x8c        ; Logical AND with Immediate
15E4:	84-54       	subi r24, 0x44        ; Subtract Immediate
15E6:	4A-78       	andi r20, 0x8a        ; Logical AND with Immediate
15E8:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
15EA:	8A-78       	andi r24, 0x8a        ; Logical AND with Immediate
15EC:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
15EE:	5D-F8       	.data 0xf85d          ; Binary data
15F0:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
15F2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15F4:	39-8E       	std Y+25, r3          ; Store Indirect From Register to Data Space
15F6:	E3-38       	cpi r30, 0x83         ; Compare with Immediate
15F8:	38-FC       	.data 0xfc38          ; Binary data
15FA:	FF-1F       	adc r31, r31          ; Add with Carry
15FC:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
15FE:	FF-1F       	adc r31, r31          ; Add with Carry
1600:	80-92-FF-1F 	sts 0x1fff, r8        ; Store Direct to Data Space
1604:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
1606:	2D-7F       	andi r18, 0xfd        ; Logical AND with Immediate
1608:	0A-D2       	rcall .+1044          ; Relative Call to Subroutine
160A:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
160C:	01-EB       	ldi r16, 0xb1         ; Load Immediate
160E:	41-01       	movw r8, r2           ; Copy Register Word
1610:	53-18       	sub r5, r3            ; Subtract Without Carry
1612:	52-5C       	subi r21, 0xc2        ; Subtract Immediate
1614:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
1616:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
1618:	42-70       	andi r20, 0x02        ; Logical AND with Immediate
161A:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
161C:	83-70       	andi r24, 0x03        ; Logical AND with Immediate
161E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1620:	00-23       	and r16, r16          ; Logical AND
1622:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
1624:	43-70       	andi r20, 0x03        ; Logical AND with Immediate
1626:	83-70       	andi r24, 0x03        ; Logical AND with Immediate
1628:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
162A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
162C:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
162E:	FF-1F       	adc r31, r31          ; Add with Carry
1630:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
1632:	18-4A       	sbci r17, 0xa8        ; Subtract Immediate with Carry SBI
1634:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
1636:	01-32       	cpi r16, 0x21         ; Compare with Immediate
1638:	CB-17       	cp r28, r27           ; Compare
163A:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
163C:	62-12       	cpse r6, r18          ; Compare Skip if Equal
163E:	0A-2A       	or r0, r26            ; Logical OR
1640:	04-D9       	rcall .+4616          ; Relative Call to Subroutine
1642:	00-23       	and r16, r16          ; Logical AND
1644:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
1646:	43-70       	andi r20, 0x03        ; Logical AND with Immediate
1648:	83-70       	andi r24, 0x03        ; Logical AND with Immediate
164A:	1F-E0       	ldi r17, 0x0f         ; Load Immediate
164C:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
164E:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
1650:	01-43       	sbci r16, 0x31        ; Subtract Immediate with Carry SBI
1652:	CC-17       	cp r28, r28           ; Compare
1654:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
1656:	63-13       	cpse r22, r19         ; Compare Skip if Equal
1658:	03-EB       	ldi r16, 0xb3         ; Load Immediate
165A:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
165C:	A1-EB       	ldi r26, 0xb1         ; Load Immediate
165E:	03-13       	cpse r16, r19         ; Compare Skip if Equal
1660:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
1662:	89-5C       	subi r24, 0xc9        ; Subtract Immediate
1664:	09-B1       	in r16, 0x09          ; Load an I/O Location to Register
1666:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
1668:	8F-03       	fmulsu r16, r23       ; Fractional Multiply Signed with Unsigned
166A:	0C-49       	sbci r16, 0x9c        ; Subtract Immediate with Carry SBI
166C:	0C-4C       	sbci r16, 0xcc        ; Subtract Immediate with Carry SBI
166E:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1670:	22-20       	and r2, r2            ; Logical AND
1672:	02-EB       	ldi r16, 0xb2         ; Load Immediate
1674:	C2-02       	muls r28, r18         ; Multiply Signed
1676:	03-EB       	ldi r16, 0xb3         ; Load Immediate
1678:	02-13       	cpse r16, r18         ; Compare Skip if Equal
167A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
167C:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
167E:	CA-18       	sub r12, r10          ; Subtract Without Carry
1680:	CB-5C       	subi r28, 0xcb        ; Subtract Immediate
1682:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
1684:	53-78       	andi r21, 0x83        ; Logical AND with Immediate
1686:	43-70       	andi r20, 0x03        ; Logical AND with Immediate
1688:	93-78       	andi r25, 0x83        ; Logical AND with Immediate
168A:	83-70       	andi r24, 0x03        ; Logical AND with Immediate
168C:	5D-F8       	.data 0xf85d          ; Binary data
168E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
1690:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1692:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1694:	39-8E       	std Y+25, r3          ; Store Indirect From Register to Data Space
1696:	E3-38       	cpi r30, 0x83         ; Compare with Immediate
1698:	38-FC       	.data 0xfc38          ; Binary data
169A:	FF-1F       	adc r31, r31          ; Add with Carry
169C:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
169E:	FF-1F       	adc r31, r31          ; Add with Carry
16A0:	80-92-FF-1F 	sts 0x1fff, r8        ; Store Direct to Data Space
16A4:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
16A6:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
16A8:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
16AA:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
16AC:	68-46       	sbci r22, 0x68        ; Subtract Immediate with Carry SBI
16AE:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
16B0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
16B2:	BE-FF       	.data 0xffbe          ; Binary data
16B4:	9D-F8       	.data 0xf89d          ; Binary data
16B6:	00-10       	cpse r0, r0           ; Compare Skip if Equal
16B8:	9D-F8       	.data 0xf89d          ; Binary data
16BA:	01-20       	and r0, r1            ; Logical AND
16BC:	9D-F8       	.data 0xf89d          ; Binary data
16BE:	02-30       	cpi r16, 0x02         ; Compare with Immediate
16C0:	31-B1       	in r19, 0x01          ; Load an I/O Location to Register
16C2:	DC-25       	clr r476              ; Clear Register
16C4:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
16C6:	01-F5       	brbc 1, .+64          ; Branch if Bit in SREG is Cleared
16C8:	2D-12       	cpse r2, r29          ; Compare Skip if Equal
16CA:	01-35       	cpi r16, 0x51         ; Compare with Immediate
16CC:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
16CE:	00-E0       	ldi r16, 0x00         ; Load Immediate
16D0:	00-25       	clr r256              ; Clear Register
16D2:	32-B1       	in r19, 0x02          ; Load an I/O Location to Register
16D4:	DC-21       	and r29, r12          ; Logical AND
16D6:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
16D8:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
16DA:	12-12       	cpse r1, r18          ; Compare Skip if Equal
16DC:	01-32       	cpi r16, 0x21         ; Compare with Immediate
16DE:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
16E0:	00-E0       	ldi r16, 0x00         ; Load Immediate
16E2:	00-22       	and r0, r16           ; Logical AND
16E4:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
16E6:	DC-21       	and r29, r12          ; Logical AND
16E8:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
16EA:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
16EC:	1B-12       	cpse r1, r27          ; Compare Skip if Equal
16EE:	01-33       	cpi r16, 0x31         ; Compare with Immediate
16F0:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
16F2:	00-E0       	ldi r16, 0x00         ; Load Immediate
16F4:	00-23       	and r16, r16          ; Logical AND
16F6:	20-78       	andi r18, 0x80        ; Logical AND with Immediate
16F8:	85-FA       	bst r8, 5             ; Bit Store from Bit in Register to T Flag in SREG
16FA:	50-F5       	brbc 0, .+84          ; Branch if Bit in SREG is Cleared
16FC:	61-78       	andi r22, 0x81        ; Logical AND with Immediate
16FE:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
1700:	51-F2       	brbs 1, .-108         ; Branch if Bit in SREG is Set
1702:	A1-78       	andi r26, 0x81        ; Logical AND with Immediate
1704:	83-FA       	bst r8, 3             ; Bit Store from Bit in Register to T Flag in SREG
1706:	51-F3       	brbs 1, .-44          ; Branch if Bit in SREG is Set
1708:	8D-F8       	.data 0xf88d          ; Binary data
170A:	04-50       	subi r16, 0x04        ; Subtract Immediate
170C:	8D-F8       	.data 0xf88d          ; Binary data
170E:	05-20       	and r0, r5            ; Logical AND
1710:	8D-F8       	.data 0xf88d          ; Binary data
1712:	06-30       	cpi r16, 0x06         ; Compare with Immediate
1714:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1716:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
1718:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
171A:	30-FF       	sbrs r19, 0           ; Skip if Bit in Register is Set
171C:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
171E:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
1720:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
1722:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
1724:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
1726:	05-01       	movw r0, r10          ; Copy Register Word
1728:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
172A:	07-11       	cpse r16, r7          ; Compare Skip if Equal
172C:	EE-B2       	in r14, 0x1e          ; Load an I/O Location to Register
172E:	86-F0       	brbs 6, .+32          ; Branch if Bit in SREG is Set
1730:	FF-02       	muls r31, r31         ; Multiply Signed
1732:	08-78       	andi r16, 0x88        ; Logical AND with Immediate
1734:	49-78       	andi r20, 0x89        ; Logical AND with Immediate
1736:	A3-78       	andi r26, 0x83        ; Logical AND with Immediate
1738:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
173A:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
173C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
173E:	00-12       	cpse r0, r16          ; Compare Skip if Equal
1740:	01-30       	cpi r16, 0x01         ; Compare with Immediate
1742:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1744:	00-E0       	ldi r16, 0x00         ; Load Immediate
1746:	00-20       	and r0, r0            ; Logical AND
1748:	8D-F8       	.data 0xf88d          ; Binary data
174A:	00-00       	nop                   ; No Operation
174C:	29-B1       	in r18, 0x09          ; Load an I/O Location to Register
174E:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
1750:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
1752:	09-12       	cpse r0, r25          ; Compare Skip if Equal
1754:	01-31       	cpi r16, 0x11         ; Compare with Immediate
1756:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1758:	00-E0       	ldi r16, 0x00         ; Load Immediate
175A:	00-21       	and r16, r0           ; Logical AND
175C:	8D-F8       	.data 0xf88d          ; Binary data
175E:	01-10       	cpse r0, r1           ; Compare Skip if Equal
1760:	2B-B1       	in r18, 0x0b          ; Load an I/O Location to Register
1762:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
1764:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
1766:	1B-12       	cpse r1, r27          ; Compare Skip if Equal
1768:	01-33       	cpi r16, 0x31         ; Compare with Immediate
176A:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
176C:	00-E0       	ldi r16, 0x00         ; Load Immediate
176E:	00-23       	and r16, r16          ; Logical AND
1770:	8D-F8       	.data 0xf88d          ; Binary data
1772:	02-30       	cpi r16, 0x02         ; Compare with Immediate
1774:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
1776:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
1778:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
177A:	94-FF       	sbrs r25, 4           ; Skip if Bit in Register is Set
177C:	78-1C       	adc r7, r8            ; Add with Carry
177E:	21-78       	andi r18, 0x81        ; Logical AND with Immediate
1780:	62-78       	andi r22, 0x82        ; Logical AND with Immediate
1782:	A3-78       	andi r26, 0x83        ; Logical AND with Immediate
1784:	00-36       	cpi r16, 0x60         ; Compare with Immediate
1786:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1788:	01-26       	clr r513              ; Clear Register
178A:	29-B1       	in r18, 0x09          ; Load an I/O Location to Register
178C:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
178E:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
1790:	06-EB       	ldi r16, 0xb6         ; Load Immediate
1792:	21-21       	and r18, r1           ; Logical AND
1794:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1796:	00-E0       	ldi r16, 0x00         ; Load Immediate
1798:	00-21       	and r16, r0           ; Logical AND
179A:	8D-F8       	.data 0xf88d          ; Binary data
179C:	04-10       	cpse r0, r4           ; Compare Skip if Equal
179E:	2A-B1       	in r18, 0x0a          ; Load an I/O Location to Register
17A0:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
17A2:	05-F2       	brbs 5, .-128         ; Branch if Bit in SREG is Set
17A4:	06-EB       	ldi r16, 0xb6         ; Load Immediate
17A6:	22-22       	and r2, r18           ; Logical AND
17A8:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
17AA:	00-E0       	ldi r16, 0x00         ; Load Immediate
17AC:	00-22       	and r0, r16           ; Logical AND
17AE:	8D-F8       	.data 0xf88d          ; Binary data
17B0:	05-20       	and r0, r5            ; Logical AND
17B2:	2B-B1       	in r18, 0x0b          ; Load an I/O Location to Register
17B4:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
17B6:	05-F5       	brbc 5, .+64          ; Branch if Bit in SREG is Cleared
17B8:	06-EB       	ldi r16, 0xb6         ; Load Immediate
17BA:	25-26       	clr r549              ; Clear Register
17BC:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
17BE:	00-E0       	ldi r16, 0x00         ; Load Immediate
17C0:	00-26       	clr r512              ; Clear Register
17C2:	8D-F8       	.data 0xf88d          ; Binary data
17C4:	06-60       	ori r16, 0x06         ; Logical OR with Immediate
17C6:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
17C8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17CA:	6C-FF       	.data 0xff6c          ; Binary data
17CC:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
17CE:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
17D0:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
17D2:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
17D4:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
17D6:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
17D8:	00-21       	and r16, r0           ; Logical AND
17DA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
17DC:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
17DE:	38-B1       	in r19, 0x08          ; Load an I/O Location to Register
17E0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
17E2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
17E4:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
17E6:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
17E8:	51-FD       	sbrc r21, 1           ; Skip if Bit in Register is Cleared
17EA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
17EC:	1D-F8       	.data 0xf81d          ; Binary data
17EE:	06-E0       	ldi r16, 0x06         ; Load Immediate
17F0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
17F2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
17F4:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
17F6:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
17F8:	47-FD       	sbrc r20, 7           ; Skip if Bit in Register is Cleared
17FA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
17FC:	15-F8       	bld r1, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
17FE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1800:	F9-FD       	.data 0xfdf9          ; Binary data
1802:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
1804:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1806:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1808:	3F-FD       	.data 0xfd3f          ; Binary data
180A:	34-49       	sbci r19, 0x94        ; Subtract Immediate with Carry SBI
180C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
180E:	46-FE       	sbrs r4, 6            ; Skip if Bit in Register is Set
1810:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
1812:	0A-F8       	.data 0xf80a          ; Binary data
1814:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
1816:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1818:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
181A:	06-F8       	bld r0, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
181C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
181E:	F5-B2       	in r15, 0x15          ; Load an I/O Location to Register
1820:	EB-43       	sbci r30, 0x3b        ; Subtract Immediate with Carry SBI
1822:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1824:	00-E0       	ldi r16, 0x00         ; Load Immediate
1826:	60-78       	andi r22, 0x80        ; Logical AND with Immediate
1828:	A1-78       	andi r26, 0x81        ; Logical AND with Immediate
182A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
182C:	FF-03       	fmulsu r23, r23       ; Fractional Multiply Signed with Unsigned
182E:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
1830:	00-22       	and r0, r16           ; Logical AND
1832:	01-22       	and r0, r17           ; Logical AND
1834:	BE-F1       	brbs 6, .+110         ; Branch if Bit in SREG is Set
1836:	00-0F       	add r16, r16          ; Add without Carry
1838:	06-D0       	rcall .+12            ; Relative Call to Subroutine
183A:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
183C:	0E-FE       	.data 0xfe0e          ; Binary data
183E:	02-EB       	ldi r16, 0xb2         ; Load Immediate
1840:	2E-2E       	mov r2, r30           ; Copy Register
1842:	5F-FA       	.data 0xfa5f          ; Binary data
1844:	8E-FE       	.data 0xfe8e          ; Binary data
1846:	01-E0       	ldi r16, 0x01         ; Load Immediate
1848:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
184A:	00-0E       	add r0, r16           ; Add without Carry
184C:	8D-F8       	.data 0xf88d          ; Binary data
184E:	00-E0       	ldi r16, 0x00         ; Load Immediate
1850:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
1852:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
1854:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1856:	02-EB       	ldi r16, 0xb2         ; Load Immediate
1858:	20-20       	and r2, r0            ; Logical AND
185A:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
185C:	00-E0       	ldi r16, 0x00         ; Load Immediate
185E:	00-20       	and r0, r0            ; Logical AND
1860:	8D-F8       	.data 0xf88d          ; Binary data
1862:	01-00       	.data 0x0001          ; Binary data
1864:	29-B1       	in r18, 0x09          ; Load an I/O Location to Register
1866:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
1868:	01-F3       	brbs 1, .-64          ; Branch if Bit in SREG is Set
186A:	02-EB       	ldi r16, 0xb2         ; Load Immediate
186C:	23-22       	and r2, r19           ; Logical AND
186E:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
1870:	00-E0       	ldi r16, 0x00         ; Load Immediate
1872:	00-22       	and r0, r16           ; Logical AND
1874:	8D-F8       	.data 0xf88d          ; Binary data
1876:	02-20       	and r0, r2            ; Logical AND
1878:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
187A:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
187C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
187E:	12-FF       	sbrs r17, 2           ; Skip if Bit in Register is Set
1880:	78-1C       	adc r7, r8            ; Add with Carry
1882:	21-78       	andi r18, 0x81        ; Logical AND with Immediate
1884:	62-78       	andi r22, 0x82        ; Logical AND with Immediate
1886:	A3-78       	andi r26, 0x83        ; Logical AND with Immediate
1888:	00-35       	cpi r16, 0x50         ; Compare with Immediate
188A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
188C:	01-25       	clr r257              ; Clear Register
188E:	31-B1       	in r19, 0x01          ; Load an I/O Location to Register
1890:	F4-B2       	in r15, 0x14          ; Load an I/O Location to Register
1892:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
1894:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
1896:	05-EB       	ldi r16, 0xb5         ; Load Immediate
1898:	21-21       	and r18, r1           ; Logical AND
189A:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
189C:	00-E0       	ldi r16, 0x00         ; Load Immediate
189E:	00-21       	and r16, r0           ; Logical AND
18A0:	8D-F8       	.data 0xf88d          ; Binary data
18A2:	04-10       	cpse r0, r4           ; Compare Skip if Equal
18A4:	32-B1       	in r19, 0x02          ; Load an I/O Location to Register
18A6:	F1-B2       	in r15, 0x11          ; Load an I/O Location to Register
18A8:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
18AA:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
18AC:	05-EB       	ldi r16, 0xb5         ; Load Immediate
18AE:	22-22       	and r2, r18           ; Logical AND
18B0:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
18B2:	00-E0       	ldi r16, 0x00         ; Load Immediate
18B4:	00-22       	and r0, r16           ; Logical AND
18B6:	8D-F8       	.data 0xf88d          ; Binary data
18B8:	05-20       	and r0, r5            ; Logical AND
18BA:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
18BC:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
18BE:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
18C0:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
18C2:	05-EB       	ldi r16, 0xb5         ; Load Immediate
18C4:	23-25       	clr r291              ; Clear Register
18C6:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
18C8:	00-E0       	ldi r16, 0x00         ; Load Immediate
18CA:	00-25       	clr r256              ; Clear Register
18CC:	8D-F8       	.data 0xf88d          ; Binary data
18CE:	06-50       	subi r16, 0x06        ; Subtract Immediate
18D0:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
18D2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
18D4:	E7-FE       	sbrs r14, 7           ; Skip if Bit in Register is Set
18D6:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
18D8:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
18DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
18DC:	00-00       	nop                   ; No Operation
18DE:	7F-43       	sbci r23, 0x3f        ; Subtract Immediate with Carry SBI
18E0:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
18E2:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
18E4:	00-EB       	ldi r16, 0xb0         ; Load Immediate
18E6:	40-01       	movw r8, r0           ; Copy Register Word
18E8:	09-01       	movw r0, r18          ; Copy Register Word
18EA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
18EC:	D1-23       	and r29, r17          ; Logical AND
18EE:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
18F0:	07-DC       	rcall .+6158          ; Relative Call to Subroutine
18F2:	01-EB       	ldi r16, 0xb1         ; Load Immediate
18F4:	41-01       	movw r8, r2           ; Copy Register Word
18F6:	12-48       	sbci r17, 0x82        ; Subtract Immediate with Carry SBI
18F8:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
18FA:	19-44       	sbci r17, 0x49        ; Subtract Immediate with Carry SBI
18FC:	90-22       	and r9, r16           ; Logical AND
18FE:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1900:	47-FE       	sbrs r4, 7            ; Skip if Bit in Register is Set
1902:	11-4C       	sbci r17, 0xc1        ; Subtract Immediate with Carry SBI
1904:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1906:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1908:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
190A:	06-21       	and r16, r6           ; Logical AND
190C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
190E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1910:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1912:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1914:	85-21       	and r24, r5           ; Logical AND
1916:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1918:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
191A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
191C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
191E:	90-21       	and r25, r0           ; Logical AND
1920:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1922:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1924:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1926:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1928:	E9-B2       	in r14, 0x19          ; Load an I/O Location to Register
192A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
192C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
192E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1930:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1932:	00-21       	and r16, r0           ; Logical AND
1934:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1936:	02-48       	sbci r16, 0x82        ; Subtract Immediate with Carry SBI
1938:	90-21       	and r25, r0           ; Logical AND
193A:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
193C:	29-FC       	.data 0xfc29          ; Binary data
193E:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1940:	E0-FA       	bst r14, 0            ; Bit Store from Bit in Register to T Flag in SREG
1942:	FF-1F       	adc r31, r31          ; Add with Carry
1944:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
1946:	FF-1F       	adc r31, r31          ; Add with Carry
1948:	B0-01       	movw r22, r0          ; Copy Register Word
194A:	00-20       	and r0, r0            ; Logical AND
194C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
194E:	00-24       	clr r0                ; Clear Register
1950:	09-4D       	sbci r16, 0xd9        ; Subtract Immediate with Carry SBI
1952:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1954:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1956:	C4-FF       	sbrs r28, 4           ; Skip if Bit in Register is Set
1958:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
195A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
195C:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
195E:	1B-01       	movw r2, r22          ; Copy Register Word
1960:	02-D0       	rcall .+4             ; Relative Call to Subroutine
1962:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
1964:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
1966:	FD-AF       	std Y+61, r31         ; Store Indirect From Register to Data Space
1968:	01-34       	cpi r16, 0x41         ; Compare with Immediate
196A:	0F-2C       	mov r0, r15           ; Copy Register
196C:	F1-D1       	rcall .+994           ; Relative Call to Subroutine
196E:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
1970:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
1972:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
1974:	FD-AF       	std Y+61, r31         ; Store Indirect From Register to Data Space
1976:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1978:	44-92       	xch Z, r4             ; Exchange
197A:	FF-1F       	adc r31, r31          ; Add with Carry
197C:	00-EE       	ldi r16, 0xe0         ; Load Immediate
197E:	02-00       	.data 0x0002          ; Binary data
1980:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
1982:	00-23       	and r16, r16          ; Logical AND
1984:	8D-48       	sbci r24, 0x8d        ; Subtract Immediate with Carry SBI
1986:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
1988:	40-F6       	brbc 0, .-112         ; Branch if Bit in SREG is Cleared
198A:	1C-04       	cpc r1, r12           ; Compare with Carry
198C:	1A-54       	subi r17, 0x4a        ; Subtract Immediate
198E:	C1-18       	sub r12, r1           ; Subtract Without Carry
1990:	4A-70       	andi r20, 0x0a        ; Logical AND with Immediate
1992:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
1994:	03-33       	cpi r16, 0x33         ; Compare with Immediate
1996:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
1998:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
199A:	00-23       	and r16, r16          ; Logical AND
199C:	87-48       	sbci r24, 0x87        ; Subtract Immediate with Carry SBI
199E:	FF-24       	clr r255              ; Clear Register
19A0:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
19A2:	1C-54       	subi r17, 0x4c        ; Subtract Immediate
19A4:	C2-18       	sub r12, r2           ; Subtract Without Carry
19A6:	51-70       	andi r21, 0x01        ; Logical AND with Immediate
19A8:	91-70       	andi r25, 0x01        ; Logical AND with Immediate
19AA:	03-33       	cpi r16, 0x33         ; Compare with Immediate
19AC:	3C-2B       	or r19, r28           ; Logical OR
19AE:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
19B0:	83-4B       	sbci r24, 0xb3        ; Subtract Immediate with Carry SBI
19B2:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
19B4:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
19B6:	74-F8       	bld r7, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
19B8:	B8-B9       	out 0x08, r27         ; Store Register to I/O Location
19BA:	82-4A       	sbci r24, 0xa2        ; Subtract Immediate with Carry SBI
19BC:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
19BE:	01-33       	cpi r16, 0x31         ; Compare with Immediate
19C0:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
19C2:	05-2B       	or r16, r21           ; Logical OR
19C4:	07-DD       	rcall .+6670          ; Relative Call to Subroutine
19C6:	80-4B       	sbci r24, 0xb0        ; Subtract Immediate with Carry SBI
19C8:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
19CA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
19CC:	C5-FB       	bst r28, 5            ; Bit Store from Bit in Register to T Flag in SREG
19CE:	00-22       	and r0, r16           ; Logical AND
19D0:	7E-4B       	sbci r23, 0xbe        ; Subtract Immediate with Carry SBI
19D2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
19D4:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
19D6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
19D8:	FA-70       	andi r31, 0x0a        ; Logical AND with Immediate
19DA:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
19DC:	53-F9       	bld r21, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
19DE:	79-4B       	sbci r23, 0xb9        ; Subtract Immediate with Carry SBI
19E0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
19E2:	00-2B       	or r16, r16           ; Logical OR
19E4:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
19E6:	98-80       	ld r9, Y              ; Load Indirect from Data Space to Register
19E8:	E5-E0       	ldi r30, 0x05         ; Load Immediate
19EA:	76-4B       	sbci r23, 0xb6        ; Subtract Immediate with Carry SBI
19EC:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
19EE:	01-2B       	or r16, r17           ; Logical OR
19F0:	70-D1       	rcall .+736           ; Relative Call to Subroutine
19F2:	72-4C       	sbci r23, 0xc2        ; Subtract Immediate with Carry SBI
19F4:	FF-23       	and r31, r31          ; Logical AND
19F6:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
19F8:	5A-30       	cpi r21, 0x0a         ; Compare with Immediate
19FA:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
19FC:	5B-30       	cpi r21, 0x0b         ; Compare with Immediate
19FE:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1A00:	5C-30       	cpi r21, 0x0c         ; Compare with Immediate
1A02:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1A04:	F0-30       	cpi r31, 0x00         ; Compare with Immediate
1A06:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1A08:	F1-30       	cpi r31, 0x01         ; Compare with Immediate
1A0A:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1A0C:	F2-30       	cpi r31, 0x02         ; Compare with Immediate
1A0E:	70-4B       	sbci r23, 0xb0        ; Subtract Immediate with Carry SBI
1A10:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
1A12:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1A14:	6F-49       	sbci r22, 0x9f        ; Subtract Immediate with Carry SBI
1A16:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1A18:	41-FD       	sbrc r20, 1           ; Skip if Bit in Register is Cleared
1A1A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1A1C:	05-FF       	sbrs r16, 5           ; Skip if Bit in Register is Set
1A1E:	1E-30       	cpi r17, 0x0e         ; Compare with Immediate
1A20:	00-EB       	ldi r16, 0xb0         ; Load Immediate
1A22:	40-01       	movw r8, r0           ; Copy Register Word
1A24:	63-18       	sub r6, r3            ; Subtract Without Carry
1A26:	00-22       	and r0, r16           ; Logical AND
1A28:	62-54       	subi r22, 0x42        ; Subtract Immediate
1A2A:	80-21       	and r24, r0           ; Logical AND
1A2C:	59-70       	andi r21, 0x09        ; Logical AND with Immediate
1A2E:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
1A30:	69-4B       	sbci r22, 0xb9        ; Subtract Immediate with Carry SBI
1A32:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
1A34:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
1A36:	28-33       	cpi r18, 0x38         ; Compare with Immediate
1A38:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
1A3A:	05-DD       	rcall .+6666          ; Relative Call to Subroutine
1A3C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1A3E:	67-49       	sbci r22, 0x97        ; Subtract Immediate with Carry SBI
1A40:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1A42:	24-FC       	sbrc r2, 4            ; Skip if Bit in Register is Cleared
1A44:	62-4B       	sbci r22, 0xb2        ; Subtract Immediate with Carry SBI
1A46:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1A48:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
1A4A:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
1A4C:	05-DA       	rcall .+5130          ; Relative Call to Subroutine
1A4E:	60-4D       	sbci r22, 0xd0        ; Subtract Immediate with Carry SBI
1A50:	28-68       	ori r18, 0x88         ; Logical OR with Immediate
1A52:	62-49       	sbci r22, 0x92        ; Subtract Immediate with Carry SBI
1A54:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1A56:	18-FC       	.data 0xfc18          ; Binary data
1A58:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
1A5A:	62-4D       	sbci r22, 0xd2        ; Subtract Immediate with Carry SBI
1A5C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1A5E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
1A60:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1A62:	CC-FE       	.data 0xfecc          ; Binary data
1A64:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1A66:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1A68:	7D-FE       	.data 0xfe7d          ; Binary data
1A6A:	00-22       	and r0, r16           ; Logical AND
1A6C:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
1A6E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1A70:	57-4B       	sbci r21, 0xb7        ; Subtract Immediate with Carry SBI
1A72:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
1A74:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1A76:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1A78:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
1A7A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1A7C:	CB-FE       	.data 0xfecb          ; Binary data
1A7E:	20-B1       	in r18, 0x00          ; Load an I/O Location to Register
1A80:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1A82:	7E-52       	subi r23, 0x2e        ; Subtract Immediate
1A84:	52-4B       	sbci r21, 0xb2        ; Subtract Immediate with Carry SBI
1A86:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1A88:	07-E0       	ldi r16, 0x07         ; Load Immediate
1A8A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1A8C:	00-21       	and r16, r0           ; Logical AND
1A8E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1A90:	A3-FE       	sbrs r10, 3           ; Skip if Bit in Register is Set
1A92:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
1A94:	00-22       	and r0, r16           ; Logical AND
1A96:	4E-4B       	sbci r20, 0xbe        ; Subtract Immediate with Carry SBI
1A98:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1A9A:	4D-4C       	sbci r20, 0xcd        ; Subtract Immediate with Carry SBI
1A9C:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
1A9E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1AA0:	16-71       	andi r17, 0x16        ; Logical AND with Immediate
1AA2:	02-22       	and r0, r18           ; Logical AND
1AA4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1AA6:	FA-FB       	.data 0xfbfa          ; Binary data
1AA8:	1E-20       	and r1, r14           ; Logical AND
1AAA:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1AAC:	EB-F8       	.data 0xf8eb          ; Binary data
1AAE:	00-20       	and r0, r0            ; Logical AND
1AB0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1AB2:	16-71       	andi r17, 0x16        ; Logical AND with Immediate
1AB4:	02-22       	and r0, r18           ; Logical AND
1AB6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1AB8:	F1-FB       	bst r31, 1            ; Bit Store from Bit in Register to T Flag in SREG
1ABA:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
1ABC:	4A-49       	sbci r20, 0x9a        ; Subtract Immediate with Carry SBI
1ABE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1AC0:	ED-FC       	.data 0xfced          ; Binary data
1AC2:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1AC4:	D7-FE       	sbrs r13, 7           ; Skip if Bit in Register is Set
1AC6:	C1-B2       	in r12, 0x11          ; Load an I/O Location to Register
1AC8:	02-20       	and r0, r2            ; Logical AND
1ACA:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1ACC:	E7-FE       	sbrs r14, 7           ; Skip if Bit in Register is Set
1ACE:	C8-20       	and r12, r8           ; Logical AND
1AD0:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1AD2:	D8-F8       	.data 0xf8d8          ; Binary data
1AD4:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
1AD6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1AD8:	02-2B       	or r16, r18           ; Logical OR
1ADA:	80-D1       	rcall .+768           ; Relative Call to Subroutine
1ADC:	43-4B       	sbci r20, 0xb3        ; Subtract Immediate with Carry SBI
1ADE:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
1AE0:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1AE2:	00-21       	and r16, r0           ; Logical AND
1AE4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1AE6:	96-FE       	sbrs r9, 6            ; Skip if Bit in Register is Set
1AE8:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
1AEA:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
1AEC:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1AEE:	00-E0       	ldi r16, 0x00         ; Load Immediate
1AF0:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1AF2:	3F-49       	sbci r19, 0x9f        ; Subtract Immediate with Carry SBI
1AF4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1AF6:	8E-FE       	.data 0xfe8e          ; Binary data
1AF8:	B0-B9       	out 0x00, r27         ; Store Register to I/O Location
1AFA:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
1AFC:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
1AFE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1B00:	00-21       	and r16, r0           ; Logical AND
1B02:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B04:	87-FE       	sbrs r8, 7            ; Skip if Bit in Register is Set
1B06:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
1B08:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1B0A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1B0C:	00-E0       	ldi r16, 0x00         ; Load Immediate
1B0E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1B10:	37-49       	sbci r19, 0x97        ; Subtract Immediate with Carry SBI
1B12:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B14:	7F-FE       	.data 0xfe7f          ; Binary data
1B16:	38-B9       	out 0x08, r19         ; Store Register to I/O Location
1B18:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
1B1A:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
1B1C:	00-23       	and r16, r16          ; Logical AND
1B1E:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
1B20:	26-4C       	sbci r18, 0xc6        ; Subtract Immediate with Carry SBI
1B22:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
1B24:	80-25       	clr r384              ; Clear Register
1B26:	3E-E0       	ldi r19, 0x0e         ; Load Immediate
1B28:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
1B2A:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
1B2C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B2E:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
1B30:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1B32:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1B34:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1B36:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B38:	1D-F8       	.data 0xf81d          ; Binary data
1B3A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1B3C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1B3E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1B40:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1B42:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
1B44:	EB-F8       	.data 0xf8eb          ; Binary data
1B46:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B48:	4B-FB       	.data 0xfb4b          ; Binary data
1B4A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1B4C:	28-49       	sbci r18, 0x98        ; Subtract Immediate with Carry SBI
1B4E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B50:	A5-FC       	sbrc r10, 5           ; Skip if Bit in Register is Cleared
1B52:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B54:	69-FE       	.data 0xfe69          ; Binary data
1B56:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
1B58:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
1B5A:	3C-05       	cpc r19, r12          ; Compare with Carry
1B5C:	05-EB       	ldi r16, 0xb5         ; Load Immediate
1B5E:	45-05       	cpc r20, r5           ; Compare with Carry
1B60:	51-19       	sub r21, r1           ; Subtract Without Carry
1B62:	00-23       	and r16, r16          ; Logical AND
1B64:	53-55       	subi r21, 0x53        ; Subtract Immediate
1B66:	4B-70       	andi r20, 0x0b        ; Logical AND with Immediate
1B68:	FF-25       	clr r511              ; Clear Register
1B6A:	8D-70       	andi r24, 0x0d        ; Logical AND with Immediate
1B6C:	3D-30       	cpi r19, 0x0d         ; Compare with Immediate
1B6E:	00-EB       	ldi r16, 0xb0         ; Load Immediate
1B70:	40-00       	.data 0x0040          ; Binary data
1B72:	11-18       	sub r1, r1            ; Subtract Without Carry
1B74:	13-54       	subi r17, 0x43        ; Subtract Immediate
1B76:	4B-70       	andi r20, 0x0b        ; Logical AND with Immediate
1B78:	8D-70       	andi r24, 0x0d        ; Logical AND with Immediate
1B7A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1B7C:	1E-49       	sbci r17, 0x9e        ; Subtract Immediate with Carry SBI
1B7E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B80:	85-FB       	bst r24, 5            ; Bit Store from Bit in Register to T Flag in SREG
1B82:	1E-49       	sbci r17, 0x9e        ; Subtract Immediate with Carry SBI
1B84:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B86:	3E-FD       	.data 0xfd3e          ; Binary data
1B88:	17-49       	sbci r17, 0x97        ; Subtract Immediate with Carry SBI
1B8A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B8C:	87-FC       	sbrc r8, 7            ; Skip if Bit in Register is Cleared
1B8E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1B90:	71-FE       	sbrs r7, 1            ; Skip if Bit in Register is Set
1B92:	C1-B2       	in r12, 0x11          ; Load an I/O Location to Register
1B94:	03-20       	and r0, r3            ; Logical AND
1B96:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1B98:	81-FE       	sbrs r8, 1            ; Skip if Bit in Register is Set
1B9A:	19-4B       	sbci r17, 0xb9        ; Subtract Immediate with Carry SBI
1B9C:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
1B9E:	32-20       	and r3, r2            ; Logical AND
1BA0:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
1BA2:	70-F8       	bld r7, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
1BA4:	1B-E7       	ldi r17, 0x7b         ; Load Immediate
1BA6:	18-55       	subi r17, 0x58        ; Subtract Immediate
1BA8:	E1-18       	sub r14, r1           ; Subtract Without Carry
1BAA:	4D-70       	andi r20, 0x0d        ; Logical AND with Immediate
1BAC:	88-70       	andi r24, 0x08        ; Logical AND with Immediate
1BAE:	01-32       	cpi r16, 0x21         ; Compare with Immediate
1BB0:	03-33       	cpi r16, 0x33         ; Compare with Immediate
1BB2:	96-42       	sbci r25, 0x26        ; Subtract Immediate with Carry SBI
1BB4:	F7-DC       	rcall .+6638          ; Relative Call to Subroutine
1BB6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1BB8:	C9-FE       	.data 0xfec9          ; Binary data
1BBA:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
1BBC:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
1BBE:	FF-1F       	adc r31, r31          ; Add with Carry
1BC0:	7C-92       	st X, r7              ; Store Indirect From Register to Data Space
1BC2:	FF-1F       	adc r31, r31          ; Add with Carry
1BC4:	CC-FA       	.data 0xfacc          ; Binary data
1BC6:	FF-1F       	adc r31, r31          ; Add with Carry
1BC8:	78-FB       	.data 0xfb78          ; Binary data
1BCA:	FF-1F       	adc r31, r31          ; Add with Carry
1BCC:	74-9D       	mul r23, r4           ; Multiply Unsigned
1BCE:	FF-1F       	adc r31, r31          ; Add with Carry
1BD0:	E4-92       	xch Z, r14            ; Exchange
1BD2:	FF-1F       	adc r31, r31          ; Add with Carry
1BD4:	00-00       	nop                   ; No Operation
1BD6:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
1BD8:	98-9D       	mul r25, r8           ; Multiply Unsigned
1BDA:	FF-1F       	adc r31, r31          ; Add with Carry
1BDC:	0A-D7       	rcall .+3604          ; Relative Call to Subroutine
1BDE:	A3-3C       	cpi r26, 0xc3         ; Compare with Immediate
1BE0:	D8-DC       	rcall .+6576          ; Relative Call to Subroutine
1BE2:	FF-FF       	.data 0xffff          ; Binary data
1BE4:	C0-01       	movw r24, r0          ; Copy Register Word
1BE6:	00-20       	and r0, r0            ; Logical AND
1BE8:	00-00       	nop                   ; No Operation
1BEA:	7F-43       	sbci r23, 0x3f        ; Subtract Immediate with Carry SBI
1BEC:	1C-DF       	rcall .+7736          ; Relative Call to Subroutine
1BEE:	FF-1F       	adc r31, r31          ; Add with Carry
1BF0:	00-00       	nop                   ; No Operation
1BF2:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
1BF4:	20-DF       	rcall .+7744          ; Relative Call to Subroutine
1BF6:	FF-1F       	adc r31, r31          ; Add with Carry
1BF8:	DB-0F       	add r29, r27          ; Add without Carry
1BFA:	49-40       	sbci r20, 0x09        ; Subtract Immediate with Carry SBI
1BFC:	DB-0F       	add r29, r27          ; Add without Carry
1BFE:	C9-40       	sbci r28, 0x09        ; Subtract Immediate with Carry SBI
1C00:	34-9D       	mul r19, r4           ; Multiply Unsigned
1C02:	FF-1F       	adc r31, r31          ; Add with Carry
1C04:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1C06:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1C08:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
1C0A:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1C0C:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C0E:	46-FE       	sbrs r4, 6            ; Skip if Bit in Register is Set
1C10:	68-1C       	adc r6, r8            ; Add with Carry
1C12:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
1C14:	07-21       	and r16, r7           ; Logical AND
1C16:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C18:	41-FE       	sbrs r4, 1            ; Skip if Bit in Register is Set
1C1A:	A8-1C       	adc r10, r8           ; Add with Carry
1C1C:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
1C1E:	07-41       	sbci r16, 0x17        ; Subtract Immediate with Carry SBI
1C20:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C22:	3C-FE       	.data 0xfe3c          ; Binary data
1C24:	E8-1C       	adc r14, r8           ; Add with Carry
1C26:	21-0E       	add r2, r17           ; Add without Carry
1C28:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C2A:	38-FE       	.data 0xfe38          ; Binary data
1C2C:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1C2E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1C30:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
1C32:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1C34:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C36:	1C-FE       	.data 0xfe1c          ; Binary data
1C38:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
1C3A:	60-1C       	adc r6, r0            ; Add with Carry
1C3C:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C3E:	18-FE       	.data 0xfe18          ; Binary data
1C40:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1C42:	A0-1C       	adc r10, r0           ; Add with Carry
1C44:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C46:	14-FE       	sbrs r1, 4            ; Skip if Bit in Register is Set
1C48:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1C4A:	E0-1C       	adc r14, r0           ; Add with Carry
1C4C:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C4E:	10-FE       	sbrs r1, 0            ; Skip if Bit in Register is Set
1C50:	3F-02       	muls r19, r31         ; Multiply Signed
1C52:	BF-B2       	in r11, 0x1f          ; Load an I/O Location to Register
1C54:	3E-44       	sbci r19, 0x4e        ; Subtract Immediate with Carry SBI
1C56:	2D-04       	cpc r2, r13           ; Compare with Carry
1C58:	25-F0       	brbs 5, .+8           ; Branch if Bit in SREG is Set
1C5A:	7F-45       	sbci r23, 0x5f        ; Subtract Immediate with Carry SBI
1C5C:	2E-44       	sbci r18, 0x4e        ; Subtract Immediate with Carry SBI
1C5E:	06-EB       	ldi r16, 0xb6         ; Load Immediate
1C60:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
1C62:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
1C64:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1C66:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1C68:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C6A:	02-FE       	sbrs r0, 2            ; Skip if Bit in Register is Set
1C6C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1C6E:	68-1C       	adc r6, r8            ; Add with Carry
1C70:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1C72:	FE-FD       	.data 0xfdfe          ; Binary data
1C74:	04-EB       	ldi r16, 0xb4         ; Load Immediate
1C76:	00-20       	and r0, r0            ; Logical AND
1C78:	00-B2       	in r0, 0x10           ; Load an I/O Location to Register
1C7A:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1C7C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1C7E:	64-28       	or r6, r4             ; Logical OR
1C80:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
1C82:	64-20       	and r6, r4            ; Logical AND
1C84:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1C86:	B6-FB       	bst r27, 6            ; Bit Store from Bit in Register to T Flag in SREG
1C88:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1C8A:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
1C8C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1C8E:	06-FC       	sbrc r0, 6            ; Skip if Bit in Register is Cleared
1C90:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
1C92:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1C94:	FB-FA       	.data 0xfafb          ; Binary data
1C96:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1C98:	C7-FD       	sbrc r28, 7           ; Skip if Bit in Register is Cleared
1C9A:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
1C9C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1C9E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1CA0:	58-92       	.data 0x9258          ; Binary data
1CA2:	FF-1F       	adc r31, r31          ; Add with Carry
1CA4:	D4-FA       	bst r13, 4            ; Bit Store from Bit in Register to T Flag in SREG
1CA6:	FF-1F       	adc r31, r31          ; Add with Carry
1CA8:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
1CAA:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
1CAC:	88-B0       	in r8, 0x08           ; Load an I/O Location to Register
1CAE:	90-4B       	sbci r25, 0xb0        ; Subtract Immediate with Carry SBI
1CB0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1CB2:	2C-21       	and r18, r12          ; Logical AND
1CB4:	8F-4A       	sbci r24, 0xaf        ; Subtract Immediate with Carry SBI
1CB6:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
1CB8:	03-22       	and r0, r19           ; Logical AND
1CBA:	D2-88       	std Y+18, r13         ; Store Indirect From Register to Data Space
1CBC:	01-32       	cpi r16, 0x21         ; Compare with Immediate
1CBE:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
1CC0:	01-2A       	or r0, r17            ; Logical OR
1CC2:	1F-D8       	rcall .+4158          ; Relative Call to Subroutine
1CC4:	8C-4A       	sbci r24, 0xac        ; Subtract Immediate with Carry SBI
1CC6:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
1CC8:	09-2A       	or r0, r25            ; Logical OR
1CCA:	1B-DC       	rcall .+6198          ; Relative Call to Subroutine
1CCC:	8B-49       	sbci r24, 0x9b        ; Subtract Immediate with Carry SBI
1CCE:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
1CD0:	C1-B9       	out 0x01, r28         ; Store Register to I/O Location
1CD2:	8B-4D       	sbci r24, 0xdb        ; Subtract Immediate with Carry SBI
1CD4:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
1CD6:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1CD8:	2B-60       	ori r18, 0x0b         ; Logical OR with Immediate
1CDA:	01-32       	cpi r16, 0x21         ; Compare with Immediate
1CDC:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
1CDE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1CE0:	01-22       	and r0, r17           ; Logical AND
1CE2:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
1CE4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1CE6:	87-4C       	sbci r24, 0xc7        ; Subtract Immediate with Carry SBI
1CE8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1CEA:	87-49       	sbci r24, 0x97        ; Subtract Immediate with Carry SBI
1CEC:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
1CEE:	2A-FE       	.data 0xfe2a          ; Binary data
1CF0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1CF2:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
1CF4:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1CF6:	82-FD       	sbrc r24, 2           ; Skip if Bit in Register is Cleared
1CF8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1CFA:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1CFC:	33-FD       	sbrc r19, 3           ; Skip if Bit in Register is Cleared
1CFE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1D00:	25-FB       	bst r18, 5            ; Bit Store from Bit in Register to T Flag in SREG
1D02:	F2-E0       	ldi r31, 0x02         ; Load Immediate
1D04:	7B-4A       	sbci r23, 0xab        ; Subtract Immediate with Carry SBI
1D06:	2C-21       	and r18, r12          ; Logical AND
1D08:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
1D0A:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
1D0C:	D5-18       	sub r13, r5           ; Subtract Without Carry
1D0E:	D0-5E       	subi r29, 0xe0        ; Subtract Immediate
1D10:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D12:	70-FB       	bst r23, 0            ; Bit Store from Bit in Register to T Flag in SREG
1D14:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
1D16:	7D-4B       	sbci r23, 0xbd        ; Subtract Immediate with Carry SBI
1D18:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1D1A:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
1D1C:	04-00       	.data 0x0004          ; Binary data
1D1E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D20:	69-FB       	.data 0xfb69          ; Binary data
1D22:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1D24:	7A-4B       	sbci r23, 0xba        ; Subtract Immediate with Carry SBI
1D26:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1D28:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
1D2A:	0C-00       	.data 0x000c          ; Binary data
1D2C:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
1D2E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D30:	61-FB       	bst r22, 1            ; Bit Store from Bit in Register to T Flag in SREG
1D32:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1D34:	77-4B       	sbci r23, 0xb7        ; Subtract Immediate with Carry SBI
1D36:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1D38:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
1D3A:	08-00       	.data 0x0008          ; Binary data
1D3C:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
1D3E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D40:	59-FB       	.data 0xfb59          ; Binary data
1D42:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1D44:	74-4B       	sbci r23, 0xb4        ; Subtract Immediate with Carry SBI
1D46:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1D48:	74-4E       	sbci r23, 0xe4        ; Subtract Immediate with Carry SBI
1D4A:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
1D4C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
1D4E:	32-68       	ori r19, 0x82         ; Logical OR with Immediate
1D50:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1D52:	A2-F8       	bld r10, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
1D54:	30-60       	ori r19, 0x00         ; Logical OR with Immediate
1D56:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
1D58:	00-48       	sbci r16, 0x80        ; Subtract Immediate with Carry SBI
1D5A:	71-4E       	sbci r23, 0xe1        ; Subtract Immediate with Carry SBI
1D5C:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
1D5E:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
1D60:	32-68       	ori r19, 0x82         ; Logical OR with Immediate
1D62:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1D64:	99-F8       	.data 0xf899          ; Binary data
1D66:	30-60       	ori r19, 0x00         ; Logical OR with Immediate
1D68:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1D6A:	00-21       	and r16, r0           ; Logical AND
1D6C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D6E:	52-FD       	sbrc r21, 2           ; Skip if Bit in Register is Cleared
1D70:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
1D72:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1D74:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
1D76:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1D78:	00-21       	and r16, r0           ; Logical AND
1D7A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D7C:	4B-FD       	.data 0xfd4b          ; Binary data
1D7E:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
1D80:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1D82:	00-E0       	ldi r16, 0x00         ; Load Immediate
1D84:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
1D86:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1D88:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D8A:	80-FA       	bst r8, 0             ; Bit Store from Bit in Register to T Flag in SREG
1D8C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1D8E:	65-49       	sbci r22, 0x95        ; Subtract Immediate with Carry SBI
1D90:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1D92:	40-FD       	sbrc r20, 0           ; Skip if Bit in Register is Cleared
1D94:	00-28       	or r0, r0             ; Logical OR
1D96:	2F-D0       	rcall .+94            ; Relative Call to Subroutine
1D98:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
1D9A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1D9C:	03-93       	.data 0x9303          ; Binary data
1D9E:	03-98       	cbi 0x00, 3           ; Clear Bit in I/O Register
1DA0:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1DA2:	24-FB       	bst r18, 4            ; Bit Store from Bit in Register to T Flag in SREG
1DA4:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
1DA6:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
1DA8:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1DAA:	6E-FA       	.data 0xfa6e          ; Binary data
1DAC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
1DAE:	60-4B       	sbci r22, 0xb0        ; Subtract Immediate with Carry SBI
1DB0:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1DB2:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
1DB4:	5F-48       	sbci r21, 0x8f        ; Subtract Immediate with Carry SBI
1DB6:	00-E0       	ldi r16, 0x00         ; Load Immediate
1DB8:	5F-48       	sbci r21, 0x8f        ; Subtract Immediate with Carry SBI
1DBA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1DBC:	0D-FD       	.data 0xfd0d          ; Binary data
1DBE:	D8-B1       	in r29, 0x08          ; Load an I/O Location to Register
1DC0:	01-21       	and r16, r1           ; Logical AND
1DC2:	5E-4B       	sbci r21, 0xbe        ; Subtract Immediate with Carry SBI
1DC4:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
1DC6:	0D-20       	and r0, r13           ; Logical AND
1DC8:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1DCA:	46-FE       	sbrs r4, 6            ; Skip if Bit in Register is Set
1DCC:	56-4B       	sbci r21, 0xb6        ; Subtract Immediate with Carry SBI
1DCE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1DD0:	04-93       	xch Z, r16            ; Exchange
1DD2:	04-9A       	sbi 0x00, 4           ; Set Bit in I/O Register
1DD4:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
1DD6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1DD8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1DDA:	5A-49       	sbci r21, 0x9a        ; Subtract Immediate with Carry SBI
1DDC:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1DDE:	1A-FD       	.data 0xfd1a          ; Binary data
1DE0:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
1DE2:	58-4C       	sbci r21, 0xc8        ; Subtract Immediate with Carry SBI
1DE4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1DE6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1DE8:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
1DEA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1DEC:	57-FB       	bst r21, 7            ; Bit Store from Bit in Register to T Flag in SREG
1DEE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1DF0:	1B-FD       	.data 0xfd1b          ; Binary data
1DF2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1DF4:	43-FF       	sbrs r20, 3           ; Skip if Bit in Register is Set
1DF6:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
1DF8:	4B-4B       	sbci r20, 0xbb        ; Subtract Immediate with Carry SBI
1DFA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1DFC:	05-93       	las Z, r16            ; Load and Set
1DFE:	05-9A       	sbi 0x00, 5           ; Set Bit in I/O Register
1E00:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
1E02:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1E04:	D3-1A       	sub r13, r19          ; Subtract Without Carry
1E06:	C8-2B       	or r28, r24           ; Logical OR
1E08:	04-D9       	rcall .+4616          ; Relative Call to Subroutine
1E0A:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
1E0C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1E0E:	00-2B       	or r16, r16           ; Logical OR
1E10:	59-D1       	rcall .+690           ; Relative Call to Subroutine
1E12:	2B-E0       	ldi r18, 0x0b         ; Load Immediate
1E14:	49-4B       	sbci r20, 0xb9        ; Subtract Immediate with Carry SBI
1E16:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1E18:	43-B3       	in r20, 0x13          ; Load an I/O Location to Register
1E1A:	3C-4B       	sbci r19, 0xbc        ; Subtract Immediate with Carry SBI
1E1C:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
1E1E:	3C-4B       	sbci r19, 0xbc        ; Subtract Immediate with Carry SBI
1E20:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
1E22:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E24:	33-FA       	bst r3, 3             ; Bit Store from Bit in Register to T Flag in SREG
1E26:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1E28:	47-4B       	sbci r20, 0xb7        ; Subtract Immediate with Carry SBI
1E2A:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1E2C:	47-49       	sbci r20, 0x97        ; Subtract Immediate with Carry SBI
1E2E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E30:	F1-FC       	sbrc r15, 1           ; Skip if Bit in Register is Cleared
1E32:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
1E34:	45-4A       	sbci r20, 0xa5        ; Subtract Immediate with Carry SBI
1E36:	44-4B       	sbci r20, 0xb4        ; Subtract Immediate with Carry SBI
1E38:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1E3A:	07-E0       	ldi r16, 0x07         ; Load Immediate
1E3C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1E3E:	44-49       	sbci r20, 0x94        ; Subtract Immediate with Carry SBI
1E40:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E42:	CA-FC       	.data 0xfcca          ; Binary data
1E44:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
1E46:	42-4A       	sbci r20, 0xa2        ; Subtract Immediate with Carry SBI
1E48:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
1E4A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1E4C:	3E-4C       	sbci r19, 0xce        ; Subtract Immediate with Carry SBI
1E4E:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
1E50:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E52:	EA-FC       	.data 0xfcea          ; Binary data
1E54:	0F-23       	and r16, r31          ; Logical AND
1E56:	00-93-3E-49 	sts 0x493e, r16       ; Store Direct to Data Space
1E5A:	41-F2       	brbs 1, .-112         ; Branch if Bit in SREG is Set
1E5C:	88-32       	cpi r24, 0x28         ; Compare with Immediate
1E5E:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
1E60:	0E-03       	fmul r16, r22         ; Fractional Multiply Unsigned
1E62:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1E64:	41-FE       	sbrs r4, 1            ; Skip if Bit in Register is Set
1E66:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E68:	C5-FA       	bst r12, 5            ; Bit Store from Bit in Register to T Flag in SREG
1E6A:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
1E6C:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
1E6E:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
1E70:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
1E72:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
1E74:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
1E76:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E78:	07-FA       	bst r0, 7             ; Bit Store from Bit in Register to T Flag in SREG
1E7A:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1E7C:	00-21       	and r16, r0           ; Logical AND
1E7E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E80:	C9-FC       	.data 0xfcc9          ; Binary data
1E82:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
1E84:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
1E86:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1E88:	00-E0       	ldi r16, 0x00         ; Load Immediate
1E8A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1E8C:	33-49       	sbci r19, 0x93        ; Subtract Immediate with Carry SBI
1E8E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1E90:	C1-FC       	sbrc r12, 1           ; Skip if Bit in Register is Cleared
1E92:	38-B1       	in r19, 0x08          ; Load an I/O Location to Register
1E94:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
1E96:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1E98:	07-93       	lat Z, r16            ; Load and Toggle
1E9A:	07-9A       	sbi 0x00, 7           ; Set Bit in I/O Register
1E9C:	30-4B       	sbci r19, 0xb0        ; Subtract Immediate with Carry SBI
1E9E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1EA0:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
1EA2:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
1EA4:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
1EA6:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
1EA8:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
1EAA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1EAC:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
1EAE:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
1EB0:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
1EB2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1EB4:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
1EB6:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
1EB8:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
1EBA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1EBC:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
1EBE:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
1EC0:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
1EC2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1EC4:	11-E0       	ldi r17, 0x01         ; Load Immediate
1EC6:	00-21       	and r16, r0           ; Logical AND
1EC8:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
1ECA:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
1ECC:	00-22       	and r0, r16           ; Logical AND
1ECE:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
1ED0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1ED2:	0D-20       	and r0, r13           ; Logical AND
1ED4:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
1ED6:	C0-FD       	sbrc r28, 0           ; Skip if Bit in Register is Cleared
1ED8:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
1EDA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1EDC:	06-93       	lac Z, r16            ; Load and Clear
1EDE:	06-98       	cbi 0x00, 6           ; Clear Bit in I/O Register
1EE0:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1EE2:	84-FA       	bst r8, 4             ; Bit Store from Bit in Register to T Flag in SREG
1EE4:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
1EE6:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1EE8:	94-E7       	ldi r25, 0x74         ; Load Immediate
1EEA:	08-B0       	in r0, 0x08           ; Load an I/O Location to Register
1EEC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1EEE:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1EF0:	78-FB       	.data 0xfb78          ; Binary data
1EF2:	FF-1F       	adc r31, r31          ; Add with Carry
1EF4:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
1EF6:	FF-1F       	adc r31, r31          ; Add with Carry
1EF8:	8C-9D       	mul r24, r12          ; Multiply Unsigned
1EFA:	FF-1F       	adc r31, r31          ; Add with Carry
1EFC:	EC-FB       	.data 0xfbec          ; Binary data
1EFE:	FF-1F       	adc r31, r31          ; Add with Carry
1F00:	8C-FB       	.data 0xfb8c          ; Binary data
1F02:	FF-1F       	adc r31, r31          ; Add with Carry
1F04:	C0-01       	movw r24, r0          ; Copy Register Word
1F06:	00-20       	and r0, r0            ; Logical AND
1F08:	10-7B       	andi r17, 0xb0        ; Logical AND with Immediate
1F0A:	01-00       	.data 0x0001          ; Binary data
1F0C:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1F0E:	FF-1F       	adc r31, r31          ; Add with Carry
1F10:	14-DF       	rcall .+7720          ; Relative Call to Subroutine
1F12:	FF-1F       	adc r31, r31          ; Add with Carry
1F14:	9C-F8       	.data 0xf89c          ; Binary data
1F16:	FF-1F       	adc r31, r31          ; Add with Carry
1F18:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
1F1A:	FF-1F       	adc r31, r31          ; Add with Carry
1F1C:	88-9D       	mul r24, r8           ; Multiply Unsigned
1F1E:	FF-1F       	adc r31, r31          ; Add with Carry
1F20:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
1F22:	FF-1F       	adc r31, r31          ; Add with Carry
1F24:	00-00       	nop                   ; No Operation
1F26:	AF-44       	sbci r26, 0x4f        ; Subtract Immediate with Carry SBI
1F28:	0C-00       	.data 0x000c          ; Binary data
1F2A:	00-20       	and r0, r0            ; Logical AND
1F2C:	98-F9       	.data 0xf998          ; Binary data
1F2E:	FF-1F       	adc r31, r31          ; Add with Carry
1F30:	2C-DF       	rcall .+7768          ; Relative Call to Subroutine
1F32:	FF-1F       	adc r31, r31          ; Add with Carry
1F34:	00-00       	nop                   ; No Operation
1F36:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
1F38:	00-00       	nop                   ; No Operation
1F3A:	96-43       	sbci r25, 0x36        ; Subtract Immediate with Carry SBI
1F3C:	2C-F9       	.data 0xf92c          ; Binary data
1F3E:	FF-1F       	adc r31, r31          ; Add with Carry
1F40:	0C-DF       	rcall .+7704          ; Relative Call to Subroutine
1F42:	FF-1F       	adc r31, r31          ; Add with Carry
1F44:	00-00       	nop                   ; No Operation
1F46:	7A-45       	sbci r23, 0x5a        ; Subtract Immediate with Carry SBI
1F48:	C8-F2       	brbs 0, .-78          ; Branch if Bit in SREG is Set
1F4A:	FF-1F       	adc r31, r31          ; Add with Carry
1F4C:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1F4E:	9C-45       	sbci r25, 0x5c        ; Subtract Immediate with Carry SBI
1F50:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1F52:	9C-C5       	rjmp .+2872           ; Relative Jump
1F54:	78-EC       	ldi r23, 0xc8         ; Load Immediate
1F56:	FF-FF       	.data 0xffff          ; Binary data
1F58:	9C-EF       	ldi r25, 0xfc         ; Load Immediate
1F5A:	FF-1F       	adc r31, r31          ; Add with Carry
1F5C:	00-00       	nop                   ; No Operation
1F5E:	A0-41       	sbci r26, 0x10        ; Subtract Immediate with Carry SBI
1F60:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
1F62:	FF-1F       	adc r31, r31          ; Add with Carry
1F64:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
1F66:	FF-1F       	adc r31, r31          ; Add with Carry
1F68:	E8-FB       	.data 0xfbe8          ; Binary data
1F6A:	FF-1F       	adc r31, r31          ; Add with Carry
1F6C:	44-F9       	bld r20, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1F6E:	FF-1F       	adc r31, r31          ; Add with Carry
1F70:	28-DF       	rcall .+7760          ; Relative Call to Subroutine
1F72:	FF-1F       	adc r31, r31          ; Add with Carry
1F74:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
1F76:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
1F78:	88-B0       	in r8, 0x08           ; Load an I/O Location to Register
1F7A:	90-48       	sbci r25, 0x80        ; Subtract Immediate with Carry SBI
1F7C:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
1F7E:	18-F8       	.data 0xf818          ; Binary data
1F80:	78-B1       	in r23, 0x08          ; Load an I/O Location to Register
1F82:	8F-4C       	sbci r24, 0xcf        ; Subtract Immediate with Carry SBI
1F84:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1F86:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1F88:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1F8A:	8E-49       	sbci r24, 0x9e        ; Subtract Immediate with Carry SBI
1F8C:	16-22       	and r1, r22           ; Logical AND
1F8E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1F90:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1F92:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1F94:	E7-FB       	bst r30, 7            ; Bit Store from Bit in Register to T Flag in SREG
1F96:	02-22       	and r0, r18           ; Logical AND
1F98:	8B-4B       	sbci r24, 0xbb        ; Subtract Immediate with Carry SBI
1F9A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1F9C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1F9E:	D6-F9       	bld r29, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
1FA0:	09-E1       	ldi r16, 0x19         ; Load Immediate
1FA2:	8A-4B       	sbci r24, 0xba        ; Subtract Immediate with Carry SBI
1FA4:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
1FA6:	2C-26       	clr r556              ; Clear Register
1FA8:	89-4B       	sbci r24, 0xb9        ; Subtract Immediate with Carry SBI
1FAA:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
1FAC:	07-36       	cpi r16, 0x67         ; Compare with Immediate
1FAE:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
1FB0:	02-00       	.data 0x0002          ; Binary data
1FB2:	40-00       	.data 0x0040          ; Binary data
1FB4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1FB6:	1E-FA       	.data 0xfa1e          ; Binary data
1FB8:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1FBA:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
1FBC:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1FBE:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
1FC0:	04-00       	.data 0x0004          ; Binary data
1FC2:	40-00       	.data 0x0040          ; Binary data
1FC4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1FC6:	16-FA       	bst r1, 6             ; Bit Store from Bit in Register to T Flag in SREG
1FC8:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1FCA:	83-4B       	sbci r24, 0xb3        ; Subtract Immediate with Carry SBI
1FCC:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1FCE:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
1FD0:	0C-00       	.data 0x000c          ; Binary data
1FD2:	00-28       	or r0, r0             ; Logical OR
1FD4:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
1FD6:	03-30       	cpi r16, 0x03         ; Compare with Immediate
1FD8:	80-10       	cpse r8, r0           ; Compare Skip if Equal
1FDA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1FDC:	0B-FA       	.data 0xfa0b          ; Binary data
1FDE:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
1FE0:	7E-4B       	sbci r23, 0xbe        ; Subtract Immediate with Carry SBI
1FE2:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1FE4:	2C-22       	and r2, r28           ; Logical AND
1FE6:	7A-4B       	sbci r23, 0xba        ; Subtract Immediate with Carry SBI
1FE8:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
1FEA:	07-37       	cpi r16, 0x77         ; Compare with Immediate
1FEC:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
1FEE:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
1FF0:	58-42       	sbci r21, 0x28        ; Subtract Immediate with Carry SBI
1FF2:	00-28       	or r0, r0             ; Logical OR
1FF4:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
1FF6:	03-30       	cpi r16, 0x03         ; Compare with Immediate
1FF8:	80-10       	cpse r8, r0           ; Compare Skip if Equal
1FFA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
1FFC:	FB-F9       	.data 0xf9fb          ; Binary data
1FFE:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
2000:	77-4B       	sbci r23, 0xb7        ; Subtract Immediate with Carry SBI
2002:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
2004:	77-4E       	sbci r23, 0xe7        ; Subtract Immediate with Carry SBI
2006:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2008:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
200A:	32-68       	ori r19, 0x82         ; Logical OR with Immediate
200C:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
200E:	44-FF       	sbrs r20, 4           ; Skip if Bit in Register is Set
2010:	30-60       	ori r19, 0x00         ; Logical OR with Immediate
2012:	75-4E       	sbci r23, 0xe5        ; Subtract Immediate with Carry SBI
2014:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2016:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
2018:	32-68       	ori r19, 0x82         ; Logical OR with Immediate
201A:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
201C:	3D-FF       	.data 0xff3d          ; Binary data
201E:	30-60       	ori r19, 0x00         ; Logical OR with Immediate
2020:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2022:	00-21       	and r16, r0           ; Logical AND
2024:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2026:	F6-FB       	bst r31, 6            ; Bit Store from Bit in Register to T Flag in SREG
2028:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
202A:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
202C:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
202E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2030:	00-21       	and r16, r0           ; Logical AND
2032:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2034:	EF-FB       	.data 0xfbef          ; Binary data
2036:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
2038:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
203A:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
203C:	00-E0       	ldi r16, 0x00         ; Load Immediate
203E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
2040:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2042:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2044:	23-F9       	bld r18, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
2046:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2048:	7D-51       	subi r23, 0x1d        ; Subtract Immediate
204A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
204C:	27-FA       	bst r2, 7             ; Bit Store from Bit in Register to T Flag in SREG
204E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
2050:	66-49       	sbci r22, 0x96        ; Subtract Immediate with Carry SBI
2052:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2054:	DF-FB       	.data 0xfbdf          ; Binary data
2056:	00-28       	or r0, r0             ; Logical OR
2058:	2F-D0       	rcall .+94            ; Relative Call to Subroutine
205A:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
205C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
205E:	03-93       	.data 0x9303          ; Binary data
2060:	03-98       	cbi 0x00, 3           ; Clear Bit in I/O Register
2062:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2064:	C3-F9       	bld r28, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
2066:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
2068:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
206A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
206C:	0D-F9       	.data 0xf90d          ; Binary data
206E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
2070:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
2072:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2074:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
2076:	61-48       	sbci r22, 0x81        ; Subtract Immediate with Carry SBI
2078:	00-E0       	ldi r16, 0x00         ; Load Immediate
207A:	61-48       	sbci r22, 0x81        ; Subtract Immediate with Carry SBI
207C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
207E:	AC-FB       	.data 0xfbac          ; Binary data
2080:	D8-B1       	in r29, 0x08          ; Load an I/O Location to Register
2082:	01-21       	and r16, r1           ; Logical AND
2084:	5F-4B       	sbci r21, 0xbf        ; Subtract Immediate with Carry SBI
2086:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
2088:	0D-20       	and r0, r13           ; Logical AND
208A:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
208C:	E5-FC       	sbrc r14, 5           ; Skip if Bit in Register is Cleared
208E:	58-4B       	sbci r21, 0xb8        ; Subtract Immediate with Carry SBI
2090:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2092:	04-93       	xch Z, r16            ; Exchange
2094:	04-9A       	sbi 0x00, 4           ; Set Bit in I/O Register
2096:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
2098:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
209A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
209C:	5B-49       	sbci r21, 0x9b        ; Subtract Immediate with Carry SBI
209E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
20A0:	B9-FB       	.data 0xfbb9          ; Binary data
20A2:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
20A4:	59-4C       	sbci r21, 0xc9        ; Subtract Immediate with Carry SBI
20A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
20A8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
20AA:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
20AC:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
20AE:	F6-F9       	bld r31, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
20B0:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
20B2:	BA-FB       	.data 0xfbba          ; Binary data
20B4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
20B6:	E2-FD       	sbrc r30, 2           ; Skip if Bit in Register is Cleared
20B8:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
20BA:	4D-4B       	sbci r20, 0xbd        ; Subtract Immediate with Carry SBI
20BC:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
20BE:	05-93       	las Z, r16            ; Load and Set
20C0:	05-9A       	sbi 0x00, 5           ; Set Bit in I/O Register
20C2:	51-4B       	sbci r21, 0xb1        ; Subtract Immediate with Carry SBI
20C4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
20C6:	D3-1A       	sub r13, r19          ; Subtract Without Carry
20C8:	C8-2B       	or r28, r24           ; Logical OR
20CA:	04-D9       	rcall .+4616          ; Relative Call to Subroutine
20CC:	4D-4B       	sbci r20, 0xbd        ; Subtract Immediate with Carry SBI
20CE:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
20D0:	00-2B       	or r16, r16           ; Logical OR
20D2:	5E-D1       	rcall .+700           ; Relative Call to Subroutine
20D4:	30-E0       	ldi r19, 0x00         ; Load Immediate
20D6:	4B-4B       	sbci r20, 0xbb        ; Subtract Immediate with Carry SBI
20D8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
20DA:	00-2B       	or r16, r16           ; Logical OR
20DC:	2C-D0       	rcall .+88            ; Relative Call to Subroutine
20DE:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
20E0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
20E2:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
20E4:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
20E6:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
20E8:	D1-F8       	bld r13, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
20EA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
20EC:	7A-51       	subi r23, 0x1a        ; Subtract Immediate
20EE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
20F0:	D5-F9       	bld r29, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
20F2:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
20F4:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
20F6:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
20F8:	46-49       	sbci r20, 0x96        ; Subtract Immediate with Carry SBI
20FA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
20FC:	8B-FB       	.data 0xfb8b          ; Binary data
20FE:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
2100:	44-4A       	sbci r20, 0xa4        ; Subtract Immediate with Carry SBI
2102:	43-4B       	sbci r20, 0xb3        ; Subtract Immediate with Carry SBI
2104:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2106:	07-E0       	ldi r16, 0x07         ; Load Immediate
2108:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
210A:	43-49       	sbci r20, 0x93        ; Subtract Immediate with Carry SBI
210C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
210E:	64-FB       	bst r22, 4            ; Bit Store from Bit in Register to T Flag in SREG
2110:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
2112:	41-4A       	sbci r20, 0xa1        ; Subtract Immediate with Carry SBI
2114:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
2116:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2118:	3D-4C       	sbci r19, 0xcd        ; Subtract Immediate with Carry SBI
211A:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
211C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
211E:	84-FB       	bst r24, 4            ; Bit Store from Bit in Register to T Flag in SREG
2120:	0F-23       	and r16, r31          ; Logical AND
2122:	00-93-3D-49 	sts 0x493d, r16       ; Store Direct to Data Space
2126:	41-F2       	brbs 1, .-112         ; Branch if Bit in SREG is Set
2128:	88-32       	cpi r24, 0x28         ; Compare with Immediate
212A:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
212C:	0E-03       	fmul r16, r22         ; Fractional Multiply Unsigned
212E:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
2130:	DB-FC       	.data 0xfcdb          ; Binary data
2132:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2134:	5F-F9       	.data 0xf95f          ; Binary data
2136:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
2138:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
213A:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
213C:	38-4B       	sbci r19, 0xb8        ; Subtract Immediate with Carry SBI
213E:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
2140:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
2142:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2144:	A1-F8       	bld r10, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
2146:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
2148:	00-21       	and r16, r0           ; Logical AND
214A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
214C:	63-FB       	bst r22, 3            ; Bit Store from Bit in Register to T Flag in SREG
214E:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
2150:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
2152:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
2154:	00-E0       	ldi r16, 0x00         ; Load Immediate
2156:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2158:	32-49       	sbci r19, 0x92        ; Subtract Immediate with Carry SBI
215A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
215C:	5B-FB       	.data 0xfb5b          ; Binary data
215E:	38-B1       	in r19, 0x08          ; Load an I/O Location to Register
2160:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
2162:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2164:	07-93       	lat Z, r16            ; Load and Toggle
2166:	07-9A       	sbi 0x00, 7           ; Set Bit in I/O Register
2168:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
216A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
216C:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
216E:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
2170:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
2172:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
2174:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
2176:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
2178:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
217A:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
217C:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
217E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2180:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
2182:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
2184:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
2186:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2188:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
218A:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
218C:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
218E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2190:	11-E0       	ldi r17, 0x01         ; Load Immediate
2192:	00-21       	and r16, r0           ; Logical AND
2194:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
2196:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
2198:	00-22       	and r0, r16           ; Logical AND
219A:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
219C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
219E:	0D-20       	and r0, r13           ; Logical AND
21A0:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
21A2:	5A-FC       	.data 0xfc5a          ; Binary data
21A4:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
21A6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
21A8:	06-93       	lac Z, r16            ; Load and Clear
21AA:	06-98       	cbi 0x00, 6           ; Clear Bit in I/O Register
21AC:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
21AE:	1E-F9       	.data 0xf91e          ; Binary data
21B0:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
21B2:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
21B4:	8F-E7       	ldi r24, 0x7f         ; Load Immediate
21B6:	08-B0       	in r0, 0x08           ; Load an I/O Location to Register
21B8:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
21BA:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
21BC:	64-F9       	bld r22, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
21BE:	FF-1F       	adc r31, r31          ; Add with Carry
21C0:	C0-01       	movw r24, r0          ; Copy Register Word
21C2:	00-20       	and r0, r0            ; Logical AND
21C4:	30-7B       	andi r19, 0xb0        ; Logical AND with Immediate
21C6:	01-00       	.data 0x0001          ; Binary data
21C8:	EC-FB       	.data 0xfbec          ; Binary data
21CA:	FF-1F       	adc r31, r31          ; Add with Carry
21CC:	78-FB       	.data 0xfb78          ; Binary data
21CE:	FF-1F       	adc r31, r31          ; Add with Carry
21D0:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
21D2:	FF-1F       	adc r31, r31          ; Add with Carry
21D4:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
21D6:	FF-1F       	adc r31, r31          ; Add with Carry
21D8:	14-DF       	rcall .+7720          ; Relative Call to Subroutine
21DA:	FF-1F       	adc r31, r31          ; Add with Carry
21DC:	9C-F8       	.data 0xf89c          ; Binary data
21DE:	FF-1F       	adc r31, r31          ; Add with Carry
21E0:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
21E2:	FF-1F       	adc r31, r31          ; Add with Carry
21E4:	88-9D       	mul r24, r8           ; Multiply Unsigned
21E6:	FF-1F       	adc r31, r31          ; Add with Carry
21E8:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
21EA:	FF-1F       	adc r31, r31          ; Add with Carry
21EC:	00-00       	nop                   ; No Operation
21EE:	AF-44       	sbci r26, 0x4f        ; Subtract Immediate with Carry SBI
21F0:	0C-00       	.data 0x000c          ; Binary data
21F2:	00-20       	and r0, r0            ; Logical AND
21F4:	98-F9       	.data 0xf998          ; Binary data
21F6:	FF-1F       	adc r31, r31          ; Add with Carry
21F8:	2C-DF       	rcall .+7768          ; Relative Call to Subroutine
21FA:	FF-1F       	adc r31, r31          ; Add with Carry
21FC:	00-00       	nop                   ; No Operation
21FE:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
2200:	00-00       	nop                   ; No Operation
2202:	96-43       	sbci r25, 0x36        ; Subtract Immediate with Carry SBI
2204:	2C-F9       	.data 0xf92c          ; Binary data
2206:	FF-1F       	adc r31, r31          ; Add with Carry
2208:	0C-DF       	rcall .+7704          ; Relative Call to Subroutine
220A:	FF-1F       	adc r31, r31          ; Add with Carry
220C:	00-00       	nop                   ; No Operation
220E:	FA-44       	sbci r31, 0x4a        ; Subtract Immediate with Carry SBI
2210:	C8-F2       	brbs 0, .-78          ; Branch if Bit in SREG is Set
2212:	FF-1F       	adc r31, r31          ; Add with Carry
2214:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
2216:	9C-45       	sbci r25, 0x5c        ; Subtract Immediate with Carry SBI
2218:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
221A:	9C-C5       	rjmp .+2872           ; Relative Jump
221C:	78-EC       	ldi r23, 0xc8         ; Load Immediate
221E:	FF-FF       	.data 0xffff          ; Binary data
2220:	9C-EF       	ldi r25, 0xfc         ; Load Immediate
2222:	FF-1F       	adc r31, r31          ; Add with Carry
2224:	00-00       	nop                   ; No Operation
2226:	A0-41       	sbci r26, 0x10        ; Subtract Immediate with Carry SBI
2228:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
222A:	FF-1F       	adc r31, r31          ; Add with Carry
222C:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
222E:	FF-1F       	adc r31, r31          ; Add with Carry
2230:	E8-FB       	.data 0xfbe8          ; Binary data
2232:	FF-1F       	adc r31, r31          ; Add with Carry
2234:	44-F9       	bld r20, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
2236:	FF-1F       	adc r31, r31          ; Add with Carry
2238:	28-DF       	rcall .+7760          ; Relative Call to Subroutine
223A:	FF-1F       	adc r31, r31          ; Add with Carry
223C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
223E:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
2240:	88-B0       	in r8, 0x08           ; Load an I/O Location to Register
2242:	8C-48       	sbci r24, 0x8c        ; Subtract Immediate with Carry SBI
2244:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
2246:	9A-F9       	.data 0xf99a          ; Binary data
2248:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
224A:	8B-4C       	sbci r24, 0xcb        ; Subtract Immediate with Carry SBI
224C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
224E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
2250:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2252:	8A-49       	sbci r24, 0x9a        ; Subtract Immediate with Carry SBI
2254:	13-22       	and r1, r19           ; Logical AND
2256:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
2258:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
225A:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
225C:	83-FA       	bst r8, 3             ; Bit Store from Bit in Register to T Flag in SREG
225E:	00-22       	and r0, r16           ; Logical AND
2260:	87-4B       	sbci r24, 0xb7        ; Subtract Immediate with Carry SBI
2262:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2264:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2266:	72-F8       	bld r7, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
2268:	01-E1       	ldi r16, 0x11         ; Load Immediate
226A:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
226C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
226E:	86-4A       	sbci r24, 0xa6        ; Subtract Immediate with Carry SBI
2270:	2C-21       	and r18, r12          ; Logical AND
2272:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
2274:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
2276:	D6-18       	sub r13, r6           ; Subtract Without Carry
2278:	D0-5E       	subi r29, 0xe0        ; Subtract Immediate
227A:	40-00       	.data 0x0040          ; Binary data
227C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
227E:	BA-F8       	.data 0xf8ba          ; Binary data
2280:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
2282:	82-4B       	sbci r24, 0xb2        ; Subtract Immediate with Carry SBI
2284:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
2286:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
2288:	04-00       	.data 0x0004          ; Binary data
228A:	40-00       	.data 0x0040          ; Binary data
228C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
228E:	B2-F8       	bld r11, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
2290:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
2292:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
2294:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
2296:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
2298:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
229A:	7E-4F       	sbci r23, 0xfe        ; Subtract Immediate with Carry SBI
229C:	87-FB       	bst r24, 7            ; Bit Store from Bit in Register to T Flag in SREG
229E:	03-12       	cpse r0, r19          ; Compare Skip if Equal
22A0:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
22A2:	E3-70       	andi r30, 0x03        ; Logical AND with Immediate
22A4:	00-B2       	in r0, 0x10           ; Load an I/O Location to Register
22A6:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
22A8:	A5-F8       	bld r10, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
22AA:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
22AC:	7A-4B       	sbci r23, 0xba        ; Subtract Immediate with Carry SBI
22AE:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
22B0:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
22B2:	08-30       	cpi r16, 0x08         ; Compare with Immediate
22B4:	87-FB       	bst r24, 7            ; Bit Store from Bit in Register to T Flag in SREG
22B6:	03-27       	clr r771              ; Clear Register
22B8:	A7-EB       	ldi r26, 0xb7         ; Load Immediate
22BA:	E3-70       	andi r30, 0x03        ; Logical AND with Immediate
22BC:	00-B2       	in r0, 0x10           ; Load an I/O Location to Register
22BE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
22C0:	99-F8       	.data 0xf899          ; Binary data
22C2:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
22C4:	75-4B       	sbci r23, 0xb5        ; Subtract Immediate with Carry SBI
22C6:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
22C8:	75-4E       	sbci r23, 0xe5        ; Subtract Immediate with Carry SBI
22CA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
22CC:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
22CE:	32-68       	ori r19, 0x82         ; Logical OR with Immediate
22D0:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
22D2:	E2-FD       	sbrc r30, 2           ; Skip if Bit in Register is Cleared
22D4:	30-60       	ori r19, 0x00         ; Logical OR with Immediate
22D6:	73-4E       	sbci r23, 0xe3        ; Subtract Immediate with Carry SBI
22D8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
22DA:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
22DC:	32-68       	ori r19, 0x82         ; Logical OR with Immediate
22DE:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
22E0:	DB-FD       	.data 0xfddb          ; Binary data
22E2:	30-60       	ori r19, 0x00         ; Logical OR with Immediate
22E4:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
22E6:	00-21       	and r16, r0           ; Logical AND
22E8:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
22EA:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
22EC:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
22EE:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
22F0:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
22F2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
22F4:	00-21       	and r16, r0           ; Logical AND
22F6:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
22F8:	8D-FA       	.data 0xfa8d          ; Binary data
22FA:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
22FC:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
22FE:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
2300:	00-E0       	ldi r16, 0x00         ; Load Immediate
2302:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
2304:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2306:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
2308:	C1-FF       	sbrs r28, 1           ; Skip if Bit in Register is Set
230A:	67-49       	sbci r22, 0x97        ; Subtract Immediate with Carry SBI
230C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
230E:	C6-F8       	bld r12, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
2310:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
2312:	66-49       	sbci r22, 0x96        ; Subtract Immediate with Carry SBI
2314:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2316:	7E-FA       	.data 0xfa7e          ; Binary data
2318:	00-28       	or r0, r0             ; Logical OR
231A:	2F-D0       	rcall .+94            ; Relative Call to Subroutine
231C:	64-4B       	sbci r22, 0xb4        ; Subtract Immediate with Carry SBI
231E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2320:	03-93       	.data 0x9303          ; Binary data
2322:	03-98       	cbi 0x00, 3           ; Clear Bit in I/O Register
2324:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2326:	62-F8       	bld r6, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
2328:	62-4B       	sbci r22, 0xb2        ; Subtract Immediate with Carry SBI
232A:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
232C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
232E:	AC-FF       	.data 0xffac          ; Binary data
2330:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
2332:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
2334:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2336:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
2338:	60-48       	sbci r22, 0x80        ; Subtract Immediate with Carry SBI
233A:	00-E0       	ldi r16, 0x00         ; Load Immediate
233C:	60-48       	sbci r22, 0x80        ; Subtract Immediate with Carry SBI
233E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2340:	4B-FA       	.data 0xfa4b          ; Binary data
2342:	D8-B1       	in r29, 0x08          ; Load an I/O Location to Register
2344:	01-21       	and r16, r1           ; Logical AND
2346:	5F-4B       	sbci r21, 0xbf        ; Subtract Immediate with Carry SBI
2348:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
234A:	0D-20       	and r0, r13           ; Logical AND
234C:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
234E:	84-FB       	bst r24, 4            ; Bit Store from Bit in Register to T Flag in SREG
2350:	57-4B       	sbci r21, 0xb7        ; Subtract Immediate with Carry SBI
2352:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2354:	04-93       	xch Z, r16            ; Exchange
2356:	04-9A       	sbi 0x00, 4           ; Set Bit in I/O Register
2358:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
235A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
235C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
235E:	5B-49       	sbci r21, 0x9b        ; Subtract Immediate with Carry SBI
2360:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2362:	58-FA       	.data 0xfa58          ; Binary data
2364:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
2366:	59-4C       	sbci r21, 0xc9        ; Subtract Immediate with Carry SBI
2368:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
236A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
236C:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
236E:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2370:	95-F8       	bld r9, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
2372:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2374:	59-FA       	.data 0xfa59          ; Binary data
2376:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2378:	81-FC       	sbrc r8, 1            ; Skip if Bit in Register is Cleared
237A:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
237C:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
237E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2380:	05-93       	las Z, r16            ; Load and Set
2382:	05-9A       	sbi 0x00, 5           ; Set Bit in I/O Register
2384:	50-4B       	sbci r21, 0xb0        ; Subtract Immediate with Carry SBI
2386:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2388:	D3-1A       	sub r13, r19          ; Subtract Without Carry
238A:	C8-2B       	or r28, r24           ; Logical OR
238C:	04-D9       	rcall .+4616          ; Relative Call to Subroutine
238E:	4D-4B       	sbci r20, 0xbd        ; Subtract Immediate with Carry SBI
2390:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2392:	00-2B       	or r16, r16           ; Logical OR
2394:	59-D1       	rcall .+690           ; Relative Call to Subroutine
2396:	2B-E0       	ldi r18, 0x0b         ; Load Immediate
2398:	4A-4B       	sbci r20, 0xba        ; Subtract Immediate with Carry SBI
239A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
239C:	43-B3       	in r20, 0x13          ; Load an I/O Location to Register
239E:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
23A0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
23A2:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
23A4:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
23A6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
23A8:	71-FF       	sbrs r23, 1           ; Skip if Bit in Register is Set
23AA:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
23AC:	48-4B       	sbci r20, 0xb8        ; Subtract Immediate with Carry SBI
23AE:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
23B0:	48-49       	sbci r20, 0x98        ; Subtract Immediate with Carry SBI
23B2:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
23B4:	2F-FA       	.data 0xfa2f          ; Binary data
23B6:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
23B8:	46-4A       	sbci r20, 0xa6        ; Subtract Immediate with Carry SBI
23BA:	45-4B       	sbci r20, 0xb5        ; Subtract Immediate with Carry SBI
23BC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
23BE:	07-E0       	ldi r16, 0x07         ; Load Immediate
23C0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
23C2:	45-49       	sbci r20, 0x95        ; Subtract Immediate with Carry SBI
23C4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
23C6:	08-FA       	.data 0xfa08          ; Binary data
23C8:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
23CA:	43-4A       	sbci r20, 0xa3        ; Subtract Immediate with Carry SBI
23CC:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
23CE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
23D0:	3F-4C       	sbci r19, 0xcf        ; Subtract Immediate with Carry SBI
23D2:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
23D4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
23D6:	28-FA       	.data 0xfa28          ; Binary data
23D8:	0F-23       	and r16, r31          ; Logical AND
23DA:	00-93-3F-49 	sts 0x493f, r16       ; Store Direct to Data Space
23DE:	41-F2       	brbs 1, .-112         ; Branch if Bit in SREG is Set
23E0:	88-32       	cpi r24, 0x28         ; Compare with Immediate
23E2:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
23E4:	0E-03       	fmul r16, r22         ; Fractional Multiply Unsigned
23E6:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
23E8:	7F-FB       	.data 0xfb7f          ; Binary data
23EA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
23EC:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
23EE:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
23F0:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
23F2:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
23F4:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
23F6:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
23F8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
23FA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
23FC:	45-FF       	sbrs r20, 5           ; Skip if Bit in Register is Set
23FE:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
2400:	00-21       	and r16, r0           ; Logical AND
2402:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2404:	07-FA       	bst r0, 7             ; Bit Store from Bit in Register to T Flag in SREG
2406:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
2408:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
240A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
240C:	00-E0       	ldi r16, 0x00         ; Load Immediate
240E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2410:	34-49       	sbci r19, 0x94        ; Subtract Immediate with Carry SBI
2412:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2414:	FF-F9       	.data 0xf9ff          ; Binary data
2416:	38-B1       	in r19, 0x08          ; Load an I/O Location to Register
2418:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
241A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
241C:	07-93       	lat Z, r16            ; Load and Toggle
241E:	07-9A       	sbi 0x00, 7           ; Set Bit in I/O Register
2420:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
2422:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2424:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
2426:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
2428:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
242A:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
242C:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
242E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
2430:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
2432:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
2434:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
2436:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2438:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
243A:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
243C:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
243E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2440:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
2442:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
2444:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
2446:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2448:	11-E0       	ldi r17, 0x01         ; Load Immediate
244A:	00-21       	and r16, r0           ; Logical AND
244C:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
244E:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
2450:	00-22       	and r0, r16           ; Logical AND
2452:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
2454:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
2456:	0D-20       	and r0, r13           ; Logical AND
2458:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
245A:	FE-FA       	.data 0xfafe          ; Binary data
245C:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
245E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2460:	06-93       	lac Z, r16            ; Load and Clear
2462:	06-98       	cbi 0x00, 6           ; Clear Bit in I/O Register
2464:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
2466:	C2-FF       	sbrs r28, 2           ; Skip if Bit in Register is Set
2468:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
246A:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
246C:	94-E7       	ldi r25, 0x74         ; Load Immediate
246E:	08-B0       	in r0, 0x08           ; Load an I/O Location to Register
2470:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2472:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
2474:	B0-FC       	sbrc r11, 0           ; Skip if Bit in Register is Cleared
2476:	FF-1F       	adc r31, r31          ; Add with Carry
2478:	C0-01       	movw r24, r0          ; Copy Register Word
247A:	00-20       	and r0, r0            ; Logical AND
247C:	48-7B       	andi r20, 0xb8        ; Logical AND with Immediate
247E:	01-00       	.data 0x0001          ; Binary data
2480:	EC-FB       	.data 0xfbec          ; Binary data
2482:	FF-1F       	adc r31, r31          ; Add with Carry
2484:	78-FB       	.data 0xfb78          ; Binary data
2486:	FF-1F       	adc r31, r31          ; Add with Carry
2488:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
248A:	FF-1F       	adc r31, r31          ; Add with Carry
248C:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
248E:	FF-1F       	adc r31, r31          ; Add with Carry
2490:	14-DF       	rcall .+7720          ; Relative Call to Subroutine
2492:	FF-1F       	adc r31, r31          ; Add with Carry
2494:	AB-AA       	std Y+51, r10         ; Store Indirect From Register to Data Space
2496:	AA-2A       	or r10, r26           ; Logical OR
2498:	9C-F8       	.data 0xf89c          ; Binary data
249A:	FF-1F       	adc r31, r31          ; Add with Carry
249C:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
249E:	FF-1F       	adc r31, r31          ; Add with Carry
24A0:	88-9D       	mul r24, r8           ; Multiply Unsigned
24A2:	FF-1F       	adc r31, r31          ; Add with Carry
24A4:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
24A6:	FF-1F       	adc r31, r31          ; Add with Carry
24A8:	33-33       	cpi r19, 0x33         ; Compare with Immediate
24AA:	B3-3F       	cpi r27, 0xf3         ; Compare with Immediate
24AC:	00-00       	nop                   ; No Operation
24AE:	AF-44       	sbci r26, 0x4f        ; Subtract Immediate with Carry SBI
24B0:	0C-00       	.data 0x000c          ; Binary data
24B2:	00-20       	and r0, r0            ; Logical AND
24B4:	98-F9       	.data 0xf998          ; Binary data
24B6:	FF-1F       	adc r31, r31          ; Add with Carry
24B8:	2C-DF       	rcall .+7768          ; Relative Call to Subroutine
24BA:	FF-1F       	adc r31, r31          ; Add with Carry
24BC:	00-00       	nop                   ; No Operation
24BE:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
24C0:	00-00       	nop                   ; No Operation
24C2:	96-43       	sbci r25, 0x36        ; Subtract Immediate with Carry SBI
24C4:	2C-F9       	.data 0xf92c          ; Binary data
24C6:	FF-1F       	adc r31, r31          ; Add with Carry
24C8:	0C-DF       	rcall .+7704          ; Relative Call to Subroutine
24CA:	FF-1F       	adc r31, r31          ; Add with Carry
24CC:	00-00       	nop                   ; No Operation
24CE:	FA-44       	sbci r31, 0x4a        ; Subtract Immediate with Carry SBI
24D0:	C8-F2       	brbs 0, .-78          ; Branch if Bit in SREG is Set
24D2:	FF-1F       	adc r31, r31          ; Add with Carry
24D4:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
24D6:	9C-45       	sbci r25, 0x5c        ; Subtract Immediate with Carry SBI
24D8:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
24DA:	9C-C5       	rjmp .+2872           ; Relative Jump
24DC:	78-EC       	ldi r23, 0xc8         ; Load Immediate
24DE:	FF-FF       	.data 0xffff          ; Binary data
24E0:	9C-EF       	ldi r25, 0xfc         ; Load Immediate
24E2:	FF-1F       	adc r31, r31          ; Add with Carry
24E4:	00-00       	nop                   ; No Operation
24E6:	A0-41       	sbci r26, 0x10        ; Subtract Immediate with Carry SBI
24E8:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
24EA:	FF-1F       	adc r31, r31          ; Add with Carry
24EC:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
24EE:	FF-1F       	adc r31, r31          ; Add with Carry
24F0:	E8-FB       	.data 0xfbe8          ; Binary data
24F2:	FF-1F       	adc r31, r31          ; Add with Carry
24F4:	44-F9       	bld r20, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
24F6:	FF-1F       	adc r31, r31          ; Add with Carry
24F8:	28-DF       	rcall .+7760          ; Relative Call to Subroutine
24FA:	FF-1F       	adc r31, r31          ; Add with Carry
24FC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
24FE:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
2500:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2502:	5B-B9       	out 0x0b, r21         ; Store Register to I/O Location
2504:	0D-4C       	sbci r16, 0xcd        ; Subtract Immediate with Carry SBI
2506:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
2508:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
250A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
250C:	0C-49       	sbci r16, 0x9c        ; Subtract Immediate with Carry SBI
250E:	39-22       	and r3, r25           ; Logical AND
2510:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
2512:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2514:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
2516:	26-F9       	bld r18, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
2518:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
251A:	18-FF       	.data 0xff18          ; Binary data
251C:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
251E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2520:	13-B9       	out 0x03, r17         ; Store Register to I/O Location
2522:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2524:	C1-FB       	bst r28, 1            ; Bit Store from Bit in Register to T Flag in SREG
2526:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
2528:	01-2B       	or r16, r17           ; Logical OR
252A:	02-D1       	rcall .+516           ; Relative Call to Subroutine
252C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
252E:	22-FD       	sbrc r18, 2           ; Skip if Bit in Register is Cleared
2530:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
2532:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2534:	83-FE       	sbrs r8, 3            ; Skip if Bit in Register is Set
2536:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
2538:	4C-F9       	.data 0xf94c          ; Binary data
253A:	FF-1F       	adc r31, r31          ; Add with Carry
253C:	C0-01       	movw r24, r0          ; Copy Register Word
253E:	00-20       	and r0, r0            ; Logical AND
2540:	5C-7B       	andi r21, 0xbc        ; Logical AND with Immediate
2542:	01-00       	.data 0x0001          ; Binary data
2544:	EC-FB       	.data 0xfbec          ; Binary data
2546:	FF-1F       	adc r31, r31          ; Add with Carry
2548:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
254A:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
254C:	8B-46       	sbci r24, 0x6b        ; Subtract Immediate with Carry SBI
254E:	9A-46       	sbci r25, 0x6a        ; Subtract Immediate with Carry SBI
2550:	05-01       	movw r0, r10          ; Copy Register Word
2552:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
2554:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
2556:	4E-FF       	.data 0xff4e          ; Binary data
2558:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
255A:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
255C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
255E:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
2560:	12-4F       	sbci r17, 0xf2        ; Subtract Immediate with Carry SBI
2562:	3E-68       	ori r19, 0x8e         ; Logical OR with Immediate
2564:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
2566:	B3-F8       	bld r11, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
2568:	00-90-A9-45 	lds r0, 0x45a9        ; Load Direct from Data Space (32-bit)
256C:	AC-BF       	out 0x3c, r26         ; Store Register to I/O Location
256E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2570:	00-09       	sbc r16, r0           ; Subtract with Carry
2572:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2574:	01-09       	sbc r16, r1           ; Subtract with Carry
2576:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
2578:	C6-EB       	ldi r28, 0xb6         ; Load Immediate
257A:	C6-03       	fmuls r20, r22        ; Fractional Multiply Signed
257C:	9B-00       	.data 0x009b          ; Binary data
257E:	D4-18       	sub r13, r4           ; Subtract Without Carry
2580:	D5-50       	subi r29, 0x05        ; Subtract Immediate
2582:	65-60       	ori r22, 0x05         ; Logical OR with Immediate
2584:	01-23       	and r16, r17          ; Logical AND
2586:	23-72       	andi r18, 0x23        ; Logical AND with Immediate
2588:	A4-F8       	bld r10, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
258A:	0A-B0       	in r0, 0x0a           ; Load an I/O Location to Register
258C:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
258E:	4C-F9       	.data 0xf94c          ; Binary data
2590:	A0-81       	ld r26, Z             ; Load Indirect from Data Space to Register
2592:	00-23       	and r16, r16          ; Logical AND
2594:	23-61       	ori r18, 0x13         ; Logical OR with Immediate
2596:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
2598:	14-A0       	ldd r1, Y+36          ; Load Indirect from Data Space to Register
259A:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
259C:	15-90       	lpm r1, Z+            ; Load Program Memory
259E:	A5-61       	ori r26, 0x15         ; Logical OR with Immediate
25A0:	01-36       	cpi r16, 0x61         ; Compare with Immediate
25A2:	3E-60       	ori r19, 0x0e         ; Logical OR with Immediate
25A4:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
25A6:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
25A8:	68-92       	.data 0x9268          ; Binary data
25AA:	FF-1F       	adc r31, r31          ; Add with Carry
25AC:	78-92       	.data 0x9278          ; Binary data
25AE:	FF-1F       	adc r31, r31          ; Add with Carry
25B0:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
25B2:	FF-1F       	adc r31, r31          ; Add with Carry
25B4:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
25B6:	FF-1F       	adc r31, r31          ; Add with Carry
25B8:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
25BA:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
25BC:	93-46       	sbci r25, 0x63        ; Subtract Immediate with Carry SBI
25BE:	05-01       	movw r0, r10          ; Copy Register Word
25C0:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
25C2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
25C4:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
25C6:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
25C8:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
25CA:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
25CC:	1B-F8       	.data 0xf81b          ; Binary data
25CE:	14-4F       	sbci r17, 0xf4        ; Subtract Immediate with Carry SBI
25D0:	3E-68       	ori r19, 0x8e         ; Logical OR with Immediate
25D2:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
25D4:	B3-F8       	bld r11, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
25D6:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
25D8:	AA-45       	sbci r26, 0x5a        ; Subtract Immediate with Carry SBI
25DA:	AC-BF       	out 0x3c, r26         ; Store Register to I/O Location
25DC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
25DE:	00-0A       	sbc r0, r16           ; Subtract with Carry
25E0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
25E2:	01-0A       	sbc r0, r17           ; Subtract with Carry
25E4:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
25E6:	C6-EB       	ldi r28, 0xb6         ; Load Immediate
25E8:	C6-03       	fmuls r20, r22        ; Fractional Multiply Signed
25EA:	9B-00       	.data 0x009b          ; Binary data
25EC:	D4-18       	sub r13, r4           ; Subtract Without Carry
25EE:	D5-50       	subi r29, 0x05        ; Subtract Immediate
25F0:	65-60       	ori r22, 0x05         ; Logical OR with Immediate
25F2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
25F4:	01-08       	sbc r0, r1            ; Subtract with Carry
25F6:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
25F8:	08-80       	ld r0, Y              ; Load Indirect from Data Space to Register
25FA:	00-23       	and r16, r16          ; Logical AND
25FC:	63-81       	ldd r22, Y+3          ; Load Indirect from Data Space to Register
25FE:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
2600:	13-F9       	bld r17, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
2602:	A0-81       	ld r26, Z             ; Load Indirect from Data Space to Register
2604:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
2606:	10-80       	ld r1, Z              ; Load Indirect from Data Space to Register
2608:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
260A:	14-B0       	in r1, 0x04           ; Load an I/O Location to Register
260C:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
260E:	15-A0       	ldd r1, Y+37          ; Load Indirect from Data Space to Register
2610:	A5-61       	ori r26, 0x15         ; Logical OR with Immediate
2612:	46-44       	sbci r20, 0x46        ; Subtract Immediate with Carry SBI
2614:	3E-60       	ori r19, 0x0e         ; Logical OR with Immediate
2616:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2618:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
261A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
261C:	68-92       	.data 0x9268          ; Binary data
261E:	FF-1F       	adc r31, r31          ; Add with Carry
2620:	78-92       	.data 0x9278          ; Binary data
2622:	FF-1F       	adc r31, r31          ; Add with Carry
2624:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
2626:	FF-1F       	adc r31, r31          ; Add with Carry
2628:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
262A:	FF-1F       	adc r31, r31          ; Add with Carry
262C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
262E:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
2630:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2632:	01-2B       	or r16, r17           ; Logical OR
2634:	4D-DC       	rcall .+6298          ; Relative Call to Subroutine
2636:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
2638:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
263A:	00-2B       	or r16, r16           ; Logical OR
263C:	49-D1       	rcall .+658           ; Relative Call to Subroutine
263E:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
2640:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2642:	3C-2B       	or r19, r28           ; Logical OR
2644:	07-DD       	rcall .+6670          ; Relative Call to Subroutine
2646:	14-20       	and r1, r4            ; Logical AND
2648:	23-21       	and r18, r3           ; Logical AND
264A:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
264C:	43-FA       	bst r4, 3             ; Bit Store from Bit in Register to T Flag in SREG
264E:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
2650:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
2652:	10-1A       	sub r1, r16           ; Subtract Without Carry
2654:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
2656:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
2658:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
265A:	22-49       	sbci r18, 0x92        ; Subtract Immediate with Carry SBI
265C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
265E:	1E-FF       	.data 0xff1e          ; Binary data
2660:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
2662:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
2664:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
2666:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2668:	00-21       	and r16, r0           ; Logical AND
266A:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
266C:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
266E:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
2670:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
2672:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
2674:	00-E0       	ldi r16, 0x00         ; Load Immediate
2676:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2678:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
267A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
267C:	07-FE       	sbrs r0, 7            ; Skip if Bit in Register is Set
267E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
2680:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
2682:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
2684:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2686:	00-21       	and r16, r0           ; Logical AND
2688:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
268A:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
268C:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
268E:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
2690:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
2692:	00-E0       	ldi r16, 0x00         ; Load Immediate
2694:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2696:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
2698:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
269A:	F8-FD       	.data 0xfdf8          ; Binary data
269C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
269E:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
26A0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
26A2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
26A4:	A7-FE       	sbrs r10, 7           ; Skip if Bit in Register is Set
26A6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
26A8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
26AA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
26AC:	EF-FD       	.data 0xfdef          ; Binary data
26AE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
26B0:	00-20       	and r0, r0            ; Logical AND
26B2:	64-21       	and r22, r4           ; Logical AND
26B4:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
26B6:	0E-FA       	.data 0xfa0e          ; Binary data
26B8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
26BA:	9C-FE       	.data 0xfe9c          ; Binary data
26BC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
26BE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
26C0:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
26C2:	E4-FD       	sbrc r30, 4           ; Skip if Bit in Register is Cleared
26C4:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
26C6:	B0-F8       	bld r11, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
26C8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
26CA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
26CC:	02-22       	and r0, r18           ; Logical AND
26CE:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
26D0:	E5-FD       	sbrc r30, 5           ; Skip if Bit in Register is Cleared
26D2:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
26D4:	BC-FB       	.data 0xfbbc          ; Binary data
26D6:	FF-1F       	adc r31, r31          ; Add with Carry
26D8:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
26DA:	FF-1F       	adc r31, r31          ; Add with Carry
26DC:	6C-92       	st X, r6              ; Store Indirect From Register to Data Space
26DE:	FF-1F       	adc r31, r31          ; Add with Carry
26E0:	E4-92       	xch Z, r14            ; Exchange
26E2:	FF-1F       	adc r31, r31          ; Add with Carry
26E4:	CD-CC       	rjmp .-1638           ; Relative Jump
26E6:	8C-3F       	cpi r24, 0xfc         ; Compare with Immediate
26E8:	1C-DF       	rcall .+7736          ; Relative Call to Subroutine
26EA:	FF-1F       	adc r31, r31          ; Add with Carry
26EC:	00-00       	nop                   ; No Operation
26EE:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
26F0:	20-DF       	rcall .+7744          ; Relative Call to Subroutine
26F2:	FF-1F       	adc r31, r31          ; Add with Carry
26F4:	F0-B4       	in r15, 0x20          ; Load an I/O Location to Register
26F6:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
26F8:	C0-02       	muls r28, r16         ; Multiply Signed
26FA:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
26FC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
26FE:	82-03       	fmuls r16, r18        ; Fractional Multiply Signed
2700:	1B-7A       	andi r17, 0xab        ; Logical AND with Immediate
2702:	00-2B       	or r16, r16           ; Logical OR
2704:	34-D0       	rcall .+104           ; Relative Call to Subroutine
2706:	1C-4C       	sbci r17, 0xcc        ; Subtract Immediate with Carry SBI
2708:	04-EB       	ldi r16, 0xb4         ; Load Immediate
270A:	82-02       	muls r24, r18         ; Multiply Signed
270C:	54-68       	ori r21, 0x84         ; Logical OR with Immediate
270E:	1B-4A       	sbci r17, 0xab        ; Subtract Immediate with Carry SBI
2710:	12-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
2712:	A7-1A       	sub r10, r23          ; Subtract Without Carry
2714:	00-2F       	mov r16, r16          ; Copy Register
2716:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
2718:	7F-42       	sbci r23, 0x2f        ; Subtract Immediate with Carry SBI
271A:	19-4D       	sbci r17, 0xd9        ; Subtract Immediate with Carry SBI
271C:	2E-68       	ori r18, 0x8e         ; Logical OR with Immediate
271E:	00-2E       	mov r0, r16           ; Copy Register
2720:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
2722:	76-42       	sbci r23, 0x26        ; Subtract Immediate with Carry SBI
2724:	BD-1B       	sub r27, r29          ; Subtract Without Carry
2726:	A0-2D       	mov r26, r0           ; Copy Register
2728:	0B-DD       	rcall .+6678          ; Relative Call to Subroutine
272A:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
272C:	C0-00       	.data 0x00c0          ; Binary data
272E:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
2730:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2732:	80-00       	.data 0x0080          ; Binary data
2734:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
2736:	D4-BF       	out 0x34, r29         ; Store Register to I/O Location
2738:	00-22       	and r0, r16           ; Logical AND
273A:	01-22       	and r0, r17           ; Logical AND
273C:	42-75       	andi r20, 0x52        ; Logical AND with Immediate
273E:	00-23       	and r16, r16          ; Logical AND
2740:	16-E0       	ldi r17, 0x06         ; Load Immediate
2742:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2744:	C0-0C       	add r12, r0           ; Add without Carry
2746:	0C-48       	sbci r16, 0x8c        ; Subtract Immediate with Carry SBI
2748:	00-EB       	ldi r16, 0xb0         ; Load Immediate
274A:	8C-00       	.data 0x008c          ; Binary data
274C:	40-7D       	andi r20, 0xd0        ; Logical AND with Immediate
274E:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
2750:	D4-BF       	out 0x34, r29         ; Store Register to I/O Location
2752:	00-22       	and r0, r16           ; Logical AND
2754:	01-22       	and r0, r17           ; Logical AND
2756:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
2758:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
275A:	8D-42       	sbci r24, 0x2d        ; Subtract Immediate with Carry SBI
275C:	08-DB       	rcall .+5648          ; Relative Call to Subroutine
275E:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
2760:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2762:	23-B1       	in r18, 0x03          ; Load an I/O Location to Register
2764:	B7-42       	sbci r27, 0x27        ; Subtract Immediate with Carry SBI
2766:	AC-BF       	out 0x3c, r26         ; Store Register to I/O Location
2768:	00-23       	and r16, r16          ; Logical AND
276A:	01-23       	and r16, r17          ; Logical AND
276C:	00-E0       	ldi r16, 0x00         ; Load Immediate
276E:	00-23       	and r16, r16          ; Logical AND
2770:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
2772:	F0-BC       	out 0x20, r15         ; Store Register to I/O Location
2774:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
2776:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
2778:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
277A:	FF-1F       	adc r31, r31          ; Add with Carry
277C:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
277E:	FF-1F       	adc r31, r31          ; Add with Carry
2780:	48-FC       	.data 0xfc48          ; Binary data
2782:	FF-1F       	adc r31, r31          ; Add with Carry
2784:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
2786:	FF-1F       	adc r31, r31          ; Add with Carry
2788:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
278A:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
278C:	00-EB       	ldi r16, 0xb0         ; Load Immediate
278E:	40-01       	movw r8, r0           ; Copy Register Word
2790:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
2792:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2794:	C1-02       	muls r28, r17         ; Multiply Signed
2796:	10-79       	andi r17, 0x90        ; Logical AND with Immediate
2798:	50-B3       	in r21, 0x10          ; Load an I/O Location to Register
279A:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
279C:	16-49       	sbci r17, 0x96        ; Subtract Immediate with Carry SBI
279E:	01-EB       	ldi r16, 0xb1         ; Load Immediate
27A0:	C2-02       	muls r28, r18         ; Multiply Signed
27A2:	10-7D       	andi r17, 0xd0        ; Logical AND with Immediate
27A4:	18-BB       	out 0x18, r17         ; Store Register to I/O Location
27A6:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
27A8:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
27AA:	08-2A       	or r0, r24            ; Logical OR
27AC:	20-D1       	rcall .+576           ; Relative Call to Subroutine
27AE:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
27B0:	59-00       	.data 0x0059          ; Binary data
27B2:	C8-18       	sub r12, r8           ; Subtract Without Carry
27B4:	02-EB       	ldi r16, 0xb2         ; Load Immediate
27B6:	C0-00       	.data 0x00c0          ; Binary data
27B8:	04-69       	ori r16, 0x94         ; Logical OR with Immediate
27BA:	C0-68       	ori r28, 0x80         ; Logical OR with Immediate
27BC:	24-1A       	sub r2, r20           ; Subtract Without Carry
27BE:	03-34       	cpi r16, 0x43         ; Compare with Immediate
27C0:	0F-48       	sbci r16, 0x8f        ; Subtract Immediate with Carry SBI
27C2:	00-68       	ori r16, 0x80         ; Logical OR with Immediate
27C4:	00-28       	or r0, r0             ; Logical OR
27C6:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
27C8:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
27CA:	00-EB       	ldi r16, 0xb0         ; Load Immediate
27CC:	04-10       	cpse r0, r4           ; Compare Skip if Equal
27CE:	0B-44       	sbci r16, 0x4b        ; Subtract Immediate with Carry SBI
27D0:	02-EB       	ldi r16, 0xb2         ; Load Immediate
27D2:	C3-02       	muls r28, r19         ; Multiply Signed
27D4:	B2-F9       	bld r27, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
27D6:	02-20       	and r0, r2            ; Logical AND
27D8:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
27DA:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
27DC:	D3-1A       	sub r13, r19          ; Subtract Without Carry
27DE:	00-2B       	or r16, r16           ; Logical OR
27E0:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
27E2:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
27E4:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
27E6:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
27E8:	00-20       	and r0, r0            ; Logical AND
27EA:	01-20       	and r0, r1            ; Logical AND
27EC:	00-E0       	ldi r16, 0x00         ; Load Immediate
27EE:	00-20       	and r0, r0            ; Logical AND
27F0:	5D-F8       	.data 0xf85d          ; Binary data
27F2:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
27F4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
27F6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
27F8:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
27FA:	FF-1F       	adc r31, r31          ; Add with Carry
27FC:	48-F9       	.data 0xf948          ; Binary data
27FE:	FF-1F       	adc r31, r31          ; Add with Carry
2800:	48-FC       	.data 0xfc48          ; Binary data
2802:	FF-1F       	adc r31, r31          ; Add with Carry
2804:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
2806:	FF-1F       	adc r31, r31          ; Add with Carry
2808:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
280A:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
280C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
280E:	1A-24       	clr r26               ; Clear Register
2810:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2812:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
2814:	2D-F8       	.data 0xf82d          ; Binary data
2816:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
2818:	1A-24       	clr r26               ; Clear Register
281A:	00-25       	clr r256              ; Clear Register
281C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
281E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
2820:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
2822:	3C-F8       	.data 0xf83c          ; Binary data
2824:	01-34       	cpi r16, 0x41         ; Compare with Immediate
2826:	ED-2C       	mov r14, r13          ; Copy Register
2828:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
282A:	02-E0       	ldi r16, 0x02         ; Load Immediate
282C:	01-34       	cpi r16, 0x41         ; Compare with Immediate
282E:	25-2C       	mov r2, r5            ; Copy Register
2830:	EE-D1       	rcall .+988           ; Relative Call to Subroutine
2832:	25-20       	and r2, r5            ; Logical AND
2834:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
2836:	1C-F8       	.data 0xf81c          ; Binary data
2838:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
283A:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
283C:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
283E:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
2840:	00-2F       	mov r16, r16          ; Copy Register
2842:	1F-DD       	rcall .+6718          ; Relative Call to Subroutine
2844:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
2846:	00-24       	clr r0                ; Clear Register
2848:	00-28       	or r0, r0             ; Logical OR
284A:	47-D0       	rcall .+142           ; Relative Call to Subroutine
284C:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
284E:	26-20       	and r2, r6            ; Logical AND
2850:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
2852:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2854:	D7-F9       	bld r29, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
2856:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
2858:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
285A:	01-31       	cpi r16, 0x11         ; Compare with Immediate
285C:	25-20       	and r2, r5            ; Logical AND
285E:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
2860:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
2862:	1C-F8       	.data 0xf81c          ; Binary data
2864:	01-20       	and r0, r1            ; Logical AND
2866:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2868:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
286A:	26-25       	clr r294              ; Clear Register
286C:	00-24       	clr r0                ; Clear Register
286E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
2870:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2872:	DE-F9       	.data 0xf9de          ; Binary data
2874:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
2876:	01-34       	cpi r16, 0x41         ; Compare with Immediate
2878:	87-42       	sbci r24, 0x27        ; Subtract Immediate with Carry SBI
287A:	4C-DD       	rcall .+6808          ; Relative Call to Subroutine
287C:	04-35       	cpi r16, 0x54         ; Compare with Immediate
287E:	44-45       	sbci r20, 0x54        ; Subtract Immediate with Carry SBI
2880:	F5-DB       	rcall .+6122          ; Relative Call to Subroutine
2882:	4B-E0       	ldi r20, 0x0b         ; Load Immediate
2884:	00-26       	clr r512              ; Clear Register
2886:	34-46       	sbci r19, 0x64        ; Subtract Immediate with Carry SBI
2888:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
288A:	5F-FA       	.data 0xfa5f          ; Binary data
288C:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
288E:	A5-00       	.data 0x00a5          ; Binary data
2890:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
2892:	26-00       	.data 0x0026          ; Binary data
2894:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
2896:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2898:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
289A:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
289C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
289E:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
28A0:	12-DA       	rcall .+5156          ; Relative Call to Subroutine
28A2:	2A-35       	cpi r18, 0x5a         ; Compare with Immediate
28A4:	DF-F8       	.data 0xf8df          ; Binary data
28A6:	7C-80       	ldd r7, Y+4           ; Load Indirect from Data Space to Register
28A8:	01-34       	cpi r16, 0x41         ; Compare with Immediate
28AA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
28AC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
28AE:	C0-F9       	bld r28, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
28B0:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
28B2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
28B4:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
28B6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
28B8:	A5-F9       	bld r26, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
28BA:	98-F8       	.data 0xf898          ; Binary data
28BC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
28BE:	04-35       	cpi r16, 0x54         ; Compare with Immediate
28C0:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
28C2:	01-DD       	rcall .+6658          ; Relative Call to Subroutine
28C4:	3E-46       	sbci r19, 0x6e        ; Subtract Immediate with Carry SBI
28C6:	EF-E7       	ldi r30, 0x7f         ; Load Immediate
28C8:	59-1C       	adc r5, r9            ; Add with Carry
28CA:	25-20       	and r2, r5            ; Logical AND
28CC:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
28CE:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
28D0:	E5-FF       	sbrs r30, 5           ; Skip if Bit in Register is Set
28D2:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
28D4:	01-00       	.data 0x0001          ; Binary data
28D6:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
28D8:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
28DA:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
28DC:	4C-45       	sbci r20, 0x5c        ; Subtract Immediate with Carry SBI
28DE:	11-D1       	rcall .+546           ; Relative Call to Subroutine
28E0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
28E2:	89-00       	.data 0x0089          ; Binary data
28E4:	26-30       	cpi r18, 0x06         ; Compare with Immediate
28E6:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
28E8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
28EA:	8C-F9       	.data 0xf98c          ; Binary data
28EC:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
28EE:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
28F0:	01-31       	cpi r16, 0x11         ; Compare with Immediate
28F2:	25-20       	and r2, r5            ; Logical AND
28F4:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
28F6:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
28F8:	D1-FF       	sbrs r29, 1           ; Skip if Bit in Register is Set
28FA:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
28FC:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
28FE:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
2900:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2902:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
2904:	FF-20       	and r15, r15          ; Logical AND
2906:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2908:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
290A:	FF-20       	and r15, r15          ; Logical AND
290C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
290E:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
2910:	FF-20       	and r15, r15          ; Logical AND
2912:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2914:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
2916:	FE-2C       	mov r15, r14          ; Copy Register
2918:	F7-DC       	rcall .+6638          ; Relative Call to Subroutine
291A:	B5-E7       	ldi r27, 0x75         ; Load Immediate
291C:	FE-2C       	mov r15, r14          ; Copy Register
291E:	F7-DC       	rcall .+6638          ; Relative Call to Subroutine
2920:	DC-E7       	ldi r29, 0x7c         ; Load Immediate
2922:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
2924:	3C-F9       	.data 0xf93c          ; Binary data
2926:	FF-1F       	adc r31, r31          ; Add with Carry
2928:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
292A:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
292C:	C0-04       	cpc r12, r0           ; Compare with Carry
292E:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
2930:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2932:	84-02       	muls r24, r20         ; Multiply Signed
2934:	93-89       	std Y+19, r25         ; Store Indirect From Register to Data Space
2936:	1A-B2       	in r1, 0x1a           ; Load an I/O Location to Register
2938:	00-2A       	or r0, r16            ; Logical OR
293A:	0A-DD       	rcall .+6676          ; Relative Call to Subroutine
293C:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
293E:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
2940:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
2942:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
2944:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
2946:	A1-EB       	ldi r26, 0xb1         ; Load Immediate
2948:	93-11       	cpse r25, r3          ; Compare Skip if Equal
294A:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
294C:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
294E:	24-10       	cpse r2, r4           ; Compare Skip if Equal
2950:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
2952:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2954:	C0-00       	.data 0x00c0          ; Binary data
2956:	1B-B2       	in r1, 0x1b           ; Load an I/O Location to Register
2958:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
295A:	07-4A       	sbci r16, 0xa7        ; Subtract Immediate with Carry SBI
295C:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
295E:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
2960:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
2962:	01-EB       	ldi r16, 0xb1         ; Load Immediate
2964:	93-11       	cpse r25, r3          ; Compare Skip if Equal
2966:	03-4A       	sbci r16, 0xa3        ; Subtract Immediate with Carry SBI
2968:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
296A:	20-10       	cpse r2, r0           ; Compare Skip if Equal
296C:	5D-F8       	.data 0xf85d          ; Binary data
296E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
2970:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
2972:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
2974:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
2976:	FF-1F       	adc r31, r31          ; Add with Carry
2978:	5C-FA       	.data 0xfa5c          ; Binary data
297A:	FF-1F       	adc r31, r31          ; Add with Carry
297C:	F0-B4       	in r15, 0x20          ; Load an I/O Location to Register
297E:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
2980:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2982:	C0-02       	muls r28, r16         ; Multiply Signed
2984:	50-4B       	sbci r21, 0xb0        ; Subtract Immediate with Carry SBI
2986:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2988:	82-03       	fmuls r16, r18        ; Fractional Multiply Signed
298A:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
298C:	9A-61       	ori r25, 0x1a         ; Logical OR with Immediate
298E:	1B-69       	ori r17, 0x9b         ; Logical OR with Immediate
2990:	00-2B       	or r16, r16           ; Logical OR
2992:	41-D1       	rcall .+642           ; Relative Call to Subroutine
2994:	4C-49       	sbci r20, 0x9c        ; Subtract Immediate with Carry SBI
2996:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2998:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
299A:	9B-00       	.data 0x009b          ; Binary data
299C:	CA-18       	sub r12, r10          ; Subtract Without Carry
299E:	CD-58       	subi r28, 0x8d        ; Subtract Immediate
29A0:	93-89       	std Y+19, r25         ; Store Indirect From Register to Data Space
29A2:	56-89       	std Y+22, r21         ; Store Indirect From Register to Data Space
29A4:	76-01       	movw r14, r12         ; Copy Register Word
29A6:	B6-B2       	in r11, 0x16          ; Load an I/O Location to Register
29A8:	FF-2B       	or r31, r31           ; Logical OR
29AA:	9C-BF       	out 0x3c, r25         ; Store Register to I/O Location
29AC:	1B-02       	muls r17, r27         ; Multiply Signed
29AE:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
29B0:	46-4A       	sbci r20, 0xa6        ; Subtract Immediate with Carry SBI
29B2:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
29B4:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
29B6:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
29B8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
29BA:	8C-71       	andi r24, 0x1c        ; Logical AND with Immediate
29BC:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
29BE:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
29C0:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
29C2:	01-F3       	brbs 1, .-64          ; Branch if Bit in SREG is Set
29C4:	19-0C       	add r1, r9            ; Add without Carry
29C6:	8C-B2       	in r8, 0x1c           ; Load an I/O Location to Register
29C8:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
29CA:	CA-02       	muls r28, r26         ; Multiply Signed
29CC:	04-F4       	brbc 4, .+0           ; Branch if Bit in SREG is Cleared
29CE:	80-44       	sbci r24, 0x40        ; Subtract Immediate with Carry SBI
29D0:	A4-B2       	in r10, 0x14          ; Load an I/O Location to Register
29D2:	1C-B1       	in r17, 0x0c          ; Load an I/O Location to Register
29D4:	C2-F5       	brbc 2, .+112         ; Branch if Bit in SREG is Cleared
29D6:	FF-62       	ori r31, 0x2f         ; Logical OR with Immediate
29D8:	07-32       	cpi r16, 0x27         ; Compare with Immediate
29DA:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
29DC:	14-0A       	sbc r1, r20           ; Subtract with Carry
29DE:	3C-4B       	sbci r19, 0xbc        ; Subtract Immediate with Carry SBI
29E0:	1F-5D       	subi r17, 0xdf        ; Subtract Immediate
29E2:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
29E4:	46-02       	muls r20, r22         ; Multiply Signed
29E6:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
29E8:	33-F8       	bld r3, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
29EA:	14-30       	cpi r17, 0x04         ; Compare with Immediate
29EC:	07-FB       	bst r16, 7            ; Bit Store from Bit in Register to T Flag in SREG
29EE:	02-32       	cpi r16, 0x22         ; Compare with Immediate
29F0:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
29F2:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
29F4:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
29F6:	0E-BF       	out 0x3e, r16         ; Store Register to I/O Location
29F8:	93-B2       	in r9, 0x13           ; Load an I/O Location to Register
29FA:	53-42       	sbci r21, 0x23        ; Subtract Immediate with Carry SBI
29FC:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
29FE:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2A00:	C0-00       	.data 0x00c0          ; Binary data
2A02:	31-4A       	sbci r19, 0xa1        ; Subtract Immediate with Carry SBI
2A04:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2A06:	80-00       	.data 0x0080          ; Binary data
2A08:	83-F4       	brbc 3, .+32          ; Branch if Bit in SREG is Cleared
2A0A:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
2A0C:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
2A0E:	03-33       	cpi r16, 0x33         ; Compare with Immediate
2A10:	05-EB       	ldi r16, 0xb5         ; Load Immediate
2A12:	13-43       	sbci r17, 0x33        ; Subtract Immediate with Carry SBI
2A14:	43-60       	ori r20, 0x03         ; Logical OR with Immediate
2A16:	53-E0       	ldi r21, 0x03         ; Load Immediate
2A18:	01-2B       	or r16, r17           ; Logical OR
2A1A:	51-D1       	rcall .+674           ; Relative Call to Subroutine
2A1C:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2A1E:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
2A20:	29-4A       	sbci r18, 0xa9        ; Subtract Immediate with Carry SBI
2A22:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2A24:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2A26:	9B-89       	std Y+19, r25         ; Store Indirect From Register to Data Space
2A28:	1A-B2       	in r1, 0x1a           ; Load an I/O Location to Register
2A2A:	00-2A       	or r0, r16            ; Logical OR
2A2C:	0E-DD       	rcall .+6684          ; Relative Call to Subroutine
2A2E:	26-49       	sbci r18, 0x96        ; Subtract Immediate with Carry SBI
2A30:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2A32:	C0-02       	muls r28, r16         ; Multiply Signed
2A34:	92-00       	.data 0x0092          ; Binary data
2A36:	8C-18       	sub r8, r12           ; Subtract Without Carry
2A38:	1B-B2       	in r1, 0x1b           ; Load an I/O Location to Register
2A3A:	27-4D       	sbci r18, 0xd7        ; Subtract Immediate with Carry SBI
2A3C:	2D-68       	ori r18, 0x8d         ; Logical OR with Immediate
2A3E:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
2A40:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
2A42:	8A-58       	subi r24, 0x8a        ; Subtract Immediate
2A44:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2A46:	93-13       	cpse r25, r19         ; Compare Skip if Equal
2A48:	63-60       	ori r22, 0x03         ; Logical OR with Immediate
2A4A:	0E-E0       	ldi r16, 0x0e         ; Load Immediate
2A4C:	1E-49       	sbci r17, 0x9e        ; Subtract Immediate with Carry SBI
2A4E:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2A50:	C0-02       	muls r28, r16         ; Multiply Signed
2A52:	92-00       	.data 0x0092          ; Binary data
2A54:	8C-18       	sub r8, r12           ; Subtract Without Carry
2A56:	1B-B2       	in r1, 0x1b           ; Load an I/O Location to Register
2A58:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
2A5A:	1F-4D       	sbci r17, 0xdf        ; Subtract Immediate with Carry SBI
2A5C:	2D-68       	ori r18, 0x8d         ; Logical OR with Immediate
2A5E:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
2A60:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
2A62:	8A-58       	subi r24, 0x8a        ; Subtract Immediate
2A64:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
2A66:	93-13       	cpse r25, r19         ; Compare Skip if Equal
2A68:	63-60       	ori r22, 0x03         ; Logical OR with Immediate
2A6A:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2A6C:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
2A6E:	16-4A       	sbci r17, 0xa6        ; Subtract Immediate with Carry SBI
2A70:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2A72:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2A74:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
2A76:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
2A78:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
2A7A:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
2A7C:	05-DD       	rcall .+6666          ; Relative Call to Subroutine
2A7E:	18-49       	sbci r17, 0x98        ; Subtract Immediate with Carry SBI
2A80:	09-88       	std Y+17, r0          ; Store Indirect From Register to Data Space
2A82:	59-1A       	sub r5, r25           ; Subtract Without Carry
2A84:	B1-EB       	ldi r27, 0xb1         ; Load Immediate
2A86:	E2-0F       	add r30, r18          ; Add without Carry
2A88:	13-DB       	rcall .+5670          ; Relative Call to Subroutine
2A8A:	00-2B       	or r16, r16           ; Logical OR
2A8C:	18-DB       	rcall .+5680          ; Relative Call to Subroutine
2A8E:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2A90:	C0-01       	movw r24, r0          ; Copy Register Word
2A92:	0D-4C       	sbci r16, 0xcd        ; Subtract Immediate with Carry SBI
2A94:	04-EB       	ldi r16, 0xb4         ; Load Immediate
2A96:	81-01       	movw r16, r2          ; Copy Register Word
2A98:	B1-F9       	bld r27, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
2A9A:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
2A9C:	11-4C       	sbci r17, 0xc1        ; Subtract Immediate with Carry SBI
2A9E:	24-68       	ori r18, 0x84         ; Logical OR with Immediate
2AA0:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
2AA2:	11-33       	cpi r17, 0x31         ; Compare with Immediate
2AA4:	00-2B       	or r16, r16           ; Logical OR
2AA6:	0B-DA       	rcall .+5142          ; Relative Call to Subroutine
2AA8:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
2AAA:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
2AAC:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
2AAE:	E2-0F       	add r30, r18          ; Add without Carry
2AB0:	06-DA       	rcall .+5132          ; Relative Call to Subroutine
2AB2:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2AB4:	C0-00       	.data 0x00c0          ; Binary data
2AB6:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
2AB8:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2ABA:	80-00       	.data 0x0080          ; Binary data
2ABC:	00-23       	and r16, r16          ; Logical AND
2ABE:	03-72       	andi r16, 0x23        ; Logical AND with Immediate
2AC0:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
2AC2:	F0-BC       	out 0x20, r15         ; Store Register to I/O Location
2AC4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
2AC6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
2AC8:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
2ACA:	FF-1F       	adc r31, r31          ; Add with Carry
2ACC:	0C-00       	.data 0x000c          ; Binary data
2ACE:	00-20       	and r0, r0            ; Logical AND
2AD0:	FC-7D       	andi r31, 0xdc        ; Logical AND with Immediate
2AD2:	01-00       	.data 0x0001          ; Binary data
2AD4:	04-7E       	andi r16, 0xe4        ; Logical AND with Immediate
2AD6:	01-00       	.data 0x0001          ; Binary data
2AD8:	5C-FA       	.data 0xfa5c          ; Binary data
2ADA:	FF-1F       	adc r31, r31          ; Add with Carry
2ADC:	48-92       	.data 0x9248          ; Binary data
2ADE:	FF-1F       	adc r31, r31          ; Add with Carry
2AE0:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
2AE2:	FF-1F       	adc r31, r31          ; Add with Carry
2AE4:	5C-F9       	.data 0xf95c          ; Binary data
2AE6:	FF-1F       	adc r31, r31          ; Add with Carry
2AE8:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
2AEA:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
2AEC:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
2AEE:	7B-4B       	sbci r23, 0xbb        ; Subtract Immediate with Carry SBI
2AF0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2AF2:	00-2B       	or r16, r16           ; Logical OR
2AF4:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
2AF6:	EF-80       	ldd r14, Y+7          ; Load Indirect from Data Space to Register
2AF8:	79-4A       	sbci r23, 0xa9        ; Subtract Immediate with Carry SBI
2AFA:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
2AFC:	79-49       	sbci r23, 0x99        ; Subtract Immediate with Carry SBI
2AFE:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
2B00:	5B-1A       	sub r5, r27           ; Subtract Without Carry
2B02:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
2B04:	00-2B       	or r16, r16           ; Logical OR
2B06:	14-DA       	rcall .+5160          ; Relative Call to Subroutine
2B08:	77-4B       	sbci r23, 0xb7        ; Subtract Immediate with Carry SBI
2B0A:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
2B0C:	03-3B       	cpi r16, 0xb3         ; Compare with Immediate
2B0E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
2B10:	4D-10       	cpse r4, r13          ; Compare Skip if Equal
2B12:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
2B14:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
2B16:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
2B18:	FA-60       	ori r31, 0x0a         ; Logical OR with Immediate
2B1A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
2B1C:	6B-FC       	.data 0xfc6b          ; Binary data
2B1E:	73-4B       	sbci r23, 0xb3        ; Subtract Immediate with Carry SBI
2B20:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
2B22:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
2B24:	6F-FD       	.data 0xfd6f          ; Binary data
2B26:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
2B28:	7F-FE       	.data 0xfe7f          ; Binary data
2B2A:	6D-4B       	sbci r22, 0xbd        ; Subtract Immediate with Carry SBI
2B2C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
2B2E:	01-27       	clr r769              ; Clear Register
2B30:	00-E0       	ldi r16, 0x00         ; Load Immediate
2B32:	00-27       	clr r768              ; Clear Register
2B34:	69-4B       	sbci r22, 0xb9        ; Subtract Immediate with Carry SBI
2B36:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2B38:	00-2B       	or r16, r16           ; Logical OR
2B3A:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
2B3C:	CC-80       	ldd r12, Y+4          ; Load Indirect from Data Space to Register
2B3E:	6C-4C       	sbci r22, 0xcc        ; Subtract Immediate with Carry SBI
2B40:	00-26       	clr r512              ; Clear Register
2B42:	DF-F8       	.data 0xf8df          ; Binary data
2B44:	B8-A1       	ldd r27, Y+32         ; Load Indirect from Data Space to Register
2B46:	DF-F8       	.data 0xf8df          ; Binary data
2B48:	B8-91       	.data 0x91b8          ; Binary data
2B4A:	DF-F8       	.data 0xf8df          ; Binary data
2B4C:	B8-81       	ld r27, Y             ; Load Indirect from Data Space to Register
2B4E:	25-46       	sbci r18, 0x65        ; Subtract Immediate with Carry SBI
2B50:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
2B52:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
2B54:	00-2B       	or r16, r16           ; Logical OR
2B56:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
2B58:	B7-80       	ldd r11, Y+7          ; Load Indirect from Data Space to Register
2B5A:	00-2F       	mov r16, r16          ; Copy Register
2B5C:	47-D0       	rcall .+142           ; Relative Call to Subroutine
2B5E:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
2B60:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2B62:	4D-2B       	or r20, r29           ; Logical OR
2B64:	43-DC       	rcall .+6278          ; Relative Call to Subroutine
2B66:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
2B68:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
2B6A:	63-49       	sbci r22, 0x93        ; Subtract Immediate with Carry SBI
2B6C:	01-EB       	ldi r16, 0xb1         ; Load Immediate
2B6E:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2B70:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
2B72:	D8-72       	andi r29, 0x28        ; Logical AND with Immediate
2B74:	9A-81       	ldd r25, Y+2          ; Load Indirect from Data Space to Register
2B76:	DF-F8       	.data 0xf8df          ; Binary data
2B78:	7C-B1       	in r23, 0x0c          ; Load an I/O Location to Register
2B7A:	DB-F8       	.data 0xf8db          ; Binary data
2B7C:	00-00       	nop                   ; No Operation
2B7E:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
2B80:	06-1C       	adc r0, r6            ; Add with Carry
2B82:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2B84:	D1-FE       	sbrs r13, 1           ; Skip if Bit in Register is Set
2B86:	DB-F8       	.data 0xf8db          ; Binary data
2B88:	00-00       	nop                   ; No Operation
2B8A:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
2B8C:	06-1C       	adc r0, r6            ; Add with Carry
2B8E:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2B90:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
2B92:	59-4A       	sbci r21, 0xa9        ; Subtract Immediate with Carry SBI
2B94:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2B96:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2B98:	DF-F8       	.data 0xf8df          ; Binary data
2B9A:	6C-C1       	rjmp .+728            ; Relative Jump
2B9C:	BC-F8       	.data 0xf8bc          ; Binary data
2B9E:	00-20       	and r0, r0            ; Logical AND
2BA0:	91-42       	sbci r25, 0x21        ; Subtract Immediate with Carry SBI
2BA2:	D4-BF       	out 0x34, r29         ; Store Register to I/O Location
2BA4:	00-22       	and r0, r16           ; Logical AND
2BA6:	01-22       	and r0, r17           ; Logical AND
2BA8:	5A-75       	andi r21, 0x5a        ; Logical AND with Immediate
2BAA:	01-30       	cpi r16, 0x01         ; Compare with Immediate
2BAC:	CB-F8       	.data 0xf8cb          ; Binary data
2BAE:	00-00       	nop                   ; No Operation
2BB0:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
2BB2:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
2BB4:	DF-F8       	.data 0xf8df          ; Binary data
2BB6:	40-E1       	ldi r20, 0x10         ; Load Immediate
2BB8:	0E-EB       	ldi r16, 0xbe         ; Load Immediate
2BBA:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2BBC:	28-22       	and r2, r24           ; Logical AND
2BBE:	9A-81       	ldd r25, Y+2          ; Load Indirect from Data Space to Register
2BC0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
2BC2:	B2-FE       	sbrs r11, 2           ; Skip if Bit in Register is Set
2BC4:	DB-F8       	.data 0xf8db          ; Binary data
2BC6:	00-30       	cpi r16, 0x00         ; Compare with Immediate
2BC8:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
2BCA:	C3-02       	muls r28, r19         ; Multiply Signed
2BCC:	4A-49       	sbci r20, 0x9a        ; Subtract Immediate with Carry SBI
2BCE:	01-EB       	ldi r16, 0xb1         ; Load Immediate
2BD0:	82-02       	muls r24, r18         ; Multiply Signed
2BD2:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
2BD4:	06-0C       	add r0, r6            ; Add without Carry
2BD6:	DF-F8       	.data 0xf8df          ; Binary data
2BD8:	30-C1       	rjmp .+608            ; Relative Jump
2BDA:	BC-F8       	.data 0xf8bc          ; Binary data
2BDC:	00-10       	cpse r0, r0           ; Compare Skip if Equal
2BDE:	88-42       	sbci r24, 0x28        ; Subtract Immediate with Carry SBI
2BE0:	D4-BF       	out 0x34, r29         ; Store Register to I/O Location
2BE2:	00-21       	and r16, r0           ; Logical AND
2BE4:	01-21       	and r16, r1           ; Logical AND
2BE6:	51-75       	andi r21, 0x51        ; Logical AND with Immediate
2BE8:	01-33       	cpi r16, 0x31         ; Compare with Immediate
2BEA:	CB-F8       	.data 0xf8cb          ; Binary data
2BEC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
2BEE:	2B-7B       	andi r18, 0xbb        ; Logical AND with Immediate
2BF0:	53-B3       	in r21, 0x13          ; Load an I/O Location to Register
2BF2:	3D-49       	sbci r19, 0x9d        ; Subtract Immediate with Carry SBI
2BF4:	06-EB       	ldi r16, 0xb6         ; Load Immediate
2BF6:	46-02       	muls r20, r22         ; Multiply Signed
2BF8:	D2-00       	.data 0x00d2          ; Binary data
2BFA:	8B-18       	sub r8, r11           ; Subtract Without Carry
2BFC:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
2BFE:	02-30       	cpi r16, 0x02         ; Compare with Immediate
2C00:	8A-5E       	subi r24, 0xea        ; Subtract Immediate
2C02:	99-1A       	sub r9, r25           ; Subtract Without Carry
2C04:	00-29       	or r16, r0            ; Logical OR
2C06:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
2C08:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
2C0A:	9F-29       	or r25, r15           ; Logical OR
2C0C:	07-DC       	rcall .+6158          ; Relative Call to Subroutine
2C0E:	06-EB       	ldi r16, 0xb6         ; Load Immediate
2C10:	46-06       	cpc r4, r22           ; Compare with Carry
2C12:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
2C14:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2C16:	C6-03       	fmuls r20, r22        ; Fractional Multiply Signed
2C18:	00-22       	and r0, r16           ; Logical AND
2C1A:	1A-75       	andi r17, 0x5a        ; Logical AND with Immediate
2C1C:	5B-E0       	ldi r21, 0x0b         ; Load Immediate
2C1E:	D2-1A       	sub r13, r18          ; Subtract Without Carry
2C20:	03-D4       	rcall .+2054          ; Relative Call to Subroutine
2C22:	11-1C       	adc r1, r1            ; Add with Carry
2C24:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
2C26:	01-21       	and r16, r1           ; Logical AND
2C28:	00-E0       	ldi r16, 0x00         ; Load Immediate
2C2A:	FF-21       	and r31, r15          ; Logical AND
2C2C:	06-EB       	ldi r16, 0xb6         ; Load Immediate
2C2E:	46-06       	cpc r4, r22           ; Compare with Carry
2C30:	2D-4A       	sbci r18, 0xad        ; Subtract Immediate with Carry SBI
2C32:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2C34:	C6-02       	muls r28, r22         ; Multiply Signed
2C36:	49-B2       	in r4, 0x19           ; Load an I/O Location to Register
2C38:	2A-48       	sbci r18, 0x8a        ; Subtract Immediate with Carry SBI
2C3A:	00-68       	ori r16, 0x80         ; Logical OR with Immediate
2C3C:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
2C3E:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
2C40:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2C42:	C1-03       	fmuls r20, r17        ; Fractional Multiply Signed
2C44:	53-80       	ldd r5, Y+3           ; Load Indirect from Data Space to Register
2C46:	46-E0       	ldi r20, 0x06         ; Load Immediate
2C48:	35-F8       	bld r3, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
2C4A:	08-0C       	add r0, r8            ; Add without Carry
2C4C:	2B-88       	std Y+19, r2          ; Store Indirect From Register to Data Space
2C4E:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2C50:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2C52:	9B-00       	.data 0x009b          ; Binary data
2C54:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
2C56:	35-F8       	bld r3, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
2C58:	02-CC       	rjmp .-2044           ; Relative Jump
2C5A:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
2C5C:	4C-1C       	adc r4, r12           ; Add with Carry
2C5E:	1F-FA       	.data 0xfa1f          ; Binary data
2C60:	8C-FC       	.data 0xfc8c          ; Binary data
2C62:	FF-2B       	or r31, r31           ; Logical OR
2C64:	9C-BF       	out 0x3c, r25         ; Store Register to I/O Location
2C66:	1B-02       	muls r17, r27         ; Multiply Signed
2C68:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
2C6A:	DA-F8       	.data 0xf8da          ; Binary data
2C6C:	00-20       	and r0, r0            ; Logical AND
2C6E:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
2C70:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
2C72:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
2C74:	8C-71       	andi r24, 0x1c        ; Logical AND with Immediate
2C76:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
2C78:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
2C7A:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
2C7C:	01-F3       	brbs 1, .-64          ; Branch if Bit in SREG is Set
2C7E:	19-0C       	add r1, r9            ; Add without Carry
2C80:	8B-B2       	in r8, 0x1b           ; Load an I/O Location to Register
2C82:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
2C84:	CA-02       	muls r28, r26         ; Multiply Signed
2C86:	03-F4       	brbc 3, .+0           ; Branch if Bit in SREG is Cleared
2C88:	80-43       	sbci r24, 0x30        ; Subtract Immediate with Carry SBI
2C8A:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
2C8C:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
2C8E:	C2-F5       	brbc 2, .+112         ; Branch if Bit in SREG is Cleared
2C90:	FF-62       	ori r31, 0x2f         ; Logical OR with Immediate
2C92:	07-32       	cpi r16, 0x27         ; Compare with Immediate
2C94:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
2C96:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
2C98:	12-2B       	or r17, r18           ; Logical OR
2C9A:	19-F8       	.data 0xf819          ; Binary data
2C9C:	0B-30       	cpi r16, 0x0b         ; Compare with Immediate
2C9E:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
2CA0:	46-02       	muls r20, r22         ; Multiply Signed
2CA2:	38-F8       	.data 0xf838          ; Binary data
2CA4:	1B-B0       	in r1, 0x0b           ; Load an I/O Location to Register
2CA6:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
2CA8:	02-B2       	in r0, 0x12           ; Load an I/O Location to Register
2CAA:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
2CAC:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
2CAE:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
2CB0:	0E-BF       	out 0x3e, r16         ; Store Register to I/O Location
2CB2:	93-B2       	in r9, 0x13           ; Load an I/O Location to Register
2CB4:	53-42       	sbci r21, 0x23        ; Subtract Immediate with Carry SBI
2CB6:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
2CB8:	83-F4       	brbc 3, .+32          ; Branch if Bit in SREG is Cleared
2CBA:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
2CBC:	0C-FB       	.data 0xfb0c          ; Binary data
2CBE:	03-33       	cpi r16, 0x33         ; Compare with Immediate
2CC0:	00-EB       	ldi r16, 0xb0         ; Load Immediate
2CC2:	13-40       	sbci r17, 0x03        ; Subtract Immediate with Carry SBI
2CC4:	25-F8       	bld r2, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
2CC6:	06-0C       	add r0, r6            ; Add without Carry
2CC8:	01-36       	cpi r16, 0x61         ; Compare with Immediate
2CCA:	18-34       	cpi r17, 0x48         ; Compare with Immediate
2CCC:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
2CCE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2CD0:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
2CD2:	3F-F7       	brbc 7, .-50          ; Branch if Bit in SREG is Cleared
2CD4:	3C-AF       	std Y+60, r19         ; Store Indirect From Register to Data Space
2CD6:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
2CD8:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2CDA:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
2CDC:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
2CDE:	FF-1F       	adc r31, r31          ; Add with Carry
2CE0:	C4-F2       	brbs 4, .-80          ; Branch if Bit in SREG is Set
2CE2:	FF-1F       	adc r31, r31          ; Add with Carry
2CE4:	5C-F9       	.data 0xf95c          ; Binary data
2CE6:	FF-1F       	adc r31, r31          ; Add with Carry
2CE8:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
2CEA:	FF-1F       	adc r31, r31          ; Add with Carry
2CEC:	68-92       	.data 0x9268          ; Binary data
2CEE:	FF-1F       	adc r31, r31          ; Add with Carry
2CF0:	78-FA       	.data 0xfa78          ; Binary data
2CF2:	FF-1F       	adc r31, r31          ; Add with Carry
2CF4:	58-FA       	.data 0xfa58          ; Binary data
2CF6:	FF-1F       	adc r31, r31          ; Add with Carry
2CF8:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
2CFA:	FF-1F       	adc r31, r31          ; Add with Carry
2CFC:	0C-00       	.data 0x000c          ; Binary data
2CFE:	00-20       	and r0, r0            ; Logical AND
2D00:	FC-7D       	andi r31, 0xdc        ; Logical AND with Immediate
2D02:	01-00       	.data 0x0001          ; Binary data
2D04:	04-7E       	andi r16, 0xe4        ; Logical AND with Immediate
2D06:	01-00       	.data 0x0001          ; Binary data
2D08:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
2D0A:	FF-1F       	adc r31, r31          ; Add with Carry
2D0C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
2D0E:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
2D10:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
2D12:	2D-71       	andi r18, 0x1d        ; Logical AND with Immediate
2D14:	0A-22       	and r0, r26           ; Logical AND
2D16:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
2D18:	63-FE       	sbrs r6, 3            ; Skip if Bit in Register is Set
2D1A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
2D1C:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
2D1E:	FF-1F       	adc r31, r31          ; Add with Carry
2D20:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
2D22:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
2D24:	8E-B0       	in r8, 0x0e           ; Load an I/O Location to Register
2D26:	0A-23       	and r16, r26          ; Logical AND
2D28:	8D-F8       	.data 0xf88d          ; Binary data
2D2A:	04-30       	cpi r16, 0x04         ; Compare with Immediate
2D2C:	8D-F8       	.data 0xf88d          ; Binary data
2D2E:	05-30       	cpi r16, 0x05         ; Compare with Immediate
2D30:	8D-F8       	.data 0xf88d          ; Binary data
2D32:	06-30       	cpi r16, 0x06         ; Compare with Immediate
2D34:	AB-4B       	sbci r26, 0xbb        ; Subtract Immediate with Carry SBI
2D36:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2D38:	4B-B1       	in r20, 0x0b          ; Load an I/O Location to Register
2D3A:	AB-4B       	sbci r26, 0xbb        ; Subtract Immediate with Carry SBI
2D3C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2D3E:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
2D40:	00-23       	and r16, r16          ; Logical AND
2D42:	8D-F8       	.data 0xf88d          ; Binary data
2D44:	04-30       	cpi r16, 0x04         ; Compare with Immediate
2D46:	8D-F8       	.data 0xf88d          ; Binary data
2D48:	05-30       	cpi r16, 0x05         ; Compare with Immediate
2D4A:	8D-F8       	.data 0xf88d          ; Binary data
2D4C:	06-30       	cpi r16, 0x06         ; Compare with Immediate
2D4E:	A7-4B       	sbci r26, 0xb7        ; Subtract Immediate with Carry SBI
2D50:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2D52:	BB-B1       	in r27, 0x0b          ; Load an I/O Location to Register
2D54:	00-22       	and r0, r16           ; Logical AND
2D56:	A5-4B       	sbci r26, 0xb5        ; Subtract Immediate with Carry SBI
2D58:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
2D5A:	A5-4B       	sbci r26, 0xb5        ; Subtract Immediate with Carry SBI
2D5C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2D5E:	A5-4A       	sbci r26, 0xa5        ; Subtract Immediate with Carry SBI
2D60:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
2D62:	9A-1A       	sub r9, r26           ; Subtract Without Carry
2D64:	14-2A       	or r1, r20            ; Logical OR
2D66:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
2D68:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2D6A:	32-09       	sbc r19, r2           ; Subtract with Carry
2D6C:	8D-F8       	.data 0xf88d          ; Binary data
2D6E:	04-90       	lpm r0, Z             ; Load Program Memory
2D70:	8D-F8       	.data 0xf88d          ; Binary data
2D72:	05-90       	lpm r0, Z+            ; Load Program Memory
2D74:	8D-F8       	.data 0xf88d          ; Binary data
2D76:	06-90       	elpm r0, Z            ; Extended Load Program Memory
2D78:	01-E0       	ldi r16, 0x01         ; Load Immediate
2D7A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2D7C:	0A-09       	sbc r16, r10          ; Subtract with Carry
2D7E:	9D-4A       	sbci r25, 0xad        ; Subtract Immediate with Carry SBI
2D80:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
2D82:	01-E0       	ldi r16, 0x01         ; Load Immediate
2D84:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2D86:	0A-09       	sbc r16, r10          ; Subtract with Carry
2D88:	9B-4B       	sbci r25, 0xbb        ; Subtract Immediate with Carry SBI
2D8A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2D8C:	00-2B       	or r16, r16           ; Logical OR
2D8E:	9B-48       	sbci r25, 0x8b        ; Subtract Immediate with Carry SBI
2D90:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
2D92:	2D-71       	andi r18, 0x1d        ; Logical AND with Immediate
2D94:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
2D96:	96-22       	and r9, r22           ; Logical AND
2D98:	78-22       	and r7, r24           ; Logical AND
2D9A:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
2D9C:	53-FE       	sbrs r5, 3            ; Skip if Bit in Register is Set
2D9E:	00-24       	clr r0                ; Clear Register
2DA0:	95-4D       	sbci r25, 0xd5        ; Subtract Immediate with Carry SBI
2DA2:	97-4F       	sbci r25, 0xf7        ; Subtract Immediate with Carry SBI
2DA4:	DF-F8       	.data 0xf8df          ; Binary data
2DA6:	70-A2       	std Y+32, r7          ; Store Indirect From Register to Data Space
2DA8:	A6-B2       	in r10, 0x16          ; Load an I/O Location to Register
2DAA:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
2DAC:	00-2B       	or r16, r16           ; Logical OR
2DAE:	72-D0       	rcall .+228           ; Relative Call to Subroutine
2DB0:	3B-68       	ori r19, 0x8b         ; Logical OR with Immediate
2DB2:	01-33       	cpi r16, 0x31         ; Compare with Immediate
2DB4:	46-F2       	brbs 6, .-112         ; Branch if Bit in SREG is Set
2DB6:	9C-32       	cpi r25, 0x2c         ; Compare with Immediate
2DB8:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
2DBA:	C8-BF       	out 0x38, r28         ; Store Register to I/O Location
2DBC:	46-F2       	brbs 6, .-112         ; Branch if Bit in SREG is Set
2DBE:	9C-33       	cpi r25, 0x3c         ; Compare with Immediate
2DC0:	3B-60       	ori r19, 0x0b         ; Logical OR with Immediate
2DC2:	A0-46       	sbci r26, 0x60        ; Subtract Immediate with Carry SBI
2DC4:	3B-68       	ori r19, 0x8b         ; Logical OR with Immediate
2DC6:	8A-FB       	.data 0xfb8a          ; Binary data
2DC8:	03-10       	cpse r0, r3           ; Compare Skip if Equal
2DCA:	DB-17       	cp r29, r27           ; Compare
2DCC:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
2DCE:	60-10       	cpse r6, r0           ; Compare Skip if Equal
2DD0:	8C-4B       	sbci r24, 0xbc        ; Subtract Immediate with Carry SBI
2DD2:	19-88       	std Y+17, r1          ; Store Indirect From Register to Data Space
2DD4:	04-EB       	ldi r16, 0xb4         ; Load Immediate
2DD6:	21-11       	cpse r18, r1          ; Compare Skip if Equal
2DD8:	8B-4A       	sbci r24, 0xab        ; Subtract Immediate with Carry SBI
2DDA:	81-FB       	bst r24, 1            ; Bit Store from Bit in Register to T Flag in SREG
2DDC:	02-23       	and r16, r18          ; Logical AND
2DDE:	CA-18       	sub r12, r10          ; Subtract Without Carry
2DE0:	CB-17       	cp r28, r27           ; Compare
2DE2:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
2DE4:	E2-13       	cpse r30, r18         ; Compare Skip if Equal
2DE6:	19-44       	sbci r17, 0x49        ; Subtract Immediate with Carry SBI
2DE8:	8D-F8       	.data 0xf88d          ; Binary data
2DEA:	08-10       	cpse r0, r8           ; Compare Skip if Equal
2DEC:	64-23       	and r22, r20          ; Logical AND
2DEE:	8D-F8       	.data 0xf88d          ; Binary data
2DF0:	09-30       	cpi r16, 0x09         ; Compare with Immediate
2DF2:	8D-F8       	.data 0xf88d          ; Binary data
2DF4:	0A-00       	.data 0x000a          ; Binary data
2DF6:	02-A8       	std Y+50, r0          ; Store Indirect From Register to Data Space
2DF8:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
2DFA:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
2DFC:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
2DFE:	83-4B       	sbci r24, 0xb3        ; Subtract Immediate with Carry SBI
2E00:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2E02:	00-2B       	or r16, r16           ; Logical OR
2E04:	47-DD       	rcall .+6798          ; Relative Call to Subroutine
2E06:	B6-F5       	brbc 6, .+108         ; Branch if Bit in SREG is Cleared
2E08:	80-7F       	andi r24, 0xf0        ; Logical AND with Immediate
2E0A:	44-D8       	rcall .+4232          ; Relative Call to Subroutine
2E0C:	80-4A       	sbci r24, 0xa0        ; Subtract Immediate with Carry SBI
2E0E:	A2-FB       	bst r26, 2            ; Bit Store from Bit in Register to T Flag in SREG
2E10:	06-12       	cpse r0, r22          ; Compare Skip if Equal
2E12:	D2-08       	sbc r13, r2           ; Subtract with Carry
2E14:	02-EB       	ldi r16, 0xb2         ; Load Immediate
2E16:	82-02       	muls r24, r18         ; Multiply Signed
2E18:	A6-EB       	ldi r26, 0xb6         ; Load Immediate
2E1A:	42-02       	muls r20, r18         ; Multiply Signed
2E1C:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
2E1E:	09-2A       	or r0, r25            ; Logical OR
2E20:	02-D0       	rcall .+4             ; Relative Call to Subroutine
2E22:	B6-F5       	brbc 6, .+108         ; Branch if Bit in SREG is Cleared
2E24:	80-7F       	andi r24, 0xf0        ; Logical AND with Immediate
2E26:	0D-D1       	rcall .+538           ; Relative Call to Subroutine
2E28:	98-45       	sbci r25, 0x58        ; Subtract Immediate with Carry SBI
2E2A:	0B-DA       	rcall .+5142          ; Relative Call to Subroutine
2E2C:	0A-23       	and r16, r26          ; Logical AND
2E2E:	8D-F8       	.data 0xf88d          ; Binary data
2E30:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
2E32:	8D-F8       	.data 0xf88d          ; Binary data
2E34:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
2E36:	14-23       	and r17, r20          ; Logical AND
2E38:	8D-F8       	.data 0xf88d          ; Binary data
2E3A:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
2E3C:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
2E3E:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
2E40:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2E42:	9C-FB       	.data 0xfb9c          ; Binary data
2E44:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
2E46:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
2E48:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
2E4A:	98-45       	sbci r25, 0x58        ; Subtract Immediate with Carry SBI
2E4C:	13-D1       	rcall .+550           ; Relative Call to Subroutine
2E4E:	1E-20       	and r1, r14           ; Logical AND
2E50:	A0-21       	and r26, r0           ; Logical AND
2E52:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
2E54:	3F-FE       	.data 0xfe3f          ; Binary data
2E56:	8D-F8       	.data 0xf88d          ; Binary data
2E58:	14-00       	.data 0x0014          ; Binary data
2E5A:	FF-23       	and r31, r31          ; Logical AND
2E5C:	8D-F8       	.data 0xf88d          ; Binary data
2E5E:	15-30       	cpi r17, 0x05         ; Compare with Immediate
2E60:	BE-23       	and r27, r30          ; Logical AND
2E62:	8D-F8       	.data 0xf88d          ; Binary data
2E64:	16-30       	cpi r17, 0x06         ; Compare with Immediate
2E66:	05-A8       	std Y+53, r0          ; Store Indirect From Register to Data Space
2E68:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
2E6A:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
2E6C:	DF-FE       	.data 0xfedf          ; Binary data
2E6E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
2E70:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
2E72:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2E74:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
2E76:	67-4B       	sbci r22, 0xb7        ; Subtract Immediate with Carry SBI
2E78:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
2E7A:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
2E7C:	0B-D1       	rcall .+534           ; Relative Call to Subroutine
2E7E:	28-23       	and r18, r24          ; Logical AND
2E80:	8D-F8       	.data 0xf88d          ; Binary data
2E82:	18-30       	cpi r17, 0x08         ; Compare with Immediate
2E84:	0A-23       	and r16, r26          ; Logical AND
2E86:	8D-F8       	.data 0xf88d          ; Binary data
2E88:	19-30       	cpi r17, 0x09         ; Compare with Immediate
2E8A:	8D-F8       	.data 0xf88d          ; Binary data
2E8C:	1A-30       	cpi r17, 0x0a         ; Compare with Immediate
2E8E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
2E90:	06-A9       	std Y+54, r16         ; Store Indirect From Register to Data Space
2E92:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2E94:	73-FB       	bst r23, 3            ; Bit Store from Bit in Register to T Flag in SREG
2E96:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
2E98:	07-A8       	std Y+55, r0          ; Store Indirect From Register to Data Space
2E9A:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
2E9C:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2E9E:	B2-FB       	bst r27, 2            ; Bit Store from Bit in Register to T Flag in SREG
2EA0:	9D-F8       	.data 0xf89d          ; Binary data
2EA2:	1C-10       	cpse r1, r12          ; Compare Skip if Equal
2EA4:	9D-F8       	.data 0xf89d          ; Binary data
2EA6:	1D-00       	.data 0x001d          ; Binary data
2EA8:	9D-F8       	.data 0xf89d          ; Binary data
2EAA:	1E-20       	and r1, r14           ; Logical AND
2EAC:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
2EAE:	AB-B3       	in r26, 0x1b          ; Load an I/O Location to Register
2EB0:	9D-F8       	.data 0xf89d          ; Binary data
2EB2:	04-C0       	rjmp .+8              ; Relative Jump
2EB4:	9D-F8       	.data 0xf89d          ; Binary data
2EB6:	05-E0       	ldi r16, 0x05         ; Load Immediate
2EB8:	9D-F8       	.data 0xf89d          ; Binary data
2EBA:	06-30       	cpi r16, 0x06         ; Compare with Immediate
2EBC:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
2EBE:	00-0F       	add r16, r16          ; Add without Carry
2EC0:	06-D0       	rcall .+12            ; Relative Call to Subroutine
2EC2:	0C-EB       	ldi r16, 0xbc         ; Load Immediate
2EC4:	8C-0C       	add r8, r12           ; Add without Carry
2EC6:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
2EC8:	DC-1C       	adc r13, r12          ; Add with Carry
2ECA:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
2ECC:	01-0C       	add r0, r1            ; Add without Carry
2ECE:	01-E0       	ldi r16, 0x01         ; Load Immediate
2ED0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2ED2:	00-0C       	add r0, r0            ; Add without Carry
2ED4:	BE-F1       	brbs 6, .+110         ; Branch if Bit in SREG is Set
2ED6:	00-0F       	add r16, r16          ; Add without Carry
2ED8:	06-D0       	rcall .+12            ; Relative Call to Subroutine
2EDA:	0E-EB       	ldi r16, 0xbe         ; Load Immediate
2EDC:	8E-0E       	add r8, r30           ; Add without Carry
2EDE:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
2EE0:	DE-1E       	adc r13, r30          ; Add with Carry
2EE2:	0E-F1       	brbs 6, .+66          ; Branch if Bit in SREG is Set
2EE4:	01-0E       	add r0, r17           ; Add without Carry
2EE6:	01-E0       	ldi r16, 0x01         ; Load Immediate
2EE8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
2EEA:	00-0E       	add r0, r16           ; Add without Carry
2EEC:	23-B1       	in r18, 0x03          ; Load an I/O Location to Register
2EEE:	03-EB       	ldi r16, 0xb3         ; Load Immediate
2EF0:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
2EF2:	DB-09       	sbc r29, r11          ; Subtract with Carry
2EF4:	01-33       	cpi r16, 0x31         ; Compare with Immediate
2EF6:	00-E0       	ldi r16, 0x00         ; Load Immediate
2EF8:	00-23       	and r16, r16          ; Logical AND
2EFA:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
2EFC:	5C-F1       	brbs 4, .+86          ; Branch if Bit in SREG is Set
2EFE:	80-FA       	bst r8, 0             ; Bit Store from Bit in Register to T Flag in SREG
2F00:	5E-F0       	brbs 6, .+22          ; Branch if Bit in SREG is Set
2F02:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
2F04:	53-F2       	brbs 3, .-108         ; Branch if Bit in SREG is Set
2F06:	8D-F8       	.data 0xf88d          ; Binary data
2F08:	20-10       	cpse r2, r0           ; Compare Skip if Equal
2F0A:	8D-F8       	.data 0xf88d          ; Binary data
2F0C:	21-00       	.data 0x0021          ; Binary data
2F0E:	8D-F8       	.data 0xf88d          ; Binary data
2F10:	22-20       	and r2, r2            ; Logical AND
2F12:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
2F14:	08-A9       	std Y+48, r16         ; Store Indirect From Register to Data Space
2F16:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2F18:	31-FB       	bst r19, 1            ; Bit Store from Bit in Register to T Flag in SREG
2F1A:	13-E0       	ldi r17, 0x03         ; Load Immediate
2F1C:	01-43       	sbci r16, 0x31        ; Subtract Immediate with Carry SBI
2F1E:	0A-43       	sbci r16, 0x3a        ; Subtract Immediate with Carry SBI
2F20:	4A-45       	sbci r20, 0x5a        ; Subtract Immediate with Carry SBI
2F22:	0F-D2       	rcall .+1054          ; Relative Call to Subroutine
2F24:	9D-F8       	.data 0xf89d          ; Binary data
2F26:	05-20       	and r0, r5            ; Logical AND
2F28:	9D-F8       	.data 0xf89d          ; Binary data
2F2A:	06-30       	cpi r16, 0x06         ; Compare with Immediate
2F2C:	9D-F8       	.data 0xf89d          ; Binary data
2F2E:	04-10       	cpse r0, r4           ; Compare Skip if Equal
2F30:	8D-F8       	.data 0xf88d          ; Binary data
2F32:	24-10       	cpse r2, r4           ; Compare Skip if Equal
2F34:	8D-F8       	.data 0xf88d          ; Binary data
2F36:	25-20       	and r2, r5            ; Logical AND
2F38:	8D-F8       	.data 0xf88d          ; Binary data
2F3A:	26-30       	cpi r18, 0x06         ; Compare with Immediate
2F3C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
2F3E:	09-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
2F40:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2F42:	1C-FB       	.data 0xfb1c          ; Binary data
2F44:	01-34       	cpi r16, 0x41         ; Compare with Immediate
2F46:	B4-F5       	brbc 4, .+108         ; Branch if Bit in SREG is Cleared
2F48:	2D-7F       	andi r18, 0xfd        ; Logical AND with Immediate
2F4A:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
2F4C:	2D-AF       	std Y+61, r18         ; Store Indirect From Register to Data Space
2F4E:	27-25       	clr r295              ; Clear Register
2F50:	2C-4F       	sbci r18, 0xfc        ; Subtract Immediate with Carry SBI
2F52:	3E-88       	std Y+22, r3          ; Store Indirect From Register to Data Space
2F54:	05-EB       	ldi r16, 0xb5         ; Load Immediate
2F56:	26-16       	cp r2, r22            ; Compare
2F58:	0B-A8       	std Y+51, r0          ; Store Indirect From Register to Data Space
2F5A:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
2F5C:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2F5E:	52-FB       	bst r21, 2            ; Bit Store from Bit in Register to T Flag in SREG
2F60:	C5-F1       	brbs 5, .+112         ; Branch if Bit in SREG is Set
2F62:	28-04       	cpc r2, r8            ; Compare with Carry
2F64:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
2F66:	87-04       	cpc r8, r7            ; Compare with Carry
2F68:	9D-F8       	.data 0xf89d          ; Binary data
2F6A:	2C-10       	cpse r2, r12          ; Compare Skip if Equal
2F6C:	09-1B       	sub r16, r25          ; Subtract Without Carry
2F6E:	9D-F8       	.data 0xf89d          ; Binary data
2F70:	2D-20       	and r2, r13           ; Logical AND
2F72:	12-1B       	sub r17, r18          ; Subtract Without Carry
2F74:	9D-F8       	.data 0xf89d          ; Binary data
2F76:	2E-30       	cpi r18, 0x0e         ; Compare with Immediate
2F78:	1B-1B       	sub r17, r27          ; Subtract Without Carry
2F7A:	21-EA       	ldi r18, 0xa1         ; Load Immediate
2F7C:	E1-71       	andi r30, 0x11        ; Logical AND with Immediate
2F7E:	8D-F8       	.data 0xf88d          ; Binary data
2F80:	28-10       	cpse r2, r8           ; Compare Skip if Equal
2F82:	22-EA       	ldi r18, 0xa2         ; Load Immediate
2F84:	E2-72       	andi r30, 0x22        ; Logical AND with Immediate
2F86:	8D-F8       	.data 0xf88d          ; Binary data
2F88:	29-20       	and r2, r9            ; Logical AND
2F8A:	23-EA       	ldi r18, 0xa3         ; Load Immediate
2F8C:	E3-73       	andi r30, 0x33        ; Logical AND with Immediate
2F8E:	8D-F8       	.data 0xf88d          ; Binary data
2F90:	2A-30       	cpi r18, 0x0a         ; Compare with Immediate
2F92:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
2F94:	0A-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
2F96:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2F98:	F1-FA       	bst r15, 1            ; Bit Store from Bit in Register to T Flag in SREG
2F9A:	3E-88       	std Y+22, r3          ; Store Indirect From Register to Data Space
2F9C:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
2F9E:	16-16       	cp r1, r22            ; Compare
2FA0:	0D-A8       	std Y+53, r0          ; Store Indirect From Register to Data Space
2FA2:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
2FA4:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2FA6:	2E-FB       	.data 0xfb2e          ; Binary data
2FA8:	9D-F8       	.data 0xf89d          ; Binary data
2FAA:	34-20       	and r3, r4            ; Logical AND
2FAC:	12-1B       	sub r17, r18          ; Subtract Without Carry
2FAE:	9D-F8       	.data 0xf89d          ; Binary data
2FB0:	35-30       	cpi r19, 0x05         ; Compare with Immediate
2FB2:	1B-1B       	sub r17, r27          ; Subtract Without Carry
2FB4:	9D-F8       	.data 0xf89d          ; Binary data
2FB6:	36-10       	cpse r3, r6           ; Compare Skip if Equal
2FB8:	0C-1B       	sub r16, r28          ; Subtract Without Carry
2FBA:	22-EA       	ldi r18, 0xa2         ; Load Immediate
2FBC:	E2-72       	andi r30, 0x22        ; Logical AND with Immediate
2FBE:	8D-F8       	.data 0xf88d          ; Binary data
2FC0:	30-20       	and r3, r0            ; Logical AND
2FC2:	23-EA       	ldi r18, 0xa3         ; Load Immediate
2FC4:	E3-73       	andi r30, 0x33        ; Logical AND with Immediate
2FC6:	8D-F8       	.data 0xf88d          ; Binary data
2FC8:	31-30       	cpi r19, 0x01         ; Compare with Immediate
2FCA:	24-EA       	ldi r18, 0xa4         ; Load Immediate
2FCC:	E4-74       	andi r30, 0x44        ; Logical AND with Immediate
2FCE:	8D-F8       	.data 0xf88d          ; Binary data
2FD0:	32-40       	sbci r19, 0x02        ; Subtract Immediate with Carry SBI
2FD2:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
2FD4:	0C-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
2FD6:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
2FD8:	D1-FA       	bst r13, 1            ; Bit Store from Bit in Register to T Flag in SREG
2FDA:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
2FDC:	B9-D1       	rcall .+882           ; Relative Call to Subroutine
2FDE:	0E-B0       	in r0, 0x0e           ; Load an I/O Location to Register
2FE0:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
2FE2:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
2FE4:	38-9D       	mul r19, r8           ; Multiply Unsigned
2FE6:	FF-1F       	adc r31, r31          ; Add with Carry
2FE8:	54-F9       	bld r21, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
2FEA:	FF-1F       	adc r31, r31          ; Add with Carry
2FEC:	2C-9E       	mul r2, r28           ; Multiply Unsigned
2FEE:	FF-1F       	adc r31, r31          ; Add with Carry
2FF0:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
2FF2:	FF-1F       	adc r31, r31          ; Add with Carry
2FF4:	74-B9       	out 0x04, r23         ; Store Register to I/O Location
2FF6:	FF-1F       	adc r31, r31          ; Add with Carry
2FF8:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
2FFA:	FF-1F       	adc r31, r31          ; Add with Carry
2FFC:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
2FFE:	FF-1F       	adc r31, r31          ; Add with Carry
3000:	84-FB       	bst r24, 4            ; Bit Store from Bit in Register to T Flag in SREG
3002:	FF-1F       	adc r31, r31          ; Add with Carry
3004:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
3006:	FF-1F       	adc r31, r31          ; Add with Carry
3008:	81-80       	ldd r8, Y+1           ; Load Indirect from Data Space to Register
300A:	80-80       	ld r8, Z              ; Load Indirect from Data Space to Register
300C:	D0-FA       	bst r13, 0            ; Bit Store from Bit in Register to T Flag in SREG
300E:	FF-1F       	adc r31, r31          ; Add with Carry
3010:	CD-CC       	rjmp .-1638           ; Relative Jump
3012:	CC-CC       	rjmp .-1640           ; Relative Jump
3014:	3C-F9       	.data 0xf93c          ; Binary data
3016:	FF-1F       	adc r31, r31          ; Add with Carry
3018:	B5-81       	ldd r27, Y+5          ; Load Indirect from Data Space to Register
301A:	4E-1B       	sub r20, r30          ; Subtract Without Carry
301C:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
301E:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
3020:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3022:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
3024:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
3026:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
3028:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
302A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
302C:	0C-00       	.data 0x000c          ; Binary data
302E:	00-20       	and r0, r0            ; Logical AND
3030:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3032:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
3034:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
3036:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
3038:	00-2B       	or r16, r16           ; Logical OR
303A:	5C-D1       	rcall .+696           ; Relative Call to Subroutine
303C:	30-4A       	sbci r19, 0xa0        ; Subtract Immediate with Carry SBI
303E:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
3040:	30-49       	sbci r19, 0x90        ; Subtract Immediate with Carry SBI
3042:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
3044:	0B-44       	sbci r16, 0x4b        ; Subtract Immediate with Carry SBI
3046:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
3048:	40-F6       	brbc 0, .-112         ; Branch if Bit in SREG is Cleared
304A:	B7-32       	cpi r27, 0x27         ; Compare with Immediate
304C:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
304E:	04-DC       	rcall .+6152          ; Relative Call to Subroutine
3050:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
3052:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
3054:	0F-32       	cpi r16, 0x2f         ; Compare with Immediate
3056:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
3058:	25-E0       	ldi r18, 0x05         ; Load Immediate
305A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
305C:	DF-FF       	.data 0xffdf          ; Binary data
305E:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
3060:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
3062:	00-23       	and r16, r16          ; Logical AND
3064:	C0-17       	cp r28, r16           ; Compare
3066:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
3068:	23-10       	cpse r2, r3           ; Compare Skip if Equal
306A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
306C:	71-FD       	sbrc r23, 1           ; Skip if Bit in Register is Cleared
306E:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
3070:	0B-FE       	.data 0xfe0b          ; Binary data
3072:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
3074:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
3076:	DF-F8       	.data 0xf8df          ; Binary data
3078:	90-80       	ld r9, Z              ; Load Indirect from Data Space to Register
307A:	D8-F8       	.data 0xf8d8          ; Binary data
307C:	00-00       	nop                   ; No Operation
307E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3080:	67-FD       	sbrc r22, 7           ; Skip if Bit in Register is Cleared
3082:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
3084:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
3086:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3088:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
308A:	00-22       	and r0, r16           ; Logical AND
308C:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
308E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3090:	C5-FD       	sbrc r28, 5           ; Skip if Bit in Register is Cleared
3092:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
3094:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
3096:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
3098:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
309A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
309C:	0D-FC       	.data 0xfc0d          ; Binary data
309E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30A0:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
30A2:	C8-F8       	.data 0xf8c8          ; Binary data
30A4:	00-00       	nop                   ; No Operation
30A6:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
30A8:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
30AA:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
30AC:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
30AE:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
30B0:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
30B2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30B4:	EB-F8       	.data 0xf8eb          ; Binary data
30B6:	1A-49       	sbci r17, 0x9a        ; Subtract Immediate with Carry SBI
30B8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30BA:	E8-F8       	.data 0xf8e8          ; Binary data
30BC:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
30BE:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
30C0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
30C2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30C4:	97-F9       	bld r25, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
30C6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
30C8:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
30CA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30CC:	DF-F8       	.data 0xf8df          ; Binary data
30CE:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
30D0:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
30D2:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
30D4:	C9-10       	cpse r12, r9          ; Compare Skip if Equal
30D6:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
30D8:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
30DA:	FC-FC       	.data 0xfcfc          ; Binary data
30DC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30DE:	8A-F9       	.data 0xf98a          ; Binary data
30E0:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
30E2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
30E4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30E6:	D2-F8       	bld r13, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
30E8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
30EA:	9E-FB       	.data 0xfb9e          ; Binary data
30EC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
30EE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
30F0:	00-22       	and r0, r16           ; Logical AND
30F2:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
30F4:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
30F6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
30F8:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
30FA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
30FC:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
30FE:	FF-1F       	adc r31, r31          ; Add with Carry
3100:	84-9D       	mul r24, r4           ; Multiply Unsigned
3102:	FF-1F       	adc r31, r31          ; Add with Carry
3104:	5C-F9       	.data 0xf95c          ; Binary data
3106:	FF-1F       	adc r31, r31          ; Add with Carry
3108:	64-92       	xch Z, r6             ; Exchange
310A:	FF-1F       	adc r31, r31          ; Add with Carry
310C:	67-66       	ori r22, 0x67         ; Logical OR with Immediate
310E:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
3110:	00-00       	nop                   ; No Operation
3112:	69-40       	sbci r22, 0x09        ; Subtract Immediate with Carry SBI
3114:	E4-92       	xch Z, r14            ; Exchange
3116:	FF-1F       	adc r31, r31          ; Add with Carry
3118:	1C-DF       	rcall .+7736          ; Relative Call to Subroutine
311A:	FF-1F       	adc r31, r31          ; Add with Carry
311C:	20-DF       	rcall .+7744          ; Relative Call to Subroutine
311E:	FF-1F       	adc r31, r31          ; Add with Carry
3120:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
3122:	09-44       	sbci r16, 0x49        ; Subtract Immediate with Carry SBI
3124:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
3126:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3128:	08-2B       	or r16, r24           ; Logical OR
312A:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
312C:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
312E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3130:	00-2B       	or r16, r16           ; Logical OR
3132:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
3134:	07-4A       	sbci r16, 0xa7        ; Subtract Immediate with Carry SBI
3136:	10-79       	andi r17, 0x90        ; Logical AND with Immediate
3138:	30-B9       	out 0x00, r19         ; Store Register to I/O Location
313A:	01-2B       	or r16, r17           ; Logical OR
313C:	04-DD       	rcall .+6664          ; Relative Call to Subroutine
313E:	10-7F       	andi r17, 0xf0        ; Logical AND with Immediate
3140:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
3142:	00-20       	and r0, r0            ; Logical AND
3144:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
3146:	00-20       	and r0, r0            ; Logical AND
3148:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
314A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
314C:	48-F9       	.data 0xf948          ; Binary data
314E:	FF-1F       	adc r31, r31          ; Add with Carry
3150:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
3152:	FF-1F       	adc r31, r31          ; Add with Carry
3154:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
3156:	FF-1F       	adc r31, r31          ; Add with Carry
3158:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
315A:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
315C:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
315E:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
3160:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
3162:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
3164:	23-00       	.data 0x0023          ; Binary data
3166:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
3168:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
316A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
316C:	43-F9       	bld r20, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
316E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3170:	7A-51       	subi r23, 0x1a        ; Subtract Immediate
3172:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3174:	93-F9       	bld r25, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
3176:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
3178:	00-21       	and r16, r0           ; Logical AND
317A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
317C:	2D-FB       	.data 0xfb2d          ; Binary data
317E:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
3180:	00-26       	clr r512              ; Clear Register
3182:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3184:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3186:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
3188:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
318A:	88-F9       	.data 0xf988          ; Binary data
318C:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
318E:	00-24       	clr r0                ; Clear Register
3190:	DF-F8       	.data 0xf8df          ; Binary data
3192:	74-90       	lpm r7, Z             ; Load Program Memory
3194:	DF-F8       	.data 0xf8df          ; Binary data
3196:	74-80       	ldd r7, Y+4           ; Load Indirect from Data Space to Register
3198:	00-27       	clr r768              ; Clear Register
319A:	B9-F8       	.data 0xf8b9          ; Binary data
319C:	00-00       	nop                   ; No Operation
319E:	00-11       	cpse r16, r0          ; Compare Skip if Equal
31A0:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31A2:	28-F9       	.data 0xf928          ; Binary data
31A4:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
31A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
31A8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31AA:	24-F9       	bld r18, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
31AC:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
31AE:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31B0:	75-F9       	bld r23, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
31B2:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
31B4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31B6:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
31B8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
31BA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
31BC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31BE:	66-F8       	bld r6, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
31C0:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
31C2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31C4:	61-F8       	bld r6, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
31C6:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
31C8:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
31CA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31CC:	19-FB       	.data 0xfb19          ; Binary data
31CE:	90-B1       	in r25, 0x00          ; Load an I/O Location to Register
31D0:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
31D2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
31D4:	03-EB       	ldi r16, 0xb3         ; Load Immediate
31D6:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
31D8:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
31DA:	32-02       	muls r19, r18         ; Multiply Signed
31DC:	00-23       	and r16, r16          ; Logical AND
31DE:	8D-F8       	.data 0xf88d          ; Binary data
31E0:	04-30       	cpi r16, 0x04         ; Compare with Immediate
31E2:	8D-F8       	.data 0xf88d          ; Binary data
31E4:	05-20       	and r0, r5            ; Logical AND
31E6:	8D-F8       	.data 0xf88d          ; Binary data
31E8:	06-30       	cpi r16, 0x06         ; Compare with Immediate
31EA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
31EC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
31EE:	1C-FB       	.data 0xfb1c          ; Binary data
31F0:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
31F2:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
31F4:	C3-F9       	bld r28, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
31F6:	01-34       	cpi r16, 0x41         ; Compare with Immediate
31F8:	1E-2C       	mov r1, r14           ; Copy Register
31FA:	CE-D1       	rcall .+924           ; Relative Call to Subroutine
31FC:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
31FE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3200:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
3202:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3204:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
3206:	FF-1F       	adc r31, r31          ; Add with Carry
3208:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
320A:	FF-1F       	adc r31, r31          ; Add with Carry
320C:	00-00       	nop                   ; No Operation
320E:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
3210:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3212:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3214:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
3216:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
3218:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
321A:	00-2B       	or r16, r16           ; Logical OR
321C:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
321E:	96-80       	ldd r9, Y+6           ; Load Indirect from Data Space to Register
3220:	4D-4C       	sbci r20, 0xcd        ; Subtract Immediate with Carry SBI
3222:	00-26       	clr r512              ; Clear Register
3224:	DF-F8       	.data 0xf8df          ; Binary data
3226:	44-91       	lpm r20, Z            ; Load Program Memory
3228:	DF-F8       	.data 0xf8df          ; Binary data
322A:	28-A1       	ldd r18, Y+32         ; Load Indirect from Data Space to Register
322C:	27-46       	sbci r18, 0x67        ; Subtract Immediate with Carry SBI
322E:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
3230:	00-2B       	or r16, r16           ; Logical OR
3232:	7E-D0       	rcall .+252           ; Relative Call to Subroutine
3234:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3236:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
3238:	D9-F8       	.data 0xf8d9          ; Binary data
323A:	00-20       	and r0, r0            ; Logical AND
323C:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
323E:	78-DA       	rcall .+5360          ; Relative Call to Subroutine
3240:	00-2B       	or r16, r16           ; Logical OR
3242:	76-DD       	rcall .+6892          ; Relative Call to Subroutine
3244:	22-69       	ori r18, 0x92         ; Logical OR with Immediate
3246:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
3248:	03-08       	sbc r0, r3            ; Subtract with Carry
324A:	88-EA       	ldi r24, 0xa8         ; Load Immediate
324C:	E8-72       	andi r30, 0x28        ; Logical AND with Immediate
324E:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
3250:	E8-72       	andi r30, 0x28        ; Logical AND with Immediate
3252:	91-1E       	adc r9, r17           ; Add with Carry
3254:	ED-29       	or r30, r13           ; Logical OR
3256:	74-D9       	rcall .+4840          ; Relative Call to Subroutine
3258:	4D-E0       	ldi r20, 0x0d         ; Load Immediate
325A:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
325C:	00-0F       	add r16, r16          ; Add without Carry
325E:	04-DB       	rcall .+5640          ; Relative Call to Subroutine
3260:	18-F1       	brbs 0, .+70          ; Branch if Bit in SREG is Set
3262:	00-04       	cpc r0, r0            ; Compare with Carry
3264:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
3266:	01-24       	clr r1                ; Clear Register
3268:	00-E0       	ldi r16, 0x00         ; Load Immediate
326A:	FF-24       	clr r255              ; Clear Register
326C:	64-B2       	in r6, 0x14           ; Load an I/O Location to Register
326E:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
3270:	04-34       	cpi r16, 0x44         ; Compare with Immediate
3272:	00-2C       	mov r0, r0            ; Copy Register
3274:	32-DB       	rcall .+5732          ; Relative Call to Subroutine
3276:	D9-F8       	.data 0xf8d9          ; Binary data
3278:	00-30       	cpi r16, 0x00         ; Compare with Immediate
327A:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
327C:	2E-DA       	rcall .+5212          ; Relative Call to Subroutine
327E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
3280:	CD-FE       	.data 0xfecd          ; Binary data
3282:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
3284:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3286:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3288:	B5-F8       	bld r11, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
328A:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
328C:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
328E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3290:	B1-F8       	bld r11, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
3292:	32-49       	sbci r19, 0x92        ; Subtract Immediate with Carry SBI
3294:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3296:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
3298:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
329A:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
329C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
329E:	F6-FF       	sbrs r31, 6           ; Skip if Bit in Register is Set
32A0:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
32A2:	22-F9       	bld r18, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
32A4:	2E-49       	sbci r18, 0x9e        ; Subtract Immediate with Carry SBI
32A6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
32A8:	F9-F8       	.data 0xf8f9          ; Binary data
32AA:	2E-49       	sbci r18, 0x9e        ; Subtract Immediate with Carry SBI
32AC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
32AE:	EE-FF       	.data 0xffee          ; Binary data
32B0:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
32B2:	05-EB       	ldi r16, 0xb5         ; Load Immediate
32B4:	85-00       	.data 0x0085          ; Binary data
32B6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
32B8:	9D-F8       	.data 0xf89d          ; Binary data
32BA:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
32BC:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
32BE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
32C0:	E3-FF       	sbrs r30, 3           ; Skip if Bit in Register is Set
32C2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
32C4:	D7-FA       	bst r13, 7            ; Bit Store from Bit in Register to T Flag in SREG
32C6:	8D-F8       	.data 0xf88d          ; Binary data
32C8:	08-00       	.data 0x0008          ; Binary data
32CA:	00-23       	and r16, r16          ; Logical AND
32CC:	8D-F8       	.data 0xf88d          ; Binary data
32CE:	09-30       	cpi r16, 0x09         ; Compare with Immediate
32D0:	8D-F8       	.data 0xf88d          ; Binary data
32D2:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
32D4:	A0-B2       	in r10, 0x10          ; Load an I/O Location to Register
32D6:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
32D8:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
32DA:	22-FA       	bst r2, 2             ; Bit Store from Bit in Register to T Flag in SREG
32DC:	10-35       	cpi r17, 0x50         ; Compare with Immediate
32DE:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
32E0:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
32E2:	3C-69       	ori r19, 0x9c         ; Logical OR with Immediate
32E4:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
32E6:	03-08       	sbc r0, r3            ; Subtract with Carry
32E8:	88-EA       	ldi r24, 0xa8         ; Load Immediate
32EA:	E8-72       	andi r30, 0x28        ; Logical AND with Immediate
32EC:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
32EE:	E8-72       	andi r30, 0x28        ; Logical AND with Immediate
32F0:	AA-42       	sbci r26, 0x2a        ; Subtract Immediate with Carry SBI
32F2:	B2-DA       	rcall .+5476          ; Relative Call to Subroutine
32F4:	01-9C       	mul r0, r1            ; Multiply Unsigned
32F6:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
32F8:	04-5C       	subi r16, 0xc4        ; Subtract Immediate
32FA:	2D-11       	cpse r18, r13         ; Compare Skip if Equal
32FC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
32FE:	8E-FE       	.data 0xfe8e          ; Binary data
3300:	06-EB       	ldi r16, 0xb6         ; Load Immediate
3302:	60-10       	cpse r6, r0           ; Compare Skip if Equal
3304:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3306:	76-F8       	bld r7, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
3308:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
330A:	EE-F8       	.data 0xf8ee          ; Binary data
330C:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
330E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3310:	C5-F8       	bld r12, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
3312:	15-49       	sbci r17, 0x95        ; Subtract Immediate with Carry SBI
3314:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3316:	BA-FF       	.data 0xffba          ; Binary data
3318:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
331A:	AC-FA       	.data 0xfaac          ; Binary data
331C:	8D-F8       	.data 0xf88d          ; Binary data
331E:	0C-00       	.data 0x000c          ; Binary data
3320:	00-23       	and r16, r16          ; Logical AND
3322:	8D-F8       	.data 0xf88d          ; Binary data
3324:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
3326:	8D-F8       	.data 0xf88d          ; Binary data
3328:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
332A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
332C:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
332E:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
3330:	25-F9       	bld r18, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
3332:	01-36       	cpi r16, 0x61         ; Compare with Immediate
3334:	1C-34       	cpi r17, 0x4c         ; Compare with Immediate
3336:	DA-F8       	.data 0xf8da          ; Binary data
3338:	00-30       	cpi r16, 0x00         ; Compare with Immediate
333A:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
333C:	3F-F7       	brbc 7, .-50          ; Branch if Bit in SREG is Cleared
333E:	76-AF       	std Y+62, r23         ; Store Indirect From Register to Data Space
3340:	04-E0       	ldi r16, 0x04         ; Load Immediate
3342:	00-2A       	or r0, r16            ; Logical OR
3344:	D7-DB       	rcall .+6062          ; Relative Call to Subroutine
3346:	00-25       	clr r256              ; Clear Register
3348:	01-94       	neg r0                ; Two's Complement
334A:	86-E7       	ldi r24, 0x76         ; Load Immediate
334C:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
334E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3350:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
3352:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3354:	78-92       	.data 0x9278          ; Binary data
3356:	FF-1F       	adc r31, r31          ; Add with Carry
3358:	38-DF       	rcall .+7792          ; Relative Call to Subroutine
335A:	FF-1F       	adc r31, r31          ; Add with Carry
335C:	00-00       	nop                   ; No Operation
335E:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
3360:	00-00       	nop                   ; No Operation
3362:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
3364:	00-00       	nop                   ; No Operation
3366:	F0-42       	sbci r31, 0x20        ; Subtract Immediate with Carry SBI
3368:	00-00       	nop                   ; No Operation
336A:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
336C:	48-92       	.data 0x9248          ; Binary data
336E:	FF-1F       	adc r31, r31          ; Add with Carry
3370:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3372:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3374:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
3376:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
3378:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
337A:	00-2B       	or r16, r16           ; Logical OR
337C:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
337E:	84-80       	ldd r8, Y+4           ; Load Indirect from Data Space to Register
3380:	DF-F8       	.data 0xf8df          ; Binary data
3382:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
3384:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3386:	00-09       	sbc r16, r0           ; Subtract with Carry
3388:	DF-F8       	.data 0xf8df          ; Binary data
338A:	14-A1       	ldd r17, Y+36         ; Load Indirect from Data Space to Register
338C:	5C-46       	sbci r21, 0x6c        ; Subtract Immediate with Carry SBI
338E:	1B-F8       	.data 0xf81b          ; Binary data
3390:	0C-3C       	cpi r16, 0xcc         ; Compare with Immediate
3392:	00-2B       	or r16, r16           ; Logical OR
3394:	70-D0       	rcall .+224           ; Relative Call to Subroutine
3396:	DB-F8       	.data 0xf8db          ; Binary data
3398:	00-20       	and r0, r0            ; Logical AND
339A:	5B-F8       	.data 0xf85b          ; Binary data
339C:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
339E:	D3-1A       	sub r13, r19          ; Subtract Without Carry
33A0:	03-33       	cpi r16, 0x33         ; Compare with Immediate
33A2:	00-2B       	or r16, r16           ; Logical OR
33A4:	68-DD       	rcall .+6864          ; Relative Call to Subroutine
33A6:	37-26       	clr r567              ; Clear Register
33A8:	00-25       	clr r256              ; Clear Register
33AA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
33AC:	37-FE       	sbrs r3, 7            ; Skip if Bit in Register is Set
33AE:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
33B0:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
33B2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33B4:	1F-F8       	.data 0xf81f          ; Binary data
33B6:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
33B8:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
33BA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33BC:	1B-F8       	.data 0xf81b          ; Binary data
33BE:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
33C0:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
33C2:	04-0C       	add r0, r4            ; Add without Carry
33C4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33C6:	16-F8       	bld r1, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
33C8:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
33CA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33CC:	67-F8       	bld r6, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
33CE:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
33D0:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
33D2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33D4:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
33D6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
33D8:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
33DA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
33DC:	57-FF       	sbrs r21, 7           ; Skip if Bit in Register is Set
33DE:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
33E0:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
33E2:	2C-49       	sbci r18, 0x9c        ; Subtract Immediate with Carry SBI
33E4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33E6:	5A-F8       	.data 0xf85a          ; Binary data
33E8:	2B-49       	sbci r18, 0x9b        ; Subtract Immediate with Carry SBI
33EA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
33EC:	4F-FF       	.data 0xff4f          ; Binary data
33EE:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
33F0:	41-FA       	bst r4, 1             ; Bit Store from Bit in Register to T Flag in SREG
33F2:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
33F4:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
33F6:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
33F8:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
33FA:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
33FC:	28-28       	or r2, r8             ; Logical OR
33FE:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
3400:	01-08       	sbc r0, r1            ; Subtract with Carry
3402:	5F-FA       	.data 0xfa5f          ; Binary data
3404:	88-F8       	.data 0xf888          ; Binary data
3406:	01-E0       	ldi r16, 0x01         ; Load Immediate
3408:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
340A:	00-08       	sbc r0, r0            ; Subtract with Carry
340C:	64-27       	clr r868              ; Clear Register
340E:	07-FB       	bst r16, 7            ; Bit Store from Bit in Register to T Flag in SREG
3410:	06-F7       	brbc 6, .-64          ; Branch if Bit in SREG is Cleared
3412:	3F-12       	cpse r3, r31          ; Compare Skip if Equal
3414:	01-37       	cpi r16, 0x71         ; Compare with Immediate
3416:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
3418:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
341A:	0E-0C       	add r0, r14           ; Add without Carry
341C:	05-EB       	ldi r16, 0xb5         ; Load Immediate
341E:	20-10       	cpse r2, r0           ; Compare Skip if Equal
3420:	42-1E       	adc r4, r18           ; Add with Carry
3422:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
3424:	B2-23       	and r27, r18          ; Logical AND
3426:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
3428:	09-D8       	rcall .+4114          ; Relative Call to Subroutine
342A:	8D-F8       	.data 0xf88d          ; Binary data
342C:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
342E:	00-23       	and r16, r16          ; Logical AND
3430:	8D-F8       	.data 0xf88d          ; Binary data
3432:	01-30       	cpi r16, 0x01         ; Compare with Immediate
3434:	8D-F8       	.data 0xf88d          ; Binary data
3436:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
3438:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
343A:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
343C:	9F-F8       	.data 0xf89f          ; Binary data
343E:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
3440:	0E-0C       	add r0, r14           ; Add without Carry
3442:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
3444:	20-10       	cpse r2, r0           ; Compare Skip if Equal
3446:	42-1E       	adc r4, r18           ; Add with Carry
3448:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
344A:	B2-23       	and r27, r18          ; Logical AND
344C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
344E:	09-D8       	rcall .+4114          ; Relative Call to Subroutine
3450:	8D-F8       	.data 0xf88d          ; Binary data
3452:	04-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
3454:	00-23       	and r16, r16          ; Logical AND
3456:	8D-F8       	.data 0xf88d          ; Binary data
3458:	05-30       	cpi r16, 0x05         ; Compare with Immediate
345A:	8D-F8       	.data 0xf88d          ; Binary data
345C:	06-70       	andi r16, 0x06        ; Logical AND with Immediate
345E:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
3460:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
3462:	8C-F8       	.data 0xf88c          ; Binary data
3464:	01-35       	cpi r16, 0x51         ; Compare with Immediate
3466:	64-36       	cpi r22, 0x64         ; Compare with Immediate
3468:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
346A:	22-68       	ori r18, 0x82         ; Logical OR with Immediate
346C:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
346E:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
3470:	D3-1A       	sub r13, r19          ; Subtract Without Carry
3472:	03-33       	cpi r16, 0x33         ; Compare with Immediate
3474:	AB-42       	sbci r26, 0x2b        ; Subtract Immediate with Carry SBI
3476:	98-DC       	rcall .+6448          ; Relative Call to Subroutine
3478:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
347A:	01-09       	sbc r16, r1           ; Subtract with Carry
347C:	0B-F1       	brbs 3, .+66          ; Branch if Bit in SREG is Set
347E:	18-0B       	sbc r17, r24          ; Subtract with Carry
3480:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
3482:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3484:	4B-45       	sbci r20, 0x5b        ; Subtract Immediate with Carry SBI
3486:	81-DC       	rcall .+6402          ; Relative Call to Subroutine
3488:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
348A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
348C:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
348E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3490:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
3492:	FF-1F       	adc r31, r31          ; Add with Carry
3494:	00-00       	nop                   ; No Operation
3496:	D2-42       	sbci r29, 0x22        ; Subtract Immediate with Carry SBI
3498:	00-00       	nop                   ; No Operation
349A:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
349C:	80-FA       	bst r8, 0             ; Bit Store from Bit in Register to T Flag in SREG
349E:	FF-1F       	adc r31, r31          ; Add with Carry
34A0:	00-00       	nop                   ; No Operation
34A2:	70-41       	sbci r23, 0x10        ; Subtract Immediate with Carry SBI
34A4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
34A6:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
34A8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
34AA:	2D-72       	andi r18, 0x2d        ; Logical AND with Immediate
34AC:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
34AE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
34B0:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
34B2:	2D-4A       	sbci r18, 0xad        ; Subtract Immediate with Carry SBI
34B4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
34B6:	01-22       	and r0, r17           ; Logical AND
34B8:	5A-61       	ori r21, 0x1a         ; Logical OR with Immediate
34BA:	9A-61       	ori r25, 0x1a         ; Logical OR with Immediate
34BC:	00-22       	and r0, r16           ; Logical AND
34BE:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
34C0:	20-20       	and r2, r0            ; Logical AND
34C2:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
34C4:	21-20       	and r2, r1            ; Logical AND
34C6:	96-21       	and r25, r6           ; Logical AND
34C8:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
34CA:	22-10       	cpse r2, r2           ; Compare Skip if Equal
34CC:	27-48       	sbci r18, 0x87        ; Subtract Immediate with Carry SBI
34CE:	18-64       	ori r17, 0x48         ; Logical OR with Immediate
34D0:	17-20       	and r1, r7            ; Logical AND
34D2:	58-65       	ori r21, 0x58         ; Logical OR with Immediate
34D4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
34D6:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
34D8:	98-65       	ori r25, 0x58         ; Logical OR with Immediate
34DA:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
34DC:	60-20       	and r6, r0            ; Logical AND
34DE:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
34E0:	61-10       	cpse r6, r1           ; Compare Skip if Equal
34E2:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
34E4:	62-20       	and r6, r2            ; Logical AND
34E6:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
34E8:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
34EA:	80-09       	sbc r24, r0           ; Subtract with Carry
34EC:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
34EE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
34F0:	7E-57       	subi r23, 0x7e        ; Subtract Immediate
34F2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
34F4:	00-08       	sbc r0, r0            ; Subtract with Carry
34F6:	E5-61       	ori r30, 0x15         ; Logical OR with Immediate
34F8:	E5-60       	ori r30, 0x05         ; Logical OR with Immediate
34FA:	A2-69       	ori r26, 0x92         ; Logical OR with Immediate
34FC:	32-20       	and r3, r2            ; Logical AND
34FE:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
3500:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
3502:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3504:	77-FF       	sbrs r23, 7           ; Skip if Bit in Register is Set
3506:	A0-60       	ori r26, 0x00         ; Logical OR with Immediate
3508:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
350A:	23-50       	subi r18, 0x03        ; Subtract Immediate
350C:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
350E:	24-50       	subi r18, 0x04        ; Subtract Immediate
3510:	01-26       	clr r513              ; Clear Register
3512:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3514:	25-60       	ori r18, 0x05         ; Logical OR with Immediate
3516:	20-7D       	andi r18, 0xd0        ; Logical AND with Immediate
3518:	02-21       	and r16, r2           ; Logical AND
351A:	0D-F0       	brbs 5, .+2           ; Branch if Bit in SREG is Set
351C:	CF-FA       	.data 0xfacf          ; Binary data
351E:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3520:	26-60       	ori r18, 0x06         ; Logical OR with Immediate
3522:	26-61       	ori r18, 0x16         ; Logical OR with Immediate
3524:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3526:	38-50       	subi r19, 0x08        ; Subtract Immediate
3528:	E5-62       	ori r30, 0x25         ; Logical OR with Immediate
352A:	27-63       	ori r18, 0x37         ; Logical OR with Immediate
352C:	67-63       	ori r22, 0x37         ; Logical OR with Immediate
352E:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
3530:	3C-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
3532:	40-34       	cpi r20, 0x40         ; Compare with Immediate
3534:	4C-45       	sbci r20, 0x5c        ; Subtract Immediate with Carry SBI
3536:	DE-D1       	rcall .+956           ; Relative Call to Subroutine
3538:	00-23       	and r16, r16          ; Logical AND
353A:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
353C:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
353E:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
3540:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
3542:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
3544:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
3546:	32-44       	sbci r19, 0x42        ; Subtract Immediate with Carry SBI
3548:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
354A:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
354C:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
354E:	96-61       	ori r25, 0x16         ; Logical OR with Immediate
3550:	00-22       	and r0, r16           ; Logical AND
3552:	DA-75       	andi r29, 0x5a        ; Logical AND with Immediate
3554:	18-33       	cpi r17, 0x38         ; Compare with Immediate
3556:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
3558:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
355A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
355C:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
355E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3560:	2C-FC       	.data 0xfc2c          ; Binary data
3562:	FF-1F       	adc r31, r31          ; Add with Carry
3564:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
3566:	FF-1F       	adc r31, r31          ; Add with Carry
3568:	67-66       	ori r22, 0x67         ; Logical OR with Immediate
356A:	8A-42       	sbci r24, 0x2a        ; Subtract Immediate with Carry SBI
356C:	33-B3       	in r19, 0x13          ; Load an I/O Location to Register
356E:	1B-44       	sbci r17, 0x4b        ; Subtract Immediate with Carry SBI
3570:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
3572:	FF-1F       	adc r31, r31          ; Add with Carry
3574:	8C-F8       	.data 0xf88c          ; Binary data
3576:	FF-1F       	adc r31, r31          ; Add with Carry
3578:	74-FB       	bst r23, 4            ; Bit Store from Bit in Register to T Flag in SREG
357A:	FF-1F       	adc r31, r31          ; Add with Carry
357C:	D0-F2       	brbs 0, .-76          ; Branch if Bit in SREG is Set
357E:	FF-1F       	adc r31, r31          ; Add with Carry
3580:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3582:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3584:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
3586:	00-EB       	ldi r16, 0xb0         ; Load Immediate
3588:	40-02       	muls r20, r16         ; Multiply Signed
358A:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
358C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
358E:	C2-03       	fmuls r20, r18        ; Fractional Multiply Signed
3590:	DB-7D       	andi r29, 0xdb        ; Logical AND with Immediate
3592:	00-2B       	or r16, r16           ; Logical OR
3594:	70-D0       	rcall .+224           ; Relative Call to Subroutine
3596:	00-24       	clr r0                ; Clear Register
3598:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
359A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
359C:	C2-07       	cpc r28, r18          ; Compare with Carry
359E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
35A0:	00-08       	sbc r0, r0            ; Subtract with Carry
35A2:	DF-F8       	.data 0xf8df          ; Binary data
35A4:	EC-B0       	in r14, 0x0c          ; Load an I/O Location to Register
35A6:	DF-F8       	.data 0xf8df          ; Binary data
35A8:	EC-A0       	ldd r14, Y+36         ; Load Indirect from Data Space to Register
35AA:	40-E0       	ldi r20, 0x00         ; Load Immediate
35AC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
35AE:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
35B0:	3B-F9       	.data 0xf93b          ; Binary data
35B2:	00-28       	or r0, r0             ; Logical OR
35B4:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
35B6:	00-30       	cpi r16, 0x00         ; Compare with Immediate
35B8:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
35BA:	01-20       	and r0, r1            ; Logical AND
35BC:	00-E0       	ldi r16, 0x00         ; Load Immediate
35BE:	FF-20       	and r15, r15          ; Logical AND
35C0:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
35C2:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
35C4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
35C6:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
35C8:	15-FF       	sbrs r17, 5           ; Skip if Bit in Register is Set
35CA:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
35CC:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
35CE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
35D0:	5D-FE       	.data 0xfe5d          ; Binary data
35D2:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
35D4:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
35D6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
35D8:	FF-F8       	.data 0xf8ff          ; Binary data
35DA:	38-BB       	out 0x18, r19         ; Store Register to I/O Location
35DC:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
35DE:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
35E0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
35E2:	08-FF       	.data 0xff08          ; Binary data
35E4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
35E6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
35E8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
35EA:	0A-F9       	.data 0xf90a          ; Binary data
35EC:	F0-B9       	out 0x00, r31         ; Store Register to I/O Location
35EE:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
35F0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
35F2:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
35F4:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
35F6:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
35F8:	F9-FE       	.data 0xfef9          ; Binary data
35FA:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
35FC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
35FE:	02-F8       	bld r0, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
3600:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3602:	72-FF       	sbrs r23, 2           ; Skip if Bit in Register is Set
3604:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
3606:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3608:	49-FF       	.data 0xff49          ; Binary data
360A:	20-49       	sbci r18, 0x90        ; Subtract Immediate with Carry SBI
360C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
360E:	3E-FE       	.data 0xfe3e          ; Binary data
3610:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3612:	30-F9       	bld r19, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
3614:	8D-F8       	.data 0xf88d          ; Binary data
3616:	08-00       	.data 0x0008          ; Binary data
3618:	14-23       	and r17, r20          ; Logical AND
361A:	8D-F8       	.data 0xf88d          ; Binary data
361C:	09-30       	cpi r16, 0x09         ; Compare with Immediate
361E:	00-23       	and r16, r16          ; Logical AND
3620:	8D-F8       	.data 0xf88d          ; Binary data
3622:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
3624:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
3626:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
3628:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
362A:	D2-F8       	bld r13, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
362C:	01-34       	cpi r16, 0x41         ; Compare with Immediate
362E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
3630:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3632:	E0-FE       	sbrs r14, 0           ; Skip if Bit in Register is Set
3634:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
3636:	3D-68       	ori r19, 0x8d         ; Logical OR with Immediate
3638:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
363A:	79-68       	ori r23, 0x89         ; Logical OR with Immediate
363C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
363E:	24-FE       	sbrs r2, 4            ; Skip if Bit in Register is Set
3640:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
3642:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
3644:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3646:	E6-F8       	bld r14, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
3648:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
364A:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
364C:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
364E:	00-E0       	ldi r16, 0x00         ; Load Immediate
3650:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3652:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
3654:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3656:	D4-F8       	bld r13, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
3658:	00-28       	or r0, r0             ; Logical OR
365A:	A7-D1       	rcall .+846           ; Relative Call to Subroutine
365C:	FF-23       	and r31, r31          ; Logical AND
365E:	8D-F8       	.data 0xf88d          ; Binary data
3660:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
3662:	00-23       	and r16, r16          ; Logical AND
3664:	8D-F8       	.data 0xf88d          ; Binary data
3666:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
3668:	8D-F8       	.data 0xf88d          ; Binary data
366A:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
366C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
366E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3670:	DB-F8       	.data 0xf8db          ; Binary data
3672:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
3674:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
3676:	16-F8       	bld r1, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
3678:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
367A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
367C:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
367E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3680:	D0-F2       	brbs 0, .-76          ; Branch if Bit in SREG is Set
3682:	FF-1F       	adc r31, r31          ; Add with Carry
3684:	2C-FC       	.data 0xfc2c          ; Binary data
3686:	FF-1F       	adc r31, r31          ; Add with Carry
3688:	0C-00       	.data 0x000c          ; Binary data
368A:	00-20       	and r0, r0            ; Logical AND
368C:	00-00       	nop                   ; No Operation
368E:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
3690:	00-00       	nop                   ; No Operation
3692:	C8-42       	sbci r28, 0x28        ; Subtract Immediate with Carry SBI
3694:	00-00       	nop                   ; No Operation
3696:	D2-42       	sbci r29, 0x22        ; Subtract Immediate with Carry SBI
3698:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
369A:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
369C:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
369E:	01-EB       	ldi r16, 0xb1         ; Load Immediate
36A0:	41-02       	muls r20, r17         ; Multiply Signed
36A2:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
36A4:	03-EB       	ldi r16, 0xb3         ; Load Immediate
36A6:	C2-03       	fmuls r20, r18        ; Fractional Multiply Signed
36A8:	1B-69       	ori r17, 0x9b         ; Logical OR with Immediate
36AA:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
36AC:	5D-D0       	rcall .+186           ; Relative Call to Subroutine
36AE:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
36B0:	80-01       	movw r16, r0          ; Copy Register Word
36B2:	1A-18       	sub r1, r10           ; Subtract Without Carry
36B4:	1F-58       	subi r17, 0x8f        ; Subtract Immediate
36B6:	10-69       	ori r17, 0x90         ; Logical OR with Immediate
36B8:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
36BA:	9C-FE       	.data 0xfe9c          ; Binary data
36BC:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
36BE:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
36C0:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
36C2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
36C4:	E3-FD       	sbrc r30, 3           ; Skip if Bit in Register is Cleared
36C6:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
36C8:	04-EB       	ldi r16, 0xb4         ; Load Immediate
36CA:	44-02       	muls r20, r20         ; Multiply Signed
36CC:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
36CE:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
36D0:	32-50       	subi r19, 0x02        ; Subtract Immediate
36D2:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
36D4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
36D6:	D8-FD       	.data 0xfdd8          ; Binary data
36D8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
36DA:	A6-F8       	bld r10, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
36DC:	00-28       	or r0, r0             ; Logical OR
36DE:	05-DB       	rcall .+5642          ; Relative Call to Subroutine
36E0:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
36E2:	00-09       	sbc r16, r0           ; Subtract with Carry
36E4:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
36E6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
36E8:	01-09       	sbc r16, r1           ; Subtract with Carry
36EA:	01-E0       	ldi r16, 0x01         ; Load Immediate
36EC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
36EE:	FF-09       	sbc r31, r15          ; Subtract with Carry
36F0:	04-EB       	ldi r16, 0xb4         ; Load Immediate
36F2:	44-04       	cpc r4, r4            ; Compare with Carry
36F4:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
36F6:	03-EB       	ldi r16, 0xb3         ; Load Immediate
36F8:	C4-04       	cpc r12, r4           ; Compare with Carry
36FA:	64-68       	ori r22, 0x84         ; Logical OR with Immediate
36FC:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
36FE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
3700:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3702:	C2-FD       	sbrc r28, 2           ; Skip if Bit in Register is Cleared
3704:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3706:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
3708:	00-28       	or r0, r0             ; Logical OR
370A:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
370C:	03-1C       	adc r0, r3            ; Add with Carry
370E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
3710:	01-23       	and r16, r17          ; Logical AND
3712:	00-E0       	ldi r16, 0x00         ; Load Immediate
3714:	FF-23       	and r31, r31          ; Logical AND
3716:	4F-FA       	.data 0xfa4f          ; Binary data
3718:	89-F2       	brbs 1, .-94          ; Branch if Bit in SREG is Set
371A:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
371C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
371E:	27-D1       	rcall .+590           ; Relative Call to Subroutine
3720:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3722:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
3724:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3726:	B0-FD       	sbrc r27, 0           ; Skip if Bit in Register is Cleared
3728:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
372A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
372C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
372E:	AC-FD       	.data 0xfdac          ; Binary data
3730:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
3732:	7A-F8       	.data 0xf87a          ; Binary data
3734:	00-28       	or r0, r0             ; Logical OR
3736:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
3738:	05-1C       	adc r0, r5            ; Add with Carry
373A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
373C:	01-25       	clr r257              ; Clear Register
373E:	00-E0       	ldi r16, 0x00         ; Load Immediate
3740:	FF-25       	clr r511              ; Clear Register
3742:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3744:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
3746:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3748:	9F-FD       	.data 0xfd9f          ; Binary data
374A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
374C:	6D-F8       	.data 0xf86d          ; Binary data
374E:	00-28       	or r0, r0             ; Logical OR
3750:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
3752:	03-1C       	adc r0, r3            ; Add with Carry
3754:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
3756:	01-23       	and r16, r17          ; Logical AND
3758:	00-E0       	ldi r16, 0x00         ; Load Immediate
375A:	FF-23       	and r31, r31          ; Logical AND
375C:	68-B2       	in r6, 0x18           ; Load an I/O Location to Register
375E:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
3760:	C0-1A       	sub r12, r16          ; Subtract Without Carry
3762:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
3764:	01-20       	and r0, r1            ; Logical AND
3766:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3768:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
376A:	00-20       	and r0, r0            ; Logical AND
376C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
376E:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
3770:	01-20       	and r0, r1            ; Logical AND
3772:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3774:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
3776:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3778:	D0-F2       	brbs 0, .-76          ; Branch if Bit in SREG is Set
377A:	FF-1F       	adc r31, r31          ; Add with Carry
377C:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
377E:	FF-1F       	adc r31, r31          ; Add with Carry
3780:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3782:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3784:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
3786:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
3788:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
378A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
378C:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
378E:	23-00       	.data 0x0023          ; Binary data
3790:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
3792:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
3794:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3796:	2E-FE       	.data 0xfe2e          ; Binary data
3798:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
379A:	7A-51       	subi r23, 0x1a        ; Subtract Immediate
379C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
379E:	7E-FE       	.data 0xfe7e          ; Binary data
37A0:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
37A2:	00-21       	and r16, r0           ; Logical AND
37A4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
37A6:	18-F8       	.data 0xf818          ; Binary data
37A8:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
37AA:	00-27       	clr r768              ; Clear Register
37AC:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
37AE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
37B0:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
37B2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
37B4:	73-FE       	sbrs r7, 3            ; Skip if Bit in Register is Set
37B6:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
37B8:	00-24       	clr r0                ; Clear Register
37BA:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
37BC:	A8-01       	movw r20, r16         ; Copy Register Word
37BE:	03-EB       	ldi r16, 0xb3         ; Load Immediate
37C0:	00-0A       	sbc r0, r16           ; Subtract with Carry
37C2:	DF-F8       	.data 0xf8df          ; Binary data
37C4:	68-90       	.data 0x9068          ; Binary data
37C6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
37C8:	00-08       	sbc r0, r0            ; Subtract with Carry
37CA:	20-30       	cpi r18, 0x00         ; Compare with Immediate
37CC:	1D-18       	sub r1, r13           ; Subtract Without Carry
37CE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
37D0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
37D2:	10-FE       	sbrs r1, 0            ; Skip if Bit in Register is Set
37D4:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
37D6:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
37D8:	61-FE       	sbrs r6, 1            ; Skip if Bit in Register is Set
37DA:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
37DC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
37DE:	12-FF       	sbrs r17, 2           ; Skip if Bit in Register is Set
37E0:	DA-F8       	.data 0xf8da          ; Binary data
37E2:	00-10       	cpse r0, r0           ; Compare Skip if Equal
37E4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
37E6:	52-FD       	sbrc r21, 2           ; Skip if Bit in Register is Cleared
37E8:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
37EA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
37EC:	4D-FD       	.data 0xfd4d          ; Binary data
37EE:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
37F0:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
37F2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
37F4:	05-F8       	bld r0, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
37F6:	70-B1       	in r23, 0x00          ; Load an I/O Location to Register
37F8:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
37FA:	8D-F8       	.data 0xf88d          ; Binary data
37FC:	04-30       	cpi r16, 0x04         ; Compare with Immediate
37FE:	6B-78       	andi r22, 0x8b        ; Logical AND with Immediate
3800:	8D-F8       	.data 0xf88d          ; Binary data
3802:	05-30       	cpi r16, 0x05         ; Compare with Immediate
3804:	AB-78       	andi r26, 0x8b        ; Logical AND with Immediate
3806:	8D-F8       	.data 0xf88d          ; Binary data
3808:	06-30       	cpi r16, 0x06         ; Compare with Immediate
380A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
380C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
380E:	0C-F8       	.data 0xf80c          ; Binary data
3810:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
3812:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3814:	C7-FE       	sbrs r12, 7           ; Skip if Bit in Register is Set
3816:	01-34       	cpi r16, 0x41         ; Compare with Immediate
3818:	1E-2C       	mov r1, r14           ; Copy Register
381A:	D8-D1       	rcall .+944           ; Relative Call to Subroutine
381C:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
381E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3820:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
3822:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3824:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
3826:	FF-1F       	adc r31, r31          ; Add with Carry
3828:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
382A:	FF-1F       	adc r31, r31          ; Add with Carry
382C:	00-00       	nop                   ; No Operation
382E:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
3830:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3832:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3834:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
3836:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
3838:	A5-4B       	sbci r26, 0xb5        ; Subtract Immediate with Carry SBI
383A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
383C:	27-2B       	or r18, r23           ; Logical OR
383E:	01-DC       	rcall .+6146          ; Relative Call to Subroutine
3840:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
3842:	9E-FF       	.data 0xff9e          ; Binary data
3844:	A3-4B       	sbci r26, 0xb3        ; Subtract Immediate with Carry SBI
3846:	03-EB       	ldi r16, 0xb3         ; Load Immediate
3848:	89-13       	cpse r24, r25         ; Compare Skip if Equal
384A:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
384C:	25-30       	cpi r18, 0x05         ; Compare with Immediate
384E:	00-2B       	or r16, r16           ; Logical OR
3850:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
3852:	3A-81       	ldd r19, Y+2          ; Load Indirect from Data Space to Register
3854:	9F-4B       	sbci r25, 0xbf        ; Subtract Immediate with Carry SBI
3856:	03-EB       	ldi r16, 0xb3         ; Load Immediate
3858:	89-13       	cpse r24, r25         ; Compare Skip if Equal
385A:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
385C:	27-30       	cpi r18, 0x07         ; Compare with Immediate
385E:	00-2B       	or r16, r16           ; Logical OR
3860:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
3862:	BC-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
3864:	9B-4B       	sbci r25, 0xbb        ; Subtract Immediate with Carry SBI
3866:	03-EB       	ldi r16, 0xb3         ; Load Immediate
3868:	89-13       	cpse r24, r25         ; Compare Skip if Equal
386A:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
386C:	28-30       	cpi r18, 0x08         ; Compare with Immediate
386E:	00-2B       	or r16, r16           ; Logical OR
3870:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
3872:	B4-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
3874:	97-4B       	sbci r25, 0xb7        ; Subtract Immediate with Carry SBI
3876:	03-EB       	ldi r16, 0xb3         ; Load Immediate
3878:	89-13       	cpse r24, r25         ; Compare Skip if Equal
387A:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
387C:	38-30       	cpi r19, 0x08         ; Compare with Immediate
387E:	6B-B1       	in r22, 0x0b          ; Load an I/O Location to Register
3880:	94-4B       	sbci r25, 0xb4        ; Subtract Immediate with Carry SBI
3882:	03-EB       	ldi r16, 0xb3         ; Load Immediate
3884:	89-13       	cpse r24, r25         ; Compare Skip if Equal
3886:	D8-6A       	ori r29, 0xa8         ; Logical OR with Immediate
3888:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
388A:	B4-FD       	sbrc r27, 4           ; Skip if Bit in Register is Cleared
388C:	92-4B       	sbci r25, 0xb2        ; Subtract Immediate with Carry SBI
388E:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
3890:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3892:	04-FE       	sbrs r0, 4            ; Skip if Bit in Register is Set
3894:	00-21       	and r16, r0           ; Logical AND
3896:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3898:	BD-FF       	.data 0xffbd          ; Binary data
389A:	48-B9       	out 0x08, r20         ; Store Register to I/O Location
389C:	00-24       	clr r0                ; Clear Register
389E:	DF-F8       	.data 0xf8df          ; Binary data
38A0:	34-B2       	in r3, 0x14           ; Load an I/O Location to Register
38A2:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
38A4:	89-19       	sub r24, r9           ; Subtract Without Carry
38A6:	0B-EB       	ldi r16, 0xbb         ; Load Immediate
38A8:	09-07       	cpc r16, r25          ; Compare with Carry
38AA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
38AC:	00-08       	sbc r0, r0            ; Subtract with Carry
38AE:	7D-E0       	ldi r23, 0x0d         ; Load Immediate
38B0:	00-24       	clr r0                ; Clear Register
38B2:	88-4E       	sbci r24, 0xe8        ; Subtract Immediate with Carry SBI
38B4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
38B6:	89-18       	sub r8, r9            ; Subtract Without Carry
38B8:	06-EB       	ldi r16, 0xb6         ; Load Immediate
38BA:	08-05       	cpc r16, r8           ; Compare with Carry
38BC:	DF-F8       	.data 0xf8df          ; Binary data
38BE:	18-A2       	std Y+32, r1          ; Store Indirect From Register to Data Space
38C0:	2F-68       	ori r18, 0x8f         ; Logical OR with Immediate
38C2:	A8-68       	ori r26, 0x88         ; Logical OR with Immediate
38C4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
38C6:	B0-FF       	sbrs r27, 0           ; Skip if Bit in Register is Set
38C8:	00-28       	or r0, r0             ; Logical OR
38CA:	05-DB       	rcall .+5642          ; Relative Call to Subroutine
38CC:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
38CE:	00-0E       	add r0, r16           ; Add without Carry
38D0:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
38D2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
38D4:	01-0E       	add r0, r17           ; Add without Carry
38D6:	01-E0       	ldi r16, 0x01         ; Load Immediate
38D8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
38DA:	FF-0E       	add r15, r31          ; Add without Carry
38DC:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
38DE:	20-02       	muls r18, r16         ; Multiply Signed
38E0:	B3-18       	sub r11, r3           ; Subtract Without Carry
38E2:	64-20       	and r6, r4            ; Logical AND
38E4:	B1-5C       	subi r27, 0xc1        ; Subtract Immediate
38E6:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
38E8:	50-F1       	brbs 0, .+84          ; Branch if Bit in SREG is Set
38EA:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
38EC:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
38EE:	50-F2       	brbs 0, .-108         ; Branch if Bit in SREG is Set
38F0:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
38F2:	00-20       	and r0, r0            ; Logical AND
38F4:	83-FA       	bst r8, 3             ; Bit Store from Bit in Register to T Flag in SREG
38F6:	50-F3       	brbs 0, .-44          ; Branch if Bit in SREG is Set
38F8:	8D-F8       	.data 0xf88d          ; Binary data
38FA:	04-10       	cpse r0, r4           ; Compare Skip if Equal
38FC:	8D-F8       	.data 0xf88d          ; Binary data
38FE:	05-20       	and r0, r5            ; Logical AND
3900:	8D-F8       	.data 0xf88d          ; Binary data
3902:	06-30       	cpi r16, 0x06         ; Compare with Immediate
3904:	4F-FA       	.data 0xfa4f          ; Binary data
3906:	8E-F0       	brbs 6, .+34          ; Branch if Bit in SREG is Set
3908:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
390A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
390C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
390E:	72-FD       	sbrc r23, 2           ; Skip if Bit in Register is Cleared
3910:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3912:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3914:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3916:	BA-FC       	.data 0xfcba          ; Binary data
3918:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
391A:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
391C:	59-FF       	.data 0xff59          ; Binary data
391E:	01-34       	cpi r16, 0x41         ; Compare with Immediate
3920:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
3922:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3924:	67-FD       	sbrc r22, 7           ; Skip if Bit in Register is Cleared
3926:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3928:	E8-6A       	ori r30, 0xa8         ; Logical OR with Immediate
392A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
392C:	63-FD       	sbrc r22, 3           ; Skip if Bit in Register is Cleared
392E:	DA-F8       	.data 0xf8da          ; Binary data
3930:	00-10       	cpse r0, r0           ; Compare Skip if Equal
3932:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3934:	B3-FD       	sbrc r27, 3           ; Skip if Bit in Register is Cleared
3936:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3938:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
393A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
393C:	4D-FF       	.data 0xff4d          ; Binary data
393E:	00-28       	or r0, r0             ; Logical OR
3940:	BE-D1       	rcall .+892           ; Relative Call to Subroutine
3942:	AB-E7       	ldi r26, 0x7b         ; Load Immediate
3944:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3946:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3948:	6F-FF       	.data 0xff6f          ; Binary data
394A:	00-28       	or r0, r0             ; Logical OR
394C:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
394E:	00-30       	cpi r16, 0x00         ; Compare with Immediate
3950:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
3952:	01-20       	and r0, r1            ; Logical AND
3954:	00-E0       	ldi r16, 0x00         ; Load Immediate
3956:	FF-20       	and r15, r15          ; Logical AND
3958:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
395A:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
395C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
395E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3960:	49-FD       	.data 0xfd49          ; Binary data
3962:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3964:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
3966:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3968:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
396A:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
396C:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
396E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3970:	33-FF       	sbrs r19, 3           ; Skip if Bit in Register is Set
3972:	D0-B9       	out 0x00, r29         ; Store Register to I/O Location
3974:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
3976:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
3978:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
397A:	3C-FD       	.data 0xfd3c          ; Binary data
397C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
397E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
3980:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3982:	3E-FF       	.data 0xff3e          ; Binary data
3984:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
3986:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
3988:	20-02       	muls r18, r16         ; Multiply Signed
398A:	0B-EB       	ldi r16, 0xbb         ; Load Immediate
398C:	02-03       	mulsu r16, r18        ; Multiply Signed with Unsigned
398E:	1B-F8       	.data 0xf81b          ; Binary data
3990:	02-20       	and r0, r2            ; Logical AND
3992:	8D-F8       	.data 0xf88d          ; Binary data
3994:	08-20       	and r0, r8            ; Logical AND
3996:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
3998:	8D-F8       	.data 0xf88d          ; Binary data
399A:	09-20       	and r0, r9            ; Logical AND
399C:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
399E:	8D-F8       	.data 0xf88d          ; Binary data
39A0:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
39A2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
39A4:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
39A6:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
39A8:	13-FF       	sbrs r17, 3           ; Skip if Bit in Register is Set
39AA:	01-34       	cpi r16, 0x41         ; Compare with Immediate
39AC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
39AE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39B0:	21-FD       	sbrc r18, 1           ; Skip if Bit in Register is Cleared
39B2:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
39B4:	3D-68       	ori r19, 0x8d         ; Logical OR with Immediate
39B6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
39B8:	79-68       	ori r23, 0x89         ; Logical OR with Immediate
39BA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39BC:	65-FC       	sbrc r6, 5            ; Skip if Bit in Register is Cleared
39BE:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
39C0:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
39C2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39C4:	27-FF       	sbrs r18, 7           ; Skip if Bit in Register is Set
39C6:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
39C8:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
39CA:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
39CC:	00-E0       	ldi r16, 0x00         ; Load Immediate
39CE:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
39D0:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
39D2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39D4:	15-FF       	sbrs r17, 5           ; Skip if Bit in Register is Set
39D6:	00-28       	or r0, r0             ; Logical OR
39D8:	B4-D1       	rcall .+872           ; Relative Call to Subroutine
39DA:	75-E0       	ldi r23, 0x05         ; Load Immediate
39DC:	3D-4A       	sbci r19, 0xad        ; Subtract Immediate with Carry SBI
39DE:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
39E0:	89-13       	cpse r24, r25         ; Compare Skip if Equal
39E2:	D1-18       	sub r13, r1           ; Subtract Without Carry
39E4:	D6-58       	subi r29, 0x86        ; Subtract Immediate
39E6:	08-69       	ori r16, 0x98         ; Logical OR with Immediate
39E8:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39EA:	04-FD       	sbrc r16, 4           ; Skip if Bit in Register is Cleared
39EC:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
39EE:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
39F0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
39F2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39F4:	49-FC       	.data 0xfc49          ; Binary data
39F6:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39F8:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
39FA:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
39FC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
39FE:	FA-FC       	.data 0xfcfa          ; Binary data
3A00:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3A02:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3A04:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
3A06:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3A08:	41-FC       	sbrc r4, 1            ; Skip if Bit in Register is Cleared
3A0A:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3A0C:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3A0E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3A10:	ED-FE       	.data 0xfeed          ; Binary data
3A12:	00-28       	or r0, r0             ; Logical OR
3A14:	58-D0       	rcall .+176           ; Relative Call to Subroutine
3A16:	DF-F8       	.data 0xf8df          ; Binary data
3A18:	BC-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
3A1A:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
3A1C:	89-19       	sub r24, r9           ; Subtract Without Carry
3A1E:	08-EB       	ldi r16, 0xb8         ; Load Immediate
3A20:	09-04       	cpc r0, r9            ; Compare with Carry
3A22:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
3A24:	20-07       	cpc r18, r16          ; Compare with Carry
3A26:	08-EB       	ldi r16, 0xb8         ; Load Immediate
3A28:	07-06       	cpc r0, r23           ; Compare with Carry
3A2A:	18-F8       	.data 0xf818          ; Binary data
3A2C:	07-E0       	ldi r16, 0x07         ; Load Immediate
3A2E:	71-78       	andi r23, 0x81        ; Logical AND with Immediate
3A30:	B2-78       	andi r27, 0x82        ; Logical AND with Immediate
3A32:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3A34:	28-30       	cpi r18, 0x08         ; Compare with Immediate
3A36:	03-B3       	in r16, 0x13          ; Load an I/O Location to Register
3A38:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
3A3A:	29-48       	sbci r18, 0x89        ; Subtract Immediate with Carry SBI
3A3C:	00-68       	ori r16, 0x80         ; Logical OR with Immediate
3A3E:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
3A40:	1B-DB       	rcall .+5686          ; Relative Call to Subroutine
3A42:	00-20       	and r0, r0            ; Logical AND
3A44:	64-21       	and r22, r4           ; Logical AND
3A46:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
3A48:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
3A4A:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
3A4C:	00-20       	and r0, r0            ; Logical AND
3A4E:	64-21       	and r22, r4           ; Logical AND
3A50:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
3A52:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
3A54:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
3A56:	00-20       	and r0, r0            ; Logical AND
3A58:	64-21       	and r22, r4           ; Logical AND
3A5A:	0F-F0       	brbs 7, .+2           ; Branch if Bit in SREG is Set
3A5C:	3B-F8       	.data 0xf83b          ; Binary data
3A5E:	18-F8       	.data 0xf818          ; Binary data
3A60:	07-E0       	ldi r16, 0x07         ; Load Immediate
3A62:	8E-FA       	.data 0xfa8e          ; Binary data
3A64:	5B-FE       	.data 0xfe5b          ; Binary data
3A66:	5F-FA       	.data 0xfa5f          ; Binary data
3A68:	8E-FE       	.data 0xfe8e          ; Binary data
3A6A:	71-78       	andi r23, 0x81        ; Logical AND with Immediate
3A6C:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
3A6E:	5A-F1       	brbs 2, .+86          ; Branch if Bit in SREG is Set
3A70:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
3A72:	B2-78       	andi r27, 0x82        ; Logical AND with Immediate
3A74:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
3A76:	50-F2       	brbs 0, .-108         ; Branch if Bit in SREG is Set
3A78:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
3A7A:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3A7C:	27-30       	cpi r18, 0x07         ; Compare with Immediate
3A7E:	43-B1       	in r20, 0x03          ; Load an I/O Location to Register
3A80:	FF-23       	and r31, r31          ; Logical AND
3A82:	8D-F8       	.data 0xf88d          ; Binary data
3A84:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
3A86:	8D-F8       	.data 0xf88d          ; Binary data
3A88:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
3A8A:	00-23       	and r16, r16          ; Logical AND
3A8C:	8D-F8       	.data 0xf88d          ; Binary data
3A8E:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
3A90:	05-E0       	ldi r16, 0x05         ; Load Immediate
3A92:	8D-F8       	.data 0xf88d          ; Binary data
3A94:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
3A96:	8D-F8       	.data 0xf88d          ; Binary data
3A98:	0D-10       	cpse r0, r13          ; Compare Skip if Equal
3A9A:	8D-F8       	.data 0xf88d          ; Binary data
3A9C:	0E-20       	and r0, r14           ; Logical AND
3A9E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
3AA0:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
3AA2:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3AA4:	FF-FD       	.data 0xfdff          ; Binary data
3AA6:	01-35       	cpi r16, 0x51         ; Compare with Immediate
3AA8:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
3AAA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3AAC:	A3-FC       	sbrc r10, 3           ; Skip if Bit in Register is Cleared
3AAE:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
3AB0:	20-69       	ori r18, 0x90         ; Logical OR with Immediate
3AB2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3AB4:	9F-FC       	.data 0xfc9f          ; Binary data
3AB6:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
3AB8:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3ABA:	E8-FB       	.data 0xfbe8          ; Binary data
3ABC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3ABE:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
3AC0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3AC2:	94-FE       	sbrs r9, 4            ; Skip if Bit in Register is Set
3AC4:	00-28       	or r0, r0             ; Logical OR
3AC6:	AC-D1       	rcall .+856           ; Relative Call to Subroutine
3AC8:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
3ACA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3ACC:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
3ACE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3AD0:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
3AD2:	FF-1F       	adc r31, r31          ; Add with Carry
3AD4:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
3AD6:	FF-1F       	adc r31, r31          ; Add with Carry
3AD8:	D4-92       	xch Z, r13            ; Exchange
3ADA:	FF-1F       	adc r31, r31          ; Add with Carry
3ADC:	2C-FC       	.data 0xfc2c          ; Binary data
3ADE:	FF-1F       	adc r31, r31          ; Add with Carry
3AE0:	B8-92       	.data 0x92b8          ; Binary data
3AE2:	FF-1F       	adc r31, r31          ; Add with Carry
3AE4:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
3AE6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
3AE8:	13-4E       	sbci r17, 0xe3        ; Subtract Immediate with Carry SBI
3AEA:	00-EB       	ldi r16, 0xb0         ; Load Immediate
3AEC:	40-05       	cpc r20, r0           ; Compare with Carry
3AEE:	ED-00       	.data 0x00ed          ; Binary data
3AF0:	73-19       	sub r23, r3           ; Subtract Without Carry
3AF2:	77-59       	subi r23, 0x97        ; Subtract Immediate
3AF4:	5F-60       	ori r21, 0x0f         ; Logical OR with Immediate
3AF6:	D8-68       	ori r29, 0x88         ; Logical OR with Immediate
3AF8:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
3AFA:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
3AFC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3AFE:	CE-FC       	.data 0xfcce          ; Binary data
3B00:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
3B02:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3B04:	C3-FB       	bst r28, 3            ; Bit Store from Bit in Register to T Flag in SREG
3B06:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3B08:	70-51       	subi r23, 0x10        ; Subtract Immediate
3B0A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
3B0C:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
3B0E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3B10:	71-FC       	sbrc r7, 1            ; Skip if Bit in Register is Cleared
3B12:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3B14:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3B16:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3B18:	7D-FE       	.data 0xfe7d          ; Binary data
3B1A:	20-B9       	out 0x00, r18         ; Store Register to I/O Location
3B1C:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3B1E:	00-21       	and r16, r0           ; Logical AND
3B20:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3B22:	5A-FE       	.data 0xfe5a          ; Binary data
3B24:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
3B26:	04-EB       	ldi r16, 0xb4         ; Load Immediate
3B28:	44-04       	cpc r4, r4            ; Compare with Carry
3B2A:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
3B2C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
3B2E:	C4-04       	cpc r12, r4           ; Compare with Carry
3B30:	00-23       	and r16, r16          ; Logical AND
3B32:	E3-75       	andi r30, 0x53        ; Logical AND with Immediate
3B34:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
3B36:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3B38:	D0-F2       	brbs 0, .-76          ; Branch if Bit in SREG is Set
3B3A:	FF-1F       	adc r31, r31          ; Add with Carry
3B3C:	50-9D       	mul r21, r0           ; Multiply Unsigned
3B3E:	FF-1F       	adc r31, r31          ; Add with Carry
3B40:	2C-FC       	.data 0xfc2c          ; Binary data
3B42:	FF-1F       	adc r31, r31          ; Add with Carry
3B44:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3B46:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3B48:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
3B4A:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
3B4C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3B4E:	00-2B       	or r16, r16           ; Logical OR
3B50:	26-DD       	rcall .+6732          ; Relative Call to Subroutine
3B52:	C8-20       	and r12, r8           ; Logical AND
3B54:	FF-21       	and r31, r15          ; Logical AND
3B56:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
3B58:	BD-FF       	.data 0xffbd          ; Binary data
3B5A:	56-4C       	sbci r21, 0xc6        ; Subtract Immediate with Carry SBI
3B5C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
3B5E:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
3B60:	03-12       	cpse r0, r19          ; Compare Skip if Equal
3B62:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
3B64:	82-03       	fmuls r16, r18        ; Fractional Multiply Signed
3B66:	00-EB       	ldi r16, 0xb0         ; Load Immediate
3B68:	83-00       	.data 0x0083          ; Binary data
3B6A:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
3B6C:	02-90       	ld r0, -Z             ; Load Indirect from Data Space to Register
3B6E:	C8-20       	and r12, r8           ; Logical AND
3B70:	FF-21       	and r31, r15          ; Logical AND
3B72:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
3B74:	AF-FF       	.data 0xffaf          ; Binary data
3B76:	22-68       	ori r18, 0x82         ; Logical OR with Immediate
3B78:	D3-B2       	in r13, 0x13          ; Load an I/O Location to Register
3B7A:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
3B7C:	03-11       	cpse r16, r3          ; Compare Skip if Equal
3B7E:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
3B80:	81-01       	movw r16, r2          ; Copy Register Word
3B82:	00-EB       	ldi r16, 0xb0         ; Load Immediate
3B84:	81-00       	.data 0x0081          ; Binary data
3B86:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
3B88:	03-90       	.data 0x9003          ; Binary data
3B8A:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
3B8C:	43-11       	cpse r20, r3          ; Compare Skip if Equal
3B8E:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
3B90:	81-03       	fmuls r16, r17        ; Fractional Multiply Signed
3B92:	5B-00       	.data 0x005b          ; Binary data
3B94:	65-3B       	cpi r22, 0xb5         ; Compare with Immediate
3B96:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
3B98:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
3B9A:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
3B9C:	22-60       	ori r18, 0x02         ; Logical OR with Immediate
3B9E:	04-E0       	ldi r16, 0x04         ; Load Immediate
3BA0:	00-23       	and r16, r16          ; Logical AND
3BA2:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
3BA4:	03-93       	.data 0x9303          ; Binary data
3BA6:	0A-23       	and r16, r26          ; Logical AND
3BA8:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
3BAA:	00-24       	clr r0                ; Clear Register
3BAC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3BAE:	00-0A       	sbc r0, r16           ; Subtract with Carry
3BB0:	1F-FA       	.data 0xfa1f          ; Binary data
3BB2:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
3BB4:	A3-46       	sbci r26, 0x63        ; Subtract Immediate with Carry SBI
3BB6:	04-A8       	std Y+52, r0          ; Store Indirect From Register to Data Space
3BB8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
3BBA:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3BBC:	39-FD       	.data 0xfd39          ; Binary data
3BBE:	9D-F8       	.data 0xf89d          ; Binary data
3BC0:	10-10       	cpse r1, r0           ; Compare Skip if Equal
3BC2:	9D-F8       	.data 0xf89d          ; Binary data
3BC4:	11-20       	and r1, r1            ; Logical AND
3BC6:	9D-F8       	.data 0xf89d          ; Binary data
3BC8:	12-30       	cpi r17, 0x02         ; Compare with Immediate
3BCA:	31-B1       	in r19, 0x01          ; Load an I/O Location to Register
3BCC:	DC-25       	clr r476              ; Clear Register
3BCE:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
3BD0:	01-F5       	brbc 1, .+64          ; Branch if Bit in SREG is Cleared
3BD2:	2D-12       	cpse r2, r29          ; Compare Skip if Equal
3BD4:	01-35       	cpi r16, 0x51         ; Compare with Immediate
3BD6:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
3BD8:	00-E0       	ldi r16, 0x00         ; Load Immediate
3BDA:	00-25       	clr r256              ; Clear Register
3BDC:	32-B1       	in r19, 0x02          ; Load an I/O Location to Register
3BDE:	DC-26       	clr r732              ; Clear Register
3BE0:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
3BE2:	02-F6       	brbc 2, .-128         ; Branch if Bit in SREG is Cleared
3BE4:	36-12       	cpse r3, r22          ; Compare Skip if Equal
3BE6:	01-36       	cpi r16, 0x61         ; Compare with Immediate
3BE8:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
3BEA:	00-E0       	ldi r16, 0x00         ; Load Immediate
3BEC:	00-26       	clr r512              ; Clear Register
3BEE:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
3BF0:	DC-27       	clr r988              ; Clear Register
3BF2:	07-FB       	bst r16, 7            ; Bit Store from Bit in Register to T Flag in SREG
3BF4:	03-F7       	brbc 3, .-64          ; Branch if Bit in SREG is Cleared
3BF6:	3F-12       	cpse r3, r31          ; Compare Skip if Equal
3BF8:	01-37       	cpi r16, 0x71         ; Compare with Immediate
3BFA:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
3BFC:	00-E0       	ldi r16, 0x00         ; Load Immediate
3BFE:	00-27       	clr r768              ; Clear Register
3C00:	09-2D       	mov r16, r9           ; Copy Register
3C02:	06-D8       	rcall .+4108          ; Relative Call to Subroutine
3C04:	09-2E       	mov r0, r25           ; Copy Register
3C06:	04-D8       	rcall .+4104          ; Relative Call to Subroutine
3C08:	09-2F       	mov r16, r25          ; Copy Register
3C0A:	02-D8       	rcall .+4100          ; Relative Call to Subroutine
3C0C:	01-9F       	mul r16, r17          ; Multiply Unsigned
3C0E:	03-9E       	mul r0, r19           ; Multiply Unsigned
3C10:	02-9D       	mul r16, r2           ; Multiply Unsigned
3C12:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
3C14:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C16:	EA-FB       	.data 0xfbea          ; Binary data
3C18:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
3C1A:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
3C1C:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
3C1E:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
3C20:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C22:	32-FB       	bst r19, 2            ; Bit Store from Bit in Register to T Flag in SREG
3C24:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
3C26:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
3C28:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C2A:	F4-FD       	sbrc r31, 4           ; Skip if Bit in Register is Cleared
3C2C:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
3C2E:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
3C30:	00-49       	sbci r16, 0x90        ; Subtract Immediate with Carry SBI
3C32:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
3C34:	18-6C       	ori r17, 0xc8         ; Logical OR with Immediate
3C36:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
3C38:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C3A:	26-FB       	bst r18, 6            ; Bit Store from Bit in Register to T Flag in SREG
3C3C:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
3C3E:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
3C40:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C42:	E8-FD       	.data 0xfde8          ; Binary data
3C44:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
3C46:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
3C48:	00-48       	sbci r16, 0x80        ; Subtract Immediate with Carry SBI
3C4A:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
3C4C:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
3C4E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C50:	C3-FD       	sbrc r28, 3           ; Skip if Bit in Register is Cleared
3C52:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
3C54:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
3C56:	00-E0       	ldi r16, 0x00         ; Load Immediate
3C58:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
3C5A:	18-48       	sbci r17, 0x88        ; Subtract Immediate with Carry SBI
3C5C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C5E:	14-FB       	bst r17, 4            ; Bit Store from Bit in Register to T Flag in SREG
3C60:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
3C62:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
3C64:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C66:	D6-FD       	sbrc r29, 6           ; Skip if Bit in Register is Cleared
3C68:	90-B1       	in r25, 0x00          ; Load an I/O Location to Register
3C6A:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
3C6C:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
3C6E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C70:	C9-FC       	.data 0xfcc9          ; Binary data
3C72:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3C74:	D9-FD       	.data 0xfdd9          ; Binary data
3C76:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
3C78:	2D-1A       	sub r2, r29           ; Subtract Without Carry
3C7A:	25-EA       	ldi r18, 0xa5         ; Load Immediate
3C7C:	E5-75       	andi r30, 0x55        ; Logical AND with Immediate
3C7E:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
3C80:	36-1A       	sub r3, r22           ; Subtract Without Carry
3C82:	26-EA       	ldi r18, 0xa6         ; Load Immediate
3C84:	E6-76       	andi r30, 0x66        ; Logical AND with Immediate
3C86:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
3C88:	3F-1A       	sub r3, r31           ; Subtract Without Carry
3C8A:	27-EA       	ldi r18, 0xa7         ; Load Immediate
3C8C:	E7-77       	andi r30, 0x77        ; Logical AND with Immediate
3C8E:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
3C90:	8D-F8       	.data 0xf88d          ; Binary data
3C92:	14-50       	subi r17, 0x04        ; Subtract Immediate
3C94:	8D-F8       	.data 0xf88d          ; Binary data
3C96:	15-60       	ori r17, 0x05         ; Logical OR with Immediate
3C98:	8D-F8       	.data 0xf88d          ; Binary data
3C9A:	16-70       	andi r17, 0x06        ; Logical AND with Immediate
3C9C:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
3C9E:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
3CA0:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3CA2:	80-FC       	sbrc r8, 0            ; Skip if Bit in Register is Cleared
3CA4:	01-34       	cpi r16, 0x41         ; Compare with Immediate
3CA6:	B4-F5       	brbc 4, .+108         ; Branch if Bit in SREG is Cleared
3CA8:	2D-7F       	andi r18, 0xfd        ; Logical AND with Immediate
3CAA:	81-D1       	rcall .+770           ; Relative Call to Subroutine
3CAC:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
3CAE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3CB0:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
3CB2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3CB4:	98-FB       	.data 0xfb98          ; Binary data
3CB6:	FF-1F       	adc r31, r31          ; Add with Carry
3CB8:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
3CBA:	FF-1F       	adc r31, r31          ; Add with Carry
3CBC:	00-00       	nop                   ; No Operation
3CBE:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
3CC0:	00-00       	nop                   ; No Operation
3CC2:	40-40       	sbci r20, 0x00        ; Subtract Immediate with Carry SBI
3CC4:	00-22       	and r0, r16           ; Logical AND
3CC6:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
3CC8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
3CCA:	00-22       	and r0, r16           ; Logical AND
3CCC:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
3CCE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
3CD0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
3CD2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
3CD4:	54-9D       	mul r21, r4           ; Multiply Unsigned
3CD6:	FF-1F       	adc r31, r31          ; Add with Carry
3CD8:	9C-F9       	.data 0xf99c          ; Binary data
3CDA:	FF-1F       	adc r31, r31          ; Add with Carry
3CDC:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3CDE:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
3CE0:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
3CE2:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
3CE4:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
3CE6:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
3CE8:	00-0F       	add r16, r16          ; Add without Carry
3CEA:	20-DD       	rcall .+6720          ; Relative Call to Subroutine
3CEC:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
3CEE:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
3CF0:	00-11       	cpse r16, r0          ; Compare Skip if Equal
3CF2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3CF4:	7F-FB       	.data 0xfb7f          ; Binary data
3CF6:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
3CF8:	13-4C       	sbci r17, 0xc3        ; Subtract Immediate with Carry SBI
3CFA:	00-25       	clr r256              ; Clear Register
3CFC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3CFE:	00-09       	sbc r16, r0           ; Subtract with Carry
3D00:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
3D02:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
3D04:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
3D06:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D08:	BF-FA       	.data 0xfabf          ; Binary data
3D0A:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3D0C:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
3D0E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D10:	81-FD       	sbrc r24, 1           ; Skip if Bit in Register is Cleared
3D12:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
3D14:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
3D16:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
3D18:	00-E0       	ldi r16, 0x00         ; Load Immediate
3D1A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3D1C:	B1-68       	ori r27, 0x81         ; Logical OR with Immediate
3D1E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D20:	65-FD       	sbrc r22, 5           ; Skip if Bit in Register is Cleared
3D22:	38-B9       	out 0x08, r19         ; Store Register to I/O Location
3D24:	01-35       	cpi r16, 0x51         ; Compare with Immediate
3D26:	1C-34       	cpi r17, 0x4c         ; Compare with Immediate
3D28:	45-45       	sbci r20, 0x55        ; Subtract Immediate with Carry SBI
3D2A:	E9-D1       	rcall .+978           ; Relative Call to Subroutine
3D2C:	05-E0       	ldi r16, 0x05         ; Load Immediate
3D2E:	00-20       	and r0, r0            ; Logical AND
3D30:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3D32:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
3D34:	01-20       	and r0, r1            ; Logical AND
3D36:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3D38:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
3D3A:	00-20       	and r0, r0            ; Logical AND
3D3C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3D3E:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
3D40:	54-9D       	mul r21, r4           ; Multiply Unsigned
3D42:	FF-1F       	adc r31, r31          ; Add with Carry
3D44:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
3D46:	FF-1F       	adc r31, r31          ; Add with Carry
3D48:	A0-F8       	bld r10, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
3D4A:	FF-1F       	adc r31, r31          ; Add with Carry
3D4C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3D4E:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
3D50:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
3D52:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3D54:	00-2B       	or r16, r16           ; Logical OR
3D56:	77-DD       	rcall .+6894          ; Relative Call to Subroutine
3D58:	3D-4C       	sbci r19, 0xcd        ; Subtract Immediate with Carry SBI
3D5A:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
3D5C:	0C-05       	cpc r16, r12          ; Compare with Carry
3D5E:	00-26       	clr r512              ; Clear Register
3D60:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3D62:	00-0B       	sbc r16, r16          ; Subtract with Carry
3D64:	A1-46       	sbci r26, 0x61        ; Subtract Immediate with Carry SBI
3D66:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
3D68:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
3D6A:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
3D6C:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
3D6E:	08-EB       	ldi r16, 0xb8         ; Load Immediate
3D70:	03-0A       	sbc r0, r19           ; Subtract with Carry
3D72:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
3D74:	0C-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
3D76:	A7-69       	ori r26, 0x97         ; Logical OR with Immediate
3D78:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3D7A:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
3D7C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D7E:	4A-FD       	.data 0xfd4a          ; Binary data
3D80:	C8-B1       	in r28, 0x08          ; Load an I/O Location to Register
3D82:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
3D84:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D86:	36-FB       	bst r19, 6            ; Bit Store from Bit in Register to T Flag in SREG
3D88:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3D8A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3D8C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D8E:	7C-FA       	.data 0xfa7c          ; Binary data
3D90:	A0-61       	ori r26, 0x10         ; Logical OR with Immediate
3D92:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
3D94:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3D96:	20-FD       	sbrc r18, 0           ; Skip if Bit in Register is Cleared
3D98:	00-28       	or r0, r0             ; Logical OR
3D9A:	3D-D0       	rcall .+122           ; Relative Call to Subroutine
3D9C:	21-69       	ori r18, 0x91         ; Logical OR with Immediate
3D9E:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
3DA0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DA2:	74-FA       	bst r7, 4             ; Bit Store from Bit in Register to T Flag in SREG
3DA4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3DA6:	2C-48       	sbci r18, 0x8c        ; Subtract Immediate with Carry SBI
3DA8:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DAA:	2C-FC       	.data 0xfc2c          ; Binary data
3DAC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DAE:	3C-FD       	.data 0xfd3c          ; Binary data
3DB0:	E0-60       	ori r30, 0x00         ; Logical OR with Immediate
3DB2:	2A-4F       	sbci r18, 0xfa        ; Subtract Immediate with Carry SBI
3DB4:	31-E0       	ldi r19, 0x01         ; Load Immediate
3DB6:	21-69       	ori r18, 0x91         ; Logical OR with Immediate
3DB8:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
3DBA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DBC:	67-FA       	bst r6, 7             ; Bit Store from Bit in Register to T Flag in SREG
3DBE:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3DC0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
3DC2:	AA-20       	and r10, r10          ; Logical AND
3DC4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DC6:	16-FB       	bst r17, 6            ; Bit Store from Bit in Register to T Flag in SREG
3DC8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3DCA:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3DCC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DCE:	66-FB       	bst r22, 6            ; Bit Store from Bit in Register to T Flag in SREG
3DD0:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
3DD2:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3DD4:	89-FB       	.data 0xfb89          ; Binary data
3DD6:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3DD8:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
3DDA:	21-49       	sbci r18, 0x91        ; Subtract Immediate with Carry SBI
3DDC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DDE:	5E-FB       	.data 0xfb5e          ; Binary data
3DE0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3DE2:	7F-51       	subi r23, 0x1f        ; Subtract Immediate
3DE4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DE6:	52-FA       	bst r5, 2             ; Bit Store from Bit in Register to T Flag in SREG
3DE8:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3DEA:	7E-FB       	.data 0xfb7e          ; Binary data
3DEC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3DEE:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3DF0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DF2:	4C-FA       	.data 0xfa4c          ; Binary data
3DF4:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
3DF6:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
3DF8:	1A-49       	sbci r17, 0x9a        ; Subtract Immediate with Carry SBI
3DFA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3DFC:	0B-FD       	.data 0xfd0b          ; Binary data
3DFE:	60-B1       	in r22, 0x00          ; Load an I/O Location to Register
3E00:	21-69       	ori r18, 0x91         ; Logical OR with Immediate
3E02:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
3E04:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E06:	42-FA       	bst r4, 2             ; Bit Store from Bit in Register to T Flag in SREG
3E08:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3E0A:	17-48       	sbci r17, 0x87        ; Subtract Immediate with Carry SBI
3E0C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E0E:	FA-FB       	.data 0xfbfa          ; Binary data
3E10:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E12:	0A-FD       	.data 0xfd0a          ; Binary data
3E14:	E0-60       	ori r30, 0x00         ; Logical OR with Immediate
3E16:	00-E0       	ldi r16, 0x00         ; Load Immediate
3E18:	10-4F       	sbci r17, 0xf0        ; Subtract Immediate with Carry SBI
3E1A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
3E1C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3E1E:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
3E20:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E22:	3C-FB       	.data 0xfb3c          ; Binary data
3E24:	D9-F8       	.data 0xf8d9          ; Binary data
3E26:	14-10       	cpse r1, r4           ; Compare Skip if Equal
3E28:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E2A:	38-FB       	.data 0xfb38          ; Binary data
3E2C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
3E2E:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
3E30:	08-0C       	add r0, r8            ; Add without Carry
3E32:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E34:	2B-FA       	.data 0xfa2b          ; Binary data
3E36:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
3E38:	0C-0C       	add r0, r12           ; Add without Carry
3E3A:	01-36       	cpi r16, 0x61         ; Compare with Immediate
3E3C:	1C-35       	cpi r17, 0x5c         ; Compare with Immediate
3E3E:	1C-34       	cpi r17, 0x4c         ; Compare with Immediate
3E40:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
3E42:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3E44:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
3E46:	8D-DC       	rcall .+6426          ; Relative Call to Subroutine
3E48:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
3E4A:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
3E4C:	54-9D       	mul r21, r4           ; Multiply Unsigned
3E4E:	FF-1F       	adc r31, r31          ; Add with Carry
3E50:	A0-F8       	bld r10, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
3E52:	FF-1F       	adc r31, r31          ; Add with Carry
3E54:	5C-F9       	.data 0xf95c          ; Binary data
3E56:	FF-1F       	adc r31, r31          ; Add with Carry
3E58:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
3E5A:	1C-C4       	rjmp .+2104           ; Relative Jump
3E5C:	EC-51       	subi r30, 0x1c        ; Subtract Immediate
3E5E:	F8-3F       	cpi r31, 0xf8         ; Compare with Immediate
3E60:	00-00       	nop                   ; No Operation
3E62:	A0-40       	sbci r26, 0x00        ; Subtract Immediate with Carry SBI
3E64:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
3E66:	E6-3F       	cpi r30, 0xf6         ; Compare with Immediate
3E68:	00-C0       	rjmp .+0              ; Relative Jump
3E6A:	9E-C4       	rjmp .+2364           ; Relative Jump
3E6C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
3E6E:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
3E70:	8B-B0       	in r8, 0x0b           ; Load an I/O Location to Register
3E72:	79-4B       	sbci r23, 0xb9        ; Subtract Immediate with Carry SBI
3E74:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
3E76:	00-2B       	or r16, r16           ; Logical OR
3E78:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
3E7A:	EA-80       	ldd r14, Y+2          ; Load Indirect from Data Space to Register
3E7C:	DF-F8       	.data 0xf8df          ; Binary data
3E7E:	DC-81       	ldd r29, Y+4          ; Load Indirect from Data Space to Register
3E80:	0A-27       	clr r778              ; Clear Register
3E82:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
3E84:	00-09       	sbc r16, r0           ; Subtract with Carry
3E86:	0B-26       	clr r523              ; Clear Register
3E88:	DF-F8       	.data 0xf8df          ; Binary data
3E8A:	CC-A1       	ldd r28, Y+36         ; Load Indirect from Data Space to Register
3E8C:	45-46       	sbci r20, 0x65        ; Subtract Immediate with Carry SBI
3E8E:	D8-F8       	.data 0xf8d8          ; Binary data
3E90:	08-00       	.data 0x0008          ; Binary data
3E92:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3E94:	C9-FC       	.data 0xfcc9          ; Binary data
3E96:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
3E98:	0A-04       	cpc r0, r10           ; Compare with Carry
3E9A:	0A-38       	cpi r16, 0x8a         ; Compare with Immediate
3E9C:	84-42       	sbci r24, 0x24        ; Subtract Immediate with Carry SBI
3E9E:	13-DA       	rcall .+5158          ; Relative Call to Subroutine
3EA0:	28-68       	ori r18, 0x88         ; Logical OR with Immediate
3EA2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3EA4:	C1-FC       	sbrc r12, 1           ; Skip if Bit in Register is Cleared
3EA6:	8D-F8       	.data 0xf88d          ; Binary data
3EA8:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
3EAA:	8D-F8       	.data 0xf88d          ; Binary data
3EAC:	0D-60       	ori r16, 0x0d         ; Logical OR with Immediate
3EAE:	8D-F8       	.data 0xf88d          ; Binary data
3EB0:	0E-70       	andi r16, 0x0e        ; Logical AND with Immediate
3EB2:	20-44       	sbci r18, 0x40        ; Subtract Immediate with Carry SBI
3EB4:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
3EB6:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3EB8:	75-FB       	bst r23, 5            ; Bit Store from Bit in Register to T Flag in SREG
3EBA:	01-34       	cpi r16, 0x41         ; Compare with Immediate
3EBC:	A8-68       	ori r26, 0x88         ; Logical OR with Immediate
3EBE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3EC0:	B3-FC       	sbrc r11, 3           ; Skip if Bit in Register is Cleared
3EC2:	0A-38       	cpi r16, 0x8a         ; Compare with Immediate
3EC4:	A0-42       	sbci r26, 0x20        ; Subtract Immediate with Carry SBI
3EC6:	EB-DC       	rcall .+6614          ; Relative Call to Subroutine
3EC8:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
3ECA:	01-09       	sbc r16, r1           ; Subtract with Carry
3ECC:	DA-F8       	.data 0xf8da          ; Binary data
3ECE:	00-30       	cpi r16, 0x00         ; Compare with Immediate
3ED0:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
3ED2:	1C-08       	sbc r1, r12           ; Subtract with Carry
3ED4:	05-37       	cpi r16, 0x75         ; Compare with Immediate
3ED6:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
3ED8:	4B-45       	sbci r20, 0x5b        ; Subtract Immediate with Carry SBI
3EDA:	D7-DC       	rcall .+6574          ; Relative Call to Subroutine
3EDC:	00-2B       	or r16, r16           ; Logical OR
3EDE:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
3EE0:	B7-80       	ldd r11, Y+7          ; Load Indirect from Data Space to Register
3EE2:	DF-F8       	.data 0xf8df          ; Binary data
3EE4:	78-81       	ld r23, Y             ; Load Indirect from Data Space to Register
3EE6:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
3EE8:	08-09       	sbc r16, r8           ; Subtract with Carry
3EEA:	4E-46       	sbci r20, 0x6e        ; Subtract Immediate with Carry SBI
3EEC:	45-46       	sbci r20, 0x65        ; Subtract Immediate with Carry SBI
3EEE:	00-27       	clr r768              ; Clear Register
3EF0:	15-24       	clr r21               ; Clear Register
3EF2:	DF-F8       	.data 0xf8df          ; Binary data
3EF4:	64-A1       	ldd r22, Y+36         ; Load Indirect from Data Space to Register
3EF6:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
3EF8:	08-0C       	add r0, r8            ; Add without Carry
3EFA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3EFC:	95-FC       	sbrc r9, 5            ; Skip if Bit in Register is Cleared
3EFE:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
3F00:	A8-68       	ori r26, 0x88         ; Logical OR with Immediate
3F02:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F04:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
3F06:	8D-F8       	.data 0xf88d          ; Binary data
3F08:	10-40       	sbci r17, 0x00        ; Subtract Immediate with Carry SBI
3F0A:	8D-F8       	.data 0xf88d          ; Binary data
3F0C:	11-40       	sbci r17, 0x01        ; Subtract Immediate with Carry SBI
3F0E:	8D-F8       	.data 0xf88d          ; Binary data
3F10:	12-40       	sbci r17, 0x02        ; Subtract Immediate with Carry SBI
3F12:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
3F14:	0B-00       	.data 0x000b          ; Binary data
3F16:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
3F18:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3F1A:	44-FB       	bst r20, 4            ; Bit Store from Bit in Register to T Flag in SREG
3F1C:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
3F1E:	08-0C       	add r0, r8            ; Add without Carry
3F20:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F22:	82-FC       	sbrc r8, 2            ; Skip if Bit in Register is Cleared
3F24:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
3F26:	A8-68       	ori r26, 0x88         ; Logical OR with Immediate
3F28:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F2A:	7E-FC       	.data 0xfc7e          ; Binary data
3F2C:	8D-F8       	.data 0xf88d          ; Binary data
3F2E:	14-40       	sbci r17, 0x04        ; Subtract Immediate with Carry SBI
3F30:	8D-F8       	.data 0xf88d          ; Binary data
3F32:	15-40       	sbci r17, 0x05        ; Subtract Immediate with Carry SBI
3F34:	8D-F8       	.data 0xf88d          ; Binary data
3F36:	16-40       	sbci r17, 0x06        ; Subtract Immediate with Carry SBI
3F38:	58-44       	sbci r21, 0x48        ; Subtract Immediate with Carry SBI
3F3A:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
3F3C:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3F3E:	32-FB       	bst r19, 2            ; Bit Store from Bit in Register to T Flag in SREG
3F40:	01-37       	cpi r16, 0x71         ; Compare with Immediate
3F42:	DA-F8       	.data 0xf8da          ; Binary data
3F44:	00-30       	cpi r16, 0x00         ; Compare with Immediate
3F46:	1C-35       	cpi r17, 0x5c         ; Compare with Immediate
3F48:	1C-36       	cpi r17, 0x6c         ; Compare with Immediate
3F4A:	BB-42       	sbci r27, 0x2b        ; Subtract Immediate with Carry SBI
3F4C:	D3-DC       	rcall .+6566          ; Relative Call to Subroutine
3F4E:	00-2B       	or r16, r16           ; Logical OR
3F50:	7E-DD       	rcall .+6908          ; Relative Call to Subroutine
3F52:	00-22       	and r0, r16           ; Logical AND
3F54:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
3F56:	76-E0       	ldi r23, 0x06         ; Load Immediate
3F58:	59-F8       	.data 0xf859          ; Binary data
3F5A:	08-0C       	add r0, r8            ; Add without Carry
3F5C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F5E:	64-FC       	sbrc r6, 4            ; Skip if Bit in Register is Cleared
3F60:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
3F62:	D8-F8       	.data 0xf8d8          ; Binary data
3F64:	08-00       	.data 0x0008          ; Binary data
3F66:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F68:	5F-FC       	.data 0xfc5f          ; Binary data
3F6A:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
3F6C:	0A-01       	movw r0, r20          ; Copy Register Word
3F6E:	06-A8       	std Y+54, r0          ; Store Indirect From Register to Data Space
3F70:	21-44       	sbci r18, 0x41        ; Subtract Immediate with Carry SBI
3F72:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3F74:	5D-FB       	.data 0xfb5d          ; Binary data
3F76:	9D-F8       	.data 0xf89d          ; Binary data
3F78:	18-30       	cpi r17, 0x08         ; Compare with Immediate
3F7A:	0F-2B       	or r16, r31           ; Logical OR
3F7C:	20-D9       	rcall .+4672          ; Relative Call to Subroutine
3F7E:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
3F80:	08-0C       	add r0, r8            ; Add without Carry
3F82:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F84:	51-FC       	sbrc r5, 1            ; Skip if Bit in Register is Cleared
3F86:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
3F88:	B0-68       	ori r27, 0x80         ; Logical OR with Immediate
3F8A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3F8C:	4D-FC       	.data 0xfc4d          ; Binary data
3F8E:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
3F90:	0A-00       	.data 0x000a          ; Binary data
3F92:	00-EB       	ldi r16, 0xb0         ; Load Immediate
3F94:	04-0A       	sbc r0, r20           ; Subtract with Carry
3F96:	0A-20       	and r0, r10           ; Logical AND
3F98:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
3F9A:	90-FD       	sbrc r25, 0           ; Skip if Bit in Register is Cleared
3F9C:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
3F9E:	5F-FA       	.data 0xfa5f          ; Binary data
3FA0:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
3FA2:	0A-20       	and r0, r10           ; Logical AND
3FA4:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
3FA6:	8A-FD       	.data 0xfd8a          ; Binary data
3FA8:	8D-F8       	.data 0xf88d          ; Binary data
3FAA:	1C-B0       	in r1, 0x0c           ; Load an I/O Location to Register
3FAC:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
3FAE:	8D-F8       	.data 0xf88d          ; Binary data
3FB0:	1D-00       	.data 0x001d          ; Binary data
3FB2:	0A-23       	and r16, r26          ; Logical AND
3FB4:	8D-F8       	.data 0xf88d          ; Binary data
3FB6:	1E-30       	cpi r17, 0x0e         ; Compare with Immediate
3FB8:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
3FBA:	07-A9       	std Y+55, r16         ; Store Indirect From Register to Data Space
3FBC:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3FBE:	F2-FA       	bst r15, 2            ; Bit Store from Bit in Register to T Flag in SREG
3FC0:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
3FC2:	08-0C       	add r0, r8            ; Add without Carry
3FC4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3FC6:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
3FC8:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
3FCA:	B0-68       	ori r27, 0x80         ; Logical OR with Immediate
3FCC:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3FCE:	2C-FC       	.data 0xfc2c          ; Binary data
3FD0:	0A-EB       	ldi r16, 0xba         ; Load Immediate
3FD2:	00-01       	movw r0, r0           ; Copy Register Word
3FD4:	08-A8       	std Y+48, r0          ; Store Indirect From Register to Data Space
3FD6:	09-1B       	sub r16, r25          ; Subtract Without Carry
3FD8:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
3FDA:	2A-FB       	.data 0xfb2a          ; Binary data
3FDC:	9D-F8       	.data 0xf89d          ; Binary data
3FDE:	20-30       	cpi r18, 0x00         ; Compare with Immediate
3FE0:	0F-2B       	or r16, r31           ; Logical OR
3FE2:	1F-D9       	rcall .+4670          ; Relative Call to Subroutine
3FE4:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
3FE6:	08-0C       	add r0, r8            ; Add without Carry
3FE8:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3FEA:	1E-FC       	.data 0xfc1e          ; Binary data
3FEC:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
3FEE:	B0-68       	ori r27, 0x80         ; Logical OR with Immediate
3FF0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
3FF2:	1A-FC       	.data 0xfc1a          ; Binary data
3FF4:	50-44       	sbci r21, 0x40        ; Subtract Immediate with Carry SBI
3FF6:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
3FF8:	00-0A       	sbc r0, r16           ; Subtract with Carry
3FFA:	0A-20       	and r0, r10           ; Logical AND
3FFC:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
3FFE:	5E-FD       	.data 0xfd5e          ; Binary data
4000:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
4002:	5F-FA       	.data 0xfa5f          ; Binary data
4004:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
4006:	0A-20       	and r0, r10           ; Logical AND
4008:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
400A:	58-FD       	.data 0xfd58          ; Binary data
400C:	8D-F8       	.data 0xf88d          ; Binary data
400E:	24-B0       	in r2, 0x04           ; Load an I/O Location to Register
4010:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
4012:	8D-F8       	.data 0xf88d          ; Binary data
4014:	25-00       	.data 0x0025          ; Binary data
4016:	0A-23       	and r16, r26          ; Logical AND
4018:	8D-F8       	.data 0xf88d          ; Binary data
401A:	26-30       	cpi r18, 0x06         ; Compare with Immediate
401C:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
401E:	09-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
4020:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
4022:	C0-FA       	bst r12, 0            ; Bit Store from Bit in Register to T Flag in SREG
4024:	01-34       	cpi r16, 0x41         ; Compare with Immediate
4026:	05-3D       	cpi r16, 0xd5         ; Compare with Immediate
4028:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
402A:	0B-2C       	mov r0, r11           ; Copy Register
402C:	94-D1       	rcall .+808           ; Relative Call to Subroutine
402E:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
4030:	01-33       	cpi r16, 0x31         ; Compare with Immediate
4032:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
4034:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
4036:	1C-08       	sbc r1, r12           ; Subtract with Carry
4038:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
403A:	1C-09       	sbc r17, r12          ; Subtract with Carry
403C:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
403E:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
4040:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
4042:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
4044:	04-DD       	rcall .+6664          ; Relative Call to Subroutine
4046:	38-25       	clr r312              ; Clear Register
4048:	01-24       	clr r1                ; Clear Register
404A:	4F-46       	sbci r20, 0x6f        ; Subtract Immediate with Carry SBI
404C:	46-46       	sbci r20, 0x66        ; Subtract Immediate with Carry SBI
404E:	83-E7       	ldi r24, 0x73         ; Load Immediate
4050:	0B-B0       	in r0, 0x0b           ; Load an I/O Location to Register
4052:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
4054:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
4056:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
4058:	54-9D       	mul r21, r4           ; Multiply Unsigned
405A:	FF-1F       	adc r31, r31          ; Add with Carry
405C:	A0-F8       	bld r10, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
405E:	FF-1F       	adc r31, r31          ; Add with Carry
4060:	70-B4       	in r7, 0x20           ; Load an I/O Location to Register
4062:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
4064:	2C-68       	ori r18, 0x8c         ; Logical OR with Immediate
4066:	07-4E       	sbci r16, 0xe7        ; Subtract Immediate with Carry SBI
4068:	26-F8       	bld r2, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
406A:	34-00       	.data 0x0034          ; Binary data
406C:	06-EB       	ldi r16, 0xb6         ; Load Immediate
406E:	C4-00       	.data 0x00c4          ; Binary data
4070:	41-80       	ldd r4, Y+1           ; Load Indirect from Data Space to Register
4072:	82-80       	ldd r8, Y+2           ; Load Indirect from Data Space to Register
4074:	83-71       	andi r24, 0x13        ; Logical AND with Immediate
4076:	01-34       	cpi r16, 0x41         ; Compare with Immediate
4078:	2C-60       	ori r18, 0x0c         ; Logical OR with Immediate
407A:	70-BC       	out 0x20, r7          ; Store Register to I/O Location
407C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
407E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
4080:	C4-92       	xch Z, r12            ; Exchange
4082:	FF-1F       	adc r31, r31          ; Add with Carry
4084:	A0-9D       	mul r26, r0           ; Multiply Unsigned
4086:	FF-1F       	adc r31, r31          ; Add with Carry
4088:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
408A:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
408C:	06-B2       	in r0, 0x16           ; Load an I/O Location to Register
408E:	0D-B2       	in r0, 0x1d           ; Load an I/O Location to Register
4090:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
4092:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4094:	C9-FB       	.data 0xfbc9          ; Binary data
4096:	02-B2       	in r0, 0x12           ; Load an I/O Location to Register
4098:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
409A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
409C:	23-46       	sbci r18, 0x63        ; Subtract Immediate with Carry SBI
409E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
40A0:	DF-FF       	.data 0xffdf          ; Binary data
40A2:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
40A4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
40A6:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
40A8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
40AA:	FF-70       	andi r31, 0x0f        ; Logical AND with Immediate
40AC:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
40AE:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
40B0:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
40B2:	00-26       	clr r512              ; Clear Register
40B4:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
40B6:	1E-60       	ori r17, 0x0e         ; Logical OR with Immediate
40B8:	22-4C       	sbci r18, 0xc2        ; Subtract Immediate with Carry SBI
40BA:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
40BC:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
40BE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
40C0:	21-49       	sbci r18, 0x91        ; Subtract Immediate with Carry SBI
40C2:	16-22       	and r1, r22           ; Logical AND
40C4:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
40C6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
40C8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
40CA:	0A-22       	and r0, r26           ; Logical AND
40CC:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
40CE:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
40D0:	59-FB       	.data 0xfb59          ; Binary data
40D2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
40D4:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
40D6:	46-FB       	bst r20, 6            ; Bit Store from Bit in Register to T Flag in SREG
40D8:	85-B3       	in r24, 0x15          ; Load an I/O Location to Register
40DA:	14-2D       	mov r17, r4           ; Copy Register
40DC:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
40DE:	B5-42       	sbci r27, 0x25        ; Subtract Immediate with Carry SBI
40E0:	0D-DC       	rcall .+6170          ; Relative Call to Subroutine
40E2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
40E4:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
40E6:	17-4C       	sbci r17, 0xc7        ; Subtract Immediate with Carry SBI
40E8:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
40EA:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
40EC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
40EE:	17-49       	sbci r17, 0x97        ; Subtract Immediate with Carry SBI
40F0:	33-22       	and r3, r19           ; Logical AND
40F2:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
40F4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
40F6:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
40F8:	35-FB       	bst r19, 5            ; Bit Store from Bit in Register to T Flag in SREG
40FA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
40FC:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
40FE:	A5-EB       	ldi r26, 0xb5         ; Load Immediate
4100:	85-05       	cpc r24, r5           ; Compare with Carry
4102:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
4104:	45-08       	sbc r4, r5            ; Subtract with Carry
4106:	08-F5       	brbc 0, .+66          ; Branch if Bit in SREG is Cleared
4108:	FF-68       	ori r31, 0x8f         ; Logical OR with Immediate
410A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
410C:	FF-64       	ori r31, 0x4f         ; Logical OR with Immediate
410E:	00-27       	clr r768              ; Clear Register
4110:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
4112:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
4114:	A7-FD       	sbrc r26, 7           ; Skip if Bit in Register is Cleared
4116:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
4118:	A0-1C       	adc r10, r0           ; Add with Carry
411A:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
411C:	A3-FD       	sbrc r26, 3           ; Skip if Bit in Register is Cleared
411E:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
4120:	20-1D       	adc r18, r0           ; Add with Carry
4122:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
4124:	9F-FD       	.data 0xfd9f          ; Binary data
4126:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4128:	65-F9       	bld r22, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
412A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
412C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
412E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
4130:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
4132:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
4134:	A9-FF       	.data 0xffa9          ; Binary data
4136:	06-3C       	cpi r16, 0xc6         ; Compare with Immediate
4138:	44-45       	sbci r20, 0x54        ; Subtract Immediate with Carry SBI
413A:	E9-D1       	rcall .+978           ; Relative Call to Subroutine
413C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
413E:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
4140:	C4-92       	xch Z, r12            ; Exchange
4142:	FF-1F       	adc r31, r31          ; Add with Carry
4144:	C0-01       	movw r24, r0          ; Copy Register Word
4146:	00-20       	and r0, r0            ; Logical AND
4148:	D0-7B       	andi r29, 0xb0        ; Logical AND with Immediate
414A:	01-00       	.data 0x0001          ; Binary data
414C:	E8-7B       	andi r30, 0xb8        ; Logical AND with Immediate
414E:	01-00       	.data 0x0001          ; Binary data
4150:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
4152:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
4154:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
4156:	03-90       	.data 0x9003          ; Binary data
4158:	49-4B       	sbci r20, 0xb9        ; Subtract Immediate with Carry SBI
415A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
415C:	00-2B       	or r16, r16           ; Logical OR
415E:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
4160:	8C-80       	ldd r8, Y+4           ; Load Indirect from Data Space to Register
4162:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4164:	00-09       	sbc r16, r0           ; Subtract with Carry
4166:	CD-F8       	.data 0xf8cd          ; Binary data
4168:	08-90       	.data 0x9008          ; Binary data
416A:	DF-F8       	.data 0xf8df          ; Binary data
416C:	24-B1       	in r18, 0x04          ; Load an I/O Location to Register
416E:	0B-EB       	ldi r16, 0xbb         ; Load Immediate
4170:	09-0A       	sbc r0, r25           ; Subtract with Carry
4172:	9A-F8       	.data 0xf89a          ; Binary data
4174:	06-30       	cpi r16, 0x06         ; Compare with Immediate
4176:	03-9A       	sbi 0x00, 3           ; Set Bit in I/O Register
4178:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
417A:	73-D0       	rcall .+230           ; Relative Call to Subroutine
417C:	BA-F9       	.data 0xf9ba          ; Binary data
417E:	04-20       	and r0, r4            ; Logical AND
4180:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
4182:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
4184:	39-F9       	.data 0xf939          ; Binary data
4186:	0B-30       	cpi r16, 0x0b         ; Compare with Immediate
4188:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
418A:	02-30       	cpi r16, 0x02         ; Compare with Immediate
418C:	80-0A       	sbc r8, r16           ; Subtract with Carry
418E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4190:	2D-F9       	.data 0xf92d          ; Binary data
4192:	01-90       	ld r0, Z+             ; Load Indirect from Data Space to Register
4194:	BA-F9       	.data 0xf9ba          ; Binary data
4196:	02-30       	cpi r16, 0x02         ; Compare with Immediate
4198:	00-2B       	or r16, r16           ; Logical OR
419A:	63-DD       	rcall .+6854          ; Relative Call to Subroutine
419C:	00-24       	clr r0                ; Clear Register
419E:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
41A0:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
41A2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
41A4:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41A6:	26-F9       	bld r18, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
41A8:	01-99       	sbic 0x00, 1          ; Skip if Bit in I/O Register is Cleared
41AA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41AC:	6D-F8       	.data 0xf86d          ; Binary data
41AE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41B0:	3B-FB       	.data 0xfb3b          ; Binary data
41B2:	00-28       	or r0, r0             ; Logical OR
41B4:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
41B6:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
41B8:	90-FB       	bst r25, 0            ; Bit Store from Bit in Register to T Flag in SREG
41BA:	F6-F3       	brbs 6, .-4           ; Branch if Bit in SREG is Set
41BC:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
41BE:	13-00       	.data 0x0013          ; Binary data
41C0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41C2:	18-F9       	.data 0xf918          ; Binary data
41C4:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
41C6:	31-4A       	sbci r19, 0xa1        ; Subtract Immediate with Carry SBI
41C8:	10-68       	ori r17, 0x80         ; Logical OR with Immediate
41CA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41CC:	13-F9       	bld r17, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
41CE:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
41D0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
41D2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41D4:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
41D6:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
41D8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
41DA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41DC:	0B-F9       	.data 0xf90b          ; Binary data
41DE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
41E0:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
41E2:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
41E4:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
41E6:	39-F9       	.data 0xf939          ; Binary data
41E8:	0B-10       	cpse r0, r11          ; Compare Skip if Equal
41EA:	04-A8       	std Y+52, r0          ; Store Indirect From Register to Data Space
41EC:	21-44       	sbci r18, 0x41        ; Subtract Immediate with Carry SBI
41EE:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
41F0:	1F-FA       	.data 0xfa1f          ; Binary data
41F2:	9D-F8       	.data 0xf89d          ; Binary data
41F4:	10-80       	ld r1, Z              ; Load Indirect from Data Space to Register
41F6:	B5-23       	and r27, r21          ; Logical AND
41F8:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
41FA:	08-F8       	.data 0xf808          ; Binary data
41FC:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
41FE:	18-28       	or r1, r8             ; Logical OR
4200:	8D-F8       	.data 0xf88d          ; Binary data
4202:	10-80       	ld r1, Z              ; Load Indirect from Data Space to Register
4204:	9D-F8       	.data 0xf89d          ; Binary data
4206:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
4208:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
420A:	07-F7       	brbc 7, .-64          ; Branch if Bit in SREG is Cleared
420C:	3F-0A       	sbc r3, r31           ; Subtract with Carry
420E:	8D-F8       	.data 0xf88d          ; Binary data
4210:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
4212:	9D-F8       	.data 0xf89d          ; Binary data
4214:	12-60       	ori r17, 0x02         ; Logical OR with Immediate
4216:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
4218:	06-F6       	brbc 6, .-128         ; Branch if Bit in SREG is Cleared
421A:	36-0A       	sbc r3, r22           ; Subtract with Carry
421C:	8D-F8       	.data 0xf88d          ; Binary data
421E:	12-60       	ori r17, 0x02         ; Logical OR with Immediate
4220:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
4222:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4224:	82-41       	sbci r24, 0x12        ; Subtract Immediate with Carry SBI
4226:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4228:	2F-F8       	.data 0xf82f          ; Binary data
422A:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
422C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
422E:	2E-F8       	.data 0xf82e          ; Binary data
4230:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4232:	20-FB       	bst r18, 0            ; Bit Store from Bit in Register to T Flag in SREG
4234:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
4236:	88-FA       	.data 0xfa88          ; Binary data
4238:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
423A:	87-FA       	bst r8, 7             ; Bit Store from Bit in Register to T Flag in SREG
423C:	50-F7       	brbc 0, .-44          ; Branch if Bit in SREG is Cleared
423E:	86-FA       	bst r8, 6             ; Bit Store from Bit in Register to T Flag in SREG
4240:	50-F6       	brbc 0, .-108         ; Branch if Bit in SREG is Cleared
4242:	39-F9       	.data 0xf939          ; Binary data
4244:	0B-00       	.data 0x000b          ; Binary data
4246:	8D-F8       	.data 0xf88d          ; Binary data
4248:	14-80       	ldd r1, Y+4           ; Load Indirect from Data Space to Register
424A:	8D-F8       	.data 0xf88d          ; Binary data
424C:	15-70       	andi r17, 0x05        ; Logical AND with Immediate
424E:	8D-F8       	.data 0xf88d          ; Binary data
4250:	16-60       	ori r17, 0x06         ; Logical OR with Immediate
4252:	20-44       	sbci r18, 0x40        ; Subtract Immediate with Carry SBI
4254:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
4256:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
4258:	91-F9       	bld r25, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
425A:	01-34       	cpi r16, 0x41         ; Compare with Immediate
425C:	BA-F9       	.data 0xf9ba          ; Binary data
425E:	02-30       	cpi r16, 0x02         ; Compare with Immediate
4260:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
4262:	9C-DC       	rcall .+6456          ; Relative Call to Subroutine
4264:	02-9B       	sbis 0x00, 2          ; Skip if Bit in I/O Register is Set
4266:	01-33       	cpi r16, 0x31         ; Compare with Immediate
4268:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
426A:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
426C:	08-09       	sbc r16, r8           ; Subtract with Carry
426E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
4270:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
4272:	02-9A       	sbi 0x00, 2           ; Set Bit in I/O Register
4274:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
4276:	3F-F7       	brbc 7, .-50          ; Branch if Bit in SREG is Cleared
4278:	7A-AF       	std Y+58, r23         ; Store Indirect From Register to Data Space
427A:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
427C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
427E:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
4280:	C4-92       	xch Z, r12            ; Exchange
4282:	FF-1F       	adc r31, r31          ; Add with Carry
4284:	5C-FA       	.data 0xfa5c          ; Binary data
4286:	FF-1F       	adc r31, r31          ; Add with Carry
4288:	E0-92-FF-1F 	sts 0x1fff, r14       ; Store Direct to Data Space
428C:	74-92       	xch Z, r7             ; Exchange
428E:	FF-1F       	adc r31, r31          ; Add with Carry
4290:	A0-9D       	mul r26, r0           ; Multiply Unsigned
4292:	FF-1F       	adc r31, r31          ; Add with Carry
4294:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
4296:	F0-01       	movw r30, r0          ; Copy Register Word
4298:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
429A:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
429C:	00-2E       	mov r0, r16           ; Copy Register
429E:	20-DD       	rcall .+6720          ; Relative Call to Subroutine
42A0:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
42A2:	1C-88       	std Y+20, r1          ; Store Indirect From Register to Data Space
42A4:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
42A6:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
42A8:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
42AA:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
42AC:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
42AE:	00-C0       	rjmp .+0              ; Relative Jump
42B0:	00-23       	and r16, r16          ; Logical AND
42B2:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
42B4:	10-48       	sbci r17, 0x80        ; Subtract Immediate with Carry SBI
42B6:	19-5E       	subi r17, 0xe9        ; Subtract Immediate
42B8:	B4-EB       	ldi r27, 0xb4         ; Load Immediate
42BA:	01-1F       	adc r16, r17          ; Add with Carry
42BC:	0A-DB       	rcall .+5652          ; Relative Call to Subroutine
42BE:	C5-18       	sub r12, r5           ; Subtract Without Carry
42C0:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
42C2:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
42C4:	39-44       	sbci r19, 0x49        ; Subtract Immediate with Carry SBI
42C6:	B4-EB       	ldi r27, 0xb4         ; Load Immediate
42C8:	01-1F       	adc r16, r17          ; Add with Carry
42CA:	DC-BF       	out 0x3c, r29         ; Store Register to I/O Location
42CC:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
42CE:	04-10       	cpse r0, r4           ; Compare Skip if Equal
42D0:	08-FB       	.data 0xfb08          ; Binary data
42D2:	01-CC       	rjmp .-2046           ; Relative Jump
42D4:	01-32       	cpi r16, 0x21         ; Compare with Immediate
42D6:	08-33       	cpi r16, 0x38         ; Compare with Immediate
42D8:	B2-42       	sbci r27, 0x22        ; Subtract Immediate with Carry SBI
42DA:	EC-DB       	rcall .+6104          ; Relative Call to Subroutine
42DC:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
42DE:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
42E0:	00-C0       	rjmp .+0              ; Relative Jump
42E2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
42E4:	F0-01       	movw r30, r0          ; Copy Register Word
42E6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
42E8:	C4-92       	xch Z, r12            ; Exchange
42EA:	FF-1F       	adc r31, r31          ; Add with Carry
42EC:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
42EE:	FF-1F       	adc r31, r31          ; Add with Carry
42F0:	5C-F9       	.data 0xf95c          ; Binary data
42F2:	FF-1F       	adc r31, r31          ; Add with Carry
42F4:	D8-FA       	.data 0xfad8          ; Binary data
42F6:	FF-1F       	adc r31, r31          ; Add with Carry
42F8:	A0-9D       	mul r26, r0           ; Multiply Unsigned
42FA:	FF-1F       	adc r31, r31          ; Add with Carry
42FC:	00-23       	and r16, r16          ; Logical AND
42FE:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
4300:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
4302:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
4304:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
4306:	01-22       	and r0, r17           ; Logical AND
4308:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
430A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
430C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
430E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
4310:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
4312:	FF-1F       	adc r31, r31          ; Add with Carry
4314:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
4316:	FF-1F       	adc r31, r31          ; Add with Carry
4318:	70-FB       	bst r23, 0            ; Bit Store from Bit in Register to T Flag in SREG
431A:	FF-1F       	adc r31, r31          ; Add with Carry
431C:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
431E:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
4320:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
4322:	00-2C       	mov r0, r0            ; Copy Register
4324:	11-DD       	rcall .+6690          ; Relative Call to Subroutine
4326:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
4328:	00-22       	and r0, r16           ; Logical AND
432A:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
432C:	41-B1       	in r20, 0x01          ; Load an I/O Location to Register
432E:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
4330:	04-5C       	subi r16, 0xc4        ; Subtract Immediate
4332:	2D-1A       	sub r2, r29           ; Subtract Without Carry
4334:	00-2D       	mov r16, r0           ; Copy Register
4336:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
4338:	6D-42       	sbci r22, 0x2d        ; Subtract Immediate with Carry SBI
433A:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
433C:	EF-2D       	mov r30, r15          ; Copy Register
433E:	07-D9       	rcall .+4622          ; Relative Call to Subroutine
4340:	01-32       	cpi r16, 0x21         ; Compare with Immediate
4342:	1C-33       	cpi r17, 0x3c         ; Compare with Immediate
4344:	A2-42       	sbci r26, 0x22        ; Subtract Immediate with Carry SBI
4346:	F0-D1       	rcall .+992           ; Relative Call to Subroutine
4348:	01-E0       	ldi r16, 0x01         ; Load Immediate
434A:	00-21       	and r16, r0           ; Logical AND
434C:	00-E0       	ldi r16, 0x00         ; Load Immediate
434E:	00-21       	and r16, r0           ; Logical AND
4350:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
4352:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
4354:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
4356:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
4358:	78-92       	.data 0x9278          ; Binary data
435A:	FF-1F       	adc r31, r31          ; Add with Carry
435C:	38-DF       	rcall .+7792          ; Relative Call to Subroutine
435E:	FF-1F       	adc r31, r31          ; Add with Carry
4360:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
4362:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
4364:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
4366:	01-A8       	std Y+49, r0          ; Store Indirect From Register to Data Space
4368:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
436A:	62-F9       	bld r22, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
436C:	9D-F8       	.data 0xf89d          ; Binary data
436E:	06-30       	cpi r16, 0x06         ; Compare with Immediate
4370:	02-2B       	or r16, r18           ; Logical OR
4372:	06-D1       	rcall .+524           ; Relative Call to Subroutine
4374:	9D-F8       	.data 0xf89d          ; Binary data
4376:	04-30       	cpi r16, 0x04         ; Compare with Immediate
4378:	14-2B       	or r17, r20           ; Logical OR
437A:	8C-BF       	out 0x3c, r24         ; Store Register to I/O Location
437C:	02-20       	and r0, r2            ; Logical AND
437E:	01-20       	and r0, r1            ; Logical AND
4380:	00-E0       	ldi r16, 0x00         ; Load Immediate
4382:	00-20       	and r0, r0            ; Logical AND
4384:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
4386:	5D-F8       	.data 0xf85d          ; Binary data
4388:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
438A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
438C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
438E:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
4390:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
4392:	23-B1       	in r18, 0x03          ; Load an I/O Location to Register
4394:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
4396:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
4398:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
439A:	2C-F8       	.data 0xf82c          ; Binary data
439C:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
439E:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
43A0:	1C-88       	std Y+20, r1          ; Store Indirect From Register to Data Space
43A2:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
43A4:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
43A6:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
43A8:	25-F8       	bld r2, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
43AA:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
43AC:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
43AE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
43B0:	75-F8       	bld r7, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
43B2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
43B4:	39-FA       	.data 0xfa39          ; Binary data
43B6:	04-EB       	ldi r16, 0xb4         ; Load Immediate
43B8:	A0-10       	cpse r10, r0          ; Compare Skip if Equal
43BA:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
43BC:	1B-F8       	.data 0xf81b          ; Binary data
43BE:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
43C0:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
43C2:	FF-1F       	adc r31, r31          ; Add with Carry
43C4:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
43C6:	FF-1F       	adc r31, r31          ; Add with Carry
43C8:	5C-F9       	.data 0xf95c          ; Binary data
43CA:	FF-1F       	adc r31, r31          ; Add with Carry
43CC:	58-9D       	mul r21, r8           ; Multiply Unsigned
43CE:	FF-1F       	adc r31, r31          ; Add with Carry
43D0:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
43D2:	6E-4B       	sbci r22, 0xbe        ; Subtract Immediate with Carry SBI
43D4:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
43D6:	10-1A       	sub r1, r16           ; Subtract Without Carry
43D8:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
43DA:	00-28       	or r0, r0             ; Logical OR
43DC:	80-F2       	brbs 0, .-96          ; Branch if Bit in SREG is Set
43DE:	A4-80       	ldd r10, Y+4          ; Load Indirect from Data Space to Register
43E0:	6B-4B       	sbci r22, 0xbb        ; Subtract Immediate with Carry SBI
43E2:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
43E4:	6B-4B       	sbci r22, 0xbb        ; Subtract Immediate with Carry SBI
43E6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
43E8:	1E-20       	and r1, r14           ; Logical AND
43EA:	64-21       	and r22, r4           ; Logical AND
43EC:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
43EE:	72-FB       	bst r23, 2            ; Bit Store from Bit in Register to T Flag in SREG
43F0:	66-4B       	sbci r22, 0xb6        ; Subtract Immediate with Carry SBI
43F2:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
43F4:	68-4B       	sbci r22, 0xb8        ; Subtract Immediate with Carry SBI
43F6:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
43F8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
43FA:	90-FF       	sbrs r25, 0           ; Skip if Bit in Register is Set
43FC:	E8-B1       	in r30, 0x08          ; Load an I/O Location to Register
43FE:	00-20       	and r0, r0            ; Logical AND
4400:	64-21       	and r22, r4           ; Logical AND
4402:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
4404:	67-FB       	bst r22, 7            ; Bit Store from Bit in Register to T Flag in SREG
4406:	0A-28       	or r0, r10            ; Logical OR
4408:	17-DD       	rcall .+6702          ; Relative Call to Subroutine
440A:	64-4B       	sbci r22, 0xb4        ; Subtract Immediate with Carry SBI
440C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
440E:	3C-2B       	or r19, r28           ; Logical OR
4410:	13-DD       	rcall .+6694          ; Relative Call to Subroutine
4412:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
4414:	61-70       	andi r22, 0x01        ; Logical AND with Immediate
4416:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
4418:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
441A:	01-22       	and r0, r17           ; Logical AND
441C:	60-4B       	sbci r22, 0xb0        ; Subtract Immediate with Carry SBI
441E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
4420:	60-4B       	sbci r22, 0xb0        ; Subtract Immediate with Carry SBI
4422:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
4424:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
4426:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
4428:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
442A:	96-70       	andi r25, 0x06        ; Logical AND with Immediate
442C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
442E:	61-71       	andi r22, 0x11        ; Logical AND with Immediate
4430:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
4432:	50-FB       	bst r21, 0            ; Bit Store from Bit in Register to T Flag in SREG
4434:	55-4B       	sbci r21, 0xb5        ; Subtract Immediate with Carry SBI
4436:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
4438:	76-E0       	ldi r23, 0x06         ; Load Immediate
443A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
443C:	7E-52       	subi r23, 0x2e        ; Subtract Immediate
443E:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
4440:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
4442:	00-20       	and r0, r0            ; Logical AND
4444:	64-21       	and r22, r4           ; Logical AND
4446:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
4448:	45-FB       	bst r20, 5            ; Bit Store from Bit in Register to T Flag in SREG
444A:	5A-28       	or r5, r10            ; Logical OR
444C:	02-DD       	rcall .+6660          ; Relative Call to Subroutine
444E:	57-4A       	sbci r21, 0xa7        ; Subtract Immediate with Carry SBI
4450:	55-4B       	sbci r21, 0xb5        ; Subtract Immediate with Carry SBI
4452:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
4454:	56-4B       	sbci r21, 0xb6        ; Subtract Immediate with Carry SBI
4456:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
4458:	08-2B       	or r16, r24           ; Logical OR
445A:	3C-D1       	rcall .+632           ; Relative Call to Subroutine
445C:	55-4B       	sbci r21, 0xb5        ; Subtract Immediate with Carry SBI
445E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
4460:	5B-B1       	in r21, 0x0b          ; Load an I/O Location to Register
4462:	00-20       	and r0, r0            ; Logical AND
4464:	64-21       	and r22, r4           ; Logical AND
4466:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
4468:	35-FB       	bst r19, 5            ; Bit Store from Bit in Register to T Flag in SREG
446A:	35-28       	or r3, r5             ; Logical OR
446C:	CC-BF       	out 0x3c, r28         ; Store Register to I/O Location
446E:	4F-4A       	sbci r20, 0xaf        ; Subtract Immediate with Carry SBI
4470:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4472:	7E-52       	subi r23, 0x2e        ; Subtract Immediate
4474:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
4476:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
4478:	2D-E0       	ldi r18, 0x0d         ; Load Immediate
447A:	47-4B       	sbci r20, 0xb7        ; Subtract Immediate with Carry SBI
447C:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
447E:	4E-4B       	sbci r20, 0xbe        ; Subtract Immediate with Carry SBI
4480:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
4482:	02-30       	cpi r16, 0x02         ; Compare with Immediate
4484:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
4486:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
4488:	00-20       	and r0, r0            ; Logical AND
448A:	64-21       	and r22, r4           ; Logical AND
448C:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
448E:	22-FB       	bst r18, 2            ; Bit Store from Bit in Register to T Flag in SREG
4490:	0A-28       	or r0, r10            ; Logical OR
4492:	02-DD       	rcall .+6660          ; Relative Call to Subroutine
4494:	45-4A       	sbci r20, 0xa5        ; Subtract Immediate with Carry SBI
4496:	44-4B       	sbci r20, 0xb4        ; Subtract Immediate with Carry SBI
4498:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
449A:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
449C:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
449E:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
44A0:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
44A2:	02-30       	cpi r16, 0x02         ; Compare with Immediate
44A4:	D3-1A       	sub r13, r19          ; Subtract Without Carry
44A6:	00-2B       	or r16, r16           ; Logical OR
44A8:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
44AA:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
44AC:	63-2B       	or r22, r19           ; Logical OR
44AE:	12-DC       	rcall .+6180          ; Relative Call to Subroutine
44B0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
44B2:	16-70       	andi r17, 0x06        ; Logical AND with Immediate
44B4:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
44B6:	E2-FB       	bst r30, 2            ; Bit Store from Bit in Register to T Flag in SREG
44B8:	01-22       	and r0, r17           ; Logical AND
44BA:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
44BC:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
44BE:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
44C0:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
44C2:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
44C4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
44C6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
44C8:	96-70       	andi r25, 0x06        ; Logical AND with Immediate
44CA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
44CC:	61-71       	andi r22, 0x11        ; Logical AND with Immediate
44CE:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
44D0:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
44D2:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
44D4:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
44D6:	30-4B       	sbci r19, 0xb0        ; Subtract Immediate with Carry SBI
44D8:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
44DA:	00-11       	cpse r16, r0          ; Compare Skip if Equal
44DC:	01-38       	cpi r16, 0x81         ; Compare with Immediate
44DE:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
44E0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
44E2:	3E-FF       	.data 0xff3e          ; Binary data
44E4:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
44E6:	01-28       	or r0, r1             ; Logical OR
44E8:	02-D1       	rcall .+516           ; Relative Call to Subroutine
44EA:	34-4A       	sbci r19, 0xa4        ; Subtract Immediate with Carry SBI
44EC:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
44EE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
44F0:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
44F2:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
44F4:	00-11       	cpse r16, r0          ; Compare Skip if Equal
44F6:	19-30       	cpi r17, 0x09         ; Compare with Immediate
44F8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
44FA:	32-FF       	sbrs r19, 2           ; Skip if Bit in Register is Set
44FC:	84-42       	sbci r24, 0x24        ; Subtract Immediate with Carry SBI
44FE:	02-DA       	rcall .+5124          ; Relative Call to Subroutine
4500:	2A-4A       	sbci r18, 0xaa        ; Subtract Immediate with Carry SBI
4502:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
4504:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
4506:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
4508:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
450A:	64-31       	cpi r22, 0x14         ; Compare with Immediate
450C:	00-20       	and r0, r0            ; Logical AND
450E:	DC-29       	or r29, r12           ; Logical OR
4510:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
4512:	DC-21       	and r29, r12          ; Logical AND
4514:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
4516:	DE-FA       	.data 0xfade          ; Binary data
4518:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
451A:	6C-FF       	.data 0xff6c          ; Binary data
451C:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
451E:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
4520:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4522:	BC-FF       	.data 0xffbc          ; Binary data
4524:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
4526:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
4528:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
452A:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
452C:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
452E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
4530:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
4532:	05-D1       	rcall .+522           ; Relative Call to Subroutine
4534:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
4536:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
4538:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
453A:	01-22       	and r0, r17           ; Logical AND
453C:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
453E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
4540:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
4542:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
4544:	01-2B       	or r16, r17           ; Logical OR
4546:	10-DD       	rcall .+6688          ; Relative Call to Subroutine
4548:	21-4C       	sbci r18, 0xc1        ; Subtract Immediate with Carry SBI
454A:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
454C:	21-49       	sbci r18, 0x91        ; Subtract Immediate with Carry SBI
454E:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4550:	A5-FF       	sbrs r26, 5           ; Skip if Bit in Register is Set
4552:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
4554:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
4556:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
4558:	1F-49       	sbci r17, 0x9f        ; Subtract Immediate with Carry SBI
455A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
455C:	9F-FF       	.data 0xff9f          ; Binary data
455E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
4560:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
4562:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4564:	93-FE       	sbrs r9, 3            ; Skip if Bit in Register is Set
4566:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
4568:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
456A:	19-4C       	sbci r17, 0xc9        ; Subtract Immediate with Carry SBI
456C:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
456E:	1B-49       	sbci r17, 0x9b        ; Subtract Immediate with Carry SBI
4570:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4572:	94-FF       	sbrs r25, 4           ; Skip if Bit in Register is Set
4574:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
4576:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
4578:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
457A:	19-49       	sbci r17, 0x99        ; Subtract Immediate with Carry SBI
457C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
457E:	8E-FF       	.data 0xff8e          ; Binary data
4580:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
4582:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
4584:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4586:	82-FE       	sbrs r8, 2            ; Skip if Bit in Register is Set
4588:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
458A:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
458C:	7C-FB       	.data 0xfb7c          ; Binary data
458E:	FF-1F       	adc r31, r31          ; Add with Carry
4590:	54-FA       	bst r5, 4             ; Bit Store from Bit in Register to T Flag in SREG
4592:	FF-1F       	adc r31, r31          ; Add with Carry
4594:	A0-EF       	ldi r26, 0xf0         ; Load Immediate
4596:	FF-1F       	adc r31, r31          ; Add with Carry
4598:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
459A:	FF-1F       	adc r31, r31          ; Add with Carry
459C:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
459E:	FF-1F       	adc r31, r31          ; Add with Carry
45A0:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
45A2:	FF-1F       	adc r31, r31          ; Add with Carry
45A4:	4C-92       	st X, r4              ; Store Indirect From Register to Data Space
45A6:	FF-1F       	adc r31, r31          ; Add with Carry
45A8:	E8-92       	.data 0x92e8          ; Binary data
45AA:	FF-1F       	adc r31, r31          ; Add with Carry
45AC:	00-00       	nop                   ; No Operation
45AE:	80-BF       	out 0x30, r24         ; Store Register to I/O Location
45B0:	48-F9       	.data 0xf948          ; Binary data
45B2:	FF-1F       	adc r31, r31          ; Add with Carry
45B4:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
45B6:	FF-1F       	adc r31, r31          ; Add with Carry
45B8:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
45BA:	FF-1F       	adc r31, r31          ; Add with Carry
45BC:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
45BE:	A6-3F       	cpi r26, 0xf6         ; Compare with Immediate
45C0:	C0-FA       	bst r12, 0            ; Bit Store from Bit in Register to T Flag in SREG
45C2:	FF-1F       	adc r31, r31          ; Add with Carry
45C4:	00-00       	nop                   ; No Operation
45C6:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
45C8:	58-92       	.data 0x9258          ; Binary data
45CA:	FF-1F       	adc r31, r31          ; Add with Carry
45CC:	9C-9D       	mul r25, r12          ; Multiply Unsigned
45CE:	FF-1F       	adc r31, r31          ; Add with Carry
45D0:	58-9D       	mul r21, r8           ; Multiply Unsigned
45D2:	FF-1F       	adc r31, r31          ; Add with Carry
45D4:	CD-CC       	rjmp .-1638           ; Relative Jump
45D6:	4C-3F       	cpi r20, 0xfc         ; Compare with Immediate
45D8:	CD-CC       	rjmp .-1638           ; Relative Jump
45DA:	4C-3E       	cpi r20, 0xec         ; Compare with Immediate
45DC:	33-33       	cpi r19, 0x33         ; Compare with Immediate
45DE:	73-3F       	cpi r23, 0xf3         ; Compare with Immediate
45E0:	CD-CC       	rjmp .-1638           ; Relative Jump
45E2:	4C-3D       	cpi r20, 0xdc         ; Compare with Immediate
45E4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
45E6:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
45E8:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
45EA:	19-4C       	sbci r17, 0xc9        ; Subtract Immediate with Carry SBI
45EC:	00-25       	clr r256              ; Clear Register
45EE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
45F0:	00-08       	sbc r0, r0            ; Subtract with Carry
45F2:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
45F4:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
45F6:	0C-3C       	cpi r16, 0xcc         ; Compare with Immediate
45F8:	1B-B3       	in r17, 0x1b          ; Load an I/O Location to Register
45FA:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
45FC:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
45FE:	FA-FE       	.data 0xfefa          ; Binary data
4600:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
4602:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
4604:	08-0C       	add r0, r8            ; Add without Carry
4606:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4608:	3F-FE       	.data 0xfe3f          ; Binary data
460A:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
460C:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
460E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4610:	01-F9       	bld r16, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
4612:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
4614:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
4616:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
4618:	00-E0       	ldi r16, 0x00         ; Load Immediate
461A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
461C:	36-68       	ori r19, 0x86         ; Logical OR with Immediate
461E:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
4620:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
4622:	DA-F8       	.data 0xf8da          ; Binary data
4624:	68-B1       	in r22, 0x08          ; Load an I/O Location to Register
4626:	05-EB       	ldi r16, 0xb5         ; Load Immediate
4628:	45-05       	cpc r20, r5           ; Compare with Carry
462A:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
462C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
462E:	C5-05       	cpc r28, r5           ; Compare with Carry
4630:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
4632:	A9-68       	ori r26, 0x89         ; Logical OR with Immediate
4634:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
4636:	32-FF       	sbrs r19, 2           ; Skip if Bit in Register is Set
4638:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
463A:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
463C:	E3-FF       	sbrs r30, 3           ; Skip if Bit in Register is Set
463E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
4640:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
4642:	01-35       	cpi r16, 0x51         ; Compare with Immediate
4644:	18-34       	cpi r17, 0x48         ; Compare with Immediate
4646:	C8-2D       	mov r28, r8           ; Copy Register
4648:	D3-D1       	rcall .+934           ; Relative Call to Subroutine
464A:	00-20       	and r0, r0            ; Logical AND
464C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
464E:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
4650:	44-9E       	mul r4, r20           ; Multiply Unsigned
4652:	FF-1F       	adc r31, r31          ; Add with Carry
4654:	38-9E       	mul r3, r24           ; Multiply Unsigned
4656:	FF-1F       	adc r31, r31          ; Add with Carry
4658:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
465A:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
465C:	AD-F6       	brbc 5, .-86          ; Branch if Bit in SREG is Cleared
465E:	44-3D       	cpi r20, 0xd4         ; Compare with Immediate
4660:	32-24       	clr r50               ; Clear Register
4662:	8D-F8       	.data 0xf88d          ; Binary data
4664:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
4666:	2D-26       	clr r557              ; Clear Register
4668:	8D-F8       	.data 0xf88d          ; Binary data
466A:	01-60       	ori r16, 0x01         ; Logical OR with Immediate
466C:	07-25       	clr r263              ; Clear Register
466E:	8D-F8       	.data 0xf88d          ; Binary data
4670:	02-50       	subi r16, 0x02        ; Subtract Immediate
4672:	00-20       	and r0, r0            ; Logical AND
4674:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
4676:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4678:	95-FF       	sbrs r25, 5           ; Skip if Bit in Register is Set
467A:	8D-F8       	.data 0xf88d          ; Binary data
467C:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
467E:	8D-F8       	.data 0xf88d          ; Binary data
4680:	05-60       	ori r16, 0x05         ; Logical OR with Immediate
4682:	8D-F8       	.data 0xf88d          ; Binary data
4684:	06-50       	subi r16, 0x06        ; Subtract Immediate
4686:	01-20       	and r0, r1            ; Logical AND
4688:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
468A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
468C:	8B-FF       	.data 0xff8b          ; Binary data
468E:	8D-F8       	.data 0xf88d          ; Binary data
4690:	08-40       	sbci r16, 0x08        ; Subtract Immediate with Carry SBI
4692:	8D-F8       	.data 0xf88d          ; Binary data
4694:	09-60       	ori r16, 0x09         ; Logical OR with Immediate
4696:	8D-F8       	.data 0xf88d          ; Binary data
4698:	0A-50       	subi r16, 0x0a        ; Subtract Immediate
469A:	02-20       	and r0, r2            ; Logical AND
469C:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
469E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
46A0:	81-FF       	sbrs r24, 1           ; Skip if Bit in Register is Set
46A2:	8D-F8       	.data 0xf88d          ; Binary data
46A4:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
46A6:	8D-F8       	.data 0xf88d          ; Binary data
46A8:	0D-60       	ori r16, 0x0d         ; Logical OR with Immediate
46AA:	8D-F8       	.data 0xf88d          ; Binary data
46AC:	0E-50       	subi r16, 0x0e        ; Subtract Immediate
46AE:	03-20       	and r0, r3            ; Logical AND
46B0:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
46B2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
46B4:	77-FF       	sbrs r23, 7           ; Skip if Bit in Register is Set
46B6:	8D-F8       	.data 0xf88d          ; Binary data
46B8:	10-40       	sbci r17, 0x00        ; Subtract Immediate with Carry SBI
46BA:	8D-F8       	.data 0xf88d          ; Binary data
46BC:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
46BE:	8D-F8       	.data 0xf88d          ; Binary data
46C0:	12-50       	subi r17, 0x02        ; Subtract Immediate
46C2:	04-20       	and r0, r4            ; Logical AND
46C4:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
46C6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
46C8:	6D-FF       	.data 0xff6d          ; Binary data
46CA:	8D-F8       	.data 0xf88d          ; Binary data
46CC:	14-40       	sbci r17, 0x04        ; Subtract Immediate with Carry SBI
46CE:	8D-F8       	.data 0xf88d          ; Binary data
46D0:	15-60       	ori r17, 0x05         ; Logical OR with Immediate
46D2:	8D-F8       	.data 0xf88d          ; Binary data
46D4:	16-50       	subi r17, 0x06        ; Subtract Immediate
46D6:	05-20       	and r0, r5            ; Logical AND
46D8:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
46DA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
46DC:	63-FF       	sbrs r22, 3           ; Skip if Bit in Register is Set
46DE:	8D-F8       	.data 0xf88d          ; Binary data
46E0:	18-40       	sbci r17, 0x08        ; Subtract Immediate with Carry SBI
46E2:	8D-F8       	.data 0xf88d          ; Binary data
46E4:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
46E6:	8D-F8       	.data 0xf88d          ; Binary data
46E8:	1A-50       	subi r17, 0x0a        ; Subtract Immediate
46EA:	06-20       	and r0, r6            ; Logical AND
46EC:	06-A9       	std Y+54, r16         ; Store Indirect From Register to Data Space
46EE:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
46F0:	59-FF       	.data 0xff59          ; Binary data
46F2:	8D-F8       	.data 0xf88d          ; Binary data
46F4:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
46F6:	8D-F8       	.data 0xf88d          ; Binary data
46F8:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
46FA:	8D-F8       	.data 0xf88d          ; Binary data
46FC:	1E-50       	subi r17, 0x0e        ; Subtract Immediate
46FE:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
4700:	07-A9       	std Y+55, r16         ; Store Indirect From Register to Data Space
4702:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4704:	4F-FF       	.data 0xff4f          ; Binary data
4706:	8D-F8       	.data 0xf88d          ; Binary data
4708:	20-40       	sbci r18, 0x00        ; Subtract Immediate with Carry SBI
470A:	8D-F8       	.data 0xf88d          ; Binary data
470C:	21-60       	ori r18, 0x01         ; Logical OR with Immediate
470E:	8D-F8       	.data 0xf88d          ; Binary data
4710:	22-50       	subi r18, 0x02        ; Subtract Immediate
4712:	08-20       	and r0, r8            ; Logical AND
4714:	08-A9       	std Y+48, r16         ; Store Indirect From Register to Data Space
4716:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4718:	45-FF       	sbrs r20, 5           ; Skip if Bit in Register is Set
471A:	8D-F8       	.data 0xf88d          ; Binary data
471C:	24-40       	sbci r18, 0x04        ; Subtract Immediate with Carry SBI
471E:	8D-F8       	.data 0xf88d          ; Binary data
4720:	25-60       	ori r18, 0x05         ; Logical OR with Immediate
4722:	8D-F8       	.data 0xf88d          ; Binary data
4724:	26-50       	subi r18, 0x06        ; Subtract Immediate
4726:	09-20       	and r0, r9            ; Logical AND
4728:	09-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
472A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
472C:	3B-FF       	.data 0xff3b          ; Binary data
472E:	8D-F8       	.data 0xf88d          ; Binary data
4730:	28-40       	sbci r18, 0x08        ; Subtract Immediate with Carry SBI
4732:	8D-F8       	.data 0xf88d          ; Binary data
4734:	29-60       	ori r18, 0x09         ; Logical OR with Immediate
4736:	8D-F8       	.data 0xf88d          ; Binary data
4738:	2A-50       	subi r18, 0x0a        ; Subtract Immediate
473A:	0A-20       	and r0, r10           ; Logical AND
473C:	0A-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
473E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4740:	31-FF       	sbrs r19, 1           ; Skip if Bit in Register is Set
4742:	8D-F8       	.data 0xf88d          ; Binary data
4744:	2C-40       	sbci r18, 0x0c        ; Subtract Immediate with Carry SBI
4746:	8D-F8       	.data 0xf88d          ; Binary data
4748:	2D-60       	ori r18, 0x0d         ; Logical OR with Immediate
474A:	8D-F8       	.data 0xf88d          ; Binary data
474C:	2E-50       	subi r18, 0x0e        ; Subtract Immediate
474E:	0B-20       	and r0, r11           ; Logical AND
4750:	0B-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
4752:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4754:	27-FF       	sbrs r18, 7           ; Skip if Bit in Register is Set
4756:	8D-F8       	.data 0xf88d          ; Binary data
4758:	30-40       	sbci r19, 0x00        ; Subtract Immediate with Carry SBI
475A:	8D-F8       	.data 0xf88d          ; Binary data
475C:	31-60       	ori r19, 0x01         ; Logical OR with Immediate
475E:	8D-F8       	.data 0xf88d          ; Binary data
4760:	32-50       	subi r19, 0x02        ; Subtract Immediate
4762:	0C-20       	and r0, r12           ; Logical AND
4764:	0C-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
4766:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4768:	1D-FF       	.data 0xff1d          ; Binary data
476A:	8D-F8       	.data 0xf88d          ; Binary data
476C:	34-40       	sbci r19, 0x04        ; Subtract Immediate with Carry SBI
476E:	8D-F8       	.data 0xf88d          ; Binary data
4770:	35-60       	ori r19, 0x05         ; Logical OR with Immediate
4772:	8D-F8       	.data 0xf88d          ; Binary data
4774:	36-50       	subi r19, 0x06        ; Subtract Immediate
4776:	0D-20       	and r0, r13           ; Logical AND
4778:	0D-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
477A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
477C:	13-FF       	sbrs r17, 3           ; Skip if Bit in Register is Set
477E:	8D-F8       	.data 0xf88d          ; Binary data
4780:	38-40       	sbci r19, 0x08        ; Subtract Immediate with Carry SBI
4782:	8D-F8       	.data 0xf88d          ; Binary data
4784:	39-60       	ori r19, 0x09         ; Logical OR with Immediate
4786:	8D-F8       	.data 0xf88d          ; Binary data
4788:	3A-50       	subi r19, 0x0a        ; Subtract Immediate
478A:	0E-20       	and r0, r14           ; Logical AND
478C:	0E-A9       	std Y+54, r16         ; Store Indirect From Register to Data Space
478E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4790:	09-FF       	.data 0xff09          ; Binary data
4792:	8D-F8       	.data 0xf88d          ; Binary data
4794:	3C-40       	sbci r19, 0x0c        ; Subtract Immediate with Carry SBI
4796:	8D-F8       	.data 0xf88d          ; Binary data
4798:	3D-60       	ori r19, 0x0d         ; Logical OR with Immediate
479A:	8D-F8       	.data 0xf88d          ; Binary data
479C:	3E-50       	subi r19, 0x0e        ; Subtract Immediate
479E:	0F-20       	and r0, r15           ; Logical AND
47A0:	0F-A9       	std Y+55, r16         ; Store Indirect From Register to Data Space
47A2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
47A4:	FF-FE       	.data 0xfeff          ; Binary data
47A6:	8D-F8       	.data 0xf88d          ; Binary data
47A8:	40-40       	sbci r20, 0x00        ; Subtract Immediate with Carry SBI
47AA:	8D-F8       	.data 0xf88d          ; Binary data
47AC:	41-60       	ori r20, 0x01         ; Logical OR with Immediate
47AE:	8D-F8       	.data 0xf88d          ; Binary data
47B0:	42-50       	subi r20, 0x02        ; Subtract Immediate
47B2:	10-20       	and r1, r0            ; Logical AND
47B4:	10-A9       	std Y+48, r17         ; Store Indirect From Register to Data Space
47B6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
47B8:	F5-FE       	sbrs r15, 5           ; Skip if Bit in Register is Set
47BA:	8D-F8       	.data 0xf88d          ; Binary data
47BC:	44-40       	sbci r20, 0x04        ; Subtract Immediate with Carry SBI
47BE:	8D-F8       	.data 0xf88d          ; Binary data
47C0:	45-60       	ori r20, 0x05         ; Logical OR with Immediate
47C2:	8D-F8       	.data 0xf88d          ; Binary data
47C4:	46-50       	subi r20, 0x06        ; Subtract Immediate
47C6:	11-20       	and r1, r1            ; Logical AND
47C8:	11-A9       	std Y+49, r17         ; Store Indirect From Register to Data Space
47CA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
47CC:	EB-FE       	.data 0xfeeb          ; Binary data
47CE:	8D-F8       	.data 0xf88d          ; Binary data
47D0:	48-40       	sbci r20, 0x08        ; Subtract Immediate with Carry SBI
47D2:	8D-F8       	.data 0xf88d          ; Binary data
47D4:	49-60       	ori r20, 0x09         ; Logical OR with Immediate
47D6:	06-25       	clr r262              ; Clear Register
47D8:	8D-F8       	.data 0xf88d          ; Binary data
47DA:	4A-50       	subi r20, 0x0a        ; Subtract Immediate
47DC:	12-20       	and r1, r2            ; Logical AND
47DE:	12-A9       	std Y+50, r17         ; Store Indirect From Register to Data Space
47E0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
47E2:	E0-FE       	sbrs r14, 0           ; Skip if Bit in Register is Set
47E4:	8D-F8       	.data 0xf88d          ; Binary data
47E6:	4C-40       	sbci r20, 0x0c        ; Subtract Immediate with Carry SBI
47E8:	8D-F8       	.data 0xf88d          ; Binary data
47EA:	4D-60       	ori r20, 0x0d         ; Logical OR with Immediate
47EC:	8D-F8       	.data 0xf88d          ; Binary data
47EE:	4E-50       	subi r20, 0x0e        ; Subtract Immediate
47F0:	13-20       	and r1, r3            ; Logical AND
47F2:	13-A9       	std Y+51, r17         ; Store Indirect From Register to Data Space
47F4:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
47F6:	D6-FE       	sbrs r13, 6           ; Skip if Bit in Register is Set
47F8:	8D-F8       	.data 0xf88d          ; Binary data
47FA:	50-40       	sbci r21, 0x00        ; Subtract Immediate with Carry SBI
47FC:	8D-F8       	.data 0xf88d          ; Binary data
47FE:	51-60       	ori r21, 0x01         ; Logical OR with Immediate
4800:	8D-F8       	.data 0xf88d          ; Binary data
4802:	52-50       	subi r21, 0x02        ; Subtract Immediate
4804:	14-20       	and r1, r4            ; Logical AND
4806:	14-A9       	std Y+52, r17         ; Store Indirect From Register to Data Space
4808:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
480A:	CC-FE       	.data 0xfecc          ; Binary data
480C:	8D-F8       	.data 0xf88d          ; Binary data
480E:	54-40       	sbci r21, 0x04        ; Subtract Immediate with Carry SBI
4810:	8D-F8       	.data 0xf88d          ; Binary data
4812:	55-60       	ori r21, 0x05         ; Logical OR with Immediate
4814:	8D-F8       	.data 0xf88d          ; Binary data
4816:	56-50       	subi r21, 0x06        ; Subtract Immediate
4818:	15-20       	and r1, r5            ; Logical AND
481A:	15-A9       	std Y+53, r17         ; Store Indirect From Register to Data Space
481C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
481E:	C2-FE       	sbrs r12, 2           ; Skip if Bit in Register is Set
4820:	8D-F8       	.data 0xf88d          ; Binary data
4822:	58-40       	sbci r21, 0x08        ; Subtract Immediate with Carry SBI
4824:	8D-F8       	.data 0xf88d          ; Binary data
4826:	59-60       	ori r21, 0x09         ; Logical OR with Immediate
4828:	08-25       	clr r264              ; Clear Register
482A:	8D-F8       	.data 0xf88d          ; Binary data
482C:	5A-50       	subi r21, 0x0a        ; Subtract Immediate
482E:	16-20       	and r1, r6            ; Logical AND
4830:	16-A9       	std Y+54, r17         ; Store Indirect From Register to Data Space
4832:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4834:	B7-FE       	sbrs r11, 7           ; Skip if Bit in Register is Set
4836:	8D-F8       	.data 0xf88d          ; Binary data
4838:	5C-40       	sbci r21, 0x0c        ; Subtract Immediate with Carry SBI
483A:	8D-F8       	.data 0xf88d          ; Binary data
483C:	5D-60       	ori r21, 0x0d         ; Logical OR with Immediate
483E:	8D-F8       	.data 0xf88d          ; Binary data
4840:	5E-50       	subi r21, 0x0e        ; Subtract Immediate
4842:	17-20       	and r1, r7            ; Logical AND
4844:	17-A9       	std Y+55, r17         ; Store Indirect From Register to Data Space
4846:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4848:	AD-FE       	.data 0xfead          ; Binary data
484A:	8D-F8       	.data 0xf88d          ; Binary data
484C:	60-40       	sbci r22, 0x00        ; Subtract Immediate with Carry SBI
484E:	2E-25       	clr r302              ; Clear Register
4850:	8D-F8       	.data 0xf88d          ; Binary data
4852:	61-50       	subi r22, 0x01        ; Subtract Immediate
4854:	0D-27       	clr r781              ; Clear Register
4856:	8D-F8       	.data 0xf88d          ; Binary data
4858:	62-70       	andi r22, 0x02        ; Logical AND with Immediate
485A:	18-20       	and r1, r8            ; Logical AND
485C:	18-A9       	std Y+48, r17         ; Store Indirect From Register to Data Space
485E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4860:	A1-FE       	sbrs r10, 1           ; Skip if Bit in Register is Set
4862:	8D-F8       	.data 0xf88d          ; Binary data
4864:	64-40       	sbci r22, 0x04        ; Subtract Immediate with Carry SBI
4866:	8D-F8       	.data 0xf88d          ; Binary data
4868:	65-50       	subi r22, 0x05        ; Subtract Immediate
486A:	8D-F8       	.data 0xf88d          ; Binary data
486C:	66-70       	andi r22, 0x06        ; Logical AND with Immediate
486E:	19-20       	and r1, r9            ; Logical AND
4870:	19-A9       	std Y+49, r17         ; Store Indirect From Register to Data Space
4872:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4874:	97-FE       	sbrs r9, 7            ; Skip if Bit in Register is Set
4876:	8D-F8       	.data 0xf88d          ; Binary data
4878:	68-40       	sbci r22, 0x08        ; Subtract Immediate with Carry SBI
487A:	8D-F8       	.data 0xf88d          ; Binary data
487C:	69-50       	subi r22, 0x09        ; Subtract Immediate
487E:	0F-27       	clr r783              ; Clear Register
4880:	8D-F8       	.data 0xf88d          ; Binary data
4882:	6A-70       	andi r22, 0x0a        ; Logical AND with Immediate
4884:	1A-20       	and r1, r10           ; Logical AND
4886:	1A-A9       	std Y+50, r17         ; Store Indirect From Register to Data Space
4888:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
488A:	8C-FE       	.data 0xfe8c          ; Binary data
488C:	8D-F8       	.data 0xf88d          ; Binary data
488E:	6C-40       	sbci r22, 0x0c        ; Subtract Immediate with Carry SBI
4890:	8D-F8       	.data 0xf88d          ; Binary data
4892:	6D-50       	subi r22, 0x0d        ; Subtract Immediate
4894:	8D-F8       	.data 0xf88d          ; Binary data
4896:	6E-70       	andi r22, 0x0e        ; Logical AND with Immediate
4898:	1B-20       	and r1, r11           ; Logical AND
489A:	1B-A9       	std Y+51, r17         ; Store Indirect From Register to Data Space
489C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
489E:	82-FE       	sbrs r8, 2            ; Skip if Bit in Register is Set
48A0:	8D-F8       	.data 0xf88d          ; Binary data
48A2:	70-40       	sbci r23, 0x00        ; Subtract Immediate with Carry SBI
48A4:	8D-F8       	.data 0xf88d          ; Binary data
48A6:	71-50       	subi r23, 0x01        ; Subtract Immediate
48A8:	8D-F8       	.data 0xf88d          ; Binary data
48AA:	72-70       	andi r23, 0x02        ; Logical AND with Immediate
48AC:	1C-20       	and r1, r12           ; Logical AND
48AE:	1C-A9       	std Y+52, r17         ; Store Indirect From Register to Data Space
48B0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
48B2:	78-FE       	.data 0xfe78          ; Binary data
48B4:	8D-F8       	.data 0xf88d          ; Binary data
48B6:	74-40       	sbci r23, 0x04        ; Subtract Immediate with Carry SBI
48B8:	8D-F8       	.data 0xf88d          ; Binary data
48BA:	75-50       	subi r23, 0x05        ; Subtract Immediate
48BC:	8D-F8       	.data 0xf88d          ; Binary data
48BE:	76-70       	andi r23, 0x06        ; Logical AND with Immediate
48C0:	1D-20       	and r1, r13           ; Logical AND
48C2:	1D-A9       	std Y+53, r17         ; Store Indirect From Register to Data Space
48C4:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
48C6:	6E-FE       	.data 0xfe6e          ; Binary data
48C8:	8D-F8       	.data 0xf88d          ; Binary data
48CA:	78-40       	sbci r23, 0x08        ; Subtract Immediate with Carry SBI
48CC:	8D-F8       	.data 0xf88d          ; Binary data
48CE:	79-50       	subi r23, 0x09        ; Subtract Immediate
48D0:	8D-F8       	.data 0xf88d          ; Binary data
48D2:	7A-70       	andi r23, 0x0a        ; Logical AND with Immediate
48D4:	1E-20       	and r1, r14           ; Logical AND
48D6:	1E-A9       	std Y+54, r17         ; Store Indirect From Register to Data Space
48D8:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
48DA:	64-FE       	sbrs r6, 4            ; Skip if Bit in Register is Set
48DC:	8D-F8       	.data 0xf88d          ; Binary data
48DE:	7C-40       	sbci r23, 0x0c        ; Subtract Immediate with Carry SBI
48E0:	8D-F8       	.data 0xf88d          ; Binary data
48E2:	7D-50       	subi r23, 0x0d        ; Subtract Immediate
48E4:	8D-F8       	.data 0xf88d          ; Binary data
48E6:	7E-70       	andi r23, 0x0e        ; Logical AND with Immediate
48E8:	1F-20       	and r1, r15           ; Logical AND
48EA:	1F-A9       	std Y+55, r17         ; Store Indirect From Register to Data Space
48EC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
48EE:	5A-FE       	.data 0xfe5a          ; Binary data
48F0:	8D-F8       	.data 0xf88d          ; Binary data
48F2:	80-40       	sbci r24, 0x00        ; Subtract Immediate with Carry SBI
48F4:	8D-F8       	.data 0xf88d          ; Binary data
48F6:	81-50       	subi r24, 0x01        ; Subtract Immediate
48F8:	8D-F8       	.data 0xf88d          ; Binary data
48FA:	82-70       	andi r24, 0x02        ; Logical AND with Immediate
48FC:	20-20       	and r2, r0            ; Logical AND
48FE:	20-A9       	std Y+48, r18         ; Store Indirect From Register to Data Space
4900:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4902:	50-FE       	sbrs r5, 0            ; Skip if Bit in Register is Set
4904:	8D-F8       	.data 0xf88d          ; Binary data
4906:	84-40       	sbci r24, 0x04        ; Subtract Immediate with Carry SBI
4908:	8D-F8       	.data 0xf88d          ; Binary data
490A:	85-50       	subi r24, 0x05        ; Subtract Immediate
490C:	8D-F8       	.data 0xf88d          ; Binary data
490E:	86-70       	andi r24, 0x06        ; Logical AND with Immediate
4910:	21-20       	and r2, r1            ; Logical AND
4912:	21-A9       	std Y+49, r18         ; Store Indirect From Register to Data Space
4914:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4916:	46-FE       	sbrs r4, 6            ; Skip if Bit in Register is Set
4918:	8D-F8       	.data 0xf88d          ; Binary data
491A:	88-40       	sbci r24, 0x08        ; Subtract Immediate with Carry SBI
491C:	8D-F8       	.data 0xf88d          ; Binary data
491E:	89-50       	subi r24, 0x09        ; Subtract Immediate
4920:	8D-F8       	.data 0xf88d          ; Binary data
4922:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
4924:	22-20       	and r2, r2            ; Logical AND
4926:	22-A9       	std Y+50, r18         ; Store Indirect From Register to Data Space
4928:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
492A:	3C-FE       	.data 0xfe3c          ; Binary data
492C:	8D-F8       	.data 0xf88d          ; Binary data
492E:	8C-40       	sbci r24, 0x0c        ; Subtract Immediate with Carry SBI
4930:	8D-F8       	.data 0xf88d          ; Binary data
4932:	8D-50       	subi r24, 0x0d        ; Subtract Immediate
4934:	8D-F8       	.data 0xf88d          ; Binary data
4936:	8E-70       	andi r24, 0x0e        ; Logical AND with Immediate
4938:	23-20       	and r2, r3            ; Logical AND
493A:	23-A9       	std Y+51, r18         ; Store Indirect From Register to Data Space
493C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
493E:	32-FE       	sbrs r3, 2            ; Skip if Bit in Register is Set
4940:	8D-F8       	.data 0xf88d          ; Binary data
4942:	90-40       	sbci r25, 0x00        ; Subtract Immediate with Carry SBI
4944:	8D-F8       	.data 0xf88d          ; Binary data
4946:	91-50       	subi r25, 0x01        ; Subtract Immediate
4948:	8D-F8       	.data 0xf88d          ; Binary data
494A:	92-70       	andi r25, 0x02        ; Logical AND with Immediate
494C:	24-20       	and r2, r4            ; Logical AND
494E:	24-A9       	std Y+52, r18         ; Store Indirect From Register to Data Space
4950:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4952:	28-FE       	.data 0xfe28          ; Binary data
4954:	8D-F8       	.data 0xf88d          ; Binary data
4956:	94-40       	sbci r25, 0x04        ; Subtract Immediate with Carry SBI
4958:	8D-F8       	.data 0xf88d          ; Binary data
495A:	95-50       	subi r25, 0x05        ; Subtract Immediate
495C:	8D-F8       	.data 0xf88d          ; Binary data
495E:	96-70       	andi r25, 0x06        ; Logical AND with Immediate
4960:	25-20       	and r2, r5            ; Logical AND
4962:	25-A9       	std Y+53, r18         ; Store Indirect From Register to Data Space
4964:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4966:	1E-FE       	.data 0xfe1e          ; Binary data
4968:	8D-F8       	.data 0xf88d          ; Binary data
496A:	98-40       	sbci r25, 0x08        ; Subtract Immediate with Carry SBI
496C:	8D-F8       	.data 0xf88d          ; Binary data
496E:	99-50       	subi r25, 0x09        ; Subtract Immediate
4970:	8D-F8       	.data 0xf88d          ; Binary data
4972:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
4974:	26-20       	and r2, r6            ; Logical AND
4976:	26-A9       	std Y+54, r18         ; Store Indirect From Register to Data Space
4978:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
497A:	14-FE       	sbrs r1, 4            ; Skip if Bit in Register is Set
497C:	8D-F8       	.data 0xf88d          ; Binary data
497E:	9C-40       	sbci r25, 0x0c        ; Subtract Immediate with Carry SBI
4980:	8D-F8       	.data 0xf88d          ; Binary data
4982:	9D-50       	subi r25, 0x0d        ; Subtract Immediate
4984:	8D-F8       	.data 0xf88d          ; Binary data
4986:	9E-70       	andi r25, 0x0e        ; Logical AND with Immediate
4988:	27-20       	and r2, r7            ; Logical AND
498A:	27-A9       	std Y+55, r18         ; Store Indirect From Register to Data Space
498C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
498E:	0A-FE       	.data 0xfe0a          ; Binary data
4990:	8D-F8       	.data 0xf88d          ; Binary data
4992:	A0-40       	sbci r26, 0x00        ; Subtract Immediate with Carry SBI
4994:	8D-F8       	.data 0xf88d          ; Binary data
4996:	A1-50       	subi r26, 0x01        ; Subtract Immediate
4998:	8D-F8       	.data 0xf88d          ; Binary data
499A:	A2-70       	andi r26, 0x02        ; Logical AND with Immediate
499C:	28-20       	and r2, r8            ; Logical AND
499E:	28-A9       	std Y+48, r18         ; Store Indirect From Register to Data Space
49A0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
49A2:	00-FE       	sbrs r0, 0            ; Skip if Bit in Register is Set
49A4:	8D-F8       	.data 0xf88d          ; Binary data
49A6:	A4-40       	sbci r26, 0x04        ; Subtract Immediate with Carry SBI
49A8:	8D-F8       	.data 0xf88d          ; Binary data
49AA:	A5-50       	subi r26, 0x05        ; Subtract Immediate
49AC:	8D-F8       	.data 0xf88d          ; Binary data
49AE:	A6-70       	andi r26, 0x06        ; Logical AND with Immediate
49B0:	29-20       	and r2, r9            ; Logical AND
49B2:	29-A9       	std Y+49, r18         ; Store Indirect From Register to Data Space
49B4:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
49B6:	F6-FD       	sbrc r31, 6           ; Skip if Bit in Register is Cleared
49B8:	8D-F8       	.data 0xf88d          ; Binary data
49BA:	A8-40       	sbci r26, 0x08        ; Subtract Immediate with Carry SBI
49BC:	8D-F8       	.data 0xf88d          ; Binary data
49BE:	A9-50       	subi r26, 0x09        ; Subtract Immediate
49C0:	8D-F8       	.data 0xf88d          ; Binary data
49C2:	AA-70       	andi r26, 0x0a        ; Logical AND with Immediate
49C4:	2A-20       	and r2, r10           ; Logical AND
49C6:	2A-A9       	std Y+50, r18         ; Store Indirect From Register to Data Space
49C8:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
49CA:	EC-FD       	.data 0xfdec          ; Binary data
49CC:	8D-F8       	.data 0xf88d          ; Binary data
49CE:	AC-40       	sbci r26, 0x0c        ; Subtract Immediate with Carry SBI
49D0:	8D-F8       	.data 0xf88d          ; Binary data
49D2:	AD-50       	subi r26, 0x0d        ; Subtract Immediate
49D4:	8D-F8       	.data 0xf88d          ; Binary data
49D6:	AE-70       	andi r26, 0x0e        ; Logical AND with Immediate
49D8:	2B-20       	and r2, r11           ; Logical AND
49DA:	2B-A9       	std Y+51, r18         ; Store Indirect From Register to Data Space
49DC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
49DE:	E2-FD       	sbrc r30, 2           ; Skip if Bit in Register is Cleared
49E0:	8D-F8       	.data 0xf88d          ; Binary data
49E2:	B0-40       	sbci r27, 0x00        ; Subtract Immediate with Carry SBI
49E4:	8D-F8       	.data 0xf88d          ; Binary data
49E6:	B1-50       	subi r27, 0x01        ; Subtract Immediate
49E8:	8D-F8       	.data 0xf88d          ; Binary data
49EA:	B2-70       	andi r27, 0x02        ; Logical AND with Immediate
49EC:	2C-20       	and r2, r12           ; Logical AND
49EE:	2C-A9       	std Y+52, r18         ; Store Indirect From Register to Data Space
49F0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
49F2:	D8-FD       	.data 0xfdd8          ; Binary data
49F4:	8D-F8       	.data 0xf88d          ; Binary data
49F6:	B4-40       	sbci r27, 0x04        ; Subtract Immediate with Carry SBI
49F8:	8D-F8       	.data 0xf88d          ; Binary data
49FA:	B5-50       	subi r27, 0x05        ; Subtract Immediate
49FC:	8D-F8       	.data 0xf88d          ; Binary data
49FE:	B6-70       	andi r27, 0x06        ; Logical AND with Immediate
4A00:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
4A02:	2D-A9       	std Y+53, r18         ; Store Indirect From Register to Data Space
4A04:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A06:	CE-FD       	.data 0xfdce          ; Binary data
4A08:	8D-F8       	.data 0xf88d          ; Binary data
4A0A:	B8-40       	sbci r27, 0x08        ; Subtract Immediate with Carry SBI
4A0C:	8D-F8       	.data 0xf88d          ; Binary data
4A0E:	B9-50       	subi r27, 0x09        ; Subtract Immediate
4A10:	8D-F8       	.data 0xf88d          ; Binary data
4A12:	BA-70       	andi r27, 0x0a        ; Logical AND with Immediate
4A14:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
4A16:	2E-A9       	std Y+54, r18         ; Store Indirect From Register to Data Space
4A18:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A1A:	C4-FD       	sbrc r28, 4           ; Skip if Bit in Register is Cleared
4A1C:	8D-F8       	.data 0xf88d          ; Binary data
4A1E:	BC-40       	sbci r27, 0x0c        ; Subtract Immediate with Carry SBI
4A20:	8D-F8       	.data 0xf88d          ; Binary data
4A22:	BD-50       	subi r27, 0x0d        ; Subtract Immediate
4A24:	8D-F8       	.data 0xf88d          ; Binary data
4A26:	BE-70       	andi r27, 0x0e        ; Logical AND with Immediate
4A28:	2F-20       	and r2, r15           ; Logical AND
4A2A:	2F-A9       	std Y+55, r18         ; Store Indirect From Register to Data Space
4A2C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A2E:	BA-FD       	.data 0xfdba          ; Binary data
4A30:	8D-F8       	.data 0xf88d          ; Binary data
4A32:	C0-40       	sbci r28, 0x00        ; Subtract Immediate with Carry SBI
4A34:	8D-F8       	.data 0xf88d          ; Binary data
4A36:	C1-50       	subi r28, 0x01        ; Subtract Immediate
4A38:	8D-F8       	.data 0xf88d          ; Binary data
4A3A:	C2-70       	andi r28, 0x02        ; Logical AND with Immediate
4A3C:	30-20       	and r3, r0            ; Logical AND
4A3E:	30-A9       	std Y+48, r19         ; Store Indirect From Register to Data Space
4A40:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A42:	B0-FD       	sbrc r27, 0           ; Skip if Bit in Register is Cleared
4A44:	8D-F8       	.data 0xf88d          ; Binary data
4A46:	C4-40       	sbci r28, 0x04        ; Subtract Immediate with Carry SBI
4A48:	8D-F8       	.data 0xf88d          ; Binary data
4A4A:	C5-50       	subi r28, 0x05        ; Subtract Immediate
4A4C:	8D-F8       	.data 0xf88d          ; Binary data
4A4E:	C6-70       	andi r28, 0x06        ; Logical AND with Immediate
4A50:	31-20       	and r3, r1            ; Logical AND
4A52:	31-A9       	std Y+49, r19         ; Store Indirect From Register to Data Space
4A54:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A56:	A6-FD       	sbrc r26, 6           ; Skip if Bit in Register is Cleared
4A58:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4A5A:	31-08       	sbc r3, r1            ; Subtract with Carry
4A5C:	8D-F8       	.data 0xf88d          ; Binary data
4A5E:	C8-80       	ld r12, Y             ; Load Indirect from Data Space to Register
4A60:	2F-26       	clr r559              ; Clear Register
4A62:	8D-F8       	.data 0xf88d          ; Binary data
4A64:	C9-60       	ori r28, 0x09         ; Logical OR with Immediate
4A66:	0E-27       	clr r782              ; Clear Register
4A68:	8D-F8       	.data 0xf88d          ; Binary data
4A6A:	CA-70       	andi r28, 0x0a        ; Logical AND with Immediate
4A6C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
4A6E:	32-A9       	std Y+50, r19         ; Store Indirect From Register to Data Space
4A70:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A72:	98-FD       	.data 0xfd98          ; Binary data
4A74:	8D-F8       	.data 0xf88d          ; Binary data
4A76:	CC-80       	ldd r12, Y+4          ; Load Indirect from Data Space to Register
4A78:	8D-F8       	.data 0xf88d          ; Binary data
4A7A:	CD-50       	subi r28, 0x0d        ; Subtract Immediate
4A7C:	8D-F8       	.data 0xf88d          ; Binary data
4A7E:	CE-70       	andi r28, 0x0e        ; Logical AND with Immediate
4A80:	33-20       	and r3, r3            ; Logical AND
4A82:	33-A9       	std Y+51, r19         ; Store Indirect From Register to Data Space
4A84:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A86:	8E-FD       	.data 0xfd8e          ; Binary data
4A88:	30-27       	clr r816              ; Clear Register
4A8A:	8D-F8       	.data 0xf88d          ; Binary data
4A8C:	D0-70       	andi r29, 0x00        ; Logical AND with Immediate
4A8E:	8D-F8       	.data 0xf88d          ; Binary data
4A90:	D1-60       	ori r29, 0x01         ; Logical OR with Immediate
4A92:	11-23       	and r17, r17          ; Logical AND
4A94:	8D-F8       	.data 0xf88d          ; Binary data
4A96:	D2-30       	cpi r29, 0x02         ; Compare with Immediate
4A98:	34-20       	and r3, r4            ; Logical AND
4A9A:	34-A9       	std Y+52, r19         ; Store Indirect From Register to Data Space
4A9C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4A9E:	82-FD       	sbrc r24, 2           ; Skip if Bit in Register is Cleared
4AA0:	8D-F8       	.data 0xf88d          ; Binary data
4AA2:	D4-80       	ldd r13, Y+4          ; Load Indirect from Data Space to Register
4AA4:	8D-F8       	.data 0xf88d          ; Binary data
4AA6:	D5-70       	andi r29, 0x05        ; Logical AND with Immediate
4AA8:	12-23       	and r17, r18          ; Logical AND
4AAA:	8D-F8       	.data 0xf88d          ; Binary data
4AAC:	D6-30       	cpi r29, 0x06         ; Compare with Immediate
4AAE:	35-20       	and r3, r5            ; Logical AND
4AB0:	35-A9       	std Y+53, r19         ; Store Indirect From Register to Data Space
4AB2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4AB4:	77-FD       	sbrc r23, 7           ; Skip if Bit in Register is Cleared
4AB6:	8D-F8       	.data 0xf88d          ; Binary data
4AB8:	D8-80       	ld r13, Y             ; Load Indirect from Data Space to Register
4ABA:	8D-F8       	.data 0xf88d          ; Binary data
4ABC:	D9-60       	ori r29, 0x09         ; Logical OR with Immediate
4ABE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4AC0:	17-0A       	sbc r1, r23           ; Subtract with Carry
4AC2:	8D-F8       	.data 0xf88d          ; Binary data
4AC4:	DA-A0       	ldd r13, Y+34         ; Load Indirect from Data Space to Register
4AC6:	36-20       	and r3, r6            ; Logical AND
4AC8:	36-A9       	std Y+54, r19         ; Store Indirect From Register to Data Space
4ACA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4ACC:	6B-FD       	.data 0xfd6b          ; Binary data
4ACE:	8D-F8       	.data 0xf88d          ; Binary data
4AD0:	DC-80       	ldd r13, Y+4          ; Load Indirect from Data Space to Register
4AD2:	8D-F8       	.data 0xf88d          ; Binary data
4AD4:	DD-60       	ori r29, 0x0d         ; Logical OR with Immediate
4AD6:	8D-F8       	.data 0xf88d          ; Binary data
4AD8:	DE-A0       	ldd r13, Y+38         ; Load Indirect from Data Space to Register
4ADA:	37-20       	and r3, r7            ; Logical AND
4ADC:	37-A9       	std Y+55, r19         ; Store Indirect From Register to Data Space
4ADE:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4AE0:	61-FD       	sbrc r22, 1           ; Skip if Bit in Register is Cleared
4AE2:	8D-F8       	.data 0xf88d          ; Binary data
4AE4:	E0-40       	sbci r30, 0x00        ; Subtract Immediate with Carry SBI
4AE6:	8D-F8       	.data 0xf88d          ; Binary data
4AE8:	E1-60       	ori r30, 0x01         ; Logical OR with Immediate
4AEA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4AEC:	18-09       	sbc r17, r8           ; Subtract with Carry
4AEE:	8D-F8       	.data 0xf88d          ; Binary data
4AF0:	E2-90       	ld r14, -Z            ; Load Indirect from Data Space to Register
4AF2:	38-20       	and r3, r8            ; Logical AND
4AF4:	38-A9       	std Y+48, r19         ; Store Indirect From Register to Data Space
4AF6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4AF8:	55-FD       	sbrc r21, 5           ; Skip if Bit in Register is Cleared
4AFA:	8D-F8       	.data 0xf88d          ; Binary data
4AFC:	E4-40       	sbci r30, 0x04        ; Subtract Immediate with Carry SBI
4AFE:	8D-F8       	.data 0xf88d          ; Binary data
4B00:	E5-60       	ori r30, 0x05         ; Logical OR with Immediate
4B02:	8D-F8       	.data 0xf88d          ; Binary data
4B04:	E6-90       	elpm r14, Z           ; Extended Load Program Memory
4B06:	39-20       	and r3, r9            ; Logical AND
4B08:	39-A9       	std Y+49, r19         ; Store Indirect From Register to Data Space
4B0A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B0C:	4B-FD       	.data 0xfd4b          ; Binary data
4B0E:	8D-F8       	.data 0xf88d          ; Binary data
4B10:	E8-80       	ld r14, Y             ; Load Indirect from Data Space to Register
4B12:	8D-F8       	.data 0xf88d          ; Binary data
4B14:	E9-60       	ori r30, 0x09         ; Logical OR with Immediate
4B16:	15-23       	and r17, r21          ; Logical AND
4B18:	8D-F8       	.data 0xf88d          ; Binary data
4B1A:	EA-30       	cpi r30, 0x0a         ; Compare with Immediate
4B1C:	3A-20       	and r3, r10           ; Logical AND
4B1E:	3A-A9       	std Y+50, r19         ; Store Indirect From Register to Data Space
4B20:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B22:	40-FD       	sbrc r20, 0           ; Skip if Bit in Register is Cleared
4B24:	8D-F8       	.data 0xf88d          ; Binary data
4B26:	EC-40       	sbci r30, 0x0c        ; Subtract Immediate with Carry SBI
4B28:	8D-F8       	.data 0xf88d          ; Binary data
4B2A:	ED-70       	andi r30, 0x0d        ; Logical AND with Immediate
4B2C:	16-23       	and r17, r22          ; Logical AND
4B2E:	8D-F8       	.data 0xf88d          ; Binary data
4B30:	EE-30       	cpi r30, 0x0e         ; Compare with Immediate
4B32:	3B-20       	and r3, r11           ; Logical AND
4B34:	3B-A9       	std Y+51, r19         ; Store Indirect From Register to Data Space
4B36:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B38:	35-FD       	sbrc r19, 5           ; Skip if Bit in Register is Cleared
4B3A:	8D-F8       	.data 0xf88d          ; Binary data
4B3C:	F0-70       	andi r31, 0x00        ; Logical AND with Immediate
4B3E:	8D-F8       	.data 0xf88d          ; Binary data
4B40:	F1-60       	ori r31, 0x01         ; Logical OR with Immediate
4B42:	8D-F8       	.data 0xf88d          ; Binary data
4B44:	F2-A0       	ldd r15, Y+34         ; Load Indirect from Data Space to Register
4B46:	3C-20       	and r3, r12           ; Logical AND
4B48:	3C-A9       	std Y+52, r19         ; Store Indirect From Register to Data Space
4B4A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B4C:	2B-FD       	.data 0xfd2b          ; Binary data
4B4E:	8D-F8       	.data 0xf88d          ; Binary data
4B50:	F4-70       	andi r31, 0x04        ; Logical AND with Immediate
4B52:	8D-F8       	.data 0xf88d          ; Binary data
4B54:	F5-70       	andi r31, 0x05        ; Logical AND with Immediate
4B56:	8D-F8       	.data 0xf88d          ; Binary data
4B58:	F6-90       	elpm r15, Z           ; Extended Load Program Memory
4B5A:	3D-20       	and r3, r13           ; Logical AND
4B5C:	3D-A9       	std Y+53, r19         ; Store Indirect From Register to Data Space
4B5E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B60:	21-FD       	sbrc r18, 1           ; Skip if Bit in Register is Cleared
4B62:	8D-F8       	.data 0xf88d          ; Binary data
4B64:	F8-50       	subi r31, 0x08        ; Subtract Immediate
4B66:	8D-F8       	.data 0xf88d          ; Binary data
4B68:	F9-60       	ori r31, 0x09         ; Logical OR with Immediate
4B6A:	1C-25       	clr r284              ; Clear Register
4B6C:	8D-F8       	.data 0xf88d          ; Binary data
4B6E:	FA-50       	subi r31, 0x0a        ; Subtract Immediate
4B70:	3E-20       	and r3, r14           ; Logical AND
4B72:	3E-A9       	std Y+54, r19         ; Store Indirect From Register to Data Space
4B74:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B76:	16-FD       	sbrc r17, 6           ; Skip if Bit in Register is Cleared
4B78:	28-24       	clr r40               ; Clear Register
4B7A:	8D-F8       	.data 0xf88d          ; Binary data
4B7C:	FC-40       	sbci r31, 0x0c        ; Subtract Immediate with Carry SBI
4B7E:	8D-F8       	.data 0xf88d          ; Binary data
4B80:	FD-40       	sbci r31, 0x0d        ; Subtract Immediate with Carry SBI
4B82:	15-23       	and r17, r21          ; Logical AND
4B84:	8D-F8       	.data 0xf88d          ; Binary data
4B86:	FE-30       	cpi r31, 0x0e         ; Compare with Immediate
4B88:	3F-20       	and r3, r15           ; Logical AND
4B8A:	3F-A9       	std Y+55, r19         ; Store Indirect From Register to Data Space
4B8C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4B8E:	0A-FD       	.data 0xfd0a          ; Binary data
4B90:	24-26       	clr r548              ; Clear Register
4B92:	8D-F8       	.data 0xf88d          ; Binary data
4B94:	00-61       	ori r16, 0x10         ; Logical OR with Immediate
4B96:	8D-F8       	.data 0xf88d          ; Binary data
4B98:	01-41       	sbci r16, 0x11        ; Subtract Immediate with Carry SBI
4B9A:	1B-27       	clr r795              ; Clear Register
4B9C:	8D-F8       	.data 0xf88d          ; Binary data
4B9E:	02-71       	andi r16, 0x12        ; Logical AND with Immediate
4BA0:	40-20       	and r4, r0            ; Logical AND
4BA2:	40-A9       	std Y+48, r20         ; Store Indirect From Register to Data Space
4BA4:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4BA6:	FE-FC       	.data 0xfcfe          ; Binary data
4BA8:	8D-F8       	.data 0xf88d          ; Binary data
4BAA:	04-61       	ori r16, 0x14         ; Logical OR with Immediate
4BAC:	8D-F8       	.data 0xf88d          ; Binary data
4BAE:	05-41       	sbci r16, 0x15        ; Subtract Immediate with Carry SBI
4BB0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4BB2:	1A-03       	fmul r17, r18         ; Fractional Multiply Unsigned
4BB4:	8D-F8       	.data 0xf88d          ; Binary data
4BB6:	06-31       	cpi r16, 0x16         ; Compare with Immediate
4BB8:	41-20       	and r4, r1            ; Logical AND
4BBA:	41-A9       	std Y+49, r20         ; Store Indirect From Register to Data Space
4BBC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4BBE:	F2-FC       	sbrc r15, 2           ; Skip if Bit in Register is Cleared
4BC0:	8D-F8       	.data 0xf88d          ; Binary data
4BC2:	08-61       	ori r16, 0x18         ; Logical OR with Immediate
4BC4:	8D-F8       	.data 0xf88d          ; Binary data
4BC6:	09-41       	sbci r16, 0x19        ; Subtract Immediate with Carry SBI
4BC8:	8D-F8       	.data 0xf88d          ; Binary data
4BCA:	0A-71       	andi r16, 0x1a        ; Logical AND with Immediate
4BCC:	42-20       	and r4, r2            ; Logical AND
4BCE:	42-A9       	std Y+50, r20         ; Store Indirect From Register to Data Space
4BD0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4BD2:	E8-FC       	.data 0xfce8          ; Binary data
4BD4:	8D-F8       	.data 0xf88d          ; Binary data
4BD6:	0C-61       	ori r16, 0x1c         ; Logical OR with Immediate
4BD8:	8D-F8       	.data 0xf88d          ; Binary data
4BDA:	0D-41       	sbci r16, 0x1d        ; Subtract Immediate with Carry SBI
4BDC:	8D-F8       	.data 0xf88d          ; Binary data
4BDE:	0E-71       	andi r16, 0x1e        ; Logical AND with Immediate
4BE0:	43-20       	and r4, r3            ; Logical AND
4BE2:	43-A9       	std Y+51, r20         ; Store Indirect From Register to Data Space
4BE4:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4BE6:	DE-FC       	.data 0xfcde          ; Binary data
4BE8:	23-26       	clr r547              ; Clear Register
4BEA:	8D-F8       	.data 0xf88d          ; Binary data
4BEC:	10-61       	ori r17, 0x10         ; Logical OR with Immediate
4BEE:	8D-F8       	.data 0xf88d          ; Binary data
4BF0:	11-41       	sbci r17, 0x11        ; Subtract Immediate with Carry SBI
4BF2:	8D-F8       	.data 0xf88d          ; Binary data
4BF4:	12-71       	andi r17, 0x12        ; Logical AND with Immediate
4BF6:	44-20       	and r4, r4            ; Logical AND
4BF8:	44-A9       	std Y+52, r20         ; Store Indirect From Register to Data Space
4BFA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4BFC:	D3-FC       	sbrc r13, 3           ; Skip if Bit in Register is Cleared
4BFE:	8D-F8       	.data 0xf88d          ; Binary data
4C00:	14-61       	ori r17, 0x14         ; Logical OR with Immediate
4C02:	8D-F8       	.data 0xf88d          ; Binary data
4C04:	15-41       	sbci r17, 0x15        ; Subtract Immediate with Carry SBI
4C06:	8D-F8       	.data 0xf88d          ; Binary data
4C08:	16-71       	andi r17, 0x16        ; Logical AND with Immediate
4C0A:	45-20       	and r4, r5            ; Logical AND
4C0C:	45-A9       	std Y+53, r20         ; Store Indirect From Register to Data Space
4C0E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C10:	C9-FC       	.data 0xfcc9          ; Binary data
4C12:	22-26       	clr r546              ; Clear Register
4C14:	8D-F8       	.data 0xf88d          ; Binary data
4C16:	18-61       	ori r17, 0x18         ; Logical OR with Immediate
4C18:	8D-F8       	.data 0xf88d          ; Binary data
4C1A:	19-41       	sbci r17, 0x19        ; Subtract Immediate with Carry SBI
4C1C:	8D-F8       	.data 0xf88d          ; Binary data
4C1E:	1A-51       	subi r17, 0x1a        ; Subtract Immediate
4C20:	46-20       	and r4, r6            ; Logical AND
4C22:	46-A9       	std Y+54, r20         ; Store Indirect From Register to Data Space
4C24:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C26:	BE-FC       	.data 0xfcbe          ; Binary data
4C28:	8D-F8       	.data 0xf88d          ; Binary data
4C2A:	1C-61       	ori r17, 0x1c         ; Logical OR with Immediate
4C2C:	8D-F8       	.data 0xf88d          ; Binary data
4C2E:	1D-41       	sbci r17, 0x1d        ; Subtract Immediate with Carry SBI
4C30:	8D-F8       	.data 0xf88d          ; Binary data
4C32:	1E-51       	subi r17, 0x1e        ; Subtract Immediate
4C34:	47-20       	and r4, r7            ; Logical AND
4C36:	47-A9       	std Y+55, r20         ; Store Indirect From Register to Data Space
4C38:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C3A:	B4-FC       	sbrc r11, 4           ; Skip if Bit in Register is Cleared
4C3C:	8D-F8       	.data 0xf88d          ; Binary data
4C3E:	20-61       	ori r18, 0x10         ; Logical OR with Immediate
4C40:	27-24       	clr r39               ; Clear Register
4C42:	8D-F8       	.data 0xf88d          ; Binary data
4C44:	21-41       	sbci r18, 0x11        ; Subtract Immediate with Carry SBI
4C46:	8D-F8       	.data 0xf88d          ; Binary data
4C48:	22-51       	subi r18, 0x12        ; Subtract Immediate
4C4A:	48-20       	and r4, r8            ; Logical AND
4C4C:	48-A9       	std Y+48, r20         ; Store Indirect From Register to Data Space
4C4E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C50:	A9-FC       	.data 0xfca9          ; Binary data
4C52:	8D-F8       	.data 0xf88d          ; Binary data
4C54:	24-61       	ori r18, 0x14         ; Logical OR with Immediate
4C56:	8D-F8       	.data 0xf88d          ; Binary data
4C58:	25-41       	sbci r18, 0x15        ; Subtract Immediate with Carry SBI
4C5A:	8D-F8       	.data 0xf88d          ; Binary data
4C5C:	26-51       	subi r18, 0x16        ; Subtract Immediate
4C5E:	49-20       	and r4, r9            ; Logical AND
4C60:	49-A9       	std Y+49, r20         ; Store Indirect From Register to Data Space
4C62:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C64:	9F-FC       	.data 0xfc9f          ; Binary data
4C66:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4C68:	21-0A       	sbc r2, r17           ; Subtract with Carry
4C6A:	8D-F8       	.data 0xf88d          ; Binary data
4C6C:	28-A1       	ldd r18, Y+32         ; Load Indirect from Data Space to Register
4C6E:	8D-F8       	.data 0xf88d          ; Binary data
4C70:	29-41       	sbci r18, 0x19        ; Subtract Immediate with Carry SBI
4C72:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4C74:	1D-09       	sbc r17, r13          ; Subtract with Carry
4C76:	8D-F8       	.data 0xf88d          ; Binary data
4C78:	2A-91       	ld r18, -Y            ; Load Indirect from Data Space to Register
4C7A:	4A-20       	and r4, r10           ; Logical AND
4C7C:	4A-A9       	std Y+50, r20         ; Store Indirect From Register to Data Space
4C7E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C80:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
4C82:	8D-F8       	.data 0xf88d          ; Binary data
4C84:	2C-A1       	ldd r18, Y+36         ; Load Indirect from Data Space to Register
4C86:	8D-F8       	.data 0xf88d          ; Binary data
4C88:	2D-41       	sbci r18, 0x1d        ; Subtract Immediate with Carry SBI
4C8A:	8D-F8       	.data 0xf88d          ; Binary data
4C8C:	2E-51       	subi r18, 0x1e        ; Subtract Immediate
4C8E:	4B-20       	and r4, r11           ; Logical AND
4C90:	4B-A9       	std Y+51, r20         ; Store Indirect From Register to Data Space
4C92:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4C94:	87-FC       	sbrc r8, 7            ; Skip if Bit in Register is Cleared
4C96:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4C98:	20-08       	sbc r2, r0            ; Subtract with Carry
4C9A:	8D-F8       	.data 0xf88d          ; Binary data
4C9C:	30-81       	ld r19, Z             ; Load Indirect from Data Space to Register
4C9E:	8D-F8       	.data 0xf88d          ; Binary data
4CA0:	31-41       	sbci r19, 0x11        ; Subtract Immediate with Carry SBI
4CA2:	8D-F8       	.data 0xf88d          ; Binary data
4CA4:	32-91       	ld r19, -Z            ; Load Indirect from Data Space to Register
4CA6:	4C-20       	and r4, r12           ; Logical AND
4CA8:	4C-A9       	std Y+52, r20         ; Store Indirect From Register to Data Space
4CAA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4CAC:	7B-FC       	.data 0xfc7b          ; Binary data
4CAE:	8D-F8       	.data 0xf88d          ; Binary data
4CB0:	34-81       	ldd r19, Y+4          ; Load Indirect from Data Space to Register
4CB2:	8D-F8       	.data 0xf88d          ; Binary data
4CB4:	35-41       	sbci r19, 0x15        ; Subtract Immediate with Carry SBI
4CB6:	8D-F8       	.data 0xf88d          ; Binary data
4CB8:	36-91       	elpm r19, Z           ; Extended Load Program Memory
4CBA:	4D-20       	and r4, r13           ; Logical AND
4CBC:	4D-A9       	std Y+53, r20         ; Store Indirect From Register to Data Space
4CBE:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4CC0:	71-FC       	sbrc r7, 1            ; Skip if Bit in Register is Cleared
4CC2:	8D-F8       	.data 0xf88d          ; Binary data
4CC4:	38-81       	ld r19, Y             ; Load Indirect from Data Space to Register
4CC6:	8D-F8       	.data 0xf88d          ; Binary data
4CC8:	39-41       	sbci r19, 0x19        ; Subtract Immediate with Carry SBI
4CCA:	8D-F8       	.data 0xf88d          ; Binary data
4CCC:	3A-91       	ld r19, -Y            ; Load Indirect from Data Space to Register
4CCE:	4E-20       	and r4, r14           ; Logical AND
4CD0:	4E-A9       	std Y+54, r20         ; Store Indirect From Register to Data Space
4CD2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4CD4:	67-FC       	sbrc r6, 7            ; Skip if Bit in Register is Cleared
4CD6:	8D-F8       	.data 0xf88d          ; Binary data
4CD8:	3C-81       	ldd r19, Y+4          ; Load Indirect from Data Space to Register
4CDA:	8D-F8       	.data 0xf88d          ; Binary data
4CDC:	3D-41       	sbci r19, 0x1d        ; Subtract Immediate with Carry SBI
4CDE:	8D-F8       	.data 0xf88d          ; Binary data
4CE0:	3E-91       	ld r19, -X            ; Load Indirect from Data Space to Register
4CE2:	4F-20       	and r4, r15           ; Logical AND
4CE4:	4F-A9       	std Y+55, r20         ; Store Indirect From Register to Data Space
4CE6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4CE8:	5D-FC       	.data 0xfc5d          ; Binary data
4CEA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4CEC:	1F-0B       	sbc r17, r31          ; Subtract with Carry
4CEE:	8D-F8       	.data 0xf88d          ; Binary data
4CF0:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
4CF2:	26-24       	clr r38               ; Clear Register
4CF4:	8D-F8       	.data 0xf88d          ; Binary data
4CF6:	41-41       	sbci r20, 0x11        ; Subtract Immediate with Carry SBI
4CF8:	1E-26       	clr r542              ; Clear Register
4CFA:	8D-F8       	.data 0xf88d          ; Binary data
4CFC:	42-61       	ori r20, 0x12         ; Logical OR with Immediate
4CFE:	50-20       	and r5, r0            ; Logical AND
4D00:	50-A9       	std Y+48, r21         ; Store Indirect From Register to Data Space
4D02:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D04:	4F-FC       	.data 0xfc4f          ; Binary data
4D06:	8D-F8       	.data 0xf88d          ; Binary data
4D08:	44-B1       	in r20, 0x04          ; Load an I/O Location to Register
4D0A:	8D-F8       	.data 0xf88d          ; Binary data
4D0C:	45-41       	sbci r20, 0x15        ; Subtract Immediate with Carry SBI
4D0E:	8D-F8       	.data 0xf88d          ; Binary data
4D10:	46-61       	ori r20, 0x16         ; Logical OR with Immediate
4D12:	51-20       	and r5, r1            ; Logical AND
4D14:	51-A9       	std Y+49, r21         ; Store Indirect From Register to Data Space
4D16:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D18:	45-FC       	sbrc r4, 5            ; Skip if Bit in Register is Cleared
4D1A:	8D-F8       	.data 0xf88d          ; Binary data
4D1C:	48-61       	ori r20, 0x18         ; Logical OR with Immediate
4D1E:	8D-F8       	.data 0xf88d          ; Binary data
4D20:	49-41       	sbci r20, 0x19        ; Subtract Immediate with Carry SBI
4D22:	8D-F8       	.data 0xf88d          ; Binary data
4D24:	4A-61       	ori r20, 0x1a         ; Logical OR with Immediate
4D26:	52-20       	and r5, r2            ; Logical AND
4D28:	52-A9       	std Y+50, r21         ; Store Indirect From Register to Data Space
4D2A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D2C:	3B-FC       	.data 0xfc3b          ; Binary data
4D2E:	8D-F8       	.data 0xf88d          ; Binary data
4D30:	4C-61       	ori r20, 0x1c         ; Logical OR with Immediate
4D32:	8D-F8       	.data 0xf88d          ; Binary data
4D34:	4D-41       	sbci r20, 0x1d        ; Subtract Immediate with Carry SBI
4D36:	8D-F8       	.data 0xf88d          ; Binary data
4D38:	4E-61       	ori r20, 0x1e         ; Logical OR with Immediate
4D3A:	53-20       	and r5, r3            ; Logical AND
4D3C:	53-A9       	std Y+51, r21         ; Store Indirect From Register to Data Space
4D3E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D40:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
4D42:	8D-F8       	.data 0xf88d          ; Binary data
4D44:	50-61       	ori r21, 0x10         ; Logical OR with Immediate
4D46:	8D-F8       	.data 0xf88d          ; Binary data
4D48:	51-41       	sbci r21, 0x11        ; Subtract Immediate with Carry SBI
4D4A:	8D-F8       	.data 0xf88d          ; Binary data
4D4C:	52-B1       	in r21, 0x02          ; Load an I/O Location to Register
4D4E:	54-20       	and r5, r4            ; Logical AND
4D50:	54-A9       	std Y+52, r21         ; Store Indirect From Register to Data Space
4D52:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D54:	27-FC       	sbrc r2, 7            ; Skip if Bit in Register is Cleared
4D56:	8D-F8       	.data 0xf88d          ; Binary data
4D58:	54-61       	ori r21, 0x14         ; Logical OR with Immediate
4D5A:	8D-F8       	.data 0xf88d          ; Binary data
4D5C:	55-41       	sbci r21, 0x15        ; Subtract Immediate with Carry SBI
4D5E:	8D-F8       	.data 0xf88d          ; Binary data
4D60:	56-B1       	in r21, 0x06          ; Load an I/O Location to Register
4D62:	55-20       	and r5, r5            ; Logical AND
4D64:	55-A9       	std Y+53, r21         ; Store Indirect From Register to Data Space
4D66:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D68:	1D-FC       	.data 0xfc1d          ; Binary data
4D6A:	8D-F8       	.data 0xf88d          ; Binary data
4D6C:	58-91       	.data 0x9158          ; Binary data
4D6E:	8D-F8       	.data 0xf88d          ; Binary data
4D70:	59-41       	sbci r21, 0x19        ; Subtract Immediate with Carry SBI
4D72:	8D-F8       	.data 0xf88d          ; Binary data
4D74:	5A-B1       	in r21, 0x0a          ; Load an I/O Location to Register
4D76:	56-20       	and r5, r6            ; Logical AND
4D78:	56-A9       	std Y+54, r21         ; Store Indirect From Register to Data Space
4D7A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D7C:	13-FC       	sbrc r1, 3            ; Skip if Bit in Register is Cleared
4D7E:	8D-F8       	.data 0xf88d          ; Binary data
4D80:	5C-91       	ld r21, X             ; Load Indirect from Data Space to Register
4D82:	8D-F8       	.data 0xf88d          ; Binary data
4D84:	5D-41       	sbci r21, 0x1d        ; Subtract Immediate with Carry SBI
4D86:	8D-F8       	.data 0xf88d          ; Binary data
4D88:	5E-B1       	in r21, 0x0e          ; Load an I/O Location to Register
4D8A:	57-20       	and r5, r7            ; Logical AND
4D8C:	57-A9       	std Y+55, r21         ; Store Indirect From Register to Data Space
4D8E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4D90:	09-FC       	.data 0xfc09          ; Binary data
4D92:	8D-F8       	.data 0xf88d          ; Binary data
4D94:	60-51       	subi r22, 0x10        ; Subtract Immediate
4D96:	8D-F8       	.data 0xf88d          ; Binary data
4D98:	61-41       	sbci r22, 0x11        ; Subtract Immediate with Carry SBI
4D9A:	8D-F8       	.data 0xf88d          ; Binary data
4D9C:	62-81       	ldd r22, Y+2          ; Load Indirect from Data Space to Register
4D9E:	58-20       	and r5, r8            ; Logical AND
4DA0:	58-A9       	std Y+48, r21         ; Store Indirect From Register to Data Space
4DA2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4DA4:	FF-FB       	.data 0xfbff          ; Binary data
4DA6:	8D-F8       	.data 0xf88d          ; Binary data
4DA8:	64-51       	subi r22, 0x14        ; Subtract Immediate
4DAA:	8D-F8       	.data 0xf88d          ; Binary data
4DAC:	65-41       	sbci r22, 0x15        ; Subtract Immediate with Carry SBI
4DAE:	8D-F8       	.data 0xf88d          ; Binary data
4DB0:	66-81       	ldd r22, Y+6          ; Load Indirect from Data Space to Register
4DB2:	59-20       	and r5, r9            ; Logical AND
4DB4:	59-A9       	std Y+49, r21         ; Store Indirect From Register to Data Space
4DB6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4DB8:	F5-FB       	bst r31, 5            ; Bit Store from Bit in Register to T Flag in SREG
4DBA:	8D-F8       	.data 0xf88d          ; Binary data
4DBC:	68-51       	subi r22, 0x18        ; Subtract Immediate
4DBE:	25-24       	clr r37               ; Clear Register
4DC0:	8D-F8       	.data 0xf88d          ; Binary data
4DC2:	69-41       	sbci r22, 0x19        ; Subtract Immediate with Carry SBI
4DC4:	8D-F8       	.data 0xf88d          ; Binary data
4DC6:	6A-A1       	ldd r22, Y+34         ; Load Indirect from Data Space to Register
4DC8:	5A-20       	and r5, r10           ; Logical AND
4DCA:	5A-A9       	std Y+50, r21         ; Store Indirect From Register to Data Space
4DCC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4DCE:	EA-FB       	.data 0xfbea          ; Binary data
4DD0:	8D-F8       	.data 0xf88d          ; Binary data
4DD2:	6C-71       	andi r22, 0x1c        ; Logical AND with Immediate
4DD4:	8D-F8       	.data 0xf88d          ; Binary data
4DD6:	6D-41       	sbci r22, 0x1d        ; Subtract Immediate with Carry SBI
4DD8:	8D-F8       	.data 0xf88d          ; Binary data
4DDA:	6E-81       	ldd r22, Y+6          ; Load Indirect from Data Space to Register
4DDC:	5B-20       	and r5, r11           ; Logical AND
4DDE:	5B-A9       	std Y+51, r21         ; Store Indirect From Register to Data Space
4DE0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4DE2:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
4DE4:	8D-F8       	.data 0xf88d          ; Binary data
4DE6:	70-71       	andi r23, 0x10        ; Logical AND with Immediate
4DE8:	8D-F8       	.data 0xf88d          ; Binary data
4DEA:	71-41       	sbci r23, 0x11        ; Subtract Immediate with Carry SBI
4DEC:	8D-F8       	.data 0xf88d          ; Binary data
4DEE:	72-A1       	ldd r23, Y+34         ; Load Indirect from Data Space to Register
4DF0:	5C-20       	and r5, r12           ; Logical AND
4DF2:	5C-A9       	std Y+52, r21         ; Store Indirect From Register to Data Space
4DF4:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4DF6:	D6-FB       	bst r29, 6            ; Bit Store from Bit in Register to T Flag in SREG
4DF8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4DFA:	1A-03       	fmul r17, r18         ; Fractional Multiply Unsigned
4DFC:	8D-F8       	.data 0xf88d          ; Binary data
4DFE:	74-31       	cpi r23, 0x14         ; Compare with Immediate
4E00:	8D-F8       	.data 0xf88d          ; Binary data
4E02:	75-41       	sbci r23, 0x15        ; Subtract Immediate with Carry SBI
4E04:	8D-F8       	.data 0xf88d          ; Binary data
4E06:	76-A1       	ldd r23, Y+38         ; Load Indirect from Data Space to Register
4E08:	5D-20       	and r5, r13           ; Logical AND
4E0A:	5D-A9       	std Y+53, r21         ; Store Indirect From Register to Data Space
4E0C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4E0E:	CA-FB       	.data 0xfbca          ; Binary data
4E10:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4E12:	1A-03       	fmul r17, r18         ; Fractional Multiply Unsigned
4E14:	8D-F8       	.data 0xf88d          ; Binary data
4E16:	78-31       	cpi r23, 0x18         ; Compare with Immediate
4E18:	8D-F8       	.data 0xf88d          ; Binary data
4E1A:	79-41       	sbci r23, 0x19        ; Subtract Immediate with Carry SBI
4E1C:	8D-F8       	.data 0xf88d          ; Binary data
4E1E:	7A-A1       	ldd r23, Y+34         ; Load Indirect from Data Space to Register
4E20:	5E-20       	and r5, r14           ; Logical AND
4E22:	5E-A9       	std Y+54, r21         ; Store Indirect From Register to Data Space
4E24:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4E26:	BE-FB       	.data 0xfbbe          ; Binary data
4E28:	83-23       	and r24, r19          ; Logical AND
4E2A:	8D-F8       	.data 0xf88d          ; Binary data
4E2C:	7C-31       	cpi r23, 0x1c         ; Compare with Immediate
4E2E:	BA-26       	clr r698              ; Clear Register
4E30:	8D-F8       	.data 0xf88d          ; Binary data
4E32:	7D-61       	ori r23, 0x1d         ; Logical OR with Immediate
4E34:	A5-23       	and r26, r21          ; Logical AND
4E36:	8D-F8       	.data 0xf88d          ; Binary data
4E38:	7E-31       	cpi r23, 0x1e         ; Compare with Immediate
4E3A:	5F-A8       	std Y+55, r5          ; Store Indirect From Register to Data Space
4E3C:	32-21       	and r19, r2           ; Logical AND
4E3E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4E40:	CF-FD       	.data 0xfdcf          ; Binary data
4E42:	5F-20       	and r5, r15           ; Logical AND
4E44:	5F-A9       	std Y+55, r21         ; Store Indirect From Register to Data Space
4E46:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4E48:	AD-FB       	.data 0xfbad          ; Binary data
4E4A:	7E-27       	clr r894              ; Clear Register
4E4C:	8D-F8       	.data 0xf88d          ; Binary data
4E4E:	80-71       	andi r24, 0x10        ; Logical AND with Immediate
4E50:	BB-25       	clr r443              ; Clear Register
4E52:	8D-F8       	.data 0xf88d          ; Binary data
4E54:	81-51       	subi r24, 0x11        ; Subtract Immediate
4E56:	AB-24       	clr r171              ; Clear Register
4E58:	8D-F8       	.data 0xf88d          ; Binary data
4E5A:	82-41       	sbci r24, 0x12        ; Subtract Immediate with Carry SBI
4E5C:	60-A8       	std Y+48, r6          ; Store Indirect From Register to Data Space
4E5E:	32-21       	and r19, r2           ; Logical AND
4E60:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4E62:	BE-FD       	.data 0xfdbe          ; Binary data
4E64:	60-20       	and r6, r0            ; Logical AND
4E66:	60-A9       	std Y+48, r22         ; Store Indirect From Register to Data Space
4E68:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4E6A:	9C-FB       	.data 0xfb9c          ; Binary data
4E6C:	8D-F8       	.data 0xf88d          ; Binary data
4E6E:	84-71       	andi r24, 0x14        ; Logical AND with Immediate
4E70:	8D-F8       	.data 0xf88d          ; Binary data
4E72:	85-51       	subi r24, 0x15        ; Subtract Immediate
4E74:	8D-F8       	.data 0xf88d          ; Binary data
4E76:	86-41       	sbci r24, 0x16        ; Subtract Immediate with Carry SBI
4E78:	61-A8       	std Y+49, r6          ; Store Indirect From Register to Data Space
4E7A:	32-21       	and r19, r2           ; Logical AND
4E7C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4E7E:	B0-FD       	sbrc r27, 0           ; Skip if Bit in Register is Cleared
4E80:	61-20       	and r6, r1            ; Logical AND
4E82:	61-A9       	std Y+49, r22         ; Store Indirect From Register to Data Space
4E84:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4E86:	8E-FB       	.data 0xfb8e          ; Binary data
4E88:	7D-23       	and r23, r29          ; Logical AND
4E8A:	8D-F8       	.data 0xf88d          ; Binary data
4E8C:	88-31       	cpi r24, 0x18         ; Compare with Immediate
4E8E:	8D-F8       	.data 0xf88d          ; Binary data
4E90:	89-61       	ori r24, 0x19         ; Logical OR with Immediate
4E92:	8D-F8       	.data 0xf88d          ; Binary data
4E94:	8A-41       	sbci r24, 0x1a        ; Subtract Immediate with Carry SBI
4E96:	62-A8       	std Y+50, r6          ; Store Indirect From Register to Data Space
4E98:	32-21       	and r19, r2           ; Logical AND
4E9A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4E9C:	A1-FD       	sbrc r26, 1           ; Skip if Bit in Register is Cleared
4E9E:	62-20       	and r6, r2            ; Logical AND
4EA0:	62-A9       	std Y+50, r22         ; Store Indirect From Register to Data Space
4EA2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4EA4:	7F-FB       	.data 0xfb7f          ; Binary data
4EA6:	7C-23       	and r23, r28          ; Logical AND
4EA8:	8D-F8       	.data 0xf88d          ; Binary data
4EAA:	8C-31       	cpi r24, 0x1c         ; Compare with Immediate
4EAC:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4EAE:	46-03       	mulsu r20, r22        ; Multiply Signed with Unsigned
4EB0:	8D-F8       	.data 0xf88d          ; Binary data
4EB2:	8D-31       	cpi r24, 0x1d         ; Compare with Immediate
4EB4:	AA-23       	and r26, r26          ; Logical AND
4EB6:	8D-F8       	.data 0xf88d          ; Binary data
4EB8:	8E-31       	cpi r24, 0x1e         ; Compare with Immediate
4EBA:	63-A8       	std Y+51, r6          ; Store Indirect From Register to Data Space
4EBC:	32-21       	and r19, r2           ; Logical AND
4EBE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4EC0:	8F-FD       	.data 0xfd8f          ; Binary data
4EC2:	63-20       	and r6, r3            ; Logical AND
4EC4:	63-A9       	std Y+51, r22         ; Store Indirect From Register to Data Space
4EC6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4EC8:	6D-FB       	.data 0xfb6d          ; Binary data
4ECA:	79-23       	and r23, r25          ; Logical AND
4ECC:	8D-F8       	.data 0xf88d          ; Binary data
4ECE:	90-31       	cpi r25, 0x10         ; Compare with Immediate
4ED0:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4ED2:	47-03       	mulsu r20, r23        ; Multiply Signed with Unsigned
4ED4:	8D-F8       	.data 0xf88d          ; Binary data
4ED6:	91-31       	cpi r25, 0x11         ; Compare with Immediate
4ED8:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4EDA:	52-03       	mulsu r21, r18        ; Multiply Signed with Unsigned
4EDC:	8D-F8       	.data 0xf88d          ; Binary data
4EDE:	92-31       	cpi r25, 0x12         ; Compare with Immediate
4EE0:	64-A8       	std Y+52, r6          ; Store Indirect From Register to Data Space
4EE2:	32-21       	and r19, r2           ; Logical AND
4EE4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4EE6:	7C-FD       	.data 0xfd7c          ; Binary data
4EE8:	64-20       	and r6, r4            ; Logical AND
4EEA:	64-A9       	std Y+52, r22         ; Store Indirect From Register to Data Space
4EEC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4EEE:	5A-FB       	.data 0xfb5a          ; Binary data
4EF0:	78-23       	and r23, r24          ; Logical AND
4EF2:	8D-F8       	.data 0xf88d          ; Binary data
4EF4:	94-31       	cpi r25, 0x14         ; Compare with Immediate
4EF6:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4EF8:	48-03       	fmul r20, r16         ; Fractional Multiply Unsigned
4EFA:	8D-F8       	.data 0xf88d          ; Binary data
4EFC:	95-31       	cpi r25, 0x15         ; Compare with Immediate
4EFE:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4F00:	53-03       	mulsu r21, r19        ; Multiply Signed with Unsigned
4F02:	8D-F8       	.data 0xf88d          ; Binary data
4F04:	96-31       	cpi r25, 0x16         ; Compare with Immediate
4F06:	65-A8       	std Y+53, r6          ; Store Indirect From Register to Data Space
4F08:	32-21       	and r19, r2           ; Logical AND
4F0A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4F0C:	69-FD       	.data 0xfd69          ; Binary data
4F0E:	65-20       	and r6, r5            ; Logical AND
4F10:	65-A9       	std Y+53, r22         ; Store Indirect From Register to Data Space
4F12:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4F14:	47-FB       	bst r20, 7            ; Bit Store from Bit in Register to T Flag in SREG
4F16:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4F18:	75-0B       	sbc r23, r21          ; Subtract with Carry
4F1A:	8D-F8       	.data 0xf88d          ; Binary data
4F1C:	98-B1       	in r25, 0x08          ; Load an I/O Location to Register
4F1E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4F20:	B6-09       	sbc r27, r6           ; Subtract with Carry
4F22:	8D-F8       	.data 0xf88d          ; Binary data
4F24:	99-91       	ld r25, Y+            ; Load Indirect from Data Space to Register
4F26:	B0-25       	clr r432              ; Clear Register
4F28:	8D-F8       	.data 0xf88d          ; Binary data
4F2A:	9A-51       	subi r25, 0x1a        ; Subtract Immediate
4F2C:	66-A8       	std Y+54, r6          ; Store Indirect From Register to Data Space
4F2E:	32-21       	and r19, r2           ; Logical AND
4F30:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4F32:	56-FD       	sbrc r21, 6           ; Skip if Bit in Register is Cleared
4F34:	66-20       	and r6, r6            ; Logical AND
4F36:	66-A9       	std Y+54, r22         ; Store Indirect From Register to Data Space
4F38:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4F3A:	34-FB       	bst r19, 4            ; Bit Store from Bit in Register to T Flag in SREG
4F3C:	8D-F8       	.data 0xf88d          ; Binary data
4F3E:	9C-B1       	in r25, 0x0c          ; Load an I/O Location to Register
4F40:	8D-F8       	.data 0xf88d          ; Binary data
4F42:	9D-91       	ld r25, X+            ; Load Indirect from Data Space to Register
4F44:	8D-F8       	.data 0xf88d          ; Binary data
4F46:	9E-51       	subi r25, 0x1e        ; Subtract Immediate
4F48:	67-A8       	std Y+55, r6          ; Store Indirect From Register to Data Space
4F4A:	32-21       	and r19, r2           ; Logical AND
4F4C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4F4E:	48-FD       	.data 0xfd48          ; Binary data
4F50:	67-20       	and r6, r7            ; Logical AND
4F52:	67-A9       	std Y+55, r22         ; Store Indirect From Register to Data Space
4F54:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4F56:	26-FB       	bst r18, 6            ; Bit Store from Bit in Register to T Flag in SREG
4F58:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4F5A:	71-08       	sbc r7, r1            ; Subtract with Carry
4F5C:	8D-F8       	.data 0xf88d          ; Binary data
4F5E:	A0-81       	ld r26, Z             ; Load Indirect from Data Space to Register
4F60:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4F62:	B5-0A       	sbc r11, r21          ; Subtract with Carry
4F64:	8D-F8       	.data 0xf88d          ; Binary data
4F66:	A1-A1       	ldd r26, Y+33         ; Load Indirect from Data Space to Register
4F68:	B4-27       	clr r948              ; Clear Register
4F6A:	8D-F8       	.data 0xf88d          ; Binary data
4F6C:	A2-71       	andi r26, 0x12        ; Logical AND with Immediate
4F6E:	68-A8       	std Y+48, r6          ; Store Indirect From Register to Data Space
4F70:	32-21       	and r19, r2           ; Logical AND
4F72:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4F74:	35-FD       	sbrc r19, 5           ; Skip if Bit in Register is Cleared
4F76:	68-20       	and r6, r8            ; Logical AND
4F78:	68-A9       	std Y+48, r22         ; Store Indirect From Register to Data Space
4F7A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4F7C:	13-FB       	bst r17, 3            ; Bit Store from Bit in Register to T Flag in SREG
4F7E:	8D-F8       	.data 0xf88d          ; Binary data
4F80:	A4-81       	ldd r26, Y+4          ; Load Indirect from Data Space to Register
4F82:	8D-F8       	.data 0xf88d          ; Binary data
4F84:	A5-A1       	ldd r26, Y+37         ; Load Indirect from Data Space to Register
4F86:	8D-F8       	.data 0xf88d          ; Binary data
4F88:	A6-71       	andi r26, 0x16        ; Logical AND with Immediate
4F8A:	69-A8       	std Y+49, r6          ; Store Indirect From Register to Data Space
4F8C:	32-21       	and r19, r2           ; Logical AND
4F8E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4F90:	27-FD       	sbrc r18, 7           ; Skip if Bit in Register is Cleared
4F92:	69-20       	and r6, r9            ; Logical AND
4F94:	69-A9       	std Y+49, r22         ; Store Indirect From Register to Data Space
4F96:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4F98:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
4F9A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4F9C:	6E-03       	fmul r22, r22         ; Fractional Multiply Unsigned
4F9E:	8D-F8       	.data 0xf88d          ; Binary data
4FA0:	A8-31       	cpi r26, 0x18         ; Compare with Immediate
4FA2:	8D-F8       	.data 0xf88d          ; Binary data
4FA4:	A9-A1       	ldd r26, Y+33         ; Load Indirect from Data Space to Register
4FA6:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4FA8:	48-03       	fmul r20, r16         ; Fractional Multiply Unsigned
4FAA:	8D-F8       	.data 0xf88d          ; Binary data
4FAC:	AA-31       	cpi r26, 0x1a         ; Compare with Immediate
4FAE:	6A-A8       	std Y+50, r6          ; Store Indirect From Register to Data Space
4FB0:	32-21       	and r19, r2           ; Logical AND
4FB2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4FB4:	15-FD       	sbrc r17, 5           ; Skip if Bit in Register is Cleared
4FB6:	6A-20       	and r6, r10           ; Logical AND
4FB8:	6A-A9       	std Y+50, r22         ; Store Indirect From Register to Data Space
4FBA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4FBC:	F3-FA       	bst r15, 3            ; Bit Store from Bit in Register to T Flag in SREG
4FBE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
4FC0:	6D-0A       	sbc r6, r29           ; Subtract with Carry
4FC2:	8D-F8       	.data 0xf88d          ; Binary data
4FC4:	AC-A1       	ldd r26, Y+36         ; Load Indirect from Data Space to Register
4FC6:	8D-F8       	.data 0xf88d          ; Binary data
4FC8:	AD-71       	andi r26, 0x1d        ; Logical AND with Immediate
4FCA:	8D-F8       	.data 0xf88d          ; Binary data
4FCC:	AE-91       	ld r26, -X            ; Load Indirect from Data Space to Register
4FCE:	6B-A8       	std Y+51, r6          ; Store Indirect From Register to Data Space
4FD0:	32-21       	and r19, r2           ; Logical AND
4FD2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4FD4:	05-FD       	sbrc r16, 5           ; Skip if Bit in Register is Cleared
4FD6:	6B-20       	and r6, r11           ; Logical AND
4FD8:	6B-A9       	std Y+51, r22         ; Store Indirect From Register to Data Space
4FDA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4FDC:	E3-FA       	bst r14, 3            ; Bit Store from Bit in Register to T Flag in SREG
4FDE:	69-23       	and r22, r25          ; Logical AND
4FE0:	8D-F8       	.data 0xf88d          ; Binary data
4FE2:	B0-31       	cpi r27, 0x10         ; Compare with Immediate
4FE4:	8D-F8       	.data 0xf88d          ; Binary data
4FE6:	B1-71       	andi r27, 0x11        ; Logical AND with Immediate
4FE8:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
4FEA:	46-03       	mulsu r20, r22        ; Multiply Signed with Unsigned
4FEC:	8D-F8       	.data 0xf88d          ; Binary data
4FEE:	B2-31       	cpi r27, 0x12         ; Compare with Immediate
4FF0:	6C-A8       	std Y+52, r6          ; Store Indirect From Register to Data Space
4FF2:	32-21       	and r19, r2           ; Logical AND
4FF4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
4FF6:	F4-FC       	sbrc r15, 4           ; Skip if Bit in Register is Cleared
4FF8:	6C-20       	and r6, r12           ; Logical AND
4FFA:	6C-A9       	std Y+52, r22         ; Store Indirect From Register to Data Space
4FFC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
4FFE:	D2-FA       	bst r13, 2            ; Bit Store from Bit in Register to T Flag in SREG
5000:	68-23       	and r22, r24          ; Logical AND
5002:	8D-F8       	.data 0xf88d          ; Binary data
5004:	B4-31       	cpi r27, 0x14         ; Compare with Immediate
5006:	B3-23       	and r27, r19          ; Logical AND
5008:	8D-F8       	.data 0xf88d          ; Binary data
500A:	B5-31       	cpi r27, 0x15         ; Compare with Immediate
500C:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
500E:	47-03       	mulsu r20, r23        ; Multiply Signed with Unsigned
5010:	8D-F8       	.data 0xf88d          ; Binary data
5012:	B6-31       	cpi r27, 0x16         ; Compare with Immediate
5014:	6D-A8       	std Y+53, r6          ; Store Indirect From Register to Data Space
5016:	32-21       	and r19, r2           ; Logical AND
5018:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
501A:	E2-FC       	sbrc r14, 2           ; Skip if Bit in Register is Cleared
501C:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
501E:	6D-A9       	std Y+53, r22         ; Store Indirect From Register to Data Space
5020:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5022:	C0-FA       	bst r12, 0            ; Bit Store from Bit in Register to T Flag in SREG
5024:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5026:	67-09       	sbc r22, r7           ; Subtract with Carry
5028:	8D-F8       	.data 0xf88d          ; Binary data
502A:	B8-91       	.data 0x91b8          ; Binary data
502C:	B1-27       	clr r945              ; Clear Register
502E:	8D-F8       	.data 0xf88d          ; Binary data
5030:	B9-71       	andi r27, 0x19        ; Logical AND with Immediate
5032:	8D-F8       	.data 0xf88d          ; Binary data
5034:	BA-61       	ori r27, 0x1a         ; Logical OR with Immediate
5036:	6E-A8       	std Y+54, r6          ; Store Indirect From Register to Data Space
5038:	32-21       	and r19, r2           ; Logical AND
503A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
503C:	D1-FC       	sbrc r13, 1           ; Skip if Bit in Register is Cleared
503E:	6E-20       	and r6, r14           ; Logical AND
5040:	6E-A9       	std Y+54, r22         ; Store Indirect From Register to Data Space
5042:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5044:	AF-FA       	.data 0xfaaf          ; Binary data
5046:	8D-F8       	.data 0xf88d          ; Binary data
5048:	BC-91       	ld r27, X             ; Load Indirect from Data Space to Register
504A:	8D-F8       	.data 0xf88d          ; Binary data
504C:	BD-71       	andi r27, 0x1d        ; Logical AND with Immediate
504E:	8D-F8       	.data 0xf88d          ; Binary data
5050:	BE-61       	ori r27, 0x1e         ; Logical OR with Immediate
5052:	6F-A8       	std Y+55, r6          ; Store Indirect From Register to Data Space
5054:	32-21       	and r19, r2           ; Logical AND
5056:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5058:	C3-FC       	sbrc r12, 3           ; Skip if Bit in Register is Cleared
505A:	6F-20       	and r6, r15           ; Logical AND
505C:	6F-A9       	std Y+55, r22         ; Store Indirect From Register to Data Space
505E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5060:	A1-FA       	bst r10, 1            ; Bit Store from Bit in Register to T Flag in SREG
5062:	62-27       	clr r866              ; Clear Register
5064:	8D-F8       	.data 0xf88d          ; Binary data
5066:	C0-71       	andi r28, 0x10        ; Logical AND with Immediate
5068:	8D-F8       	.data 0xf88d          ; Binary data
506A:	C1-51       	subi r28, 0x11        ; Subtract Immediate
506C:	BD-26       	clr r701              ; Clear Register
506E:	8D-F8       	.data 0xf88d          ; Binary data
5070:	C2-61       	ori r28, 0x12         ; Logical OR with Immediate
5072:	70-A8       	std Y+48, r7          ; Store Indirect From Register to Data Space
5074:	32-21       	and r19, r2           ; Logical AND
5076:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5078:	B3-FC       	sbrc r11, 3           ; Skip if Bit in Register is Cleared
507A:	70-20       	and r7, r0            ; Logical AND
507C:	70-A9       	std Y+48, r23         ; Store Indirect From Register to Data Space
507E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5080:	91-FA       	bst r9, 1             ; Bit Store from Bit in Register to T Flag in SREG
5082:	8D-F8       	.data 0xf88d          ; Binary data
5084:	C4-71       	andi r28, 0x14        ; Logical AND with Immediate
5086:	8D-F8       	.data 0xf88d          ; Binary data
5088:	C5-51       	subi r28, 0x15        ; Subtract Immediate
508A:	8D-F8       	.data 0xf88d          ; Binary data
508C:	C6-61       	ori r28, 0x16         ; Logical OR with Immediate
508E:	71-A8       	std Y+49, r7          ; Store Indirect From Register to Data Space
5090:	32-21       	and r19, r2           ; Logical AND
5092:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5094:	A5-FC       	sbrc r10, 5           ; Skip if Bit in Register is Cleared
5096:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
5098:	71-A9       	std Y+49, r23         ; Store Indirect From Register to Data Space
509A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
509C:	83-FA       	bst r8, 3             ; Bit Store from Bit in Register to T Flag in SREG
509E:	60-23       	and r22, r16          ; Logical AND
50A0:	8D-F8       	.data 0xf88d          ; Binary data
50A2:	C8-31       	cpi r28, 0x18         ; Compare with Immediate
50A4:	AF-23       	and r26, r31          ; Logical AND
50A6:	8D-F8       	.data 0xf88d          ; Binary data
50A8:	C9-31       	cpi r28, 0x19         ; Compare with Immediate
50AA:	BE-23       	and r27, r30          ; Logical AND
50AC:	8D-F8       	.data 0xf88d          ; Binary data
50AE:	CA-31       	cpi r28, 0x1a         ; Compare with Immediate
50B0:	72-A8       	std Y+50, r7          ; Store Indirect From Register to Data Space
50B2:	32-21       	and r19, r2           ; Logical AND
50B4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
50B6:	94-FC       	sbrc r9, 4            ; Skip if Bit in Register is Cleared
50B8:	72-20       	and r7, r2            ; Logical AND
50BA:	72-A9       	std Y+50, r23         ; Store Indirect From Register to Data Space
50BC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
50BE:	72-FA       	bst r7, 2             ; Bit Store from Bit in Register to T Flag in SREG
50C0:	5F-23       	and r21, r31          ; Logical AND
50C2:	8D-F8       	.data 0xf88d          ; Binary data
50C4:	CC-31       	cpi r28, 0x1c         ; Compare with Immediate
50C6:	AE-23       	and r26, r30          ; Logical AND
50C8:	8D-F8       	.data 0xf88d          ; Binary data
50CA:	CD-31       	cpi r28, 0x1d         ; Compare with Immediate
50CC:	8D-F8       	.data 0xf88d          ; Binary data
50CE:	CE-61       	ori r28, 0x1e         ; Logical OR with Immediate
50D0:	73-A8       	std Y+51, r7          ; Store Indirect From Register to Data Space
50D2:	32-21       	and r19, r2           ; Logical AND
50D4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
50D6:	84-FC       	sbrc r8, 4            ; Skip if Bit in Register is Cleared
50D8:	73-20       	and r7, r3            ; Logical AND
50DA:	73-A9       	std Y+51, r23         ; Store Indirect From Register to Data Space
50DC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
50DE:	62-FA       	bst r6, 2             ; Bit Store from Bit in Register to T Flag in SREG
50E0:	5C-23       	and r21, r28          ; Logical AND
50E2:	8D-F8       	.data 0xf88d          ; Binary data
50E4:	D0-31       	cpi r29, 0x10         ; Compare with Immediate
50E6:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
50E8:	52-03       	mulsu r21, r18        ; Multiply Signed with Unsigned
50EA:	8D-F8       	.data 0xf88d          ; Binary data
50EC:	D1-31       	cpi r29, 0x11         ; Compare with Immediate
50EE:	C0-23       	and r28, r16          ; Logical AND
50F0:	8D-F8       	.data 0xf88d          ; Binary data
50F2:	D2-31       	cpi r29, 0x12         ; Compare with Immediate
50F4:	74-A8       	std Y+52, r7          ; Store Indirect From Register to Data Space
50F6:	32-21       	and r19, r2           ; Logical AND
50F8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
50FA:	72-FC       	sbrc r7, 2            ; Skip if Bit in Register is Cleared
50FC:	74-20       	and r7, r4            ; Logical AND
50FE:	74-A9       	std Y+52, r23         ; Store Indirect From Register to Data Space
5100:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5102:	50-FA       	bst r5, 0             ; Bit Store from Bit in Register to T Flag in SREG
5104:	5B-23       	and r21, r27          ; Logical AND
5106:	8D-F8       	.data 0xf88d          ; Binary data
5108:	D4-31       	cpi r29, 0x14         ; Compare with Immediate
510A:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
510C:	53-03       	mulsu r21, r19        ; Multiply Signed with Unsigned
510E:	8D-F8       	.data 0xf88d          ; Binary data
5110:	D5-31       	cpi r29, 0x15         ; Compare with Immediate
5112:	BF-23       	and r27, r31          ; Logical AND
5114:	8D-F8       	.data 0xf88d          ; Binary data
5116:	D6-31       	cpi r29, 0x16         ; Compare with Immediate
5118:	75-A8       	std Y+53, r7          ; Store Indirect From Register to Data Space
511A:	32-21       	and r19, r2           ; Logical AND
511C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
511E:	60-FC       	sbrc r6, 0            ; Skip if Bit in Register is Cleared
5120:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
5122:	75-A9       	std Y+53, r23         ; Store Indirect From Register to Data Space
5124:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5126:	3E-FA       	.data 0xfa3e          ; Binary data
5128:	57-25       	clr r343              ; Clear Register
512A:	8D-F8       	.data 0xf88d          ; Binary data
512C:	D8-51       	subi r29, 0x18        ; Subtract Immediate
512E:	8D-F8       	.data 0xf88d          ; Binary data
5130:	D9-41       	sbci r29, 0x19        ; Subtract Immediate with Carry SBI
5132:	C3-23       	and r28, r19          ; Logical AND
5134:	8D-F8       	.data 0xf88d          ; Binary data
5136:	DA-31       	cpi r29, 0x1a         ; Compare with Immediate
5138:	76-A8       	std Y+54, r7          ; Store Indirect From Register to Data Space
513A:	32-21       	and r19, r2           ; Logical AND
513C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
513E:	50-FC       	sbrc r5, 0            ; Skip if Bit in Register is Cleared
5140:	76-20       	and r7, r6            ; Logical AND
5142:	76-A9       	std Y+54, r23         ; Store Indirect From Register to Data Space
5144:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5146:	2E-FA       	.data 0xfa2e          ; Binary data
5148:	8D-F8       	.data 0xf88d          ; Binary data
514A:	DC-51       	subi r29, 0x1c        ; Subtract Immediate
514C:	8D-F8       	.data 0xf88d          ; Binary data
514E:	DD-41       	sbci r29, 0x1d        ; Subtract Immediate with Carry SBI
5150:	C3-23       	and r28, r19          ; Logical AND
5152:	8D-F8       	.data 0xf88d          ; Binary data
5154:	DE-31       	cpi r29, 0x1e         ; Compare with Immediate
5156:	77-A8       	std Y+55, r7          ; Store Indirect From Register to Data Space
5158:	32-21       	and r19, r2           ; Logical AND
515A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
515C:	41-FC       	sbrc r4, 1            ; Skip if Bit in Register is Cleared
515E:	77-20       	and r7, r7            ; Logical AND
5160:	77-A9       	std Y+55, r23         ; Store Indirect From Register to Data Space
5162:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5164:	1F-FA       	.data 0xfa1f          ; Binary data
5166:	54-26       	clr r596              ; Clear Register
5168:	8D-F8       	.data 0xf88d          ; Binary data
516A:	E0-61       	ori r30, 0x10         ; Logical OR with Immediate
516C:	8D-F8       	.data 0xf88d          ; Binary data
516E:	E1-41       	sbci r30, 0x11        ; Subtract Immediate with Carry SBI
5170:	C7-25       	clr r455              ; Clear Register
5172:	8D-F8       	.data 0xf88d          ; Binary data
5174:	E2-51       	subi r30, 0x12        ; Subtract Immediate
5176:	78-A8       	std Y+48, r7          ; Store Indirect From Register to Data Space
5178:	32-21       	and r19, r2           ; Logical AND
517A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
517C:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
517E:	78-20       	and r7, r8            ; Logical AND
5180:	78-A9       	std Y+48, r23         ; Store Indirect From Register to Data Space
5182:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5184:	0F-FA       	.data 0xfa0f          ; Binary data
5186:	8D-F8       	.data 0xf88d          ; Binary data
5188:	E4-61       	ori r30, 0x14         ; Logical OR with Immediate
518A:	8D-F8       	.data 0xf88d          ; Binary data
518C:	E5-41       	sbci r30, 0x15        ; Subtract Immediate with Carry SBI
518E:	8D-F8       	.data 0xf88d          ; Binary data
5190:	E6-51       	subi r30, 0x16        ; Subtract Immediate
5192:	79-A8       	std Y+49, r7          ; Store Indirect From Register to Data Space
5194:	32-21       	and r19, r2           ; Logical AND
5196:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5198:	23-FC       	sbrc r2, 3            ; Skip if Bit in Register is Cleared
519A:	79-20       	and r7, r9            ; Logical AND
519C:	79-A9       	std Y+49, r23         ; Store Indirect From Register to Data Space
519E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
51A0:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
51A2:	51-23       	and r21, r17          ; Logical AND
51A4:	8D-F8       	.data 0xf88d          ; Binary data
51A6:	E8-31       	cpi r30, 0x18         ; Compare with Immediate
51A8:	AA-23       	and r26, r26          ; Logical AND
51AA:	8D-F8       	.data 0xf88d          ; Binary data
51AC:	E9-31       	cpi r30, 0x19         ; Compare with Immediate
51AE:	CA-24       	clr r202              ; Clear Register
51B0:	8D-F8       	.data 0xf88d          ; Binary data
51B2:	EA-41       	sbci r30, 0x1a        ; Subtract Immediate with Carry SBI
51B4:	7A-A8       	std Y+50, r7          ; Store Indirect From Register to Data Space
51B6:	32-21       	and r19, r2           ; Logical AND
51B8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
51BA:	12-FC       	sbrc r1, 2            ; Skip if Bit in Register is Cleared
51BC:	7A-20       	and r7, r10           ; Logical AND
51BE:	7A-A9       	std Y+50, r23         ; Store Indirect From Register to Data Space
51C0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
51C2:	F0-F9       	bld r31, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
51C4:	50-23       	and r21, r16          ; Logical AND
51C6:	8D-F8       	.data 0xf88d          ; Binary data
51C8:	EC-31       	cpi r30, 0x1c         ; Compare with Immediate
51CA:	A9-25       	clr r425              ; Clear Register
51CC:	8D-F8       	.data 0xf88d          ; Binary data
51CE:	ED-51       	subi r30, 0x1d        ; Subtract Immediate
51D0:	C9-23       	and r28, r25          ; Logical AND
51D2:	8D-F8       	.data 0xf88d          ; Binary data
51D4:	EE-31       	cpi r30, 0x1e         ; Compare with Immediate
51D6:	7B-A8       	std Y+51, r7          ; Store Indirect From Register to Data Space
51D8:	32-21       	and r19, r2           ; Logical AND
51DA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
51DC:	01-FC       	sbrc r0, 1            ; Skip if Bit in Register is Cleared
51DE:	7B-20       	and r7, r11           ; Logical AND
51E0:	7B-A9       	std Y+51, r23         ; Store Indirect From Register to Data Space
51E2:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
51E4:	DF-F9       	.data 0xf9df          ; Binary data
51E6:	4C-23       	and r20, r28          ; Logical AND
51E8:	8D-F8       	.data 0xf88d          ; Binary data
51EA:	F0-31       	cpi r31, 0x10         ; Compare with Immediate
51EC:	8D-F8       	.data 0xf88d          ; Binary data
51EE:	F1-51       	subi r31, 0x11        ; Subtract Immediate
51F0:	CB-23       	and r28, r27          ; Logical AND
51F2:	8D-F8       	.data 0xf88d          ; Binary data
51F4:	F2-31       	cpi r31, 0x12         ; Compare with Immediate
51F6:	7C-A8       	std Y+52, r7          ; Store Indirect From Register to Data Space
51F8:	32-21       	and r19, r2           ; Logical AND
51FA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
51FC:	F1-FB       	bst r31, 1            ; Bit Store from Bit in Register to T Flag in SREG
51FE:	7C-20       	and r7, r12           ; Logical AND
5200:	7C-A9       	std Y+52, r23         ; Store Indirect From Register to Data Space
5202:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5204:	CF-F9       	.data 0xf9cf          ; Binary data
5206:	4B-23       	and r20, r27          ; Logical AND
5208:	8D-F8       	.data 0xf88d          ; Binary data
520A:	F4-31       	cpi r31, 0x14         ; Compare with Immediate
520C:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
520E:	57-03       	mulsu r21, r23        ; Multiply Signed with Unsigned
5210:	8D-F8       	.data 0xf88d          ; Binary data
5212:	F5-31       	cpi r31, 0x15         ; Compare with Immediate
5214:	8D-F8       	.data 0xf88d          ; Binary data
5216:	F6-41       	sbci r31, 0x16        ; Subtract Immediate with Carry SBI
5218:	7D-A8       	std Y+53, r7          ; Store Indirect From Register to Data Space
521A:	32-21       	and r19, r2           ; Logical AND
521C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
521E:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
5220:	7D-20       	and r7, r13           ; Logical AND
5222:	7D-A9       	std Y+53, r23         ; Store Indirect From Register to Data Space
5224:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5226:	BE-F9       	.data 0xf9be          ; Binary data
5228:	49-25       	clr r329              ; Clear Register
522A:	8D-F8       	.data 0xf88d          ; Binary data
522C:	F8-51       	subi r31, 0x18        ; Subtract Immediate
522E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5230:	A7-09       	sbc r26, r7           ; Subtract with Carry
5232:	8D-F8       	.data 0xf88d          ; Binary data
5234:	F9-91       	ld r31, Y+            ; Load Indirect from Data Space to Register
5236:	CD-24       	clr r205              ; Clear Register
5238:	8D-F8       	.data 0xf88d          ; Binary data
523A:	FA-41       	sbci r31, 0x1a        ; Subtract Immediate with Carry SBI
523C:	7E-A8       	std Y+54, r7          ; Store Indirect From Register to Data Space
523E:	32-21       	and r19, r2           ; Logical AND
5240:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5242:	CE-FB       	.data 0xfbce          ; Binary data
5244:	7E-20       	and r7, r14           ; Logical AND
5246:	7E-A9       	std Y+54, r23         ; Store Indirect From Register to Data Space
5248:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
524A:	AC-F9       	.data 0xf9ac          ; Binary data
524C:	8D-F8       	.data 0xf88d          ; Binary data
524E:	FC-51       	subi r31, 0x1c        ; Subtract Immediate
5250:	8D-F8       	.data 0xf88d          ; Binary data
5252:	FD-91       	ld r31, X+            ; Load Indirect from Data Space to Register
5254:	8D-F8       	.data 0xf88d          ; Binary data
5256:	FE-41       	sbci r31, 0x1e        ; Subtract Immediate with Carry SBI
5258:	7F-A8       	std Y+55, r7          ; Store Indirect From Register to Data Space
525A:	32-21       	and r19, r2           ; Logical AND
525C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
525E:	C0-FB       	bst r28, 0            ; Bit Store from Bit in Register to T Flag in SREG
5260:	7F-20       	and r7, r15           ; Logical AND
5262:	7F-A9       	std Y+55, r23         ; Store Indirect From Register to Data Space
5264:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5266:	9E-F9       	.data 0xf99e          ; Binary data
5268:	44-25       	clr r324              ; Clear Register
526A:	8D-F8       	.data 0xf88d          ; Binary data
526C:	00-52       	subi r16, 0x20        ; Subtract Immediate
526E:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
5270:	5A-03       	fmul r21, r18         ; Fractional Multiply Unsigned
5272:	8D-F8       	.data 0xf88d          ; Binary data
5274:	01-32       	cpi r16, 0x21         ; Compare with Immediate
5276:	D0-24       	clr r208              ; Clear Register
5278:	8D-F8       	.data 0xf88d          ; Binary data
527A:	02-42       	sbci r16, 0x22        ; Subtract Immediate with Carry SBI
527C:	80-A8       	std Y+48, r8          ; Store Indirect From Register to Data Space
527E:	32-21       	and r19, r2           ; Logical AND
5280:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5282:	AE-FB       	.data 0xfbae          ; Binary data
5284:	80-20       	and r8, r0            ; Logical AND
5286:	80-A9       	std Y+48, r24         ; Store Indirect From Register to Data Space
5288:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
528A:	8C-F9       	.data 0xf98c          ; Binary data
528C:	8D-F8       	.data 0xf88d          ; Binary data
528E:	04-52       	subi r16, 0x24        ; Subtract Immediate
5290:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
5292:	5A-03       	fmul r21, r18         ; Fractional Multiply Unsigned
5294:	8D-F8       	.data 0xf88d          ; Binary data
5296:	05-32       	cpi r16, 0x25         ; Compare with Immediate
5298:	8D-F8       	.data 0xf88d          ; Binary data
529A:	06-42       	sbci r16, 0x26        ; Subtract Immediate with Carry SBI
529C:	81-A8       	std Y+49, r8          ; Store Indirect From Register to Data Space
529E:	32-21       	and r19, r2           ; Logical AND
52A0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
52A2:	9E-FB       	.data 0xfb9e          ; Binary data
52A4:	81-20       	and r8, r1            ; Logical AND
52A6:	81-A9       	std Y+49, r24         ; Store Indirect From Register to Data Space
52A8:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
52AA:	7C-F9       	.data 0xf97c          ; Binary data
52AC:	42-23       	and r20, r18          ; Logical AND
52AE:	8D-F8       	.data 0xf88d          ; Binary data
52B0:	08-32       	cpi r16, 0x28         ; Compare with Immediate
52B2:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
52B4:	5B-03       	fmul r21, r19         ; Fractional Multiply Unsigned
52B6:	8D-F8       	.data 0xf88d          ; Binary data
52B8:	09-32       	cpi r16, 0x29         ; Compare with Immediate
52BA:	D1-23       	and r29, r17          ; Logical AND
52BC:	8D-F8       	.data 0xf88d          ; Binary data
52BE:	0A-32       	cpi r16, 0x2a         ; Compare with Immediate
52C0:	82-A8       	std Y+50, r8          ; Store Indirect From Register to Data Space
52C2:	32-21       	and r19, r2           ; Logical AND
52C4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
52C6:	8C-FB       	.data 0xfb8c          ; Binary data
52C8:	82-20       	and r8, r2            ; Logical AND
52CA:	82-A9       	std Y+50, r24         ; Store Indirect From Register to Data Space
52CC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
52CE:	6A-F9       	.data 0xf96a          ; Binary data
52D0:	41-23       	and r20, r17          ; Logical AND
52D2:	8D-F8       	.data 0xf88d          ; Binary data
52D4:	0C-32       	cpi r16, 0x2c         ; Compare with Immediate
52D6:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
52D8:	5C-03       	fmul r21, r20         ; Fractional Multiply Unsigned
52DA:	8D-F8       	.data 0xf88d          ; Binary data
52DC:	0D-32       	cpi r16, 0x2d         ; Compare with Immediate
52DE:	8D-F8       	.data 0xf88d          ; Binary data
52E0:	0E-42       	sbci r16, 0x2e        ; Subtract Immediate with Carry SBI
52E2:	83-A8       	std Y+51, r8          ; Store Indirect From Register to Data Space
52E4:	32-21       	and r19, r2           ; Logical AND
52E6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
52E8:	7B-FB       	.data 0xfb7b          ; Binary data
52EA:	83-20       	and r8, r3            ; Logical AND
52EC:	83-A9       	std Y+51, r24         ; Store Indirect From Register to Data Space
52EE:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
52F0:	59-F9       	.data 0xf959          ; Binary data
52F2:	3E-23       	and r19, r30          ; Logical AND
52F4:	8D-F8       	.data 0xf88d          ; Binary data
52F6:	10-32       	cpi r17, 0x20         ; Compare with Immediate
52F8:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
52FA:	5D-03       	fmul r21, r21         ; Fractional Multiply Unsigned
52FC:	8D-F8       	.data 0xf88d          ; Binary data
52FE:	11-32       	cpi r17, 0x21         ; Compare with Immediate
5300:	D3-23       	and r29, r19          ; Logical AND
5302:	8D-F8       	.data 0xf88d          ; Binary data
5304:	12-32       	cpi r17, 0x22         ; Compare with Immediate
5306:	84-A8       	std Y+52, r8          ; Store Indirect From Register to Data Space
5308:	32-21       	and r19, r2           ; Logical AND
530A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
530C:	69-FB       	.data 0xfb69          ; Binary data
530E:	84-20       	and r8, r4            ; Logical AND
5310:	84-A9       	std Y+52, r24         ; Store Indirect From Register to Data Space
5312:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5314:	47-F9       	bld r20, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
5316:	3D-23       	and r19, r29          ; Logical AND
5318:	8D-F8       	.data 0xf88d          ; Binary data
531A:	14-32       	cpi r17, 0x24         ; Compare with Immediate
531C:	A1-26       	clr r673              ; Clear Register
531E:	8D-F8       	.data 0xf88d          ; Binary data
5320:	15-62       	ori r17, 0x25         ; Logical OR with Immediate
5322:	D2-23       	and r29, r18          ; Logical AND
5324:	8D-F8       	.data 0xf88d          ; Binary data
5326:	16-32       	cpi r17, 0x26         ; Compare with Immediate
5328:	85-A8       	std Y+53, r8          ; Store Indirect From Register to Data Space
532A:	32-21       	and r19, r2           ; Logical AND
532C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
532E:	58-FB       	.data 0xfb58          ; Binary data
5330:	85-20       	and r8, r5            ; Logical AND
5332:	85-A9       	std Y+53, r24         ; Store Indirect From Register to Data Space
5334:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5336:	36-F9       	bld r19, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
5338:	3A-23       	and r19, r26          ; Logical AND
533A:	8D-F8       	.data 0xf88d          ; Binary data
533C:	18-32       	cpi r17, 0x28         ; Compare with Immediate
533E:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
5340:	5D-03       	fmul r21, r21         ; Fractional Multiply Unsigned
5342:	8D-F8       	.data 0xf88d          ; Binary data
5344:	19-32       	cpi r17, 0x29         ; Compare with Immediate
5346:	D7-23       	and r29, r23          ; Logical AND
5348:	8D-F8       	.data 0xf88d          ; Binary data
534A:	1A-32       	cpi r17, 0x2a         ; Compare with Immediate
534C:	86-A8       	std Y+54, r8          ; Store Indirect From Register to Data Space
534E:	32-21       	and r19, r2           ; Logical AND
5350:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5352:	46-FB       	bst r20, 6            ; Bit Store from Bit in Register to T Flag in SREG
5354:	86-20       	and r8, r6            ; Logical AND
5356:	86-A9       	std Y+54, r24         ; Store Indirect From Register to Data Space
5358:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
535A:	24-F9       	bld r18, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
535C:	39-23       	and r19, r25          ; Logical AND
535E:	8D-F8       	.data 0xf88d          ; Binary data
5360:	1C-32       	cpi r17, 0x2c         ; Compare with Immediate
5362:	8D-F8       	.data 0xf88d          ; Binary data
5364:	1D-62       	ori r17, 0x2d         ; Logical OR with Immediate
5366:	D6-23       	and r29, r22          ; Logical AND
5368:	8D-F8       	.data 0xf88d          ; Binary data
536A:	1E-32       	cpi r17, 0x2e         ; Compare with Immediate
536C:	87-A8       	std Y+55, r8          ; Store Indirect From Register to Data Space
536E:	32-21       	and r19, r2           ; Logical AND
5370:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5372:	36-FB       	bst r19, 6            ; Bit Store from Bit in Register to T Flag in SREG
5374:	87-20       	and r8, r7            ; Logical AND
5376:	87-A9       	std Y+55, r24         ; Store Indirect From Register to Data Space
5378:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
537A:	14-F9       	bld r17, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
537C:	37-23       	and r19, r23          ; Logical AND
537E:	8D-F8       	.data 0xf88d          ; Binary data
5380:	20-32       	cpi r18, 0x20         ; Compare with Immediate
5382:	8D-F8       	.data 0xf88d          ; Binary data
5384:	21-62       	ori r18, 0x21         ; Logical OR with Immediate
5386:	DB-23       	and r29, r27          ; Logical AND
5388:	8D-F8       	.data 0xf88d          ; Binary data
538A:	22-32       	cpi r18, 0x22         ; Compare with Immediate
538C:	88-A8       	std Y+48, r8          ; Store Indirect From Register to Data Space
538E:	32-21       	and r19, r2           ; Logical AND
5390:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5392:	26-FB       	bst r18, 6            ; Bit Store from Bit in Register to T Flag in SREG
5394:	88-20       	and r8, r8            ; Logical AND
5396:	88-A9       	std Y+48, r24         ; Store Indirect From Register to Data Space
5398:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
539A:	04-F9       	bld r16, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
539C:	36-23       	and r19, r22          ; Logical AND
539E:	8D-F8       	.data 0xf88d          ; Binary data
53A0:	24-32       	cpi r18, 0x24         ; Compare with Immediate
53A2:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
53A4:	5F-03       	fmul r21, r23         ; Fractional Multiply Unsigned
53A6:	8D-F8       	.data 0xf88d          ; Binary data
53A8:	25-32       	cpi r18, 0x25         ; Compare with Immediate
53AA:	DA-23       	and r29, r26          ; Logical AND
53AC:	8D-F8       	.data 0xf88d          ; Binary data
53AE:	26-32       	cpi r18, 0x26         ; Compare with Immediate
53B0:	89-A8       	std Y+49, r8          ; Store Indirect From Register to Data Space
53B2:	32-21       	and r19, r2           ; Logical AND
53B4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
53B6:	14-FB       	bst r17, 4            ; Bit Store from Bit in Register to T Flag in SREG
53B8:	89-20       	and r8, r9            ; Logical AND
53BA:	89-A9       	std Y+49, r24         ; Store Indirect From Register to Data Space
53BC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
53BE:	F2-F8       	bld r15, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
53C0:	33-23       	and r19, r19          ; Logical AND
53C2:	8D-F8       	.data 0xf88d          ; Binary data
53C4:	28-32       	cpi r18, 0x28         ; Compare with Immediate
53C6:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
53C8:	60-03       	mulsu r22, r16        ; Multiply Signed with Unsigned
53CA:	8D-F8       	.data 0xf88d          ; Binary data
53CC:	29-32       	cpi r18, 0x29         ; Compare with Immediate
53CE:	DD-27       	clr r989              ; Clear Register
53D0:	8D-F8       	.data 0xf88d          ; Binary data
53D2:	2A-72       	andi r18, 0x2a        ; Logical AND with Immediate
53D4:	8A-A8       	std Y+50, r8          ; Store Indirect From Register to Data Space
53D6:	32-21       	and r19, r2           ; Logical AND
53D8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
53DA:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
53DC:	8A-20       	and r8, r10           ; Logical AND
53DE:	8A-A9       	std Y+50, r24         ; Store Indirect From Register to Data Space
53E0:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
53E2:	E0-F8       	bld r14, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
53E4:	32-24       	clr r50               ; Clear Register
53E6:	8D-F8       	.data 0xf88d          ; Binary data
53E8:	2C-42       	sbci r18, 0x2c        ; Subtract Immediate with Carry SBI
53EA:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
53EC:	61-03       	mulsu r22, r17        ; Multiply Signed with Unsigned
53EE:	8D-F8       	.data 0xf88d          ; Binary data
53F0:	2D-32       	cpi r18, 0x2d         ; Compare with Immediate
53F2:	DC-23       	and r29, r28          ; Logical AND
53F4:	8D-F8       	.data 0xf88d          ; Binary data
53F6:	2E-32       	cpi r18, 0x2e         ; Compare with Immediate
53F8:	8B-A8       	std Y+51, r8          ; Store Indirect From Register to Data Space
53FA:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
53FC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
53FE:	F0-FA       	bst r15, 0            ; Bit Store from Bit in Register to T Flag in SREG
5400:	8B-20       	and r8, r11           ; Logical AND
5402:	8B-A9       	std Y+51, r24         ; Store Indirect From Register to Data Space
5404:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5406:	CE-F8       	.data 0xf8ce          ; Binary data
5408:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
540A:	2D-08       	sbc r2, r13           ; Subtract with Carry
540C:	8D-F8       	.data 0xf88d          ; Binary data
540E:	30-82       	st Z, r3              ; Store Indirect From Register to Data Space
5410:	9D-25       	clr r413              ; Clear Register
5412:	8D-F8       	.data 0xf88d          ; Binary data
5414:	31-52       	subi r19, 0x21        ; Subtract Immediate
5416:	8D-F8       	.data 0xf88d          ; Binary data
5418:	32-72       	andi r19, 0x22        ; Logical AND with Immediate
541A:	8C-A8       	std Y+52, r8          ; Store Indirect From Register to Data Space
541C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
541E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5420:	DF-FA       	.data 0xfadf          ; Binary data
5422:	8C-20       	and r8, r12           ; Logical AND
5424:	8C-A9       	std Y+52, r24         ; Store Indirect From Register to Data Space
5426:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5428:	BD-F8       	.data 0xf8bd          ; Binary data
542A:	8D-F8       	.data 0xf88d          ; Binary data
542C:	34-82       	std Y+4, r3           ; Store Indirect From Register to Data Space
542E:	8D-F8       	.data 0xf88d          ; Binary data
5430:	35-52       	subi r19, 0x25        ; Subtract Immediate
5432:	8D-F8       	.data 0xf88d          ; Binary data
5434:	36-72       	andi r19, 0x26        ; Logical AND with Immediate
5436:	8D-A8       	std Y+53, r8          ; Store Indirect From Register to Data Space
5438:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
543A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
543C:	D1-FA       	bst r13, 1            ; Bit Store from Bit in Register to T Flag in SREG
543E:	8D-20       	and r8, r13           ; Logical AND
5440:	8D-A9       	std Y+53, r24         ; Store Indirect From Register to Data Space
5442:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5444:	AF-F8       	.data 0xf8af          ; Binary data
5446:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5448:	2C-08       	sbc r2, r12           ; Subtract with Carry
544A:	8D-F8       	.data 0xf88d          ; Binary data
544C:	38-82       	st Y, r3              ; Store Indirect From Register to Data Space
544E:	8D-F8       	.data 0xf88d          ; Binary data
5450:	39-52       	subi r19, 0x29        ; Subtract Immediate
5452:	E1-27       	clr r993              ; Clear Register
5454:	8D-F8       	.data 0xf88d          ; Binary data
5456:	3A-72       	andi r19, 0x2a        ; Logical AND with Immediate
5458:	8E-A8       	std Y+54, r8          ; Store Indirect From Register to Data Space
545A:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
545C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
545E:	C0-FA       	bst r12, 0            ; Bit Store from Bit in Register to T Flag in SREG
5460:	8E-20       	and r8, r14           ; Logical AND
5462:	8E-A9       	std Y+54, r24         ; Store Indirect From Register to Data Space
5464:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5466:	9E-F8       	.data 0xf89e          ; Binary data
5468:	8D-F8       	.data 0xf88d          ; Binary data
546A:	3C-82       	std Y+4, r3           ; Store Indirect From Register to Data Space
546C:	8D-F8       	.data 0xf88d          ; Binary data
546E:	3D-52       	subi r19, 0x2d        ; Subtract Immediate
5470:	8D-F8       	.data 0xf88d          ; Binary data
5472:	3E-72       	andi r19, 0x2e        ; Logical AND with Immediate
5474:	8F-A8       	std Y+55, r8          ; Store Indirect From Register to Data Space
5476:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5478:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
547A:	B2-FA       	bst r11, 2            ; Bit Store from Bit in Register to T Flag in SREG
547C:	8F-20       	and r8, r15           ; Logical AND
547E:	8F-A9       	std Y+55, r24         ; Store Indirect From Register to Data Space
5480:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5482:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
5484:	27-23       	and r18, r23          ; Logical AND
5486:	8D-F8       	.data 0xf88d          ; Binary data
5488:	40-32       	cpi r20, 0x20         ; Compare with Immediate
548A:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
548C:	64-03       	mulsu r22, r20        ; Multiply Signed with Unsigned
548E:	8D-F8       	.data 0xf88d          ; Binary data
5490:	41-32       	cpi r20, 0x21         ; Compare with Immediate
5492:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5494:	E4-08       	sbc r14, r4           ; Subtract with Carry
5496:	8D-F8       	.data 0xf88d          ; Binary data
5498:	42-82       	std Y+2, r4           ; Store Indirect From Register to Data Space
549A:	90-A8       	std Y+48, r9          ; Store Indirect From Register to Data Space
549C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
549E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
54A0:	9F-FA       	.data 0xfa9f          ; Binary data
54A2:	90-20       	and r9, r0            ; Logical AND
54A4:	90-A9       	std Y+48, r25         ; Store Indirect From Register to Data Space
54A6:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
54A8:	7D-F8       	.data 0xf87d          ; Binary data
54AA:	26-23       	and r18, r22          ; Logical AND
54AC:	8D-F8       	.data 0xf88d          ; Binary data
54AE:	44-32       	cpi r20, 0x24         ; Compare with Immediate
54B0:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
54B2:	65-03       	mulsu r22, r21        ; Multiply Signed with Unsigned
54B4:	8D-F8       	.data 0xf88d          ; Binary data
54B6:	45-32       	cpi r20, 0x25         ; Compare with Immediate
54B8:	E3-23       	and r30, r19          ; Logical AND
54BA:	8D-F8       	.data 0xf88d          ; Binary data
54BC:	46-32       	cpi r20, 0x26         ; Compare with Immediate
54BE:	91-A8       	std Y+49, r9          ; Store Indirect From Register to Data Space
54C0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
54C2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
54C4:	8D-FA       	.data 0xfa8d          ; Binary data
54C6:	91-20       	and r9, r1            ; Logical AND
54C8:	91-A9       	std Y+49, r25         ; Store Indirect From Register to Data Space
54CA:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
54CC:	6B-F8       	.data 0xf86b          ; Binary data
54CE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
54D0:	25-0A       	sbc r2, r21           ; Subtract with Carry
54D2:	8D-F8       	.data 0xf88d          ; Binary data
54D4:	48-A2       	std Y+32, r4          ; Store Indirect From Register to Data Space
54D6:	99-27       	clr r921              ; Clear Register
54D8:	8D-F8       	.data 0xf88d          ; Binary data
54DA:	49-72       	andi r20, 0x29        ; Logical AND with Immediate
54DC:	8D-F8       	.data 0xf88d          ; Binary data
54DE:	4A-82       	std Y+2, r4           ; Store Indirect From Register to Data Space
54E0:	92-A8       	std Y+50, r9          ; Store Indirect From Register to Data Space
54E2:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
54E4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
54E6:	7C-FA       	.data 0xfa7c          ; Binary data
54E8:	92-20       	and r9, r2            ; Logical AND
54EA:	92-A9       	std Y+50, r25         ; Store Indirect From Register to Data Space
54EC:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
54EE:	5A-F8       	.data 0xf85a          ; Binary data
54F0:	8D-F8       	.data 0xf88d          ; Binary data
54F2:	4C-A2       	std Y+36, r4          ; Store Indirect From Register to Data Space
54F4:	8D-F8       	.data 0xf88d          ; Binary data
54F6:	4D-72       	andi r20, 0x2d        ; Logical AND with Immediate
54F8:	8D-F8       	.data 0xf88d          ; Binary data
54FA:	4E-82       	std Y+6, r4           ; Store Indirect From Register to Data Space
54FC:	93-A8       	std Y+51, r9          ; Store Indirect From Register to Data Space
54FE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5500:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5502:	6E-FA       	.data 0xfa6e          ; Binary data
5504:	93-20       	and r9, r3            ; Logical AND
5506:	93-A9       	std Y+51, r25         ; Store Indirect From Register to Data Space
5508:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
550A:	4C-F8       	.data 0xf84c          ; Binary data
550C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
550E:	22-0B       	sbc r18, r18          ; Subtract with Carry
5510:	8D-F8       	.data 0xf88d          ; Binary data
5512:	50-B2       	in r5, 0x10           ; Load an I/O Location to Register
5514:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5516:	97-08       	sbc r9, r7            ; Subtract with Carry
5518:	8D-F8       	.data 0xf88d          ; Binary data
551A:	51-82       	std Y+1, r5           ; Store Indirect From Register to Data Space
551C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
551E:	E6-0A       	sbc r14, r22          ; Subtract with Carry
5520:	8D-F8       	.data 0xf88d          ; Binary data
5522:	52-A2       	std Y+34, r5          ; Store Indirect From Register to Data Space
5524:	94-A8       	std Y+52, r9          ; Store Indirect From Register to Data Space
5526:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5528:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
552A:	5A-FA       	.data 0xfa5a          ; Binary data
552C:	94-20       	and r9, r4            ; Logical AND
552E:	94-A9       	std Y+52, r25         ; Store Indirect From Register to Data Space
5530:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5532:	38-F8       	.data 0xf838          ; Binary data
5534:	8D-F8       	.data 0xf88d          ; Binary data
5536:	54-B2       	in r5, 0x14           ; Load an I/O Location to Register
5538:	8D-F8       	.data 0xf88d          ; Binary data
553A:	55-82       	std Y+5, r5           ; Store Indirect From Register to Data Space
553C:	8D-F8       	.data 0xf88d          ; Binary data
553E:	56-A2       	std Y+38, r5          ; Store Indirect From Register to Data Space
5540:	95-A8       	std Y+53, r9          ; Store Indirect From Register to Data Space
5542:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5544:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5546:	4C-FA       	.data 0xfa4c          ; Binary data
5548:	95-20       	and r9, r5            ; Logical AND
554A:	95-A9       	std Y+53, r25         ; Store Indirect From Register to Data Space
554C:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
554E:	2A-F8       	.data 0xf82a          ; Binary data
5550:	1F-23       	and r17, r31          ; Logical AND
5552:	8D-F8       	.data 0xf88d          ; Binary data
5554:	58-32       	cpi r21, 0x28         ; Compare with Immediate
5556:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5558:	96-0A       	sbc r9, r22           ; Subtract with Carry
555A:	8D-F8       	.data 0xf88d          ; Binary data
555C:	59-A2       	std Y+33, r5          ; Store Indirect From Register to Data Space
555E:	EA-23       	and r30, r26          ; Logical AND
5560:	8D-F8       	.data 0xf88d          ; Binary data
5562:	5A-32       	cpi r21, 0x2a         ; Compare with Immediate
5564:	96-A8       	std Y+54, r9          ; Store Indirect From Register to Data Space
5566:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5568:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
556A:	3A-FA       	.data 0xfa3a          ; Binary data
556C:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
556E:	96-A9       	std Y+54, r25         ; Store Indirect From Register to Data Space
5570:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5572:	18-F8       	.data 0xf818          ; Binary data
5574:	1E-23       	and r17, r30          ; Logical AND
5576:	8D-F8       	.data 0xf88d          ; Binary data
5578:	5C-32       	cpi r21, 0x2c         ; Compare with Immediate
557A:	95-23       	and r25, r21          ; Logical AND
557C:	8D-F8       	.data 0xf88d          ; Binary data
557E:	5D-32       	cpi r21, 0x2d         ; Compare with Immediate
5580:	E9-23       	and r30, r25          ; Logical AND
5582:	8D-F8       	.data 0xf88d          ; Binary data
5584:	5E-32       	cpi r21, 0x2e         ; Compare with Immediate
5586:	97-A8       	std Y+55, r9          ; Store Indirect From Register to Data Space
5588:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
558A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
558C:	29-FA       	.data 0xfa29          ; Binary data
558E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
5590:	97-A9       	std Y+55, r25         ; Store Indirect From Register to Data Space
5592:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
5594:	07-F8       	bld r0, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
5596:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5598:	1B-0B       	sbc r17, r27          ; Subtract with Carry
559A:	8D-F8       	.data 0xf88d          ; Binary data
559C:	60-B2       	in r6, 0x10           ; Load an I/O Location to Register
559E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
55A0:	94-0A       	sbc r9, r20           ; Subtract with Carry
55A2:	8D-F8       	.data 0xf88d          ; Binary data
55A4:	61-A2       	std Y+33, r6          ; Store Indirect From Register to Data Space
55A6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
55A8:	ED-08       	sbc r14, r13          ; Subtract with Carry
55AA:	8D-F8       	.data 0xf88d          ; Binary data
55AC:	62-82       	std Y+2, r6           ; Store Indirect From Register to Data Space
55AE:	98-A8       	std Y+48, r9          ; Store Indirect From Register to Data Space
55B0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
55B2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
55B4:	15-FA       	bst r1, 5             ; Bit Store from Bit in Register to T Flag in SREG
55B6:	98-20       	and r9, r8            ; Logical AND
55B8:	98-A9       	std Y+48, r25         ; Store Indirect From Register to Data Space
55BA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
55BC:	F3-FF       	sbrs r31, 3           ; Skip if Bit in Register is Set
55BE:	8D-F8       	.data 0xf88d          ; Binary data
55C0:	64-B2       	in r6, 0x14           ; Load an I/O Location to Register
55C2:	8D-F8       	.data 0xf88d          ; Binary data
55C4:	65-A2       	std Y+37, r6          ; Store Indirect From Register to Data Space
55C6:	8D-F8       	.data 0xf88d          ; Binary data
55C8:	66-82       	std Y+6, r6           ; Store Indirect From Register to Data Space
55CA:	99-A8       	std Y+49, r9          ; Store Indirect From Register to Data Space
55CC:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
55CE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
55D0:	07-FA       	bst r0, 7             ; Bit Store from Bit in Register to T Flag in SREG
55D2:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
55D4:	99-A9       	std Y+49, r25         ; Store Indirect From Register to Data Space
55D6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
55D8:	E5-FF       	sbrs r30, 5           ; Skip if Bit in Register is Set
55DA:	18-23       	and r17, r24          ; Logical AND
55DC:	8D-F8       	.data 0xf88d          ; Binary data
55DE:	68-32       	cpi r22, 0x28         ; Compare with Immediate
55E0:	93-23       	and r25, r19          ; Logical AND
55E2:	8D-F8       	.data 0xf88d          ; Binary data
55E4:	69-32       	cpi r22, 0x29         ; Compare with Immediate
55E6:	F0-27       	clr r1008             ; Clear Register
55E8:	8D-F8       	.data 0xf88d          ; Binary data
55EA:	6A-72       	andi r22, 0x2a        ; Logical AND with Immediate
55EC:	9A-A8       	std Y+50, r9          ; Store Indirect From Register to Data Space
55EE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
55F0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
55F2:	F6-F9       	bld r31, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
55F4:	9A-20       	and r9, r10           ; Logical AND
55F6:	9A-A9       	std Y+50, r25         ; Store Indirect From Register to Data Space
55F8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
55FA:	D4-FF       	sbrs r29, 4           ; Skip if Bit in Register is Set
55FC:	17-23       	and r17, r23          ; Logical AND
55FE:	8D-F8       	.data 0xf88d          ; Binary data
5600:	6C-32       	cpi r22, 0x2c         ; Compare with Immediate
5602:	92-23       	and r25, r18          ; Logical AND
5604:	8D-F8       	.data 0xf88d          ; Binary data
5606:	6D-32       	cpi r22, 0x2d         ; Compare with Immediate
5608:	EF-23       	and r30, r31          ; Logical AND
560A:	8D-F8       	.data 0xf88d          ; Binary data
560C:	6E-32       	cpi r22, 0x2e         ; Compare with Immediate
560E:	9B-A8       	std Y+51, r9          ; Store Indirect From Register to Data Space
5610:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5612:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5614:	E5-F9       	bld r30, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
5616:	9B-20       	and r9, r11           ; Logical AND
5618:	9B-A9       	std Y+51, r25         ; Store Indirect From Register to Data Space
561A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
561C:	C3-FF       	sbrs r28, 3           ; Skip if Bit in Register is Set
561E:	15-23       	and r17, r21          ; Logical AND
5620:	8D-F8       	.data 0xf88d          ; Binary data
5622:	70-32       	cpi r23, 0x20         ; Compare with Immediate
5624:	91-23       	and r25, r17          ; Logical AND
5626:	8D-F8       	.data 0xf88d          ; Binary data
5628:	71-32       	cpi r23, 0x21         ; Compare with Immediate
562A:	F1-23       	and r31, r17          ; Logical AND
562C:	8D-F8       	.data 0xf88d          ; Binary data
562E:	72-32       	cpi r23, 0x22         ; Compare with Immediate
5630:	9C-A8       	std Y+52, r9          ; Store Indirect From Register to Data Space
5632:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5634:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5636:	D4-F9       	bld r29, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
5638:	9C-20       	and r9, r12           ; Logical AND
563A:	9C-A9       	std Y+52, r25         ; Store Indirect From Register to Data Space
563C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
563E:	B2-FF       	sbrs r27, 2           ; Skip if Bit in Register is Set
5640:	14-23       	and r17, r20          ; Logical AND
5642:	8D-F8       	.data 0xf88d          ; Binary data
5644:	74-32       	cpi r23, 0x24         ; Compare with Immediate
5646:	90-23       	and r25, r16          ; Logical AND
5648:	8D-F8       	.data 0xf88d          ; Binary data
564A:	75-32       	cpi r23, 0x25         ; Compare with Immediate
564C:	8D-F8       	.data 0xf88d          ; Binary data
564E:	76-72       	andi r23, 0x26        ; Logical AND with Immediate
5650:	9D-A8       	std Y+53, r9          ; Store Indirect From Register to Data Space
5652:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5654:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5656:	C4-F9       	bld r28, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
5658:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
565A:	9D-A9       	std Y+53, r25         ; Store Indirect From Register to Data Space
565C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
565E:	A2-FF       	sbrs r26, 2           ; Skip if Bit in Register is Set
5660:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5662:	11-08       	sbc r1, r1            ; Subtract with Carry
5664:	8D-F8       	.data 0xf88d          ; Binary data
5666:	78-82       	st Y, r7              ; Store Indirect From Register to Data Space
5668:	8F-27       	clr r911              ; Clear Register
566A:	8D-F8       	.data 0xf88d          ; Binary data
566C:	79-72       	andi r23, 0x29        ; Logical AND with Immediate
566E:	F3-25       	clr r499              ; Clear Register
5670:	8D-F8       	.data 0xf88d          ; Binary data
5672:	7A-52       	subi r23, 0x2a        ; Subtract Immediate
5674:	9E-A8       	std Y+54, r9          ; Store Indirect From Register to Data Space
5676:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5678:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
567A:	B2-F9       	bld r27, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
567C:	9E-20       	and r9, r14           ; Logical AND
567E:	9E-A9       	std Y+54, r25         ; Store Indirect From Register to Data Space
5680:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5682:	90-FF       	sbrs r25, 0           ; Skip if Bit in Register is Set
5684:	8D-F8       	.data 0xf88d          ; Binary data
5686:	7C-82       	std Y+4, r7           ; Store Indirect From Register to Data Space
5688:	8D-F8       	.data 0xf88d          ; Binary data
568A:	7D-72       	andi r23, 0x2d        ; Logical AND with Immediate
568C:	8D-F8       	.data 0xf88d          ; Binary data
568E:	7E-52       	subi r23, 0x2e        ; Subtract Immediate
5690:	9F-A8       	std Y+55, r9          ; Store Indirect From Register to Data Space
5692:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5694:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5696:	A4-F9       	bld r26, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
5698:	9F-20       	and r9, r15           ; Logical AND
569A:	9F-A9       	std Y+55, r25         ; Store Indirect From Register to Data Space
569C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
569E:	82-FF       	sbrs r24, 2           ; Skip if Bit in Register is Set
56A0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
56A2:	0E-08       	sbc r0, r14           ; Subtract with Carry
56A4:	8D-F8       	.data 0xf88d          ; Binary data
56A6:	80-82       	st Z, r8              ; Store Indirect From Register to Data Space
56A8:	8D-27       	clr r909              ; Clear Register
56AA:	8D-F8       	.data 0xf88d          ; Binary data
56AC:	81-72       	andi r24, 0x21        ; Logical AND with Immediate
56AE:	F4-25       	clr r500              ; Clear Register
56B0:	8D-F8       	.data 0xf88d          ; Binary data
56B2:	82-52       	subi r24, 0x22        ; Subtract Immediate
56B4:	A0-A8       	std Y+48, r10         ; Store Indirect From Register to Data Space
56B6:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
56B8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
56BA:	92-F9       	bld r25, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
56BC:	A0-20       	and r10, r0           ; Logical AND
56BE:	A0-A9       	std Y+48, r26         ; Store Indirect From Register to Data Space
56C0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
56C2:	70-FF       	sbrs r23, 0           ; Skip if Bit in Register is Set
56C4:	8D-F8       	.data 0xf88d          ; Binary data
56C6:	84-82       	std Y+4, r8           ; Store Indirect From Register to Data Space
56C8:	8D-F8       	.data 0xf88d          ; Binary data
56CA:	85-72       	andi r24, 0x25        ; Logical AND with Immediate
56CC:	8D-F8       	.data 0xf88d          ; Binary data
56CE:	86-52       	subi r24, 0x26        ; Subtract Immediate
56D0:	A1-A8       	std Y+49, r10         ; Store Indirect From Register to Data Space
56D2:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
56D4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
56D6:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
56D8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
56DA:	A1-A9       	std Y+49, r26         ; Store Indirect From Register to Data Space
56DC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
56DE:	62-FF       	sbrs r22, 2           ; Skip if Bit in Register is Set
56E0:	0A-23       	and r16, r26          ; Logical AND
56E2:	8D-F8       	.data 0xf88d          ; Binary data
56E4:	88-32       	cpi r24, 0x28         ; Compare with Immediate
56E6:	8D-F8       	.data 0xf88d          ; Binary data
56E8:	89-72       	andi r24, 0x29        ; Logical AND with Immediate
56EA:	F5-23       	and r31, r21          ; Logical AND
56EC:	8D-F8       	.data 0xf88d          ; Binary data
56EE:	8A-32       	cpi r24, 0x2a         ; Compare with Immediate
56F0:	A2-A8       	std Y+50, r10         ; Store Indirect From Register to Data Space
56F2:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
56F4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
56F6:	74-F9       	bld r23, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
56F8:	A2-20       	and r10, r2           ; Logical AND
56FA:	A2-A9       	std Y+50, r26         ; Store Indirect From Register to Data Space
56FC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
56FE:	52-FF       	sbrs r21, 2           ; Skip if Bit in Register is Set
5700:	09-23       	and r16, r25          ; Logical AND
5702:	8D-F8       	.data 0xf88d          ; Binary data
5704:	8C-32       	cpi r24, 0x2c         ; Compare with Immediate
5706:	8C-23       	and r24, r28          ; Logical AND
5708:	8D-F8       	.data 0xf88d          ; Binary data
570A:	8D-32       	cpi r24, 0x2d         ; Compare with Immediate
570C:	8D-F8       	.data 0xf88d          ; Binary data
570E:	8E-52       	subi r24, 0x2e        ; Subtract Immediate
5710:	A3-A8       	std Y+51, r10         ; Store Indirect From Register to Data Space
5712:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5714:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5716:	64-F9       	bld r22, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
5718:	A3-20       	and r10, r3           ; Logical AND
571A:	A3-A9       	std Y+51, r26         ; Store Indirect From Register to Data Space
571C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
571E:	42-FF       	sbrs r20, 2           ; Skip if Bit in Register is Set
5720:	07-23       	and r16, r23          ; Logical AND
5722:	8D-F8       	.data 0xf88d          ; Binary data
5724:	90-32       	cpi r25, 0x20         ; Compare with Immediate
5726:	8B-23       	and r24, r27          ; Logical AND
5728:	8D-F8       	.data 0xf88d          ; Binary data
572A:	91-32       	cpi r25, 0x21         ; Compare with Immediate
572C:	F8-23       	and r31, r24          ; Logical AND
572E:	8D-F8       	.data 0xf88d          ; Binary data
5730:	92-32       	cpi r25, 0x22         ; Compare with Immediate
5732:	A4-A8       	std Y+52, r10         ; Store Indirect From Register to Data Space
5734:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5736:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5738:	53-F9       	bld r21, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
573A:	A4-20       	and r10, r4           ; Logical AND
573C:	A4-A9       	std Y+52, r26         ; Store Indirect From Register to Data Space
573E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5740:	31-FF       	sbrs r19, 1           ; Skip if Bit in Register is Set
5742:	06-23       	and r16, r22          ; Logical AND
5744:	8D-F8       	.data 0xf88d          ; Binary data
5746:	94-32       	cpi r25, 0x24         ; Compare with Immediate
5748:	8A-25       	clr r394              ; Clear Register
574A:	8D-F8       	.data 0xf88d          ; Binary data
574C:	95-52       	subi r25, 0x25        ; Subtract Immediate
574E:	F7-23       	and r31, r23          ; Logical AND
5750:	8D-F8       	.data 0xf88d          ; Binary data
5752:	96-32       	cpi r25, 0x26         ; Compare with Immediate
5754:	A5-A8       	std Y+53, r10         ; Store Indirect From Register to Data Space
5756:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5758:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
575A:	42-F9       	bld r20, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
575C:	A5-20       	and r10, r5           ; Logical AND
575E:	A5-A9       	std Y+53, r26         ; Store Indirect From Register to Data Space
5760:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5762:	20-FF       	sbrs r18, 0           ; Skip if Bit in Register is Set
5764:	02-27       	clr r770              ; Clear Register
5766:	8D-F8       	.data 0xf88d          ; Binary data
5768:	98-72       	andi r25, 0x28        ; Logical AND with Immediate
576A:	8D-F8       	.data 0xf88d          ; Binary data
576C:	99-52       	subi r25, 0x29        ; Subtract Immediate
576E:	FA-26       	clr r762              ; Clear Register
5770:	8D-F8       	.data 0xf88d          ; Binary data
5772:	9A-62       	ori r25, 0x2a         ; Logical OR with Immediate
5774:	A6-A8       	std Y+54, r10         ; Store Indirect From Register to Data Space
5776:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5778:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
577A:	32-F9       	bld r19, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
577C:	A6-20       	and r10, r6           ; Logical AND
577E:	A6-A9       	std Y+54, r26         ; Store Indirect From Register to Data Space
5780:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5782:	10-FF       	sbrs r17, 0           ; Skip if Bit in Register is Set
5784:	8D-F8       	.data 0xf88d          ; Binary data
5786:	9C-72       	andi r25, 0x2c        ; Logical AND with Immediate
5788:	8D-F8       	.data 0xf88d          ; Binary data
578A:	9D-52       	subi r25, 0x2d        ; Subtract Immediate
578C:	8D-F8       	.data 0xf88d          ; Binary data
578E:	9E-62       	ori r25, 0x2e         ; Logical OR with Immediate
5790:	A7-A8       	std Y+55, r10         ; Store Indirect From Register to Data Space
5792:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
5794:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5796:	24-F9       	bld r18, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
5798:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
579A:	A7-A9       	std Y+55, r26         ; Store Indirect From Register to Data Space
579C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
579E:	02-FF       	sbrs r16, 2           ; Skip if Bit in Register is Set
57A0:	00-25       	clr r256              ; Clear Register
57A2:	8D-F8       	.data 0xf88d          ; Binary data
57A4:	A0-52       	subi r26, 0x20        ; Subtract Immediate
57A6:	89-23       	and r24, r25          ; Logical AND
57A8:	8D-F8       	.data 0xf88d          ; Binary data
57AA:	A1-32       	cpi r26, 0x21         ; Compare with Immediate
57AC:	FD-23       	and r31, r29          ; Logical AND
57AE:	8D-F8       	.data 0xf88d          ; Binary data
57B0:	A2-32       	cpi r26, 0x22         ; Compare with Immediate
57B2:	A8-A8       	std Y+48, r10         ; Store Indirect From Register to Data Space
57B4:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
57B6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
57B8:	13-F9       	bld r17, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
57BA:	A8-20       	and r10, r8           ; Logical AND
57BC:	A8-A9       	std Y+48, r26         ; Store Indirect From Register to Data Space
57BE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
57C0:	F1-FE       	sbrs r15, 1           ; Skip if Bit in Register is Set
57C2:	8D-F8       	.data 0xf88d          ; Binary data
57C4:	A4-52       	subi r26, 0x24        ; Subtract Immediate
57C6:	89-23       	and r24, r25          ; Logical AND
57C8:	8D-F8       	.data 0xf88d          ; Binary data
57CA:	A5-32       	cpi r26, 0x25         ; Compare with Immediate
57CC:	FD-25       	clr r509              ; Clear Register
57CE:	8D-F8       	.data 0xf88d          ; Binary data
57D0:	A6-52       	subi r26, 0x26        ; Subtract Immediate
57D2:	A9-A8       	std Y+49, r10         ; Store Indirect From Register to Data Space
57D4:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
57D6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
57D8:	03-F9       	bld r16, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
57DA:	A9-20       	and r10, r9           ; Logical AND
57DC:	A9-A9       	std Y+49, r26         ; Store Indirect From Register to Data Space
57DE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
57E0:	E1-FE       	sbrs r14, 1           ; Skip if Bit in Register is Set
57E2:	00-24       	clr r0                ; Clear Register
57E4:	8D-F8       	.data 0xf88d          ; Binary data
57E6:	A8-42       	sbci r26, 0x28        ; Subtract Immediate with Carry SBI
57E8:	88-23       	and r24, r24          ; Logical AND
57EA:	8D-F8       	.data 0xf88d          ; Binary data
57EC:	A9-32       	cpi r26, 0x29         ; Compare with Immediate
57EE:	FE-26       	clr r766              ; Clear Register
57F0:	8D-F8       	.data 0xf88d          ; Binary data
57F2:	AA-62       	ori r26, 0x2a         ; Logical OR with Immediate
57F4:	AA-A8       	std Y+50, r10         ; Store Indirect From Register to Data Space
57F6:	32-21       	and r19, r2           ; Logical AND
57F8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
57FA:	F2-F8       	bld r15, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
57FC:	AA-20       	and r10, r10          ; Logical AND
57FE:	AA-A9       	std Y+50, r26         ; Store Indirect From Register to Data Space
5800:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5802:	D0-FE       	sbrs r13, 0           ; Skip if Bit in Register is Set
5804:	8D-F8       	.data 0xf88d          ; Binary data
5806:	AC-42       	sbci r26, 0x2c        ; Subtract Immediate with Carry SBI
5808:	87-27       	clr r903              ; Clear Register
580A:	8D-F8       	.data 0xf88d          ; Binary data
580C:	AD-72       	andi r26, 0x2d        ; Logical AND with Immediate
580E:	8D-F8       	.data 0xf88d          ; Binary data
5810:	AE-52       	subi r26, 0x2e        ; Subtract Immediate
5812:	AB-A8       	std Y+51, r10         ; Store Indirect From Register to Data Space
5814:	32-21       	and r19, r2           ; Logical AND
5816:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5818:	E3-F8       	bld r14, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
581A:	AB-20       	and r10, r11          ; Logical AND
581C:	AB-A9       	std Y+51, r26         ; Store Indirect From Register to Data Space
581E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5820:	C1-FE       	sbrs r12, 1           ; Skip if Bit in Register is Set
5822:	8D-F8       	.data 0xf88d          ; Binary data
5824:	B0-42       	sbci r27, 0x20        ; Subtract Immediate with Carry SBI
5826:	8D-F8       	.data 0xf88d          ; Binary data
5828:	B1-72       	andi r27, 0x21        ; Logical AND with Immediate
582A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
582C:	FF-09       	sbc r31, r15          ; Subtract with Carry
582E:	8D-F8       	.data 0xf88d          ; Binary data
5830:	B2-92       	st -Z, r11            ; Store Indirect From Register to Data Space
5832:	AC-A8       	std Y+52, r10         ; Store Indirect From Register to Data Space
5834:	32-21       	and r19, r2           ; Logical AND
5836:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5838:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
583A:	AC-20       	and r10, r12          ; Logical AND
583C:	AC-A9       	std Y+52, r26         ; Store Indirect From Register to Data Space
583E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5840:	B1-FE       	sbrs r11, 1           ; Skip if Bit in Register is Set
5842:	8D-F8       	.data 0xf88d          ; Binary data
5844:	B4-42       	sbci r27, 0x24        ; Subtract Immediate with Carry SBI
5846:	8D-F8       	.data 0xf88d          ; Binary data
5848:	B5-72       	andi r27, 0x25        ; Logical AND with Immediate
584A:	8D-F8       	.data 0xf88d          ; Binary data
584C:	B6-92       	lac Z, r11            ; Load and Clear
584E:	AD-A8       	std Y+53, r10         ; Store Indirect From Register to Data Space
5850:	32-21       	and r19, r2           ; Logical AND
5852:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5854:	C5-F8       	bld r12, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
5856:	AD-20       	and r10, r13          ; Logical AND
5858:	AD-A9       	std Y+53, r26         ; Store Indirect From Register to Data Space
585A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
585C:	A3-FE       	sbrs r10, 3           ; Skip if Bit in Register is Set
585E:	8D-F8       	.data 0xf88d          ; Binary data
5860:	B8-42       	sbci r27, 0x28        ; Subtract Immediate with Carry SBI
5862:	86-27       	clr r902              ; Clear Register
5864:	8D-F8       	.data 0xf88d          ; Binary data
5866:	B9-72       	andi r27, 0x29        ; Logical AND with Immediate
5868:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
586A:	FC-08       	sbc r15, r12          ; Subtract with Carry
586C:	8D-F8       	.data 0xf88d          ; Binary data
586E:	BA-82       	std Y+2, r11          ; Store Indirect From Register to Data Space
5870:	AE-A8       	std Y+54, r10         ; Store Indirect From Register to Data Space
5872:	32-21       	and r19, r2           ; Logical AND
5874:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5876:	B4-F8       	bld r11, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
5878:	AE-20       	and r10, r14          ; Logical AND
587A:	AE-A9       	std Y+54, r26         ; Store Indirect From Register to Data Space
587C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
587E:	92-FE       	sbrs r9, 2            ; Skip if Bit in Register is Set
5880:	8D-F8       	.data 0xf88d          ; Binary data
5882:	BC-42       	sbci r27, 0x2c        ; Subtract Immediate with Carry SBI
5884:	8D-F8       	.data 0xf88d          ; Binary data
5886:	BD-72       	andi r27, 0x2d        ; Logical AND with Immediate
5888:	8D-F8       	.data 0xf88d          ; Binary data
588A:	BE-82       	std Y+6, r11          ; Store Indirect From Register to Data Space
588C:	AF-A8       	std Y+55, r10         ; Store Indirect From Register to Data Space
588E:	32-21       	and r19, r2           ; Logical AND
5890:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5892:	A6-F8       	bld r10, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
5894:	AF-20       	and r10, r15          ; Logical AND
5896:	AF-A9       	std Y+55, r26         ; Store Indirect From Register to Data Space
5898:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
589A:	84-FE       	sbrs r8, 4            ; Skip if Bit in Register is Set
589C:	8D-F8       	.data 0xf88d          ; Binary data
589E:	C0-42       	sbci r28, 0x20        ; Subtract Immediate with Carry SBI
58A0:	8D-F8       	.data 0xf88d          ; Binary data
58A2:	C1-72       	andi r28, 0x21        ; Logical AND with Immediate
58A4:	8D-F8       	.data 0xf88d          ; Binary data
58A6:	C2-92       	st -Z, r12            ; Store Indirect From Register to Data Space
58A8:	B0-A8       	std Y+48, r11         ; Store Indirect From Register to Data Space
58AA:	32-21       	and r19, r2           ; Logical AND
58AC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
58AE:	98-F8       	.data 0xf898          ; Binary data
58B0:	B0-20       	and r11, r0           ; Logical AND
58B2:	B0-A9       	std Y+48, r27         ; Store Indirect From Register to Data Space
58B4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
58B6:	76-FE       	sbrs r7, 6            ; Skip if Bit in Register is Set
58B8:	8D-F8       	.data 0xf88d          ; Binary data
58BA:	C4-42       	sbci r28, 0x24        ; Subtract Immediate with Carry SBI
58BC:	8D-F8       	.data 0xf88d          ; Binary data
58BE:	C5-72       	andi r28, 0x25        ; Logical AND with Immediate
58C0:	8D-F8       	.data 0xf88d          ; Binary data
58C2:	C6-92       	lac Z, r12            ; Load and Clear
58C4:	B1-A8       	std Y+49, r11         ; Store Indirect From Register to Data Space
58C6:	32-21       	and r19, r2           ; Logical AND
58C8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
58CA:	8A-F8       	.data 0xf88a          ; Binary data
58CC:	B1-20       	and r11, r1           ; Logical AND
58CE:	B1-A9       	std Y+49, r27         ; Store Indirect From Register to Data Space
58D0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
58D2:	68-FE       	.data 0xfe68          ; Binary data
58D4:	8D-F8       	.data 0xf88d          ; Binary data
58D6:	C8-42       	sbci r28, 0x28        ; Subtract Immediate with Carry SBI
58D8:	8D-F8       	.data 0xf88d          ; Binary data
58DA:	C9-72       	andi r28, 0x29        ; Logical AND with Immediate
58DC:	8D-F8       	.data 0xf88d          ; Binary data
58DE:	CA-92       	st -Y, r12            ; Store Indirect From Register to Data Space
58E0:	B2-A8       	std Y+50, r11         ; Store Indirect From Register to Data Space
58E2:	32-21       	and r19, r2           ; Logical AND
58E4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
58E6:	7C-F8       	.data 0xf87c          ; Binary data
58E8:	B2-20       	and r11, r2           ; Logical AND
58EA:	B2-A9       	std Y+50, r27         ; Store Indirect From Register to Data Space
58EC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
58EE:	5A-FE       	.data 0xfe5a          ; Binary data
58F0:	8D-F8       	.data 0xf88d          ; Binary data
58F2:	CC-42       	sbci r28, 0x2c        ; Subtract Immediate with Carry SBI
58F4:	85-27       	clr r901              ; Clear Register
58F6:	8D-F8       	.data 0xf88d          ; Binary data
58F8:	CD-72       	andi r28, 0x2d        ; Logical AND with Immediate
58FA:	8D-F8       	.data 0xf88d          ; Binary data
58FC:	CE-62       	ori r28, 0x2e         ; Logical OR with Immediate
58FE:	B3-A8       	std Y+51, r11         ; Store Indirect From Register to Data Space
5900:	32-21       	and r19, r2           ; Logical AND
5902:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5904:	6D-F8       	.data 0xf86d          ; Binary data
5906:	B3-20       	and r11, r3           ; Logical AND
5908:	B3-A9       	std Y+51, r27         ; Store Indirect From Register to Data Space
590A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
590C:	4B-FE       	.data 0xfe4b          ; Binary data
590E:	8D-F8       	.data 0xf88d          ; Binary data
5910:	D0-42       	sbci r29, 0x20        ; Subtract Immediate with Carry SBI
5912:	8D-F8       	.data 0xf88d          ; Binary data
5914:	D1-72       	andi r29, 0x21        ; Logical AND with Immediate
5916:	8D-F8       	.data 0xf88d          ; Binary data
5918:	D2-62       	ori r29, 0x22         ; Logical OR with Immediate
591A:	B4-A8       	std Y+52, r11         ; Store Indirect From Register to Data Space
591C:	32-21       	and r19, r2           ; Logical AND
591E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5920:	5F-F8       	.data 0xf85f          ; Binary data
5922:	B4-20       	and r11, r4           ; Logical AND
5924:	B4-A9       	std Y+52, r27         ; Store Indirect From Register to Data Space
5926:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5928:	3D-FE       	.data 0xfe3d          ; Binary data
592A:	8D-F8       	.data 0xf88d          ; Binary data
592C:	D4-42       	sbci r29, 0x24        ; Subtract Immediate with Carry SBI
592E:	8D-F8       	.data 0xf88d          ; Binary data
5930:	D5-72       	andi r29, 0x25        ; Logical AND with Immediate
5932:	8D-F8       	.data 0xf88d          ; Binary data
5934:	D6-62       	ori r29, 0x26         ; Logical OR with Immediate
5936:	B5-A8       	std Y+53, r11         ; Store Indirect From Register to Data Space
5938:	32-21       	and r19, r2           ; Logical AND
593A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
593C:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
593E:	B5-20       	and r11, r5           ; Logical AND
5940:	B5-A9       	std Y+53, r27         ; Store Indirect From Register to Data Space
5942:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5944:	2F-FE       	.data 0xfe2f          ; Binary data
5946:	8D-F8       	.data 0xf88d          ; Binary data
5948:	D8-42       	sbci r29, 0x28        ; Subtract Immediate with Carry SBI
594A:	8D-F8       	.data 0xf88d          ; Binary data
594C:	D9-72       	andi r29, 0x29        ; Logical AND with Immediate
594E:	8D-F8       	.data 0xf88d          ; Binary data
5950:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
5952:	B6-A8       	std Y+54, r11         ; Store Indirect From Register to Data Space
5954:	32-21       	and r19, r2           ; Logical AND
5956:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5958:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
595A:	B6-20       	and r11, r6           ; Logical AND
595C:	B6-A9       	std Y+54, r27         ; Store Indirect From Register to Data Space
595E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5960:	21-FE       	sbrs r2, 1            ; Skip if Bit in Register is Set
5962:	8D-F8       	.data 0xf88d          ; Binary data
5964:	DC-42       	sbci r29, 0x2c        ; Subtract Immediate with Carry SBI
5966:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5968:	84-0A       	sbc r8, r20           ; Subtract with Carry
596A:	8D-F8       	.data 0xf88d          ; Binary data
596C:	DD-A2       	std Y+37, r13         ; Store Indirect From Register to Data Space
596E:	8D-F8       	.data 0xf88d          ; Binary data
5970:	DE-52       	subi r29, 0x2e        ; Subtract Immediate
5972:	B7-A8       	std Y+55, r11         ; Store Indirect From Register to Data Space
5974:	32-21       	and r19, r2           ; Logical AND
5976:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5978:	33-F8       	bld r3, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
597A:	B7-20       	and r11, r7           ; Logical AND
597C:	B7-A9       	std Y+55, r27         ; Store Indirect From Register to Data Space
597E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5980:	11-FE       	sbrs r1, 1            ; Skip if Bit in Register is Set
5982:	8D-F8       	.data 0xf88d          ; Binary data
5984:	E0-42       	sbci r30, 0x20        ; Subtract Immediate with Carry SBI
5986:	8D-F8       	.data 0xf88d          ; Binary data
5988:	E1-72       	andi r30, 0x21        ; Logical AND with Immediate
598A:	8D-F8       	.data 0xf88d          ; Binary data
598C:	E2-62       	ori r30, 0x22         ; Logical OR with Immediate
598E:	B8-A8       	std Y+48, r11         ; Store Indirect From Register to Data Space
5990:	32-21       	and r19, r2           ; Logical AND
5992:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5994:	25-F8       	bld r2, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
5996:	B8-20       	and r11, r8           ; Logical AND
5998:	B8-A9       	std Y+48, r27         ; Store Indirect From Register to Data Space
599A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
599C:	03-FE       	sbrs r0, 3            ; Skip if Bit in Register is Set
599E:	8D-F8       	.data 0xf88d          ; Binary data
59A0:	E4-42       	sbci r30, 0x24        ; Subtract Immediate with Carry SBI
59A2:	8D-F8       	.data 0xf88d          ; Binary data
59A4:	E5-72       	andi r30, 0x25        ; Logical AND with Immediate
59A6:	8D-F8       	.data 0xf88d          ; Binary data
59A8:	E6-62       	ori r30, 0x26         ; Logical OR with Immediate
59AA:	B9-A8       	std Y+49, r11         ; Store Indirect From Register to Data Space
59AC:	32-21       	and r19, r2           ; Logical AND
59AE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
59B0:	17-F8       	bld r1, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
59B2:	B9-20       	and r11, r9           ; Logical AND
59B4:	B9-A9       	std Y+49, r27         ; Store Indirect From Register to Data Space
59B6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
59B8:	F5-FD       	sbrc r31, 5           ; Skip if Bit in Register is Cleared
59BA:	8D-F8       	.data 0xf88d          ; Binary data
59BC:	E8-42       	sbci r30, 0x28        ; Subtract Immediate with Carry SBI
59BE:	8D-F8       	.data 0xf88d          ; Binary data
59C0:	E9-72       	andi r30, 0x29        ; Logical AND with Immediate
59C2:	8D-F8       	.data 0xf88d          ; Binary data
59C4:	EA-62       	ori r30, 0x2a         ; Logical OR with Immediate
59C6:	BA-A8       	std Y+50, r11         ; Store Indirect From Register to Data Space
59C8:	32-21       	and r19, r2           ; Logical AND
59CA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
59CC:	09-F8       	.data 0xf809          ; Binary data
59CE:	BA-20       	and r11, r10          ; Logical AND
59D0:	BA-A9       	std Y+50, r27         ; Store Indirect From Register to Data Space
59D2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
59D4:	E7-FD       	sbrc r30, 7           ; Skip if Bit in Register is Cleared
59D6:	8D-F8       	.data 0xf88d          ; Binary data
59D8:	EC-42       	sbci r30, 0x2c        ; Subtract Immediate with Carry SBI
59DA:	8D-F8       	.data 0xf88d          ; Binary data
59DC:	ED-72       	andi r30, 0x2d        ; Logical AND with Immediate
59DE:	8D-F8       	.data 0xf88d          ; Binary data
59E0:	EE-62       	ori r30, 0x2e         ; Logical OR with Immediate
59E2:	BB-A8       	std Y+51, r11         ; Store Indirect From Register to Data Space
59E4:	32-21       	and r19, r2           ; Logical AND
59E6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
59E8:	FB-FF       	.data 0xfffb          ; Binary data
59EA:	BB-20       	and r11, r11          ; Logical AND
59EC:	BB-A9       	std Y+51, r27         ; Store Indirect From Register to Data Space
59EE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
59F0:	D9-FD       	.data 0xfdd9          ; Binary data
59F2:	8D-F8       	.data 0xf88d          ; Binary data
59F4:	F0-42       	sbci r31, 0x20        ; Subtract Immediate with Carry SBI
59F6:	8D-F8       	.data 0xf88d          ; Binary data
59F8:	F1-A2       	std Y+33, r15         ; Store Indirect From Register to Data Space
59FA:	8D-F8       	.data 0xf88d          ; Binary data
59FC:	F2-52       	subi r31, 0x22        ; Subtract Immediate
59FE:	BC-A8       	std Y+52, r11         ; Store Indirect From Register to Data Space
5A00:	32-21       	and r19, r2           ; Logical AND
5A02:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5A04:	ED-FF       	.data 0xffed          ; Binary data
5A06:	BC-20       	and r11, r12          ; Logical AND
5A08:	BC-A9       	std Y+52, r27         ; Store Indirect From Register to Data Space
5A0A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5A0C:	CB-FD       	.data 0xfdcb          ; Binary data
5A0E:	8D-F8       	.data 0xf88d          ; Binary data
5A10:	F4-42       	sbci r31, 0x24        ; Subtract Immediate with Carry SBI
5A12:	8D-F8       	.data 0xf88d          ; Binary data
5A14:	F5-A2       	std Y+37, r15         ; Store Indirect From Register to Data Space
5A16:	8D-F8       	.data 0xf88d          ; Binary data
5A18:	F6-52       	subi r31, 0x26        ; Subtract Immediate
5A1A:	BD-A8       	std Y+53, r11         ; Store Indirect From Register to Data Space
5A1C:	32-21       	and r19, r2           ; Logical AND
5A1E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5A20:	DF-FF       	.data 0xffdf          ; Binary data
5A22:	BD-20       	and r11, r13          ; Logical AND
5A24:	BD-A9       	std Y+53, r27         ; Store Indirect From Register to Data Space
5A26:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5A28:	BD-FD       	.data 0xfdbd          ; Binary data
5A2A:	8D-F8       	.data 0xf88d          ; Binary data
5A2C:	F8-42       	sbci r31, 0x28        ; Subtract Immediate with Carry SBI
5A2E:	8D-F8       	.data 0xf88d          ; Binary data
5A30:	F9-A2       	std Y+33, r15         ; Store Indirect From Register to Data Space
5A32:	8D-F8       	.data 0xf88d          ; Binary data
5A34:	FA-52       	subi r31, 0x2a        ; Subtract Immediate
5A36:	BE-A8       	std Y+54, r11         ; Store Indirect From Register to Data Space
5A38:	32-21       	and r19, r2           ; Logical AND
5A3A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5A3C:	D1-FF       	sbrs r29, 1           ; Skip if Bit in Register is Set
5A3E:	BE-20       	and r11, r14          ; Logical AND
5A40:	BE-A9       	std Y+54, r27         ; Store Indirect From Register to Data Space
5A42:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5A44:	AF-FD       	.data 0xfdaf          ; Binary data
5A46:	8D-F8       	.data 0xf88d          ; Binary data
5A48:	FC-42       	sbci r31, 0x2c        ; Subtract Immediate with Carry SBI
5A4A:	8D-F8       	.data 0xf88d          ; Binary data
5A4C:	FD-A2       	std Y+37, r15         ; Store Indirect From Register to Data Space
5A4E:	8D-F8       	.data 0xf88d          ; Binary data
5A50:	FE-52       	subi r31, 0x2e        ; Subtract Immediate
5A52:	BF-A8       	std Y+55, r11         ; Store Indirect From Register to Data Space
5A54:	32-21       	and r19, r2           ; Logical AND
5A56:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5A58:	C3-FF       	sbrs r28, 3           ; Skip if Bit in Register is Set
5A5A:	BF-20       	and r11, r15          ; Logical AND
5A5C:	BF-A9       	std Y+55, r27         ; Store Indirect From Register to Data Space
5A5E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5A60:	A1-FD       	sbrc r26, 1           ; Skip if Bit in Register is Cleared
5A62:	8D-F8       	.data 0xf88d          ; Binary data
5A64:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
5A66:	81-27       	clr r897              ; Clear Register
5A68:	8D-F8       	.data 0xf88d          ; Binary data
5A6A:	01-73       	andi r16, 0x31        ; Logical AND with Immediate
5A6C:	8D-F8       	.data 0xf88d          ; Binary data
5A6E:	02-53       	subi r16, 0x32        ; Subtract Immediate
5A70:	C0-A8       	std Y+48, r12         ; Store Indirect From Register to Data Space
5A72:	32-21       	and r19, r2           ; Logical AND
5A74:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5A76:	B4-FF       	sbrs r27, 4           ; Skip if Bit in Register is Set
5A78:	C0-20       	and r12, r0           ; Logical AND
5A7A:	C0-A9       	std Y+48, r28         ; Store Indirect From Register to Data Space
5A7C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5A7E:	92-FD       	sbrc r25, 2           ; Skip if Bit in Register is Cleared
5A80:	8D-F8       	.data 0xf88d          ; Binary data
5A82:	04-43       	sbci r16, 0x34        ; Subtract Immediate with Carry SBI
5A84:	8D-F8       	.data 0xf88d          ; Binary data
5A86:	05-73       	andi r16, 0x35        ; Logical AND with Immediate
5A88:	8D-F8       	.data 0xf88d          ; Binary data
5A8A:	06-53       	subi r16, 0x36        ; Subtract Immediate
5A8C:	C1-A8       	std Y+49, r12         ; Store Indirect From Register to Data Space
5A8E:	32-21       	and r19, r2           ; Logical AND
5A90:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5A92:	A6-FF       	sbrs r26, 6           ; Skip if Bit in Register is Set
5A94:	C1-20       	and r12, r1           ; Logical AND
5A96:	C1-A9       	std Y+49, r28         ; Store Indirect From Register to Data Space
5A98:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5A9A:	84-FD       	sbrc r24, 4           ; Skip if Bit in Register is Cleared
5A9C:	8D-F8       	.data 0xf88d          ; Binary data
5A9E:	08-43       	sbci r16, 0x38        ; Subtract Immediate with Carry SBI
5AA0:	8D-F8       	.data 0xf88d          ; Binary data
5AA2:	09-73       	andi r16, 0x39        ; Logical AND with Immediate
5AA4:	8D-F8       	.data 0xf88d          ; Binary data
5AA6:	0A-53       	subi r16, 0x3a        ; Subtract Immediate
5AA8:	C2-A8       	std Y+50, r12         ; Store Indirect From Register to Data Space
5AAA:	32-21       	and r19, r2           ; Logical AND
5AAC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5AAE:	98-FF       	.data 0xff98          ; Binary data
5AB0:	C2-20       	and r12, r2           ; Logical AND
5AB2:	C2-A9       	std Y+50, r28         ; Store Indirect From Register to Data Space
5AB4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5AB6:	76-FD       	sbrc r23, 6           ; Skip if Bit in Register is Cleared
5AB8:	8D-F8       	.data 0xf88d          ; Binary data
5ABA:	0C-43       	sbci r16, 0x3c        ; Subtract Immediate with Carry SBI
5ABC:	8D-F8       	.data 0xf88d          ; Binary data
5ABE:	0D-73       	andi r16, 0x3d        ; Logical AND with Immediate
5AC0:	8D-F8       	.data 0xf88d          ; Binary data
5AC2:	0E-53       	subi r16, 0x3e        ; Subtract Immediate
5AC4:	C3-A8       	std Y+51, r12         ; Store Indirect From Register to Data Space
5AC6:	32-21       	and r19, r2           ; Logical AND
5AC8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5ACA:	8A-FF       	.data 0xff8a          ; Binary data
5ACC:	C3-20       	and r12, r3           ; Logical AND
5ACE:	C3-A9       	std Y+51, r28         ; Store Indirect From Register to Data Space
5AD0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5AD2:	68-FD       	.data 0xfd68          ; Binary data
5AD4:	8D-F8       	.data 0xf88d          ; Binary data
5AD6:	10-43       	sbci r17, 0x30        ; Subtract Immediate with Carry SBI
5AD8:	8D-F8       	.data 0xf88d          ; Binary data
5ADA:	11-73       	andi r17, 0x31        ; Logical AND with Immediate
5ADC:	8D-F8       	.data 0xf88d          ; Binary data
5ADE:	12-53       	subi r17, 0x32        ; Subtract Immediate
5AE0:	C4-A8       	std Y+52, r12         ; Store Indirect From Register to Data Space
5AE2:	32-21       	and r19, r2           ; Logical AND
5AE4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5AE6:	7C-FF       	.data 0xff7c          ; Binary data
5AE8:	C4-20       	and r12, r4           ; Logical AND
5AEA:	C4-A9       	std Y+52, r28         ; Store Indirect From Register to Data Space
5AEC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5AEE:	5A-FD       	.data 0xfd5a          ; Binary data
5AF0:	8D-F8       	.data 0xf88d          ; Binary data
5AF2:	14-43       	sbci r17, 0x34        ; Subtract Immediate with Carry SBI
5AF4:	8D-F8       	.data 0xf88d          ; Binary data
5AF6:	15-73       	andi r17, 0x35        ; Logical AND with Immediate
5AF8:	8D-F8       	.data 0xf88d          ; Binary data
5AFA:	16-53       	subi r17, 0x36        ; Subtract Immediate
5AFC:	C5-A8       	std Y+53, r12         ; Store Indirect From Register to Data Space
5AFE:	32-21       	and r19, r2           ; Logical AND
5B00:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5B02:	6E-FF       	.data 0xff6e          ; Binary data
5B04:	C5-20       	and r12, r5           ; Logical AND
5B06:	C5-A9       	std Y+53, r28         ; Store Indirect From Register to Data Space
5B08:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5B0A:	4C-FD       	.data 0xfd4c          ; Binary data
5B0C:	8D-F8       	.data 0xf88d          ; Binary data
5B0E:	18-43       	sbci r17, 0x38        ; Subtract Immediate with Carry SBI
5B10:	8D-F8       	.data 0xf88d          ; Binary data
5B12:	19-73       	andi r17, 0x39        ; Logical AND with Immediate
5B14:	8D-F8       	.data 0xf88d          ; Binary data
5B16:	1A-53       	subi r17, 0x3a        ; Subtract Immediate
5B18:	C6-A8       	std Y+54, r12         ; Store Indirect From Register to Data Space
5B1A:	32-21       	and r19, r2           ; Logical AND
5B1C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5B1E:	60-FF       	sbrs r22, 0           ; Skip if Bit in Register is Set
5B20:	C6-20       	and r12, r6           ; Logical AND
5B22:	C6-A9       	std Y+54, r28         ; Store Indirect From Register to Data Space
5B24:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5B26:	3E-FD       	.data 0xfd3e          ; Binary data
5B28:	8D-F8       	.data 0xf88d          ; Binary data
5B2A:	1C-43       	sbci r17, 0x3c        ; Subtract Immediate with Carry SBI
5B2C:	8D-F8       	.data 0xf88d          ; Binary data
5B2E:	1D-73       	andi r17, 0x3d        ; Logical AND with Immediate
5B30:	8D-F8       	.data 0xf88d          ; Binary data
5B32:	1E-53       	subi r17, 0x3e        ; Subtract Immediate
5B34:	C7-A8       	std Y+55, r12         ; Store Indirect From Register to Data Space
5B36:	32-21       	and r19, r2           ; Logical AND
5B38:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5B3A:	52-FF       	sbrs r21, 2           ; Skip if Bit in Register is Set
5B3C:	C7-20       	and r12, r7           ; Logical AND
5B3E:	C7-A9       	std Y+55, r28         ; Store Indirect From Register to Data Space
5B40:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5B42:	30-FD       	sbrc r19, 0           ; Skip if Bit in Register is Cleared
5B44:	8D-F8       	.data 0xf88d          ; Binary data
5B46:	20-43       	sbci r18, 0x30        ; Subtract Immediate with Carry SBI
5B48:	8D-F8       	.data 0xf88d          ; Binary data
5B4A:	21-73       	andi r18, 0x31        ; Logical AND with Immediate
5B4C:	8D-F8       	.data 0xf88d          ; Binary data
5B4E:	22-53       	subi r18, 0x32        ; Subtract Immediate
5B50:	C8-A8       	std Y+48, r12         ; Store Indirect From Register to Data Space
5B52:	32-21       	and r19, r2           ; Logical AND
5B54:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5B56:	44-FF       	sbrs r20, 4           ; Skip if Bit in Register is Set
5B58:	C8-20       	and r12, r8           ; Logical AND
5B5A:	C8-A9       	std Y+48, r28         ; Store Indirect From Register to Data Space
5B5C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5B5E:	22-FD       	sbrc r18, 2           ; Skip if Bit in Register is Cleared
5B60:	8D-F8       	.data 0xf88d          ; Binary data
5B62:	24-43       	sbci r18, 0x34        ; Subtract Immediate with Carry SBI
5B64:	8D-F8       	.data 0xf88d          ; Binary data
5B66:	25-73       	andi r18, 0x35        ; Logical AND with Immediate
5B68:	8D-F8       	.data 0xf88d          ; Binary data
5B6A:	26-53       	subi r18, 0x36        ; Subtract Immediate
5B6C:	C9-A8       	std Y+49, r12         ; Store Indirect From Register to Data Space
5B6E:	32-21       	and r19, r2           ; Logical AND
5B70:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5B72:	36-FF       	sbrs r19, 6           ; Skip if Bit in Register is Set
5B74:	C9-20       	and r12, r9           ; Logical AND
5B76:	C9-A9       	std Y+49, r28         ; Store Indirect From Register to Data Space
5B78:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5B7A:	14-FD       	sbrc r17, 4           ; Skip if Bit in Register is Cleared
5B7C:	8D-F8       	.data 0xf88d          ; Binary data
5B7E:	28-43       	sbci r18, 0x38        ; Subtract Immediate with Carry SBI
5B80:	8D-F8       	.data 0xf88d          ; Binary data
5B82:	29-73       	andi r18, 0x39        ; Logical AND with Immediate
5B84:	8D-F8       	.data 0xf88d          ; Binary data
5B86:	2A-53       	subi r18, 0x3a        ; Subtract Immediate
5B88:	CA-A8       	std Y+50, r12         ; Store Indirect From Register to Data Space
5B8A:	32-21       	and r19, r2           ; Logical AND
5B8C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5B8E:	28-FF       	.data 0xff28          ; Binary data
5B90:	CA-20       	and r12, r10          ; Logical AND
5B92:	CA-A9       	std Y+50, r28         ; Store Indirect From Register to Data Space
5B94:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5B96:	06-FD       	sbrc r16, 6           ; Skip if Bit in Register is Cleared
5B98:	8D-F8       	.data 0xf88d          ; Binary data
5B9A:	2C-43       	sbci r18, 0x3c        ; Subtract Immediate with Carry SBI
5B9C:	8D-F8       	.data 0xf88d          ; Binary data
5B9E:	2D-73       	andi r18, 0x3d        ; Logical AND with Immediate
5BA0:	8D-F8       	.data 0xf88d          ; Binary data
5BA2:	2E-53       	subi r18, 0x3e        ; Subtract Immediate
5BA4:	CB-A8       	std Y+51, r12         ; Store Indirect From Register to Data Space
5BA6:	32-21       	and r19, r2           ; Logical AND
5BA8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5BAA:	1A-FF       	.data 0xff1a          ; Binary data
5BAC:	CB-20       	and r12, r11          ; Logical AND
5BAE:	CB-A9       	std Y+51, r28         ; Store Indirect From Register to Data Space
5BB0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5BB2:	F8-FC       	.data 0xfcf8          ; Binary data
5BB4:	8D-F8       	.data 0xf88d          ; Binary data
5BB6:	30-43       	sbci r19, 0x30        ; Subtract Immediate with Carry SBI
5BB8:	80-25       	clr r384              ; Clear Register
5BBA:	8D-F8       	.data 0xf88d          ; Binary data
5BBC:	31-53       	subi r19, 0x31        ; Subtract Immediate
5BBE:	8D-F8       	.data 0xf88d          ; Binary data
5BC0:	32-83       	std Y+2, r19          ; Store Indirect From Register to Data Space
5BC2:	CC-A8       	std Y+52, r12         ; Store Indirect From Register to Data Space
5BC4:	32-21       	and r19, r2           ; Logical AND
5BC6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5BC8:	0B-FF       	.data 0xff0b          ; Binary data
5BCA:	CC-20       	and r12, r12          ; Logical AND
5BCC:	CC-A9       	std Y+52, r28         ; Store Indirect From Register to Data Space
5BCE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5BD0:	E9-FC       	.data 0xfce9          ; Binary data
5BD2:	8D-F8       	.data 0xf88d          ; Binary data
5BD4:	34-43       	sbci r19, 0x34        ; Subtract Immediate with Carry SBI
5BD6:	8D-F8       	.data 0xf88d          ; Binary data
5BD8:	35-53       	subi r19, 0x35        ; Subtract Immediate
5BDA:	8D-F8       	.data 0xf88d          ; Binary data
5BDC:	36-83       	std Y+6, r19          ; Store Indirect From Register to Data Space
5BDE:	CD-A8       	std Y+53, r12         ; Store Indirect From Register to Data Space
5BE0:	32-21       	and r19, r2           ; Logical AND
5BE2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5BE4:	FD-FE       	.data 0xfefd          ; Binary data
5BE6:	CD-20       	and r12, r13          ; Logical AND
5BE8:	CD-A9       	std Y+53, r28         ; Store Indirect From Register to Data Space
5BEA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5BEC:	DB-FC       	.data 0xfcdb          ; Binary data
5BEE:	8D-F8       	.data 0xf88d          ; Binary data
5BF0:	38-43       	sbci r19, 0x38        ; Subtract Immediate with Carry SBI
5BF2:	8D-F8       	.data 0xf88d          ; Binary data
5BF4:	39-53       	subi r19, 0x39        ; Subtract Immediate
5BF6:	8D-F8       	.data 0xf88d          ; Binary data
5BF8:	3A-83       	std Y+2, r19          ; Store Indirect From Register to Data Space
5BFA:	CE-A8       	std Y+54, r12         ; Store Indirect From Register to Data Space
5BFC:	32-21       	and r19, r2           ; Logical AND
5BFE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5C00:	EF-FE       	.data 0xfeef          ; Binary data
5C02:	CE-20       	and r12, r14          ; Logical AND
5C04:	CE-A9       	std Y+54, r28         ; Store Indirect From Register to Data Space
5C06:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5C08:	CD-FC       	.data 0xfccd          ; Binary data
5C0A:	8D-F8       	.data 0xf88d          ; Binary data
5C0C:	3C-43       	sbci r19, 0x3c        ; Subtract Immediate with Carry SBI
5C0E:	8D-F8       	.data 0xf88d          ; Binary data
5C10:	3D-53       	subi r19, 0x3d        ; Subtract Immediate
5C12:	8D-F8       	.data 0xf88d          ; Binary data
5C14:	3E-83       	std Y+6, r19          ; Store Indirect From Register to Data Space
5C16:	CF-A8       	std Y+55, r12         ; Store Indirect From Register to Data Space
5C18:	32-21       	and r19, r2           ; Logical AND
5C1A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5C1C:	E1-FE       	sbrs r14, 1           ; Skip if Bit in Register is Set
5C1E:	CF-20       	and r12, r15          ; Logical AND
5C20:	CF-A9       	std Y+55, r28         ; Store Indirect From Register to Data Space
5C22:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5C24:	BF-FC       	.data 0xfcbf          ; Binary data
5C26:	8D-F8       	.data 0xf88d          ; Binary data
5C28:	40-43       	sbci r20, 0x30        ; Subtract Immediate with Carry SBI
5C2A:	8D-F8       	.data 0xf88d          ; Binary data
5C2C:	41-53       	subi r20, 0x31        ; Subtract Immediate
5C2E:	8D-F8       	.data 0xf88d          ; Binary data
5C30:	42-93       	st -Z, r20            ; Store Indirect From Register to Data Space
5C32:	D0-A8       	std Y+48, r13         ; Store Indirect From Register to Data Space
5C34:	32-21       	and r19, r2           ; Logical AND
5C36:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5C38:	D3-FE       	sbrs r13, 3           ; Skip if Bit in Register is Set
5C3A:	D0-20       	and r13, r0           ; Logical AND
5C3C:	D0-A9       	std Y+48, r29         ; Store Indirect From Register to Data Space
5C3E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5C40:	B1-FC       	sbrc r11, 1           ; Skip if Bit in Register is Cleared
5C42:	8D-F8       	.data 0xf88d          ; Binary data
5C44:	44-43       	sbci r20, 0x34        ; Subtract Immediate with Carry SBI
5C46:	8D-F8       	.data 0xf88d          ; Binary data
5C48:	45-53       	subi r20, 0x35        ; Subtract Immediate
5C4A:	8D-F8       	.data 0xf88d          ; Binary data
5C4C:	46-93       	lac Z, r20            ; Load and Clear
5C4E:	D1-A8       	std Y+49, r13         ; Store Indirect From Register to Data Space
5C50:	32-21       	and r19, r2           ; Logical AND
5C52:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5C54:	C5-FE       	sbrs r12, 5           ; Skip if Bit in Register is Set
5C56:	D1-20       	and r13, r1           ; Logical AND
5C58:	D1-A9       	std Y+49, r29         ; Store Indirect From Register to Data Space
5C5A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5C5C:	A3-FC       	sbrc r10, 3           ; Skip if Bit in Register is Cleared
5C5E:	8D-F8       	.data 0xf88d          ; Binary data
5C60:	48-43       	sbci r20, 0x38        ; Subtract Immediate with Carry SBI
5C62:	8D-F8       	.data 0xf88d          ; Binary data
5C64:	49-53       	subi r20, 0x39        ; Subtract Immediate
5C66:	8D-F8       	.data 0xf88d          ; Binary data
5C68:	4A-93       	st -Y, r20            ; Store Indirect From Register to Data Space
5C6A:	D2-A8       	std Y+50, r13         ; Store Indirect From Register to Data Space
5C6C:	32-21       	and r19, r2           ; Logical AND
5C6E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5C70:	B7-FE       	sbrs r11, 7           ; Skip if Bit in Register is Set
5C72:	D2-20       	and r13, r2           ; Logical AND
5C74:	D2-A9       	std Y+50, r29         ; Store Indirect From Register to Data Space
5C76:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5C78:	95-FC       	sbrc r9, 5            ; Skip if Bit in Register is Cleared
5C7A:	8D-F8       	.data 0xf88d          ; Binary data
5C7C:	4C-43       	sbci r20, 0x3c        ; Subtract Immediate with Carry SBI
5C7E:	8D-F8       	.data 0xf88d          ; Binary data
5C80:	4D-53       	subi r20, 0x3d        ; Subtract Immediate
5C82:	8D-F8       	.data 0xf88d          ; Binary data
5C84:	4E-93       	st -X, r20            ; Store Indirect From Register to Data Space
5C86:	D3-A8       	std Y+51, r13         ; Store Indirect From Register to Data Space
5C88:	32-21       	and r19, r2           ; Logical AND
5C8A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5C8C:	A9-FE       	.data 0xfea9          ; Binary data
5C8E:	D3-20       	and r13, r3           ; Logical AND
5C90:	D3-A9       	std Y+51, r29         ; Store Indirect From Register to Data Space
5C92:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5C94:	87-FC       	sbrc r8, 7            ; Skip if Bit in Register is Cleared
5C96:	8D-F8       	.data 0xf88d          ; Binary data
5C98:	50-43       	sbci r21, 0x30        ; Subtract Immediate with Carry SBI
5C9A:	7F-25       	clr r383              ; Clear Register
5C9C:	8D-F8       	.data 0xf88d          ; Binary data
5C9E:	51-53       	subi r21, 0x31        ; Subtract Immediate
5CA0:	8D-F8       	.data 0xf88d          ; Binary data
5CA2:	52-63       	ori r21, 0x32         ; Logical OR with Immediate
5CA4:	D4-A8       	std Y+52, r13         ; Store Indirect From Register to Data Space
5CA6:	32-21       	and r19, r2           ; Logical AND
5CA8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5CAA:	9A-FE       	.data 0xfe9a          ; Binary data
5CAC:	D4-20       	and r13, r4           ; Logical AND
5CAE:	D4-A9       	std Y+52, r29         ; Store Indirect From Register to Data Space
5CB0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5CB2:	78-FC       	.data 0xfc78          ; Binary data
5CB4:	8D-F8       	.data 0xf88d          ; Binary data
5CB6:	54-43       	sbci r21, 0x34        ; Subtract Immediate with Carry SBI
5CB8:	8D-F8       	.data 0xf88d          ; Binary data
5CBA:	55-53       	subi r21, 0x35        ; Subtract Immediate
5CBC:	8D-F8       	.data 0xf88d          ; Binary data
5CBE:	56-63       	ori r21, 0x36         ; Logical OR with Immediate
5CC0:	D5-A8       	std Y+53, r13         ; Store Indirect From Register to Data Space
5CC2:	32-21       	and r19, r2           ; Logical AND
5CC4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5CC6:	8C-FE       	.data 0xfe8c          ; Binary data
5CC8:	D5-20       	and r13, r5           ; Logical AND
5CCA:	D5-A9       	std Y+53, r29         ; Store Indirect From Register to Data Space
5CCC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5CCE:	6A-FC       	.data 0xfc6a          ; Binary data
5CD0:	8D-F8       	.data 0xf88d          ; Binary data
5CD2:	58-43       	sbci r21, 0x38        ; Subtract Immediate with Carry SBI
5CD4:	8D-F8       	.data 0xf88d          ; Binary data
5CD6:	59-53       	subi r21, 0x39        ; Subtract Immediate
5CD8:	8D-F8       	.data 0xf88d          ; Binary data
5CDA:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
5CDC:	D6-A8       	std Y+54, r13         ; Store Indirect From Register to Data Space
5CDE:	32-21       	and r19, r2           ; Logical AND
5CE0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5CE2:	7E-FE       	.data 0xfe7e          ; Binary data
5CE4:	D6-20       	and r13, r6           ; Logical AND
5CE6:	D6-A9       	std Y+54, r29         ; Store Indirect From Register to Data Space
5CE8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5CEA:	5C-FC       	.data 0xfc5c          ; Binary data
5CEC:	8D-F8       	.data 0xf88d          ; Binary data
5CEE:	5C-43       	sbci r21, 0x3c        ; Subtract Immediate with Carry SBI
5CF0:	8D-F8       	.data 0xf88d          ; Binary data
5CF2:	5D-53       	subi r21, 0x3d        ; Subtract Immediate
5CF4:	8D-F8       	.data 0xf88d          ; Binary data
5CF6:	5E-63       	ori r21, 0x3e         ; Logical OR with Immediate
5CF8:	D7-A8       	std Y+55, r13         ; Store Indirect From Register to Data Space
5CFA:	32-21       	and r19, r2           ; Logical AND
5CFC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5CFE:	70-FE       	sbrs r7, 0            ; Skip if Bit in Register is Set
5D00:	D7-20       	and r13, r7           ; Logical AND
5D02:	D7-A9       	std Y+55, r29         ; Store Indirect From Register to Data Space
5D04:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5D06:	4E-FC       	.data 0xfc4e          ; Binary data
5D08:	8D-F8       	.data 0xf88d          ; Binary data
5D0A:	60-43       	sbci r22, 0x30        ; Subtract Immediate with Carry SBI
5D0C:	7D-25       	clr r381              ; Clear Register
5D0E:	8D-F8       	.data 0xf88d          ; Binary data
5D10:	61-53       	subi r22, 0x31        ; Subtract Immediate
5D12:	8D-F8       	.data 0xf88d          ; Binary data
5D14:	62-83       	std Y+2, r22          ; Store Indirect From Register to Data Space
5D16:	D8-A8       	std Y+48, r13         ; Store Indirect From Register to Data Space
5D18:	32-21       	and r19, r2           ; Logical AND
5D1A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5D1C:	61-FE       	sbrs r6, 1            ; Skip if Bit in Register is Set
5D1E:	D8-20       	and r13, r8           ; Logical AND
5D20:	D8-A9       	std Y+48, r29         ; Store Indirect From Register to Data Space
5D22:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5D24:	3F-FC       	.data 0xfc3f          ; Binary data
5D26:	8D-F8       	.data 0xf88d          ; Binary data
5D28:	64-43       	sbci r22, 0x34        ; Subtract Immediate with Carry SBI
5D2A:	8D-F8       	.data 0xf88d          ; Binary data
5D2C:	65-53       	subi r22, 0x35        ; Subtract Immediate
5D2E:	8D-F8       	.data 0xf88d          ; Binary data
5D30:	66-83       	std Y+6, r22          ; Store Indirect From Register to Data Space
5D32:	D9-A8       	std Y+49, r13         ; Store Indirect From Register to Data Space
5D34:	32-21       	and r19, r2           ; Logical AND
5D36:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5D38:	53-FE       	sbrs r5, 3            ; Skip if Bit in Register is Set
5D3A:	D9-20       	and r13, r9           ; Logical AND
5D3C:	D9-A9       	std Y+49, r29         ; Store Indirect From Register to Data Space
5D3E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5D40:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
5D42:	8D-F8       	.data 0xf88d          ; Binary data
5D44:	68-43       	sbci r22, 0x38        ; Subtract Immediate with Carry SBI
5D46:	8D-F8       	.data 0xf88d          ; Binary data
5D48:	69-53       	subi r22, 0x39        ; Subtract Immediate
5D4A:	8D-F8       	.data 0xf88d          ; Binary data
5D4C:	6A-83       	std Y+2, r22          ; Store Indirect From Register to Data Space
5D4E:	DA-A8       	std Y+50, r13         ; Store Indirect From Register to Data Space
5D50:	32-21       	and r19, r2           ; Logical AND
5D52:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5D54:	45-FE       	sbrs r4, 5            ; Skip if Bit in Register is Set
5D56:	DA-20       	and r13, r10          ; Logical AND
5D58:	DA-A9       	std Y+50, r29         ; Store Indirect From Register to Data Space
5D5A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5D5C:	23-FC       	sbrc r2, 3            ; Skip if Bit in Register is Cleared
5D5E:	8D-F8       	.data 0xf88d          ; Binary data
5D60:	6C-43       	sbci r22, 0x3c        ; Subtract Immediate with Carry SBI
5D62:	8D-F8       	.data 0xf88d          ; Binary data
5D64:	6D-53       	subi r22, 0x3d        ; Subtract Immediate
5D66:	46-46       	sbci r20, 0x66        ; Subtract Immediate with Carry SBI
5D68:	8D-F8       	.data 0xf88d          ; Binary data
5D6A:	6E-83       	std Y+6, r22          ; Store Indirect From Register to Data Space
5D6C:	DB-A8       	std Y+51, r13         ; Store Indirect From Register to Data Space
5D6E:	32-21       	and r19, r2           ; Logical AND
5D70:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5D72:	36-FE       	sbrs r3, 6            ; Skip if Bit in Register is Set
5D74:	DB-20       	and r13, r11          ; Logical AND
5D76:	DB-A9       	std Y+51, r29         ; Store Indirect From Register to Data Space
5D78:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5D7A:	14-FC       	sbrc r1, 4            ; Skip if Bit in Register is Cleared
5D7C:	8D-F8       	.data 0xf88d          ; Binary data
5D7E:	70-43       	sbci r23, 0x30        ; Subtract Immediate with Carry SBI
5D80:	8D-F8       	.data 0xf88d          ; Binary data
5D82:	71-53       	subi r23, 0x31        ; Subtract Immediate
5D84:	8D-F8       	.data 0xf88d          ; Binary data
5D86:	72-83       	std Y+2, r23          ; Store Indirect From Register to Data Space
5D88:	DC-A8       	std Y+52, r13         ; Store Indirect From Register to Data Space
5D8A:	32-21       	and r19, r2           ; Logical AND
5D8C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5D8E:	28-FE       	.data 0xfe28          ; Binary data
5D90:	DC-20       	and r13, r12          ; Logical AND
5D92:	DC-A9       	std Y+52, r29         ; Store Indirect From Register to Data Space
5D94:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5D96:	06-FC       	sbrc r0, 6            ; Skip if Bit in Register is Cleared
5D98:	8D-F8       	.data 0xf88d          ; Binary data
5D9A:	74-43       	sbci r23, 0x34        ; Subtract Immediate with Carry SBI
5D9C:	8D-F8       	.data 0xf88d          ; Binary data
5D9E:	75-53       	subi r23, 0x35        ; Subtract Immediate
5DA0:	8D-F8       	.data 0xf88d          ; Binary data
5DA2:	76-83       	std Y+6, r23          ; Store Indirect From Register to Data Space
5DA4:	DD-A8       	std Y+53, r13         ; Store Indirect From Register to Data Space
5DA6:	32-21       	and r19, r2           ; Logical AND
5DA8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5DAA:	1A-FE       	.data 0xfe1a          ; Binary data
5DAC:	DD-20       	and r13, r13          ; Logical AND
5DAE:	DD-A9       	std Y+53, r29         ; Store Indirect From Register to Data Space
5DB0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5DB2:	F8-FB       	.data 0xfbf8          ; Binary data
5DB4:	8D-F8       	.data 0xf88d          ; Binary data
5DB6:	78-43       	sbci r23, 0x38        ; Subtract Immediate with Carry SBI
5DB8:	8D-F8       	.data 0xf88d          ; Binary data
5DBA:	79-53       	subi r23, 0x39        ; Subtract Immediate
5DBC:	8D-F8       	.data 0xf88d          ; Binary data
5DBE:	7A-83       	std Y+2, r23          ; Store Indirect From Register to Data Space
5DC0:	DE-A8       	std Y+54, r13         ; Store Indirect From Register to Data Space
5DC2:	32-21       	and r19, r2           ; Logical AND
5DC4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5DC6:	0C-FE       	.data 0xfe0c          ; Binary data
5DC8:	DE-20       	and r13, r14          ; Logical AND
5DCA:	DE-A9       	std Y+54, r29         ; Store Indirect From Register to Data Space
5DCC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5DCE:	EA-FB       	.data 0xfbea          ; Binary data
5DD0:	8D-F8       	.data 0xf88d          ; Binary data
5DD2:	7C-43       	sbci r23, 0x3c        ; Subtract Immediate with Carry SBI
5DD4:	8D-F8       	.data 0xf88d          ; Binary data
5DD6:	7D-53       	subi r23, 0x3d        ; Subtract Immediate
5DD8:	8D-F8       	.data 0xf88d          ; Binary data
5DDA:	7E-83       	std Y+6, r23          ; Store Indirect From Register to Data Space
5DDC:	DF-A8       	std Y+55, r13         ; Store Indirect From Register to Data Space
5DDE:	32-21       	and r19, r2           ; Logical AND
5DE0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5DE2:	FE-FD       	.data 0xfdfe          ; Binary data
5DE4:	DF-20       	and r13, r15          ; Logical AND
5DE6:	DF-A9       	std Y+55, r29         ; Store Indirect From Register to Data Space
5DE8:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5DEA:	DC-FB       	.data 0xfbdc          ; Binary data
5DEC:	8D-F8       	.data 0xf88d          ; Binary data
5DEE:	80-43       	sbci r24, 0x30        ; Subtract Immediate with Carry SBI
5DF0:	7C-27       	clr r892              ; Clear Register
5DF2:	8D-F8       	.data 0xf88d          ; Binary data
5DF4:	81-73       	andi r24, 0x31        ; Logical AND with Immediate
5DF6:	4D-46       	sbci r20, 0x6d        ; Subtract Immediate with Carry SBI
5DF8:	8D-F8       	.data 0xf88d          ; Binary data
5DFA:	82-93       	st -Z, r24            ; Store Indirect From Register to Data Space
5DFC:	E0-A8       	std Y+48, r14         ; Store Indirect From Register to Data Space
5DFE:	32-21       	and r19, r2           ; Logical AND
5E00:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5E02:	EE-FD       	.data 0xfdee          ; Binary data
5E04:	E0-20       	and r14, r0           ; Logical AND
5E06:	E0-A9       	std Y+48, r30         ; Store Indirect From Register to Data Space
5E08:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5E0A:	CC-FB       	.data 0xfbcc          ; Binary data
5E0C:	8D-F8       	.data 0xf88d          ; Binary data
5E0E:	84-43       	sbci r24, 0x34        ; Subtract Immediate with Carry SBI
5E10:	8D-F8       	.data 0xf88d          ; Binary data
5E12:	85-73       	andi r24, 0x35        ; Logical AND with Immediate
5E14:	8D-F8       	.data 0xf88d          ; Binary data
5E16:	86-93       	lac Z, r24            ; Load and Clear
5E18:	E1-A8       	std Y+49, r14         ; Store Indirect From Register to Data Space
5E1A:	32-21       	and r19, r2           ; Logical AND
5E1C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5E1E:	E0-FD       	sbrc r30, 0           ; Skip if Bit in Register is Cleared
5E20:	E1-20       	and r14, r1           ; Logical AND
5E22:	E1-A9       	std Y+49, r30         ; Store Indirect From Register to Data Space
5E24:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5E26:	BE-FB       	.data 0xfbbe          ; Binary data
5E28:	8D-F8       	.data 0xf88d          ; Binary data
5E2A:	88-43       	sbci r24, 0x38        ; Subtract Immediate with Carry SBI
5E2C:	8D-F8       	.data 0xf88d          ; Binary data
5E2E:	89-73       	andi r24, 0x39        ; Logical AND with Immediate
5E30:	8D-F8       	.data 0xf88d          ; Binary data
5E32:	8A-93       	st -Y, r24            ; Store Indirect From Register to Data Space
5E34:	E2-A8       	std Y+50, r14         ; Store Indirect From Register to Data Space
5E36:	32-21       	and r19, r2           ; Logical AND
5E38:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5E3A:	D2-FD       	sbrc r29, 2           ; Skip if Bit in Register is Cleared
5E3C:	E2-20       	and r14, r2           ; Logical AND
5E3E:	E2-A9       	std Y+50, r30         ; Store Indirect From Register to Data Space
5E40:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5E42:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
5E44:	8D-F8       	.data 0xf88d          ; Binary data
5E46:	8C-43       	sbci r24, 0x3c        ; Subtract Immediate with Carry SBI
5E48:	8D-F8       	.data 0xf88d          ; Binary data
5E4A:	8D-73       	andi r24, 0x3d        ; Logical AND with Immediate
5E4C:	8D-F8       	.data 0xf88d          ; Binary data
5E4E:	8E-93       	st -X, r24            ; Store Indirect From Register to Data Space
5E50:	E3-A8       	std Y+51, r14         ; Store Indirect From Register to Data Space
5E52:	32-21       	and r19, r2           ; Logical AND
5E54:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5E56:	C4-FD       	sbrc r28, 4           ; Skip if Bit in Register is Cleared
5E58:	E3-20       	and r14, r3           ; Logical AND
5E5A:	E3-A9       	std Y+51, r30         ; Store Indirect From Register to Data Space
5E5C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5E5E:	A2-FB       	bst r26, 2            ; Bit Store from Bit in Register to T Flag in SREG
5E60:	8D-F8       	.data 0xf88d          ; Binary data
5E62:	90-43       	sbci r25, 0x30        ; Subtract Immediate with Carry SBI
5E64:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5E66:	7A-08       	sbc r7, r10           ; Subtract with Carry
5E68:	8D-F8       	.data 0xf88d          ; Binary data
5E6A:	91-83       	std Y+1, r25          ; Store Indirect From Register to Data Space
5E6C:	FE-27       	clr r1022             ; Clear Register
5E6E:	8D-F8       	.data 0xf88d          ; Binary data
5E70:	92-73       	andi r25, 0x32        ; Logical AND with Immediate
5E72:	E4-A8       	std Y+52, r14         ; Store Indirect From Register to Data Space
5E74:	32-21       	and r19, r2           ; Logical AND
5E76:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5E78:	B3-FD       	sbrc r27, 3           ; Skip if Bit in Register is Cleared
5E7A:	E4-20       	and r14, r4           ; Logical AND
5E7C:	E4-A9       	std Y+52, r30         ; Store Indirect From Register to Data Space
5E7E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5E80:	91-FB       	bst r25, 1            ; Bit Store from Bit in Register to T Flag in SREG
5E82:	8D-F8       	.data 0xf88d          ; Binary data
5E84:	94-43       	sbci r25, 0x34        ; Subtract Immediate with Carry SBI
5E86:	8D-F8       	.data 0xf88d          ; Binary data
5E88:	95-83       	std Y+5, r25          ; Store Indirect From Register to Data Space
5E8A:	8D-F8       	.data 0xf88d          ; Binary data
5E8C:	96-73       	andi r25, 0x36        ; Logical AND with Immediate
5E8E:	E5-A8       	std Y+53, r14         ; Store Indirect From Register to Data Space
5E90:	32-21       	and r19, r2           ; Logical AND
5E92:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5E94:	A5-FD       	sbrc r26, 5           ; Skip if Bit in Register is Cleared
5E96:	E5-20       	and r14, r5           ; Logical AND
5E98:	E5-A9       	std Y+53, r30         ; Store Indirect From Register to Data Space
5E9A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5E9C:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
5E9E:	8D-F8       	.data 0xf88d          ; Binary data
5EA0:	98-43       	sbci r25, 0x38        ; Subtract Immediate with Carry SBI
5EA2:	8D-F8       	.data 0xf88d          ; Binary data
5EA4:	99-83       	std Y+1, r25          ; Store Indirect From Register to Data Space
5EA6:	8D-F8       	.data 0xf88d          ; Binary data
5EA8:	9A-73       	andi r25, 0x3a        ; Logical AND with Immediate
5EAA:	E6-A8       	std Y+54, r14         ; Store Indirect From Register to Data Space
5EAC:	32-21       	and r19, r2           ; Logical AND
5EAE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5EB0:	97-FD       	sbrc r25, 7           ; Skip if Bit in Register is Cleared
5EB2:	E6-20       	and r14, r6           ; Logical AND
5EB4:	E6-A9       	std Y+54, r30         ; Store Indirect From Register to Data Space
5EB6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5EB8:	75-FB       	bst r23, 5            ; Bit Store from Bit in Register to T Flag in SREG
5EBA:	8D-F8       	.data 0xf88d          ; Binary data
5EBC:	9C-43       	sbci r25, 0x3c        ; Subtract Immediate with Carry SBI
5EBE:	8D-F8       	.data 0xf88d          ; Binary data
5EC0:	9D-83       	std Y+5, r25          ; Store Indirect From Register to Data Space
5EC2:	8D-F8       	.data 0xf88d          ; Binary data
5EC4:	9E-73       	andi r25, 0x3e        ; Logical AND with Immediate
5EC6:	E7-A8       	std Y+55, r14         ; Store Indirect From Register to Data Space
5EC8:	32-21       	and r19, r2           ; Logical AND
5ECA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5ECC:	89-FD       	.data 0xfd89          ; Binary data
5ECE:	E7-20       	and r14, r7           ; Logical AND
5ED0:	E7-A9       	std Y+55, r30         ; Store Indirect From Register to Data Space
5ED2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5ED4:	67-FB       	bst r22, 7            ; Bit Store from Bit in Register to T Flag in SREG
5ED6:	8D-F8       	.data 0xf88d          ; Binary data
5ED8:	A0-43       	sbci r26, 0x30        ; Subtract Immediate with Carry SBI
5EDA:	8D-F8       	.data 0xf88d          ; Binary data
5EDC:	A1-83       	std Y+1, r26          ; Store Indirect From Register to Data Space
5EDE:	8D-F8       	.data 0xf88d          ; Binary data
5EE0:	A2-93       	st -Z, r26            ; Store Indirect From Register to Data Space
5EE2:	E8-A8       	std Y+48, r14         ; Store Indirect From Register to Data Space
5EE4:	32-21       	and r19, r2           ; Logical AND
5EE6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5EE8:	7B-FD       	.data 0xfd7b          ; Binary data
5EEA:	E8-20       	and r14, r8           ; Logical AND
5EEC:	E8-A9       	std Y+48, r30         ; Store Indirect From Register to Data Space
5EEE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5EF0:	59-FB       	.data 0xfb59          ; Binary data
5EF2:	8D-F8       	.data 0xf88d          ; Binary data
5EF4:	A4-43       	sbci r26, 0x34        ; Subtract Immediate with Carry SBI
5EF6:	8D-F8       	.data 0xf88d          ; Binary data
5EF8:	A5-83       	std Y+5, r26          ; Store Indirect From Register to Data Space
5EFA:	8D-F8       	.data 0xf88d          ; Binary data
5EFC:	A6-93       	lac Z, r26            ; Load and Clear
5EFE:	E9-A8       	std Y+49, r14         ; Store Indirect From Register to Data Space
5F00:	32-21       	and r19, r2           ; Logical AND
5F02:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5F04:	6D-FD       	.data 0xfd6d          ; Binary data
5F06:	E9-20       	and r14, r9           ; Logical AND
5F08:	E9-A9       	std Y+49, r30         ; Store Indirect From Register to Data Space
5F0A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5F0C:	4B-FB       	.data 0xfb4b          ; Binary data
5F0E:	8D-F8       	.data 0xf88d          ; Binary data
5F10:	A8-43       	sbci r26, 0x38        ; Subtract Immediate with Carry SBI
5F12:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5F14:	79-0A       	sbc r7, r25           ; Subtract with Carry
5F16:	8D-F8       	.data 0xf88d          ; Binary data
5F18:	A9-A3       	std Y+33, r26         ; Store Indirect From Register to Data Space
5F1A:	8D-F8       	.data 0xf88d          ; Binary data
5F1C:	AA-73       	andi r26, 0x3a        ; Logical AND with Immediate
5F1E:	EA-A8       	std Y+50, r14         ; Store Indirect From Register to Data Space
5F20:	32-21       	and r19, r2           ; Logical AND
5F22:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5F24:	5D-FD       	.data 0xfd5d          ; Binary data
5F26:	EA-20       	and r14, r10          ; Logical AND
5F28:	EA-A9       	std Y+50, r30         ; Store Indirect From Register to Data Space
5F2A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5F2C:	3B-FB       	.data 0xfb3b          ; Binary data
5F2E:	8D-F8       	.data 0xf88d          ; Binary data
5F30:	AC-43       	sbci r26, 0x3c        ; Subtract Immediate with Carry SBI
5F32:	8D-F8       	.data 0xf88d          ; Binary data
5F34:	AD-A3       	std Y+37, r26         ; Store Indirect From Register to Data Space
5F36:	8D-F8       	.data 0xf88d          ; Binary data
5F38:	AE-73       	andi r26, 0x3e        ; Logical AND with Immediate
5F3A:	EB-A8       	std Y+51, r14         ; Store Indirect From Register to Data Space
5F3C:	32-21       	and r19, r2           ; Logical AND
5F3E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5F40:	4F-FD       	.data 0xfd4f          ; Binary data
5F42:	EB-20       	and r14, r11          ; Logical AND
5F44:	EB-A9       	std Y+51, r30         ; Store Indirect From Register to Data Space
5F46:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5F48:	2D-FB       	.data 0xfb2d          ; Binary data
5F4A:	8D-F8       	.data 0xf88d          ; Binary data
5F4C:	B0-43       	sbci r27, 0x30        ; Subtract Immediate with Carry SBI
5F4E:	8D-F8       	.data 0xf88d          ; Binary data
5F50:	B1-A3       	std Y+33, r27         ; Store Indirect From Register to Data Space
5F52:	8D-F8       	.data 0xf88d          ; Binary data
5F54:	B2-73       	andi r27, 0x32        ; Logical AND with Immediate
5F56:	EC-A8       	std Y+52, r14         ; Store Indirect From Register to Data Space
5F58:	32-21       	and r19, r2           ; Logical AND
5F5A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5F5C:	41-FD       	sbrc r20, 1           ; Skip if Bit in Register is Cleared
5F5E:	EC-20       	and r14, r12          ; Logical AND
5F60:	EC-A9       	std Y+52, r30         ; Store Indirect From Register to Data Space
5F62:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5F64:	1F-FB       	.data 0xfb1f          ; Binary data
5F66:	8D-F8       	.data 0xf88d          ; Binary data
5F68:	B4-43       	sbci r27, 0x34        ; Subtract Immediate with Carry SBI
5F6A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5F6C:	78-09       	sbc r23, r8           ; Subtract with Carry
5F6E:	8D-F8       	.data 0xf88d          ; Binary data
5F70:	B5-93       	las Z, r27            ; Load and Set
5F72:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
5F74:	FD-08       	sbc r15, r13          ; Subtract with Carry
5F76:	8D-F8       	.data 0xf88d          ; Binary data
5F78:	B6-83       	std Y+6, r27          ; Store Indirect From Register to Data Space
5F7A:	ED-A8       	std Y+53, r14         ; Store Indirect From Register to Data Space
5F7C:	32-21       	and r19, r2           ; Logical AND
5F7E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5F80:	2F-FD       	.data 0xfd2f          ; Binary data
5F82:	ED-20       	and r14, r13          ; Logical AND
5F84:	ED-A9       	std Y+53, r30         ; Store Indirect From Register to Data Space
5F86:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5F88:	0D-FB       	.data 0xfb0d          ; Binary data
5F8A:	8D-F8       	.data 0xf88d          ; Binary data
5F8C:	B8-43       	sbci r27, 0x38        ; Subtract Immediate with Carry SBI
5F8E:	8D-F8       	.data 0xf88d          ; Binary data
5F90:	B9-93       	st Y+, r27            ; Store Indirect From Register to Data Space
5F92:	8D-F8       	.data 0xf88d          ; Binary data
5F94:	BA-83       	std Y+2, r27          ; Store Indirect From Register to Data Space
5F96:	EE-A8       	std Y+54, r14         ; Store Indirect From Register to Data Space
5F98:	32-21       	and r19, r2           ; Logical AND
5F9A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5F9C:	21-FD       	sbrc r18, 1           ; Skip if Bit in Register is Cleared
5F9E:	EE-20       	and r14, r14          ; Logical AND
5FA0:	EE-A9       	std Y+54, r30         ; Store Indirect From Register to Data Space
5FA2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5FA4:	FF-FA       	.data 0xfaff          ; Binary data
5FA6:	8D-F8       	.data 0xf88d          ; Binary data
5FA8:	BC-43       	sbci r27, 0x3c        ; Subtract Immediate with Carry SBI
5FAA:	8D-F8       	.data 0xf88d          ; Binary data
5FAC:	BD-93       	st X+, r27            ; Store Indirect From Register to Data Space
5FAE:	8D-F8       	.data 0xf88d          ; Binary data
5FB0:	BE-83       	std Y+6, r27          ; Store Indirect From Register to Data Space
5FB2:	EF-A8       	std Y+55, r14         ; Store Indirect From Register to Data Space
5FB4:	32-21       	and r19, r2           ; Logical AND
5FB6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5FB8:	13-FD       	sbrc r17, 3           ; Skip if Bit in Register is Cleared
5FBA:	EF-20       	and r14, r15          ; Logical AND
5FBC:	EF-A9       	std Y+55, r30         ; Store Indirect From Register to Data Space
5FBE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5FC0:	F1-FA       	bst r15, 1            ; Bit Store from Bit in Register to T Flag in SREG
5FC2:	8D-F8       	.data 0xf88d          ; Binary data
5FC4:	C0-43       	sbci r28, 0x30        ; Subtract Immediate with Carry SBI
5FC6:	8D-F8       	.data 0xf88d          ; Binary data
5FC8:	C1-A3       	std Y+33, r28         ; Store Indirect From Register to Data Space
5FCA:	8D-F8       	.data 0xf88d          ; Binary data
5FCC:	C2-73       	andi r28, 0x32        ; Logical AND with Immediate
5FCE:	F0-A8       	std Y+48, r15         ; Store Indirect From Register to Data Space
5FD0:	32-21       	and r19, r2           ; Logical AND
5FD2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5FD4:	05-FD       	sbrc r16, 5           ; Skip if Bit in Register is Cleared
5FD6:	F0-20       	and r15, r0           ; Logical AND
5FD8:	F0-A9       	std Y+48, r31         ; Store Indirect From Register to Data Space
5FDA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5FDC:	E3-FA       	bst r14, 3            ; Bit Store from Bit in Register to T Flag in SREG
5FDE:	8D-F8       	.data 0xf88d          ; Binary data
5FE0:	C4-43       	sbci r28, 0x34        ; Subtract Immediate with Carry SBI
5FE2:	8D-F8       	.data 0xf88d          ; Binary data
5FE4:	C5-A3       	std Y+37, r28         ; Store Indirect From Register to Data Space
5FE6:	8D-F8       	.data 0xf88d          ; Binary data
5FE8:	C6-73       	andi r28, 0x36        ; Logical AND with Immediate
5FEA:	F1-A8       	std Y+49, r15         ; Store Indirect From Register to Data Space
5FEC:	32-21       	and r19, r2           ; Logical AND
5FEE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
5FF0:	F7-FC       	sbrc r15, 7           ; Skip if Bit in Register is Cleared
5FF2:	F1-20       	and r15, r1           ; Logical AND
5FF4:	F1-A9       	std Y+49, r31         ; Store Indirect From Register to Data Space
5FF6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
5FF8:	D5-FA       	bst r13, 5            ; Bit Store from Bit in Register to T Flag in SREG
5FFA:	8D-F8       	.data 0xf88d          ; Binary data
5FFC:	C8-43       	sbci r28, 0x38        ; Subtract Immediate with Carry SBI
5FFE:	8D-F8       	.data 0xf88d          ; Binary data
6000:	C9-A3       	std Y+33, r28         ; Store Indirect From Register to Data Space
6002:	8D-F8       	.data 0xf88d          ; Binary data
6004:	CA-73       	andi r28, 0x3a        ; Logical AND with Immediate
6006:	F2-A8       	std Y+50, r15         ; Store Indirect From Register to Data Space
6008:	32-21       	and r19, r2           ; Logical AND
600A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
600C:	E9-FC       	.data 0xfce9          ; Binary data
600E:	F2-20       	and r15, r2           ; Logical AND
6010:	F2-A9       	std Y+50, r31         ; Store Indirect From Register to Data Space
6012:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6014:	C7-FA       	bst r12, 7            ; Bit Store from Bit in Register to T Flag in SREG
6016:	8D-F8       	.data 0xf88d          ; Binary data
6018:	CC-43       	sbci r28, 0x3c        ; Subtract Immediate with Carry SBI
601A:	8D-F8       	.data 0xf88d          ; Binary data
601C:	CD-93       	st X+, r28            ; Store Indirect From Register to Data Space
601E:	8D-F8       	.data 0xf88d          ; Binary data
6020:	CE-83       	std Y+6, r28          ; Store Indirect From Register to Data Space
6022:	F3-A8       	std Y+51, r15         ; Store Indirect From Register to Data Space
6024:	32-21       	and r19, r2           ; Logical AND
6026:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6028:	DB-FC       	.data 0xfcdb          ; Binary data
602A:	F3-20       	and r15, r3           ; Logical AND
602C:	F3-A9       	std Y+51, r31         ; Store Indirect From Register to Data Space
602E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6030:	B9-FA       	.data 0xfab9          ; Binary data
6032:	8D-F8       	.data 0xf88d          ; Binary data
6034:	D0-43       	sbci r29, 0x30        ; Subtract Immediate with Carry SBI
6036:	8D-F8       	.data 0xf88d          ; Binary data
6038:	D1-93       	st Z+, r29            ; Store Indirect From Register to Data Space
603A:	8D-F8       	.data 0xf88d          ; Binary data
603C:	D2-83       	std Y+2, r29          ; Store Indirect From Register to Data Space
603E:	F4-A8       	std Y+52, r15         ; Store Indirect From Register to Data Space
6040:	32-21       	and r19, r2           ; Logical AND
6042:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6044:	CD-FC       	.data 0xfccd          ; Binary data
6046:	F4-20       	and r15, r4           ; Logical AND
6048:	F4-A9       	std Y+52, r31         ; Store Indirect From Register to Data Space
604A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
604C:	AB-FA       	.data 0xfaab          ; Binary data
604E:	8D-F8       	.data 0xf88d          ; Binary data
6050:	D4-43       	sbci r29, 0x34        ; Subtract Immediate with Carry SBI
6052:	8D-F8       	.data 0xf88d          ; Binary data
6054:	D5-93       	las Z, r29            ; Load and Set
6056:	8D-F8       	.data 0xf88d          ; Binary data
6058:	D6-83       	std Y+6, r29          ; Store Indirect From Register to Data Space
605A:	F5-A8       	std Y+53, r15         ; Store Indirect From Register to Data Space
605C:	32-21       	and r19, r2           ; Logical AND
605E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6060:	BF-FC       	.data 0xfcbf          ; Binary data
6062:	F5-20       	and r15, r5           ; Logical AND
6064:	F5-A9       	std Y+53, r31         ; Store Indirect From Register to Data Space
6066:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6068:	9D-FA       	.data 0xfa9d          ; Binary data
606A:	8D-F8       	.data 0xf88d          ; Binary data
606C:	D8-43       	sbci r29, 0x38        ; Subtract Immediate with Carry SBI
606E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6070:	77-09       	sbc r23, r7           ; Subtract with Carry
6072:	8D-F8       	.data 0xf88d          ; Binary data
6074:	D9-93       	st Y+, r29            ; Store Indirect From Register to Data Space
6076:	8D-F8       	.data 0xf88d          ; Binary data
6078:	DA-63       	ori r29, 0x3a         ; Logical OR with Immediate
607A:	F6-A8       	std Y+54, r15         ; Store Indirect From Register to Data Space
607C:	32-21       	and r19, r2           ; Logical AND
607E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6080:	AF-FC       	.data 0xfcaf          ; Binary data
6082:	F6-20       	and r15, r6           ; Logical AND
6084:	F6-A9       	std Y+54, r31         ; Store Indirect From Register to Data Space
6086:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6088:	8D-FA       	.data 0xfa8d          ; Binary data
608A:	8D-F8       	.data 0xf88d          ; Binary data
608C:	DC-43       	sbci r29, 0x3c        ; Subtract Immediate with Carry SBI
608E:	8D-F8       	.data 0xf88d          ; Binary data
6090:	DD-93       	st X+, r29            ; Store Indirect From Register to Data Space
6092:	8D-F8       	.data 0xf88d          ; Binary data
6094:	DE-63       	ori r29, 0x3e         ; Logical OR with Immediate
6096:	F7-A8       	std Y+55, r15         ; Store Indirect From Register to Data Space
6098:	32-21       	and r19, r2           ; Logical AND
609A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
609C:	A1-FC       	sbrc r10, 1           ; Skip if Bit in Register is Cleared
609E:	F7-20       	and r15, r7           ; Logical AND
60A0:	F7-A9       	std Y+55, r31         ; Store Indirect From Register to Data Space
60A2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
60A4:	7F-FA       	.data 0xfa7f          ; Binary data
60A6:	8D-F8       	.data 0xf88d          ; Binary data
60A8:	E0-43       	sbci r30, 0x30        ; Subtract Immediate with Carry SBI
60AA:	8D-F8       	.data 0xf88d          ; Binary data
60AC:	E1-93       	st Z+, r30            ; Store Indirect From Register to Data Space
60AE:	8D-F8       	.data 0xf88d          ; Binary data
60B0:	E2-63       	ori r30, 0x32         ; Logical OR with Immediate
60B2:	F8-A8       	std Y+48, r15         ; Store Indirect From Register to Data Space
60B4:	32-21       	and r19, r2           ; Logical AND
60B6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
60B8:	93-FC       	sbrc r9, 3            ; Skip if Bit in Register is Cleared
60BA:	F8-20       	and r15, r8           ; Logical AND
60BC:	F8-A9       	std Y+48, r31         ; Store Indirect From Register to Data Space
60BE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
60C0:	71-FA       	bst r7, 1             ; Bit Store from Bit in Register to T Flag in SREG
60C2:	8D-F8       	.data 0xf88d          ; Binary data
60C4:	E4-43       	sbci r30, 0x34        ; Subtract Immediate with Carry SBI
60C6:	8D-F8       	.data 0xf88d          ; Binary data
60C8:	E5-93       	las Z, r30            ; Load and Set
60CA:	8D-F8       	.data 0xf88d          ; Binary data
60CC:	E6-63       	ori r30, 0x36         ; Logical OR with Immediate
60CE:	F9-A8       	std Y+49, r15         ; Store Indirect From Register to Data Space
60D0:	32-21       	and r19, r2           ; Logical AND
60D2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
60D4:	85-FC       	sbrc r8, 5            ; Skip if Bit in Register is Cleared
60D6:	F9-20       	and r15, r9           ; Logical AND
60D8:	F9-A9       	std Y+49, r31         ; Store Indirect From Register to Data Space
60DA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
60DC:	63-FA       	bst r6, 3             ; Bit Store from Bit in Register to T Flag in SREG
60DE:	8D-F8       	.data 0xf88d          ; Binary data
60E0:	E8-43       	sbci r30, 0x38        ; Subtract Immediate with Carry SBI
60E2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
60E4:	76-09       	sbc r23, r6           ; Subtract with Carry
60E6:	8D-F8       	.data 0xf88d          ; Binary data
60E8:	E9-93       	st Y+, r30            ; Store Indirect From Register to Data Space
60EA:	8D-F8       	.data 0xf88d          ; Binary data
60EC:	EA-63       	ori r30, 0x3a         ; Logical OR with Immediate
60EE:	FA-A8       	std Y+50, r15         ; Store Indirect From Register to Data Space
60F0:	32-21       	and r19, r2           ; Logical AND
60F2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
60F4:	75-FC       	sbrc r7, 5            ; Skip if Bit in Register is Cleared
60F6:	FA-20       	and r15, r10          ; Logical AND
60F8:	FA-A9       	std Y+50, r31         ; Store Indirect From Register to Data Space
60FA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
60FC:	53-FA       	bst r5, 3             ; Bit Store from Bit in Register to T Flag in SREG
60FE:	8D-F8       	.data 0xf88d          ; Binary data
6100:	EC-43       	sbci r30, 0x3c        ; Subtract Immediate with Carry SBI
6102:	8D-F8       	.data 0xf88d          ; Binary data
6104:	ED-93       	st X+, r30            ; Store Indirect From Register to Data Space
6106:	8D-F8       	.data 0xf88d          ; Binary data
6108:	EE-63       	ori r30, 0x3e         ; Logical OR with Immediate
610A:	FB-A8       	std Y+51, r15         ; Store Indirect From Register to Data Space
610C:	32-21       	and r19, r2           ; Logical AND
610E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6110:	67-FC       	sbrc r6, 7            ; Skip if Bit in Register is Cleared
6112:	FB-20       	and r15, r11          ; Logical AND
6114:	FB-A9       	std Y+51, r31         ; Store Indirect From Register to Data Space
6116:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6118:	45-FA       	bst r4, 5             ; Bit Store from Bit in Register to T Flag in SREG
611A:	8D-F8       	.data 0xf88d          ; Binary data
611C:	F0-43       	sbci r31, 0x30        ; Subtract Immediate with Carry SBI
611E:	8D-F8       	.data 0xf88d          ; Binary data
6120:	F1-93       	st Z+, r31            ; Store Indirect From Register to Data Space
6122:	8D-F8       	.data 0xf88d          ; Binary data
6124:	F2-63       	ori r31, 0x32         ; Logical OR with Immediate
6126:	FC-A8       	std Y+52, r15         ; Store Indirect From Register to Data Space
6128:	32-21       	and r19, r2           ; Logical AND
612A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
612C:	59-FC       	.data 0xfc59          ; Binary data
612E:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
6130:	FC-A9       	std Y+52, r31         ; Store Indirect From Register to Data Space
6132:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6134:	37-FA       	bst r3, 7             ; Bit Store from Bit in Register to T Flag in SREG
6136:	8D-F8       	.data 0xf88d          ; Binary data
6138:	F4-43       	sbci r31, 0x34        ; Subtract Immediate with Carry SBI
613A:	8D-F8       	.data 0xf88d          ; Binary data
613C:	F5-93       	las Z, r31            ; Load and Set
613E:	8D-F8       	.data 0xf88d          ; Binary data
6140:	F6-63       	ori r31, 0x36         ; Logical OR with Immediate
6142:	FD-A8       	std Y+53, r15         ; Store Indirect From Register to Data Space
6144:	32-21       	and r19, r2           ; Logical AND
6146:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6148:	4B-FC       	.data 0xfc4b          ; Binary data
614A:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
614C:	FD-A9       	std Y+53, r31         ; Store Indirect From Register to Data Space
614E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6150:	29-FA       	.data 0xfa29          ; Binary data
6152:	8D-F8       	.data 0xf88d          ; Binary data
6154:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
6156:	8D-F8       	.data 0xf88d          ; Binary data
6158:	F9-93       	st Y+, r31            ; Store Indirect From Register to Data Space
615A:	8D-F8       	.data 0xf88d          ; Binary data
615C:	FA-63       	ori r31, 0x3a         ; Logical OR with Immediate
615E:	FE-A8       	std Y+54, r15         ; Store Indirect From Register to Data Space
6160:	32-21       	and r19, r2           ; Logical AND
6162:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6164:	3D-FC       	.data 0xfc3d          ; Binary data
6166:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
6168:	FE-A9       	std Y+54, r31         ; Store Indirect From Register to Data Space
616A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
616C:	1B-FA       	.data 0xfa1b          ; Binary data
616E:	8D-F8       	.data 0xf88d          ; Binary data
6170:	FC-43       	sbci r31, 0x3c        ; Subtract Immediate with Carry SBI
6172:	8D-F8       	.data 0xf88d          ; Binary data
6174:	FD-93       	st X+, r31            ; Store Indirect From Register to Data Space
6176:	8D-F8       	.data 0xf88d          ; Binary data
6178:	FE-63       	ori r31, 0x3e         ; Logical OR with Immediate
617A:	FF-A8       	std Y+55, r15         ; Store Indirect From Register to Data Space
617C:	32-21       	and r19, r2           ; Logical AND
617E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6180:	2F-FC       	.data 0xfc2f          ; Binary data
6182:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
6184:	FF-A9       	std Y+55, r31         ; Store Indirect From Register to Data Space
6186:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6188:	0D-FA       	.data 0xfa0d          ; Binary data
618A:	8D-F8       	.data 0xf88d          ; Binary data
618C:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
618E:	74-26       	clr r628              ; Clear Register
6190:	8D-F8       	.data 0xf88d          ; Binary data
6192:	01-64       	ori r16, 0x41         ; Logical OR with Immediate
6194:	8D-F8       	.data 0xf88d          ; Binary data
6196:	02-54       	subi r16, 0x42        ; Subtract Immediate
6198:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
619A:	80-60       	ori r24, 0x00         ; Logical OR with Immediate
619C:	32-21       	and r19, r2           ; Logical AND
619E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
61A0:	1F-FC       	.data 0xfc1f          ; Binary data
61A2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
61A4:	80-70       	andi r24, 0x00        ; Logical AND with Immediate
61A6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
61A8:	80-61       	ori r24, 0x10         ; Logical OR with Immediate
61AA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
61AC:	FB-F9       	.data 0xf9fb          ; Binary data
61AE:	8D-F8       	.data 0xf88d          ; Binary data
61B0:	04-44       	sbci r16, 0x44        ; Subtract Immediate with Carry SBI
61B2:	8D-F8       	.data 0xf88d          ; Binary data
61B4:	05-64       	ori r16, 0x45         ; Logical OR with Immediate
61B6:	8D-F8       	.data 0xf88d          ; Binary data
61B8:	06-54       	subi r16, 0x46        ; Subtract Immediate
61BA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
61BC:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
61BE:	32-21       	and r19, r2           ; Logical AND
61C0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
61C2:	0E-FC       	.data 0xfc0e          ; Binary data
61C4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
61C6:	01-10       	cpse r0, r1           ; Compare Skip if Equal
61C8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
61CA:	04-41       	sbci r16, 0x14        ; Subtract Immediate with Carry SBI
61CC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
61CE:	EA-F9       	.data 0xf9ea          ; Binary data
61D0:	8D-F8       	.data 0xf88d          ; Binary data
61D2:	08-44       	sbci r16, 0x48        ; Subtract Immediate with Carry SBI
61D4:	8D-F8       	.data 0xf88d          ; Binary data
61D6:	09-64       	ori r16, 0x49         ; Logical OR with Immediate
61D8:	8D-F8       	.data 0xf88d          ; Binary data
61DA:	0A-54       	subi r16, 0x4a        ; Subtract Immediate
61DC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
61DE:	81-60       	ori r24, 0x01         ; Logical OR with Immediate
61E0:	32-21       	and r19, r2           ; Logical AND
61E2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
61E4:	FD-FB       	.data 0xfbfd          ; Binary data
61E6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
61E8:	81-70       	andi r24, 0x01        ; Logical AND with Immediate
61EA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
61EC:	81-61       	ori r24, 0x11         ; Logical OR with Immediate
61EE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
61F0:	D9-F9       	.data 0xf9d9          ; Binary data
61F2:	8D-F8       	.data 0xf88d          ; Binary data
61F4:	0C-44       	sbci r16, 0x4c        ; Subtract Immediate with Carry SBI
61F6:	8D-F8       	.data 0xf88d          ; Binary data
61F8:	0D-64       	ori r16, 0x4d         ; Logical OR with Immediate
61FA:	8D-F8       	.data 0xf88d          ; Binary data
61FC:	0E-54       	subi r16, 0x4e        ; Subtract Immediate
61FE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6200:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
6202:	32-21       	and r19, r2           ; Logical AND
6204:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6206:	EC-FB       	.data 0xfbec          ; Binary data
6208:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
620A:	03-10       	cpse r0, r3           ; Compare Skip if Equal
620C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
620E:	0C-41       	sbci r16, 0x1c        ; Subtract Immediate with Carry SBI
6210:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6212:	C8-F9       	.data 0xf9c8          ; Binary data
6214:	8D-F8       	.data 0xf88d          ; Binary data
6216:	10-44       	sbci r17, 0x40        ; Subtract Immediate with Carry SBI
6218:	8D-F8       	.data 0xf88d          ; Binary data
621A:	11-64       	ori r17, 0x41         ; Logical OR with Immediate
621C:	8D-F8       	.data 0xf88d          ; Binary data
621E:	12-54       	subi r17, 0x42        ; Subtract Immediate
6220:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6222:	82-60       	ori r24, 0x02         ; Logical OR with Immediate
6224:	32-21       	and r19, r2           ; Logical AND
6226:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6228:	DB-FB       	.data 0xfbdb          ; Binary data
622A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
622C:	82-70       	andi r24, 0x02        ; Logical AND with Immediate
622E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6230:	82-61       	ori r24, 0x12         ; Logical OR with Immediate
6232:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6234:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
6236:	8D-F8       	.data 0xf88d          ; Binary data
6238:	14-44       	sbci r17, 0x44        ; Subtract Immediate with Carry SBI
623A:	8D-F8       	.data 0xf88d          ; Binary data
623C:	15-64       	ori r17, 0x45         ; Logical OR with Immediate
623E:	8D-F8       	.data 0xf88d          ; Binary data
6240:	16-54       	subi r17, 0x46        ; Subtract Immediate
6242:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6244:	14-40       	sbci r17, 0x04        ; Subtract Immediate with Carry SBI
6246:	32-21       	and r19, r2           ; Logical AND
6248:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
624A:	CA-FB       	.data 0xfbca          ; Binary data
624C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
624E:	05-10       	cpse r0, r5           ; Compare Skip if Equal
6250:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6252:	14-41       	sbci r17, 0x14        ; Subtract Immediate with Carry SBI
6254:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6256:	A6-F9       	bld r26, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
6258:	8D-F8       	.data 0xf88d          ; Binary data
625A:	18-44       	sbci r17, 0x48        ; Subtract Immediate with Carry SBI
625C:	8D-F8       	.data 0xf88d          ; Binary data
625E:	19-64       	ori r17, 0x49         ; Logical OR with Immediate
6260:	8D-F8       	.data 0xf88d          ; Binary data
6262:	1A-54       	subi r17, 0x4a        ; Subtract Immediate
6264:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6266:	83-60       	ori r24, 0x03         ; Logical OR with Immediate
6268:	32-21       	and r19, r2           ; Logical AND
626A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
626C:	B9-FB       	.data 0xfbb9          ; Binary data
626E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6270:	83-70       	andi r24, 0x03        ; Logical AND with Immediate
6272:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6274:	83-61       	ori r24, 0x13         ; Logical OR with Immediate
6276:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6278:	95-F9       	bld r25, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
627A:	8D-F8       	.data 0xf88d          ; Binary data
627C:	1C-44       	sbci r17, 0x4c        ; Subtract Immediate with Carry SBI
627E:	8D-F8       	.data 0xf88d          ; Binary data
6280:	1D-64       	ori r17, 0x4d         ; Logical OR with Immediate
6282:	8D-F8       	.data 0xf88d          ; Binary data
6284:	1E-54       	subi r17, 0x4e        ; Subtract Immediate
6286:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6288:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
628A:	32-21       	and r19, r2           ; Logical AND
628C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
628E:	A8-FB       	.data 0xfba8          ; Binary data
6290:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6292:	07-10       	cpse r0, r7           ; Compare Skip if Equal
6294:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6296:	1C-41       	sbci r17, 0x1c        ; Subtract Immediate with Carry SBI
6298:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
629A:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
629C:	8D-F8       	.data 0xf88d          ; Binary data
629E:	20-44       	sbci r18, 0x40        ; Subtract Immediate with Carry SBI
62A0:	8D-F8       	.data 0xf88d          ; Binary data
62A2:	21-64       	ori r18, 0x41         ; Logical OR with Immediate
62A4:	8D-F8       	.data 0xf88d          ; Binary data
62A6:	22-54       	subi r18, 0x42        ; Subtract Immediate
62A8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
62AA:	84-60       	ori r24, 0x04         ; Logical OR with Immediate
62AC:	32-21       	and r19, r2           ; Logical AND
62AE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
62B0:	97-FB       	bst r25, 7            ; Bit Store from Bit in Register to T Flag in SREG
62B2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
62B4:	84-70       	andi r24, 0x04        ; Logical AND with Immediate
62B6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
62B8:	84-61       	ori r24, 0x14         ; Logical OR with Immediate
62BA:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
62BC:	73-F9       	bld r23, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
62BE:	8D-F8       	.data 0xf88d          ; Binary data
62C0:	24-44       	sbci r18, 0x44        ; Subtract Immediate with Carry SBI
62C2:	8D-F8       	.data 0xf88d          ; Binary data
62C4:	25-64       	ori r18, 0x45         ; Logical OR with Immediate
62C6:	8D-F8       	.data 0xf88d          ; Binary data
62C8:	26-54       	subi r18, 0x46        ; Subtract Immediate
62CA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
62CC:	24-40       	sbci r18, 0x04        ; Subtract Immediate with Carry SBI
62CE:	32-21       	and r19, r2           ; Logical AND
62D0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
62D2:	86-FB       	bst r24, 6            ; Bit Store from Bit in Register to T Flag in SREG
62D4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
62D6:	09-10       	cpse r0, r9           ; Compare Skip if Equal
62D8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
62DA:	24-41       	sbci r18, 0x14        ; Subtract Immediate with Carry SBI
62DC:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
62DE:	62-F9       	bld r22, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
62E0:	8D-F8       	.data 0xf88d          ; Binary data
62E2:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
62E4:	8D-F8       	.data 0xf88d          ; Binary data
62E6:	29-64       	ori r18, 0x49         ; Logical OR with Immediate
62E8:	8D-F8       	.data 0xf88d          ; Binary data
62EA:	2A-54       	subi r18, 0x4a        ; Subtract Immediate
62EC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
62EE:	85-60       	ori r24, 0x05         ; Logical OR with Immediate
62F0:	32-21       	and r19, r2           ; Logical AND
62F2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
62F4:	75-FB       	bst r23, 5            ; Bit Store from Bit in Register to T Flag in SREG
62F6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
62F8:	85-70       	andi r24, 0x05        ; Logical AND with Immediate
62FA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
62FC:	85-61       	ori r24, 0x15         ; Logical OR with Immediate
62FE:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6300:	51-F9       	bld r21, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
6302:	8D-F8       	.data 0xf88d          ; Binary data
6304:	2C-44       	sbci r18, 0x4c        ; Subtract Immediate with Carry SBI
6306:	73-25       	clr r371              ; Clear Register
6308:	8D-F8       	.data 0xf88d          ; Binary data
630A:	2D-54       	subi r18, 0x4d        ; Subtract Immediate
630C:	8D-F8       	.data 0xf88d          ; Binary data
630E:	2E-74       	andi r18, 0x4e        ; Logical AND with Immediate
6310:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6312:	2C-40       	sbci r18, 0x0c        ; Subtract Immediate with Carry SBI
6314:	32-21       	and r19, r2           ; Logical AND
6316:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6318:	63-FB       	bst r22, 3            ; Bit Store from Bit in Register to T Flag in SREG
631A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
631C:	0B-10       	cpse r0, r11          ; Compare Skip if Equal
631E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6320:	2C-41       	sbci r18, 0x1c        ; Subtract Immediate with Carry SBI
6322:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6324:	3F-F9       	.data 0xf93f          ; Binary data
6326:	8D-F8       	.data 0xf88d          ; Binary data
6328:	30-44       	sbci r19, 0x40        ; Subtract Immediate with Carry SBI
632A:	8D-F8       	.data 0xf88d          ; Binary data
632C:	31-54       	subi r19, 0x41        ; Subtract Immediate
632E:	8D-F8       	.data 0xf88d          ; Binary data
6330:	32-74       	andi r19, 0x42        ; Logical AND with Immediate
6332:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6334:	86-60       	ori r24, 0x06         ; Logical OR with Immediate
6336:	32-21       	and r19, r2           ; Logical AND
6338:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
633A:	52-FB       	bst r21, 2            ; Bit Store from Bit in Register to T Flag in SREG
633C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
633E:	86-70       	andi r24, 0x06        ; Logical AND with Immediate
6340:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6342:	86-61       	ori r24, 0x16         ; Logical OR with Immediate
6344:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6346:	2E-F9       	.data 0xf92e          ; Binary data
6348:	8D-F8       	.data 0xf88d          ; Binary data
634A:	34-44       	sbci r19, 0x44        ; Subtract Immediate with Carry SBI
634C:	8D-F8       	.data 0xf88d          ; Binary data
634E:	35-54       	subi r19, 0x45        ; Subtract Immediate
6350:	3D-46       	sbci r19, 0x6d        ; Subtract Immediate with Carry SBI
6352:	8D-F8       	.data 0xf88d          ; Binary data
6354:	36-74       	andi r19, 0x46        ; Logical AND with Immediate
6356:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6358:	34-40       	sbci r19, 0x04        ; Subtract Immediate with Carry SBI
635A:	32-21       	and r19, r2           ; Logical AND
635C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
635E:	40-FB       	bst r20, 0            ; Bit Store from Bit in Register to T Flag in SREG
6360:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6362:	0D-10       	cpse r0, r13          ; Compare Skip if Equal
6364:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6366:	34-41       	sbci r19, 0x14        ; Subtract Immediate with Carry SBI
6368:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
636A:	1C-F9       	.data 0xf91c          ; Binary data
636C:	8D-F8       	.data 0xf88d          ; Binary data
636E:	38-44       	sbci r19, 0x48        ; Subtract Immediate with Carry SBI
6370:	72-27       	clr r882              ; Clear Register
6372:	8D-F8       	.data 0xf88d          ; Binary data
6374:	39-74       	andi r19, 0x49        ; Logical AND with Immediate
6376:	46-46       	sbci r20, 0x66        ; Subtract Immediate with Carry SBI
6378:	8D-F8       	.data 0xf88d          ; Binary data
637A:	3A-84       	std Y+10, r3          ; Store Indirect From Register to Data Space
637C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
637E:	87-60       	ori r24, 0x07         ; Logical OR with Immediate
6380:	32-21       	and r19, r2           ; Logical AND
6382:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6384:	2D-FB       	.data 0xfb2d          ; Binary data
6386:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6388:	87-70       	andi r24, 0x07        ; Logical AND with Immediate
638A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
638C:	87-61       	ori r24, 0x17         ; Logical OR with Immediate
638E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6390:	09-F9       	.data 0xf909          ; Binary data
6392:	8D-F8       	.data 0xf88d          ; Binary data
6394:	3C-44       	sbci r19, 0x4c        ; Subtract Immediate with Carry SBI
6396:	8D-F8       	.data 0xf88d          ; Binary data
6398:	3D-74       	andi r19, 0x4d        ; Logical AND with Immediate
639A:	8D-F8       	.data 0xf88d          ; Binary data
639C:	3E-84       	std Y+14, r3          ; Store Indirect From Register to Data Space
639E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
63A0:	3C-40       	sbci r19, 0x0c        ; Subtract Immediate with Carry SBI
63A2:	32-21       	and r19, r2           ; Logical AND
63A4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
63A6:	1C-FB       	.data 0xfb1c          ; Binary data
63A8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
63AA:	0F-10       	cpse r0, r15          ; Compare Skip if Equal
63AC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
63AE:	3C-41       	sbci r19, 0x1c        ; Subtract Immediate with Carry SBI
63B0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
63B2:	F8-F8       	.data 0xf8f8          ; Binary data
63B4:	8D-F8       	.data 0xf88d          ; Binary data
63B6:	40-44       	sbci r20, 0x40        ; Subtract Immediate with Carry SBI
63B8:	71-27       	clr r881              ; Clear Register
63BA:	8D-F8       	.data 0xf88d          ; Binary data
63BC:	41-74       	andi r20, 0x41        ; Logical AND with Immediate
63BE:	8D-F8       	.data 0xf88d          ; Binary data
63C0:	42-54       	subi r20, 0x42        ; Subtract Immediate
63C2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
63C4:	88-60       	ori r24, 0x08         ; Logical OR with Immediate
63C6:	32-21       	and r19, r2           ; Logical AND
63C8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
63CA:	0A-FB       	.data 0xfb0a          ; Binary data
63CC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
63CE:	88-70       	andi r24, 0x08        ; Logical AND with Immediate
63D0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
63D2:	88-61       	ori r24, 0x18         ; Logical OR with Immediate
63D4:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
63D6:	E6-F8       	bld r14, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
63D8:	8D-F8       	.data 0xf88d          ; Binary data
63DA:	44-44       	sbci r20, 0x44        ; Subtract Immediate with Carry SBI
63DC:	8D-F8       	.data 0xf88d          ; Binary data
63DE:	45-74       	andi r20, 0x45        ; Logical AND with Immediate
63E0:	8D-F8       	.data 0xf88d          ; Binary data
63E2:	46-54       	subi r20, 0x46        ; Subtract Immediate
63E4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
63E6:	44-40       	sbci r20, 0x04        ; Subtract Immediate with Carry SBI
63E8:	32-21       	and r19, r2           ; Logical AND
63EA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
63EC:	F9-FA       	.data 0xfaf9          ; Binary data
63EE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
63F0:	11-10       	cpse r1, r1           ; Compare Skip if Equal
63F2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
63F4:	44-41       	sbci r20, 0x14        ; Subtract Immediate with Carry SBI
63F6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
63F8:	D5-F8       	bld r13, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
63FA:	8D-F8       	.data 0xf88d          ; Binary data
63FC:	48-44       	sbci r20, 0x48        ; Subtract Immediate with Carry SBI
63FE:	8D-F8       	.data 0xf88d          ; Binary data
6400:	49-74       	andi r20, 0x49        ; Logical AND with Immediate
6402:	8D-F8       	.data 0xf88d          ; Binary data
6404:	4A-54       	subi r20, 0x4a        ; Subtract Immediate
6406:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6408:	89-60       	ori r24, 0x09         ; Logical OR with Immediate
640A:	32-21       	and r19, r2           ; Logical AND
640C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
640E:	E8-FA       	.data 0xfae8          ; Binary data
6410:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6412:	89-70       	andi r24, 0x09        ; Logical AND with Immediate
6414:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6416:	89-61       	ori r24, 0x19         ; Logical OR with Immediate
6418:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
641A:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
641C:	8D-F8       	.data 0xf88d          ; Binary data
641E:	4C-44       	sbci r20, 0x4c        ; Subtract Immediate with Carry SBI
6420:	8D-F8       	.data 0xf88d          ; Binary data
6422:	4D-74       	andi r20, 0x4d        ; Logical AND with Immediate
6424:	8D-F8       	.data 0xf88d          ; Binary data
6426:	4E-54       	subi r20, 0x4e        ; Subtract Immediate
6428:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
642A:	4C-40       	sbci r20, 0x0c        ; Subtract Immediate with Carry SBI
642C:	32-21       	and r19, r2           ; Logical AND
642E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6430:	D7-FA       	bst r13, 7            ; Bit Store from Bit in Register to T Flag in SREG
6432:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6434:	13-10       	cpse r1, r3           ; Compare Skip if Equal
6436:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6438:	4C-41       	sbci r20, 0x1c        ; Subtract Immediate with Carry SBI
643A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
643C:	B3-F8       	bld r11, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
643E:	8D-F8       	.data 0xf88d          ; Binary data
6440:	50-44       	sbci r21, 0x40        ; Subtract Immediate with Carry SBI
6442:	8D-F8       	.data 0xf88d          ; Binary data
6444:	51-74       	andi r21, 0x41        ; Logical AND with Immediate
6446:	8D-F8       	.data 0xf88d          ; Binary data
6448:	52-54       	subi r21, 0x42        ; Subtract Immediate
644A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
644C:	8A-60       	ori r24, 0x0a         ; Logical OR with Immediate
644E:	32-21       	and r19, r2           ; Logical AND
6450:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6452:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
6454:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6456:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
6458:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
645A:	8A-61       	ori r24, 0x1a         ; Logical OR with Immediate
645C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
645E:	A2-F8       	bld r10, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
6460:	8D-F8       	.data 0xf88d          ; Binary data
6462:	54-44       	sbci r21, 0x44        ; Subtract Immediate with Carry SBI
6464:	8D-F8       	.data 0xf88d          ; Binary data
6466:	55-74       	andi r21, 0x45        ; Logical AND with Immediate
6468:	8D-F8       	.data 0xf88d          ; Binary data
646A:	56-54       	subi r21, 0x46        ; Subtract Immediate
646C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
646E:	54-40       	sbci r21, 0x04        ; Subtract Immediate with Carry SBI
6470:	32-21       	and r19, r2           ; Logical AND
6472:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6474:	B5-FA       	bst r11, 5            ; Bit Store from Bit in Register to T Flag in SREG
6476:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6478:	15-10       	cpse r1, r5           ; Compare Skip if Equal
647A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
647C:	54-41       	sbci r21, 0x14        ; Subtract Immediate with Carry SBI
647E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6480:	91-F8       	bld r9, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
6482:	8D-F8       	.data 0xf88d          ; Binary data
6484:	58-44       	sbci r21, 0x48        ; Subtract Immediate with Carry SBI
6486:	8D-F8       	.data 0xf88d          ; Binary data
6488:	59-74       	andi r21, 0x49        ; Logical AND with Immediate
648A:	8D-F8       	.data 0xf88d          ; Binary data
648C:	5A-54       	subi r21, 0x4a        ; Subtract Immediate
648E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6490:	8B-60       	ori r24, 0x0b         ; Logical OR with Immediate
6492:	32-21       	and r19, r2           ; Logical AND
6494:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6496:	A4-FA       	bst r10, 4            ; Bit Store from Bit in Register to T Flag in SREG
6498:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
649A:	8B-70       	andi r24, 0x0b        ; Logical AND with Immediate
649C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
649E:	8B-61       	ori r24, 0x1b         ; Logical OR with Immediate
64A0:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
64A2:	80-F8       	bld r8, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
64A4:	8D-F8       	.data 0xf88d          ; Binary data
64A6:	5C-44       	sbci r21, 0x4c        ; Subtract Immediate with Carry SBI
64A8:	8D-F8       	.data 0xf88d          ; Binary data
64AA:	5D-74       	andi r21, 0x4d        ; Logical AND with Immediate
64AC:	8D-F8       	.data 0xf88d          ; Binary data
64AE:	5E-54       	subi r21, 0x4e        ; Subtract Immediate
64B0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
64B2:	5C-40       	sbci r21, 0x0c        ; Subtract Immediate with Carry SBI
64B4:	32-21       	and r19, r2           ; Logical AND
64B6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
64B8:	93-FA       	bst r9, 3             ; Bit Store from Bit in Register to T Flag in SREG
64BA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
64BC:	17-10       	cpse r1, r7           ; Compare Skip if Equal
64BE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
64C0:	5C-41       	sbci r21, 0x1c        ; Subtract Immediate with Carry SBI
64C2:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
64C4:	6F-F8       	.data 0xf86f          ; Binary data
64C6:	8D-F8       	.data 0xf88d          ; Binary data
64C8:	60-44       	sbci r22, 0x40        ; Subtract Immediate with Carry SBI
64CA:	70-25       	clr r368              ; Clear Register
64CC:	8D-F8       	.data 0xf88d          ; Binary data
64CE:	61-54       	subi r22, 0x41        ; Subtract Immediate
64D0:	8D-F8       	.data 0xf88d          ; Binary data
64D2:	62-84       	std Y+10, r6          ; Store Indirect From Register to Data Space
64D4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
64D6:	8C-60       	ori r24, 0x0c         ; Logical OR with Immediate
64D8:	32-21       	and r19, r2           ; Logical AND
64DA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
64DC:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
64DE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
64E0:	8C-70       	andi r24, 0x0c        ; Logical AND with Immediate
64E2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
64E4:	8C-61       	ori r24, 0x1c         ; Logical OR with Immediate
64E6:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
64E8:	5D-F8       	.data 0xf85d          ; Binary data
64EA:	8D-F8       	.data 0xf88d          ; Binary data
64EC:	64-44       	sbci r22, 0x44        ; Subtract Immediate with Carry SBI
64EE:	8D-F8       	.data 0xf88d          ; Binary data
64F0:	65-54       	subi r22, 0x45        ; Subtract Immediate
64F2:	8D-F8       	.data 0xf88d          ; Binary data
64F4:	66-84       	std Y+14, r6          ; Store Indirect From Register to Data Space
64F6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
64F8:	64-40       	sbci r22, 0x04        ; Subtract Immediate with Carry SBI
64FA:	32-21       	and r19, r2           ; Logical AND
64FC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
64FE:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
6500:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6502:	19-10       	cpse r1, r9           ; Compare Skip if Equal
6504:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6506:	64-41       	sbci r22, 0x14        ; Subtract Immediate with Carry SBI
6508:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
650A:	4C-F8       	.data 0xf84c          ; Binary data
650C:	8D-F8       	.data 0xf88d          ; Binary data
650E:	68-44       	sbci r22, 0x48        ; Subtract Immediate with Carry SBI
6510:	8D-F8       	.data 0xf88d          ; Binary data
6512:	69-54       	subi r22, 0x49        ; Subtract Immediate
6514:	8D-F8       	.data 0xf88d          ; Binary data
6516:	6A-84       	std Y+10, r6          ; Store Indirect From Register to Data Space
6518:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
651A:	8D-60       	ori r24, 0x0d         ; Logical OR with Immediate
651C:	32-21       	and r19, r2           ; Logical AND
651E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6520:	5F-FA       	.data 0xfa5f          ; Binary data
6522:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6524:	8D-70       	andi r24, 0x0d        ; Logical AND with Immediate
6526:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6528:	8D-61       	ori r24, 0x1d         ; Logical OR with Immediate
652A:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
652C:	3B-F8       	.data 0xf83b          ; Binary data
652E:	8D-F8       	.data 0xf88d          ; Binary data
6530:	6C-44       	sbci r22, 0x4c        ; Subtract Immediate with Carry SBI
6532:	8D-F8       	.data 0xf88d          ; Binary data
6534:	6D-54       	subi r22, 0x4d        ; Subtract Immediate
6536:	8D-F8       	.data 0xf88d          ; Binary data
6538:	6E-84       	std Y+14, r6          ; Store Indirect From Register to Data Space
653A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
653C:	6C-40       	sbci r22, 0x0c        ; Subtract Immediate with Carry SBI
653E:	32-21       	and r19, r2           ; Logical AND
6540:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6542:	4E-FA       	.data 0xfa4e          ; Binary data
6544:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6546:	1B-10       	cpse r1, r11          ; Compare Skip if Equal
6548:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
654A:	6C-41       	sbci r22, 0x1c        ; Subtract Immediate with Carry SBI
654C:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
654E:	2A-F8       	.data 0xf82a          ; Binary data
6550:	8D-F8       	.data 0xf88d          ; Binary data
6552:	70-44       	sbci r23, 0x40        ; Subtract Immediate with Carry SBI
6554:	8D-F8       	.data 0xf88d          ; Binary data
6556:	71-54       	subi r23, 0x41        ; Subtract Immediate
6558:	8D-F8       	.data 0xf88d          ; Binary data
655A:	72-84       	std Y+10, r7          ; Store Indirect From Register to Data Space
655C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
655E:	8E-60       	ori r24, 0x0e         ; Logical OR with Immediate
6560:	32-21       	and r19, r2           ; Logical AND
6562:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6564:	3D-FA       	.data 0xfa3d          ; Binary data
6566:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6568:	8E-70       	andi r24, 0x0e        ; Logical AND with Immediate
656A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
656C:	8E-61       	ori r24, 0x1e         ; Logical OR with Immediate
656E:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6570:	19-F8       	.data 0xf819          ; Binary data
6572:	8D-F8       	.data 0xf88d          ; Binary data
6574:	74-44       	sbci r23, 0x44        ; Subtract Immediate with Carry SBI
6576:	8D-F8       	.data 0xf88d          ; Binary data
6578:	75-54       	subi r23, 0x45        ; Subtract Immediate
657A:	8D-F8       	.data 0xf88d          ; Binary data
657C:	76-84       	std Y+14, r7          ; Store Indirect From Register to Data Space
657E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6580:	74-40       	sbci r23, 0x04        ; Subtract Immediate with Carry SBI
6582:	32-21       	and r19, r2           ; Logical AND
6584:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6586:	2C-FA       	.data 0xfa2c          ; Binary data
6588:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
658A:	1D-10       	cpse r1, r13          ; Compare Skip if Equal
658C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
658E:	74-41       	sbci r23, 0x14        ; Subtract Immediate with Carry SBI
6590:	FB-F7       	brbc 3, .-2           ; Branch if Bit in SREG is Cleared
6592:	08-F8       	.data 0xf808          ; Binary data
6594:	8D-F8       	.data 0xf88d          ; Binary data
6596:	78-44       	sbci r23, 0x48        ; Subtract Immediate with Carry SBI
6598:	8D-F8       	.data 0xf88d          ; Binary data
659A:	79-54       	subi r23, 0x49        ; Subtract Immediate
659C:	8D-F8       	.data 0xf88d          ; Binary data
659E:	7A-84       	std Y+10, r7          ; Store Indirect From Register to Data Space
65A0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
65A2:	8F-60       	ori r24, 0x0f         ; Logical OR with Immediate
65A4:	32-21       	and r19, r2           ; Logical AND
65A6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
65A8:	1B-FA       	.data 0xfa1b          ; Binary data
65AA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
65AC:	8F-70       	andi r24, 0x0f        ; Logical AND with Immediate
65AE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
65B0:	8F-61       	ori r24, 0x1f         ; Logical OR with Immediate
65B2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
65B4:	F7-FF       	sbrs r31, 7           ; Skip if Bit in Register is Set
65B6:	8D-F8       	.data 0xf88d          ; Binary data
65B8:	7C-44       	sbci r23, 0x4c        ; Subtract Immediate with Carry SBI
65BA:	16-27       	clr r790              ; Clear Register
65BC:	8D-F8       	.data 0xf88d          ; Binary data
65BE:	7D-74       	andi r23, 0x4d        ; Logical AND with Immediate
65C0:	32-25       	clr r306              ; Clear Register
65C2:	8D-F8       	.data 0xf88d          ; Binary data
65C4:	7E-54       	subi r23, 0x4e        ; Subtract Immediate
65C6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
65C8:	1F-10       	cpse r1, r15          ; Compare Skip if Equal
65CA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
65CC:	7C-41       	sbci r23, 0x1c        ; Subtract Immediate with Carry SBI
65CE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
65D0:	E9-FF       	.data 0xffe9          ; Binary data
65D2:	8D-F8       	.data 0xf88d          ; Binary data
65D4:	80-44       	sbci r24, 0x40        ; Subtract Immediate with Carry SBI
65D6:	8D-F8       	.data 0xf88d          ; Binary data
65D8:	81-74       	andi r24, 0x41        ; Logical AND with Immediate
65DA:	8D-F8       	.data 0xf88d          ; Binary data
65DC:	82-54       	subi r24, 0x42        ; Subtract Immediate
65DE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
65E0:	90-70       	andi r25, 0x00        ; Logical AND with Immediate
65E2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
65E4:	90-61       	ori r25, 0x10         ; Logical OR with Immediate
65E6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
65E8:	DD-FF       	.data 0xffdd          ; Binary data
65EA:	8D-F8       	.data 0xf88d          ; Binary data
65EC:	84-44       	sbci r24, 0x44        ; Subtract Immediate with Carry SBI
65EE:	8D-F8       	.data 0xf88d          ; Binary data
65F0:	85-74       	andi r24, 0x45        ; Logical AND with Immediate
65F2:	8D-F8       	.data 0xf88d          ; Binary data
65F4:	86-54       	subi r24, 0x46        ; Subtract Immediate
65F6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
65F8:	21-10       	cpse r2, r1           ; Compare Skip if Equal
65FA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
65FC:	84-41       	sbci r24, 0x14        ; Subtract Immediate with Carry SBI
65FE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6600:	D1-FF       	sbrs r29, 1           ; Skip if Bit in Register is Set
6602:	8D-F8       	.data 0xf88d          ; Binary data
6604:	88-44       	sbci r24, 0x48        ; Subtract Immediate with Carry SBI
6606:	8D-F8       	.data 0xf88d          ; Binary data
6608:	89-74       	andi r24, 0x49        ; Logical AND with Immediate
660A:	8D-F8       	.data 0xf88d          ; Binary data
660C:	8A-54       	subi r24, 0x4a        ; Subtract Immediate
660E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6610:	91-70       	andi r25, 0x01        ; Logical AND with Immediate
6612:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6614:	91-61       	ori r25, 0x11         ; Logical OR with Immediate
6616:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6618:	C5-FF       	sbrs r28, 5           ; Skip if Bit in Register is Set
661A:	8D-F8       	.data 0xf88d          ; Binary data
661C:	8C-44       	sbci r24, 0x4c        ; Subtract Immediate with Carry SBI
661E:	8D-F8       	.data 0xf88d          ; Binary data
6620:	8D-74       	andi r24, 0x4d        ; Logical AND with Immediate
6622:	8D-F8       	.data 0xf88d          ; Binary data
6624:	8E-54       	subi r24, 0x4e        ; Subtract Immediate
6626:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6628:	23-10       	cpse r2, r3           ; Compare Skip if Equal
662A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
662C:	8C-41       	sbci r24, 0x1c        ; Subtract Immediate with Carry SBI
662E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6630:	B9-FF       	.data 0xffb9          ; Binary data
6632:	8D-F8       	.data 0xf88d          ; Binary data
6634:	90-44       	sbci r25, 0x40        ; Subtract Immediate with Carry SBI
6636:	8D-F8       	.data 0xf88d          ; Binary data
6638:	91-74       	andi r25, 0x41        ; Logical AND with Immediate
663A:	8D-F8       	.data 0xf88d          ; Binary data
663C:	92-54       	subi r25, 0x42        ; Subtract Immediate
663E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6640:	92-70       	andi r25, 0x02        ; Logical AND with Immediate
6642:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6644:	92-61       	ori r25, 0x12         ; Logical OR with Immediate
6646:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6648:	AD-FF       	.data 0xffad          ; Binary data
664A:	8D-F8       	.data 0xf88d          ; Binary data
664C:	94-44       	sbci r25, 0x44        ; Subtract Immediate with Carry SBI
664E:	8D-F8       	.data 0xf88d          ; Binary data
6650:	95-74       	andi r25, 0x45        ; Logical AND with Immediate
6652:	8D-F8       	.data 0xf88d          ; Binary data
6654:	96-54       	subi r25, 0x46        ; Subtract Immediate
6656:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6658:	25-10       	cpse r2, r5           ; Compare Skip if Equal
665A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
665C:	94-41       	sbci r25, 0x14        ; Subtract Immediate with Carry SBI
665E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6660:	A1-FF       	sbrs r26, 1           ; Skip if Bit in Register is Set
6662:	8D-F8       	.data 0xf88d          ; Binary data
6664:	98-44       	sbci r25, 0x48        ; Subtract Immediate with Carry SBI
6666:	8D-F8       	.data 0xf88d          ; Binary data
6668:	99-74       	andi r25, 0x49        ; Logical AND with Immediate
666A:	8D-F8       	.data 0xf88d          ; Binary data
666C:	9A-54       	subi r25, 0x4a        ; Subtract Immediate
666E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6670:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
6672:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6674:	93-61       	ori r25, 0x13         ; Logical OR with Immediate
6676:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6678:	95-FF       	sbrs r25, 5           ; Skip if Bit in Register is Set
667A:	8D-F8       	.data 0xf88d          ; Binary data
667C:	9C-44       	sbci r25, 0x4c        ; Subtract Immediate with Carry SBI
667E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6680:	15-08       	sbc r1, r5            ; Subtract with Carry
6682:	8D-F8       	.data 0xf88d          ; Binary data
6684:	9D-84       	std Y+13, r9          ; Store Indirect From Register to Data Space
6686:	8D-F8       	.data 0xf88d          ; Binary data
6688:	9E-54       	subi r25, 0x4e        ; Subtract Immediate
668A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
668C:	27-10       	cpse r2, r7           ; Compare Skip if Equal
668E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6690:	9C-41       	sbci r25, 0x1c        ; Subtract Immediate with Carry SBI
6692:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6694:	87-FF       	sbrs r24, 7           ; Skip if Bit in Register is Set
6696:	8D-F8       	.data 0xf88d          ; Binary data
6698:	A0-44       	sbci r26, 0x40        ; Subtract Immediate with Carry SBI
669A:	8D-F8       	.data 0xf88d          ; Binary data
669C:	A1-74       	andi r26, 0x41        ; Logical AND with Immediate
669E:	8D-F8       	.data 0xf88d          ; Binary data
66A0:	A2-54       	subi r26, 0x42        ; Subtract Immediate
66A2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
66A4:	94-70       	andi r25, 0x04        ; Logical AND with Immediate
66A6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
66A8:	94-61       	ori r25, 0x14         ; Logical OR with Immediate
66AA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
66AC:	7B-FF       	.data 0xff7b          ; Binary data
66AE:	8D-F8       	.data 0xf88d          ; Binary data
66B0:	A4-44       	sbci r26, 0x44        ; Subtract Immediate with Carry SBI
66B2:	8D-F8       	.data 0xf88d          ; Binary data
66B4:	A5-74       	andi r26, 0x45        ; Logical AND with Immediate
66B6:	8D-F8       	.data 0xf88d          ; Binary data
66B8:	A6-54       	subi r26, 0x46        ; Subtract Immediate
66BA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
66BC:	29-10       	cpse r2, r9           ; Compare Skip if Equal
66BE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
66C0:	A4-41       	sbci r26, 0x14        ; Subtract Immediate with Carry SBI
66C2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
66C4:	6F-FF       	.data 0xff6f          ; Binary data
66C6:	8D-F8       	.data 0xf88d          ; Binary data
66C8:	A8-44       	sbci r26, 0x48        ; Subtract Immediate with Carry SBI
66CA:	6C-27       	clr r876              ; Clear Register
66CC:	8D-F8       	.data 0xf88d          ; Binary data
66CE:	A9-74       	andi r26, 0x49        ; Logical AND with Immediate
66D0:	8D-F8       	.data 0xf88d          ; Binary data
66D2:	AA-64       	ori r26, 0x4a         ; Logical OR with Immediate
66D4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
66D6:	95-60       	ori r25, 0x05         ; Logical OR with Immediate
66D8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
66DA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
66DC:	81-F9       	bld r24, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
66DE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
66E0:	95-70       	andi r25, 0x05        ; Logical AND with Immediate
66E2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
66E4:	95-61       	ori r25, 0x15         ; Logical OR with Immediate
66E6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
66E8:	5D-FF       	.data 0xff5d          ; Binary data
66EA:	8D-F8       	.data 0xf88d          ; Binary data
66EC:	AC-44       	sbci r26, 0x4c        ; Subtract Immediate with Carry SBI
66EE:	8D-F8       	.data 0xf88d          ; Binary data
66F0:	AD-74       	andi r26, 0x4d        ; Logical AND with Immediate
66F2:	8D-F8       	.data 0xf88d          ; Binary data
66F4:	AE-64       	ori r26, 0x4e         ; Logical OR with Immediate
66F6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
66F8:	AC-40       	sbci r26, 0x0c        ; Subtract Immediate with Carry SBI
66FA:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
66FC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
66FE:	70-F9       	bld r23, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
6700:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6702:	2B-10       	cpse r2, r11          ; Compare Skip if Equal
6704:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6706:	AC-41       	sbci r26, 0x1c        ; Subtract Immediate with Carry SBI
6708:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
670A:	4C-FF       	.data 0xff4c          ; Binary data
670C:	8D-F8       	.data 0xf88d          ; Binary data
670E:	B0-44       	sbci r27, 0x40        ; Subtract Immediate with Carry SBI
6710:	6B-27       	clr r875              ; Clear Register
6712:	8D-F8       	.data 0xf88d          ; Binary data
6714:	B1-74       	andi r27, 0x41        ; Logical AND with Immediate
6716:	FC-26       	clr r764              ; Clear Register
6718:	8D-F8       	.data 0xf88d          ; Binary data
671A:	B2-64       	ori r27, 0x42         ; Logical OR with Immediate
671C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
671E:	96-60       	ori r25, 0x06         ; Logical OR with Immediate
6720:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6722:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6724:	5D-F9       	.data 0xf95d          ; Binary data
6726:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6728:	96-70       	andi r25, 0x06        ; Logical AND with Immediate
672A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
672C:	96-61       	ori r25, 0x16         ; Logical OR with Immediate
672E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6730:	39-FF       	.data 0xff39          ; Binary data
6732:	8D-F8       	.data 0xf88d          ; Binary data
6734:	B4-44       	sbci r27, 0x44        ; Subtract Immediate with Carry SBI
6736:	8D-F8       	.data 0xf88d          ; Binary data
6738:	B5-74       	andi r27, 0x45        ; Logical AND with Immediate
673A:	8D-F8       	.data 0xf88d          ; Binary data
673C:	B6-64       	ori r27, 0x46         ; Logical OR with Immediate
673E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6740:	B4-40       	sbci r27, 0x04        ; Subtract Immediate with Carry SBI
6742:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6744:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6746:	4C-F9       	.data 0xf94c          ; Binary data
6748:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
674A:	2D-10       	cpse r2, r13          ; Compare Skip if Equal
674C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
674E:	B4-41       	sbci r27, 0x14        ; Subtract Immediate with Carry SBI
6750:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6752:	28-FF       	.data 0xff28          ; Binary data
6754:	8D-F8       	.data 0xf88d          ; Binary data
6756:	B8-44       	sbci r27, 0x48        ; Subtract Immediate with Carry SBI
6758:	8D-F8       	.data 0xf88d          ; Binary data
675A:	B9-74       	andi r27, 0x49        ; Logical AND with Immediate
675C:	8D-F8       	.data 0xf88d          ; Binary data
675E:	BA-64       	ori r27, 0x4a         ; Logical OR with Immediate
6760:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6762:	97-60       	ori r25, 0x07         ; Logical OR with Immediate
6764:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6766:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6768:	3B-F9       	.data 0xf93b          ; Binary data
676A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
676C:	97-70       	andi r25, 0x07        ; Logical AND with Immediate
676E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6770:	97-61       	ori r25, 0x17         ; Logical OR with Immediate
6772:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6774:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
6776:	8D-F8       	.data 0xf88d          ; Binary data
6778:	BC-44       	sbci r27, 0x4c        ; Subtract Immediate with Carry SBI
677A:	8D-F8       	.data 0xf88d          ; Binary data
677C:	BD-74       	andi r27, 0x4d        ; Logical AND with Immediate
677E:	8D-F8       	.data 0xf88d          ; Binary data
6780:	BE-64       	ori r27, 0x4e         ; Logical OR with Immediate
6782:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6784:	BC-40       	sbci r27, 0x0c        ; Subtract Immediate with Carry SBI
6786:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6788:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
678A:	2A-F9       	.data 0xf92a          ; Binary data
678C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
678E:	2F-10       	cpse r2, r15          ; Compare Skip if Equal
6790:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6792:	BC-41       	sbci r27, 0x1c        ; Subtract Immediate with Carry SBI
6794:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6796:	06-FF       	sbrs r16, 6           ; Skip if Bit in Register is Set
6798:	8D-F8       	.data 0xf88d          ; Binary data
679A:	C0-44       	sbci r28, 0x40        ; Subtract Immediate with Carry SBI
679C:	69-27       	clr r873              ; Clear Register
679E:	8D-F8       	.data 0xf88d          ; Binary data
67A0:	C1-74       	andi r28, 0x41        ; Logical AND with Immediate
67A2:	FF-26       	clr r767              ; Clear Register
67A4:	8D-F8       	.data 0xf88d          ; Binary data
67A6:	C2-64       	ori r28, 0x42         ; Logical OR with Immediate
67A8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
67AA:	98-60       	ori r25, 0x08         ; Logical OR with Immediate
67AC:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
67AE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
67B0:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
67B2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
67B4:	98-70       	andi r25, 0x08        ; Logical AND with Immediate
67B6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
67B8:	98-61       	ori r25, 0x18         ; Logical OR with Immediate
67BA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
67BC:	F3-FE       	sbrs r15, 3           ; Skip if Bit in Register is Set
67BE:	8D-F8       	.data 0xf88d          ; Binary data
67C0:	C4-44       	sbci r28, 0x44        ; Subtract Immediate with Carry SBI
67C2:	8D-F8       	.data 0xf88d          ; Binary data
67C4:	C5-74       	andi r28, 0x45        ; Logical AND with Immediate
67C6:	8D-F8       	.data 0xf88d          ; Binary data
67C8:	C6-64       	ori r28, 0x46         ; Logical OR with Immediate
67CA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
67CC:	C4-40       	sbci r28, 0x04        ; Subtract Immediate with Carry SBI
67CE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
67D0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
67D2:	06-F9       	bld r16, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
67D4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
67D6:	31-10       	cpse r3, r1           ; Compare Skip if Equal
67D8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
67DA:	C4-41       	sbci r28, 0x14        ; Subtract Immediate with Carry SBI
67DC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
67DE:	E2-FE       	sbrs r14, 2           ; Skip if Bit in Register is Set
67E0:	8D-F8       	.data 0xf88d          ; Binary data
67E2:	C8-44       	sbci r28, 0x48        ; Subtract Immediate with Carry SBI
67E4:	8D-F8       	.data 0xf88d          ; Binary data
67E6:	C9-74       	andi r28, 0x49        ; Logical AND with Immediate
67E8:	8D-F8       	.data 0xf88d          ; Binary data
67EA:	CA-64       	ori r28, 0x4a         ; Logical OR with Immediate
67EC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
67EE:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
67F0:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
67F2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
67F4:	F5-F8       	bld r15, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
67F6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
67F8:	99-70       	andi r25, 0x09        ; Logical AND with Immediate
67FA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
67FC:	99-61       	ori r25, 0x19         ; Logical OR with Immediate
67FE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6800:	D1-FE       	sbrs r13, 1           ; Skip if Bit in Register is Set
6802:	8D-F8       	.data 0xf88d          ; Binary data
6804:	CC-44       	sbci r28, 0x4c        ; Subtract Immediate with Carry SBI
6806:	8D-F8       	.data 0xf88d          ; Binary data
6808:	CD-74       	andi r28, 0x4d        ; Logical AND with Immediate
680A:	8D-F8       	.data 0xf88d          ; Binary data
680C:	CE-64       	ori r28, 0x4e         ; Logical OR with Immediate
680E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6810:	CC-40       	sbci r28, 0x0c        ; Subtract Immediate with Carry SBI
6812:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6814:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6816:	E4-F8       	bld r14, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
6818:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
681A:	33-10       	cpse r3, r3           ; Compare Skip if Equal
681C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
681E:	CC-41       	sbci r28, 0x1c        ; Subtract Immediate with Carry SBI
6820:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6822:	C0-FE       	sbrs r12, 0           ; Skip if Bit in Register is Set
6824:	8D-F8       	.data 0xf88d          ; Binary data
6826:	D0-44       	sbci r29, 0x40        ; Subtract Immediate with Carry SBI
6828:	8D-F8       	.data 0xf88d          ; Binary data
682A:	D1-74       	andi r29, 0x41        ; Logical AND with Immediate
682C:	8D-F8       	.data 0xf88d          ; Binary data
682E:	D2-64       	ori r29, 0x42         ; Logical OR with Immediate
6830:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6832:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
6834:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6836:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6838:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
683A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
683C:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
683E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6840:	9A-61       	ori r25, 0x1a         ; Logical OR with Immediate
6842:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6844:	AF-FE       	.data 0xfeaf          ; Binary data
6846:	8D-F8       	.data 0xf88d          ; Binary data
6848:	D4-44       	sbci r29, 0x44        ; Subtract Immediate with Carry SBI
684A:	8D-F8       	.data 0xf88d          ; Binary data
684C:	D5-74       	andi r29, 0x45        ; Logical AND with Immediate
684E:	8D-F8       	.data 0xf88d          ; Binary data
6850:	D6-64       	ori r29, 0x46         ; Logical OR with Immediate
6852:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6854:	D4-40       	sbci r29, 0x04        ; Subtract Immediate with Carry SBI
6856:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6858:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
685A:	C2-F8       	bld r12, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
685C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
685E:	35-10       	cpse r3, r5           ; Compare Skip if Equal
6860:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6862:	D4-41       	sbci r29, 0x14        ; Subtract Immediate with Carry SBI
6864:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6866:	9E-FE       	.data 0xfe9e          ; Binary data
6868:	8D-F8       	.data 0xf88d          ; Binary data
686A:	D8-44       	sbci r29, 0x48        ; Subtract Immediate with Carry SBI
686C:	8D-F8       	.data 0xf88d          ; Binary data
686E:	D9-74       	andi r29, 0x49        ; Logical AND with Immediate
6870:	8D-F8       	.data 0xf88d          ; Binary data
6872:	DA-64       	ori r29, 0x4a         ; Logical OR with Immediate
6874:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6876:	9B-60       	ori r25, 0x0b         ; Logical OR with Immediate
6878:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
687A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
687C:	B1-F8       	bld r11, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
687E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6880:	9B-70       	andi r25, 0x0b        ; Logical AND with Immediate
6882:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6884:	9B-61       	ori r25, 0x1b         ; Logical OR with Immediate
6886:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6888:	8D-FE       	.data 0xfe8d          ; Binary data
688A:	8D-F8       	.data 0xf88d          ; Binary data
688C:	DC-44       	sbci r29, 0x4c        ; Subtract Immediate with Carry SBI
688E:	8D-F8       	.data 0xf88d          ; Binary data
6890:	DD-74       	andi r29, 0x4d        ; Logical AND with Immediate
6892:	8D-F8       	.data 0xf88d          ; Binary data
6894:	DE-64       	ori r29, 0x4e         ; Logical OR with Immediate
6896:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6898:	DC-40       	sbci r29, 0x0c        ; Subtract Immediate with Carry SBI
689A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
689C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
689E:	A0-F8       	bld r10, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
68A0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
68A2:	37-10       	cpse r3, r7           ; Compare Skip if Equal
68A4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
68A6:	DC-41       	sbci r29, 0x1c        ; Subtract Immediate with Carry SBI
68A8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
68AA:	7C-FE       	.data 0xfe7c          ; Binary data
68AC:	8D-F8       	.data 0xf88d          ; Binary data
68AE:	E0-44       	sbci r30, 0x40        ; Subtract Immediate with Carry SBI
68B0:	68-27       	clr r872              ; Clear Register
68B2:	8D-F8       	.data 0xf88d          ; Binary data
68B4:	E1-74       	andi r30, 0x41        ; Logical AND with Immediate
68B6:	8D-F8       	.data 0xf88d          ; Binary data
68B8:	E2-64       	ori r30, 0x42         ; Logical OR with Immediate
68BA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
68BC:	9C-60       	ori r25, 0x0c         ; Logical OR with Immediate
68BE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
68C0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
68C2:	8E-F8       	.data 0xf88e          ; Binary data
68C4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
68C6:	9C-70       	andi r25, 0x0c        ; Logical AND with Immediate
68C8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
68CA:	9C-61       	ori r25, 0x1c         ; Logical OR with Immediate
68CC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
68CE:	6A-FE       	.data 0xfe6a          ; Binary data
68D0:	8D-F8       	.data 0xf88d          ; Binary data
68D2:	E4-44       	sbci r30, 0x44        ; Subtract Immediate with Carry SBI
68D4:	8D-F8       	.data 0xf88d          ; Binary data
68D6:	E5-74       	andi r30, 0x45        ; Logical AND with Immediate
68D8:	8D-F8       	.data 0xf88d          ; Binary data
68DA:	E6-64       	ori r30, 0x46         ; Logical OR with Immediate
68DC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
68DE:	E4-40       	sbci r30, 0x04        ; Subtract Immediate with Carry SBI
68E0:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
68E2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
68E4:	7D-F8       	.data 0xf87d          ; Binary data
68E6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
68E8:	39-10       	cpse r3, r9           ; Compare Skip if Equal
68EA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
68EC:	E4-41       	sbci r30, 0x14        ; Subtract Immediate with Carry SBI
68EE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
68F0:	59-FE       	.data 0xfe59          ; Binary data
68F2:	8D-F8       	.data 0xf88d          ; Binary data
68F4:	E8-44       	sbci r30, 0x48        ; Subtract Immediate with Carry SBI
68F6:	8D-F8       	.data 0xf88d          ; Binary data
68F8:	E9-74       	andi r30, 0x49        ; Logical AND with Immediate
68FA:	8D-F8       	.data 0xf88d          ; Binary data
68FC:	EA-64       	ori r30, 0x4a         ; Logical OR with Immediate
68FE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6900:	9D-60       	ori r25, 0x0d         ; Logical OR with Immediate
6902:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6904:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6906:	6C-F8       	.data 0xf86c          ; Binary data
6908:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
690A:	9D-70       	andi r25, 0x0d        ; Logical AND with Immediate
690C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
690E:	9D-61       	ori r25, 0x1d         ; Logical OR with Immediate
6910:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6912:	48-FE       	.data 0xfe48          ; Binary data
6914:	8D-F8       	.data 0xf88d          ; Binary data
6916:	EC-44       	sbci r30, 0x4c        ; Subtract Immediate with Carry SBI
6918:	8D-F8       	.data 0xf88d          ; Binary data
691A:	ED-74       	andi r30, 0x4d        ; Logical AND with Immediate
691C:	8D-F8       	.data 0xf88d          ; Binary data
691E:	EE-64       	ori r30, 0x4e         ; Logical OR with Immediate
6920:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6922:	EC-40       	sbci r30, 0x0c        ; Subtract Immediate with Carry SBI
6924:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6926:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6928:	5B-F8       	.data 0xf85b          ; Binary data
692A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
692C:	3B-10       	cpse r3, r11          ; Compare Skip if Equal
692E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6930:	EC-41       	sbci r30, 0x1c        ; Subtract Immediate with Carry SBI
6932:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6934:	37-FE       	sbrs r3, 7            ; Skip if Bit in Register is Set
6936:	8D-F8       	.data 0xf88d          ; Binary data
6938:	F0-44       	sbci r31, 0x40        ; Subtract Immediate with Carry SBI
693A:	8D-F8       	.data 0xf88d          ; Binary data
693C:	F1-74       	andi r31, 0x41        ; Logical AND with Immediate
693E:	8D-F8       	.data 0xf88d          ; Binary data
6940:	F2-64       	ori r31, 0x42         ; Logical OR with Immediate
6942:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6944:	9E-60       	ori r25, 0x0e         ; Logical OR with Immediate
6946:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
6948:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
694A:	4A-F8       	.data 0xf84a          ; Binary data
694C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
694E:	9E-70       	andi r25, 0x0e        ; Logical AND with Immediate
6950:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6952:	9E-61       	ori r25, 0x1e         ; Logical OR with Immediate
6954:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6956:	26-FE       	sbrs r2, 6            ; Skip if Bit in Register is Set
6958:	8D-F8       	.data 0xf88d          ; Binary data
695A:	F4-44       	sbci r31, 0x44        ; Subtract Immediate with Carry SBI
695C:	8D-F8       	.data 0xf88d          ; Binary data
695E:	F5-74       	andi r31, 0x45        ; Logical AND with Immediate
6960:	8D-F8       	.data 0xf88d          ; Binary data
6962:	F6-64       	ori r31, 0x46         ; Logical OR with Immediate
6964:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6966:	F4-40       	sbci r31, 0x04        ; Subtract Immediate with Carry SBI
6968:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
696A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
696C:	39-F8       	.data 0xf839          ; Binary data
696E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6970:	3D-10       	cpse r3, r13          ; Compare Skip if Equal
6972:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6974:	F4-41       	sbci r31, 0x14        ; Subtract Immediate with Carry SBI
6976:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6978:	15-FE       	sbrs r1, 5            ; Skip if Bit in Register is Set
697A:	8D-F8       	.data 0xf88d          ; Binary data
697C:	F8-44       	sbci r31, 0x48        ; Subtract Immediate with Carry SBI
697E:	8D-F8       	.data 0xf88d          ; Binary data
6980:	F9-74       	andi r31, 0x49        ; Logical AND with Immediate
6982:	8D-F8       	.data 0xf88d          ; Binary data
6984:	FA-64       	ori r31, 0x4a         ; Logical OR with Immediate
6986:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6988:	9F-60       	ori r25, 0x0f         ; Logical OR with Immediate
698A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
698C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
698E:	28-F8       	.data 0xf828          ; Binary data
6990:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6992:	9F-70       	andi r25, 0x0f        ; Logical AND with Immediate
6994:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6996:	9F-61       	ori r25, 0x1f         ; Logical OR with Immediate
6998:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
699A:	04-FE       	sbrs r0, 4            ; Skip if Bit in Register is Set
699C:	8D-F8       	.data 0xf88d          ; Binary data
699E:	FC-44       	sbci r31, 0x4c        ; Subtract Immediate with Carry SBI
69A0:	8D-F8       	.data 0xf88d          ; Binary data
69A2:	FD-84       	std Y+13, r15         ; Store Indirect From Register to Data Space
69A4:	8D-F8       	.data 0xf88d          ; Binary data
69A6:	FE-54       	subi r31, 0x4e        ; Subtract Immediate
69A8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
69AA:	3F-10       	cpse r3, r15          ; Compare Skip if Equal
69AC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
69AE:	FC-41       	sbci r31, 0x1c        ; Subtract Immediate with Carry SBI
69B0:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
69B2:	F8-FD       	.data 0xfdf8          ; Binary data
69B4:	01-26       	clr r513              ; Clear Register
69B6:	8D-F8       	.data 0xf88d          ; Binary data
69B8:	00-65       	ori r16, 0x50         ; Logical OR with Immediate
69BA:	14-24       	clr r20               ; Clear Register
69BC:	8D-F8       	.data 0xf88d          ; Binary data
69BE:	01-45       	sbci r16, 0x51        ; Subtract Immediate with Carry SBI
69C0:	8D-F8       	.data 0xf88d          ; Binary data
69C2:	02-55       	subi r16, 0x52        ; Subtract Immediate
69C4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
69C6:	A0-70       	andi r26, 0x00        ; Logical AND with Immediate
69C8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
69CA:	A0-61       	ori r26, 0x10         ; Logical OR with Immediate
69CC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
69CE:	EA-FD       	.data 0xfdea          ; Binary data
69D0:	8D-F8       	.data 0xf88d          ; Binary data
69D2:	04-65       	ori r16, 0x54         ; Logical OR with Immediate
69D4:	8D-F8       	.data 0xf88d          ; Binary data
69D6:	05-45       	sbci r16, 0x55        ; Subtract Immediate with Carry SBI
69D8:	8D-F8       	.data 0xf88d          ; Binary data
69DA:	06-55       	subi r16, 0x56        ; Subtract Immediate
69DC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
69DE:	41-10       	cpse r4, r1           ; Compare Skip if Equal
69E0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
69E2:	04-51       	subi r16, 0x14        ; Subtract Immediate
69E4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
69E6:	DE-FD       	.data 0xfdde          ; Binary data
69E8:	8D-F8       	.data 0xf88d          ; Binary data
69EA:	08-65       	ori r16, 0x58         ; Logical OR with Immediate
69EC:	8D-F8       	.data 0xf88d          ; Binary data
69EE:	09-45       	sbci r16, 0x59        ; Subtract Immediate with Carry SBI
69F0:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
69F2:	8D-F8       	.data 0xf88d          ; Binary data
69F4:	0A-55       	subi r16, 0x5a        ; Subtract Immediate
69F6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
69F8:	A1-70       	andi r26, 0x01        ; Logical AND with Immediate
69FA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
69FC:	A1-61       	ori r26, 0x11         ; Logical OR with Immediate
69FE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A00:	D1-FD       	sbrc r29, 1           ; Skip if Bit in Register is Cleared
6A02:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6A04:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
6A06:	8D-F8       	.data 0xf88d          ; Binary data
6A08:	0C-35       	cpi r16, 0x5c         ; Compare with Immediate
6A0A:	14-26       	clr r532              ; Clear Register
6A0C:	8D-F8       	.data 0xf88d          ; Binary data
6A0E:	0D-65       	ori r16, 0x5d         ; Logical OR with Immediate
6A10:	8D-F8       	.data 0xf88d          ; Binary data
6A12:	0E-55       	subi r16, 0x5e        ; Subtract Immediate
6A14:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6A16:	43-10       	cpse r4, r3           ; Compare Skip if Equal
6A18:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6A1A:	0C-51       	subi r16, 0x1c        ; Subtract Immediate
6A1C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A1E:	C2-FD       	sbrc r28, 2           ; Skip if Bit in Register is Cleared
6A20:	00-25       	clr r256              ; Clear Register
6A22:	8D-F8       	.data 0xf88d          ; Binary data
6A24:	10-55       	subi r17, 0x50        ; Subtract Immediate
6A26:	8D-F8       	.data 0xf88d          ; Binary data
6A28:	11-65       	ori r17, 0x51         ; Logical OR with Immediate
6A2A:	8D-F8       	.data 0xf88d          ; Binary data
6A2C:	12-45       	sbci r17, 0x52        ; Subtract Immediate with Carry SBI
6A2E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6A30:	A2-70       	andi r26, 0x02        ; Logical AND with Immediate
6A32:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6A34:	A2-61       	ori r26, 0x12         ; Logical OR with Immediate
6A36:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A38:	B5-FD       	sbrc r27, 5           ; Skip if Bit in Register is Cleared
6A3A:	8D-F8       	.data 0xf88d          ; Binary data
6A3C:	14-55       	subi r17, 0x54        ; Subtract Immediate
6A3E:	8D-F8       	.data 0xf88d          ; Binary data
6A40:	15-65       	ori r17, 0x55         ; Logical OR with Immediate
6A42:	8D-F8       	.data 0xf88d          ; Binary data
6A44:	16-45       	sbci r17, 0x56        ; Subtract Immediate with Carry SBI
6A46:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6A48:	45-10       	cpse r4, r5           ; Compare Skip if Equal
6A4A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6A4C:	14-51       	subi r17, 0x14        ; Subtract Immediate
6A4E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A50:	A9-FD       	.data 0xfda9          ; Binary data
6A52:	8D-F8       	.data 0xf88d          ; Binary data
6A54:	18-55       	subi r17, 0x58        ; Subtract Immediate
6A56:	8D-F8       	.data 0xf88d          ; Binary data
6A58:	19-65       	ori r17, 0x59         ; Logical OR with Immediate
6A5A:	8D-F8       	.data 0xf88d          ; Binary data
6A5C:	1A-45       	sbci r17, 0x5a        ; Subtract Immediate with Carry SBI
6A5E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6A60:	A3-70       	andi r26, 0x03        ; Logical AND with Immediate
6A62:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6A64:	A3-61       	ori r26, 0x13         ; Logical OR with Immediate
6A66:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A68:	9D-FD       	.data 0xfd9d          ; Binary data
6A6A:	8D-F8       	.data 0xf88d          ; Binary data
6A6C:	1C-55       	subi r17, 0x5c        ; Subtract Immediate
6A6E:	8D-F8       	.data 0xf88d          ; Binary data
6A70:	1D-65       	ori r17, 0x5d         ; Logical OR with Immediate
6A72:	8D-F8       	.data 0xf88d          ; Binary data
6A74:	1E-45       	sbci r17, 0x5e        ; Subtract Immediate with Carry SBI
6A76:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6A78:	47-10       	cpse r4, r7           ; Compare Skip if Equal
6A7A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6A7C:	1C-51       	subi r17, 0x1c        ; Subtract Immediate
6A7E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A80:	91-FD       	sbrc r25, 1           ; Skip if Bit in Register is Cleared
6A82:	8D-F8       	.data 0xf88d          ; Binary data
6A84:	20-55       	subi r18, 0x50        ; Subtract Immediate
6A86:	8D-F8       	.data 0xf88d          ; Binary data
6A88:	21-65       	ori r18, 0x51         ; Logical OR with Immediate
6A8A:	8D-F8       	.data 0xf88d          ; Binary data
6A8C:	22-45       	sbci r18, 0x52        ; Subtract Immediate with Carry SBI
6A8E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6A90:	A4-70       	andi r26, 0x04        ; Logical AND with Immediate
6A92:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6A94:	A4-61       	ori r26, 0x14         ; Logical OR with Immediate
6A96:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6A98:	85-FD       	sbrc r24, 5           ; Skip if Bit in Register is Cleared
6A9A:	8D-F8       	.data 0xf88d          ; Binary data
6A9C:	24-55       	subi r18, 0x54        ; Subtract Immediate
6A9E:	8D-F8       	.data 0xf88d          ; Binary data
6AA0:	25-65       	ori r18, 0x55         ; Logical OR with Immediate
6AA2:	8D-F8       	.data 0xf88d          ; Binary data
6AA4:	26-45       	sbci r18, 0x56        ; Subtract Immediate with Carry SBI
6AA6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6AA8:	49-10       	cpse r4, r9           ; Compare Skip if Equal
6AAA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6AAC:	24-51       	subi r18, 0x14        ; Subtract Immediate
6AAE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6AB0:	79-FD       	.data 0xfd79          ; Binary data
6AB2:	8D-F8       	.data 0xf88d          ; Binary data
6AB4:	28-55       	subi r18, 0x58        ; Subtract Immediate
6AB6:	8D-F8       	.data 0xf88d          ; Binary data
6AB8:	29-65       	ori r18, 0x59         ; Logical OR with Immediate
6ABA:	8D-F8       	.data 0xf88d          ; Binary data
6ABC:	2A-45       	sbci r18, 0x5a        ; Subtract Immediate with Carry SBI
6ABE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6AC0:	A5-70       	andi r26, 0x05        ; Logical AND with Immediate
6AC2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6AC4:	A5-61       	ori r26, 0x15         ; Logical OR with Immediate
6AC6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6AC8:	6D-FD       	.data 0xfd6d          ; Binary data
6ACA:	8D-F8       	.data 0xf88d          ; Binary data
6ACC:	2C-55       	subi r18, 0x5c        ; Subtract Immediate
6ACE:	8D-F8       	.data 0xf88d          ; Binary data
6AD0:	2D-65       	ori r18, 0x5d         ; Logical OR with Immediate
6AD2:	8D-F8       	.data 0xf88d          ; Binary data
6AD4:	2E-45       	sbci r18, 0x5e        ; Subtract Immediate with Carry SBI
6AD6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6AD8:	4B-10       	cpse r4, r11          ; Compare Skip if Equal
6ADA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6ADC:	2C-51       	subi r18, 0x1c        ; Subtract Immediate
6ADE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6AE0:	61-FD       	sbrc r22, 1           ; Skip if Bit in Register is Cleared
6AE2:	8D-F8       	.data 0xf88d          ; Binary data
6AE4:	30-55       	subi r19, 0x50        ; Subtract Immediate
6AE6:	8D-F8       	.data 0xf88d          ; Binary data
6AE8:	31-65       	ori r19, 0x51         ; Logical OR with Immediate
6AEA:	8D-F8       	.data 0xf88d          ; Binary data
6AEC:	32-45       	sbci r19, 0x52        ; Subtract Immediate with Carry SBI
6AEE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6AF0:	A6-70       	andi r26, 0x06        ; Logical AND with Immediate
6AF2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6AF4:	A6-61       	ori r26, 0x16         ; Logical OR with Immediate
6AF6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6AF8:	55-FD       	sbrc r21, 5           ; Skip if Bit in Register is Cleared
6AFA:	8D-F8       	.data 0xf88d          ; Binary data
6AFC:	34-55       	subi r19, 0x54        ; Subtract Immediate
6AFE:	8D-F8       	.data 0xf88d          ; Binary data
6B00:	35-65       	ori r19, 0x55         ; Logical OR with Immediate
6B02:	8D-F8       	.data 0xf88d          ; Binary data
6B04:	36-45       	sbci r19, 0x56        ; Subtract Immediate with Carry SBI
6B06:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6B08:	4D-10       	cpse r4, r13          ; Compare Skip if Equal
6B0A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6B0C:	34-51       	subi r19, 0x14        ; Subtract Immediate
6B0E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6B10:	49-FD       	.data 0xfd49          ; Binary data
6B12:	8D-F8       	.data 0xf88d          ; Binary data
6B14:	38-55       	subi r19, 0x58        ; Subtract Immediate
6B16:	8D-F8       	.data 0xf88d          ; Binary data
6B18:	39-65       	ori r19, 0x59         ; Logical OR with Immediate
6B1A:	8D-F8       	.data 0xf88d          ; Binary data
6B1C:	3A-45       	sbci r19, 0x5a        ; Subtract Immediate with Carry SBI
6B1E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6B20:	A7-70       	andi r26, 0x07        ; Logical AND with Immediate
6B22:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6B24:	A7-61       	ori r26, 0x17         ; Logical OR with Immediate
6B26:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6B28:	3D-FD       	.data 0xfd3d          ; Binary data
6B2A:	8D-F8       	.data 0xf88d          ; Binary data
6B2C:	3C-55       	subi r19, 0x5c        ; Subtract Immediate
6B2E:	8D-F8       	.data 0xf88d          ; Binary data
6B30:	3D-65       	ori r19, 0x5d         ; Logical OR with Immediate
6B32:	8D-F8       	.data 0xf88d          ; Binary data
6B34:	3E-45       	sbci r19, 0x5e        ; Subtract Immediate with Carry SBI
6B36:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6B38:	4F-10       	cpse r4, r15          ; Compare Skip if Equal
6B3A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6B3C:	3C-51       	subi r19, 0x1c        ; Subtract Immediate
6B3E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6B40:	31-FD       	sbrc r19, 1           ; Skip if Bit in Register is Cleared
6B42:	8D-F8       	.data 0xf88d          ; Binary data
6B44:	40-55       	subi r20, 0x50        ; Subtract Immediate
6B46:	8D-F8       	.data 0xf88d          ; Binary data
6B48:	41-65       	ori r20, 0x51         ; Logical OR with Immediate
6B4A:	8D-F8       	.data 0xf88d          ; Binary data
6B4C:	42-45       	sbci r20, 0x52        ; Subtract Immediate with Carry SBI
6B4E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6B50:	A8-70       	andi r26, 0x08        ; Logical AND with Immediate
6B52:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6B54:	A8-61       	ori r26, 0x18         ; Logical OR with Immediate
6B56:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6B58:	25-FD       	sbrc r18, 5           ; Skip if Bit in Register is Cleared
6B5A:	8D-F8       	.data 0xf88d          ; Binary data
6B5C:	44-55       	subi r20, 0x54        ; Subtract Immediate
6B5E:	8D-F8       	.data 0xf88d          ; Binary data
6B60:	45-65       	ori r20, 0x55         ; Logical OR with Immediate
6B62:	8D-F8       	.data 0xf88d          ; Binary data
6B64:	46-45       	sbci r20, 0x56        ; Subtract Immediate with Carry SBI
6B66:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6B68:	51-10       	cpse r5, r1           ; Compare Skip if Equal
6B6A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6B6C:	44-51       	subi r20, 0x14        ; Subtract Immediate
6B6E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6B70:	19-FD       	.data 0xfd19          ; Binary data
6B72:	8D-F8       	.data 0xf88d          ; Binary data
6B74:	48-55       	subi r20, 0x58        ; Subtract Immediate
6B76:	8D-F8       	.data 0xf88d          ; Binary data
6B78:	49-65       	ori r20, 0x59         ; Logical OR with Immediate
6B7A:	8D-F8       	.data 0xf88d          ; Binary data
6B7C:	4A-45       	sbci r20, 0x5a        ; Subtract Immediate with Carry SBI
6B7E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6B80:	A9-70       	andi r26, 0x09        ; Logical AND with Immediate
6B82:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6B84:	A9-61       	ori r26, 0x19         ; Logical OR with Immediate
6B86:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6B88:	0D-FD       	.data 0xfd0d          ; Binary data
6B8A:	8D-F8       	.data 0xf88d          ; Binary data
6B8C:	4C-55       	subi r20, 0x5c        ; Subtract Immediate
6B8E:	8D-F8       	.data 0xf88d          ; Binary data
6B90:	4D-65       	ori r20, 0x5d         ; Logical OR with Immediate
6B92:	8D-F8       	.data 0xf88d          ; Binary data
6B94:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
6B96:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6B98:	53-10       	cpse r5, r3           ; Compare Skip if Equal
6B9A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6B9C:	4C-51       	subi r20, 0x1c        ; Subtract Immediate
6B9E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6BA0:	01-FD       	sbrc r16, 1           ; Skip if Bit in Register is Cleared
6BA2:	8D-F8       	.data 0xf88d          ; Binary data
6BA4:	50-55       	subi r21, 0x50        ; Subtract Immediate
6BA6:	8D-F8       	.data 0xf88d          ; Binary data
6BA8:	51-65       	ori r21, 0x51         ; Logical OR with Immediate
6BAA:	8D-F8       	.data 0xf88d          ; Binary data
6BAC:	52-45       	sbci r21, 0x52        ; Subtract Immediate with Carry SBI
6BAE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6BB0:	AA-70       	andi r26, 0x0a        ; Logical AND with Immediate
6BB2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6BB4:	AA-61       	ori r26, 0x1a         ; Logical OR with Immediate
6BB6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6BB8:	F5-FC       	sbrc r15, 5           ; Skip if Bit in Register is Cleared
6BBA:	8D-F8       	.data 0xf88d          ; Binary data
6BBC:	54-55       	subi r21, 0x54        ; Subtract Immediate
6BBE:	8D-F8       	.data 0xf88d          ; Binary data
6BC0:	55-65       	ori r21, 0x55         ; Logical OR with Immediate
6BC2:	8D-F8       	.data 0xf88d          ; Binary data
6BC4:	56-45       	sbci r21, 0x56        ; Subtract Immediate with Carry SBI
6BC6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6BC8:	55-10       	cpse r5, r5           ; Compare Skip if Equal
6BCA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6BCC:	54-51       	subi r21, 0x14        ; Subtract Immediate
6BCE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6BD0:	E9-FC       	.data 0xfce9          ; Binary data
6BD2:	8D-F8       	.data 0xf88d          ; Binary data
6BD4:	58-55       	subi r21, 0x58        ; Subtract Immediate
6BD6:	8D-F8       	.data 0xf88d          ; Binary data
6BD8:	59-65       	ori r21, 0x59         ; Logical OR with Immediate
6BDA:	8D-F8       	.data 0xf88d          ; Binary data
6BDC:	5A-45       	sbci r21, 0x5a        ; Subtract Immediate with Carry SBI
6BDE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6BE0:	AB-70       	andi r26, 0x0b        ; Logical AND with Immediate
6BE2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6BE4:	AB-61       	ori r26, 0x1b         ; Logical OR with Immediate
6BE6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6BE8:	DD-FC       	.data 0xfcdd          ; Binary data
6BEA:	8D-F8       	.data 0xf88d          ; Binary data
6BEC:	5C-55       	subi r21, 0x5c        ; Subtract Immediate
6BEE:	8D-F8       	.data 0xf88d          ; Binary data
6BF0:	5D-65       	ori r21, 0x5d         ; Logical OR with Immediate
6BF2:	8D-F8       	.data 0xf88d          ; Binary data
6BF4:	5E-45       	sbci r21, 0x5e        ; Subtract Immediate with Carry SBI
6BF6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6BF8:	57-10       	cpse r5, r7           ; Compare Skip if Equal
6BFA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6BFC:	5C-51       	subi r21, 0x1c        ; Subtract Immediate
6BFE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C00:	D1-FC       	sbrc r13, 1           ; Skip if Bit in Register is Cleared
6C02:	8D-F8       	.data 0xf88d          ; Binary data
6C04:	60-55       	subi r22, 0x50        ; Subtract Immediate
6C06:	8D-F8       	.data 0xf88d          ; Binary data
6C08:	61-65       	ori r22, 0x51         ; Logical OR with Immediate
6C0A:	8D-F8       	.data 0xf88d          ; Binary data
6C0C:	62-45       	sbci r22, 0x52        ; Subtract Immediate with Carry SBI
6C0E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6C10:	AC-70       	andi r26, 0x0c        ; Logical AND with Immediate
6C12:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6C14:	AC-61       	ori r26, 0x1c         ; Logical OR with Immediate
6C16:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C18:	C5-FC       	sbrc r12, 5           ; Skip if Bit in Register is Cleared
6C1A:	8D-F8       	.data 0xf88d          ; Binary data
6C1C:	64-55       	subi r22, 0x54        ; Subtract Immediate
6C1E:	8D-F8       	.data 0xf88d          ; Binary data
6C20:	65-65       	ori r22, 0x55         ; Logical OR with Immediate
6C22:	8D-F8       	.data 0xf88d          ; Binary data
6C24:	66-45       	sbci r22, 0x56        ; Subtract Immediate with Carry SBI
6C26:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6C28:	59-10       	cpse r5, r9           ; Compare Skip if Equal
6C2A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6C2C:	64-51       	subi r22, 0x14        ; Subtract Immediate
6C2E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C30:	B9-FC       	.data 0xfcb9          ; Binary data
6C32:	8D-F8       	.data 0xf88d          ; Binary data
6C34:	68-55       	subi r22, 0x58        ; Subtract Immediate
6C36:	13-26       	clr r531              ; Clear Register
6C38:	8D-F8       	.data 0xf88d          ; Binary data
6C3A:	69-65       	ori r22, 0x59         ; Logical OR with Immediate
6C3C:	8D-F8       	.data 0xf88d          ; Binary data
6C3E:	6A-45       	sbci r22, 0x5a        ; Subtract Immediate with Carry SBI
6C40:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6C42:	AD-70       	andi r26, 0x0d        ; Logical AND with Immediate
6C44:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6C46:	AD-61       	ori r26, 0x1d         ; Logical OR with Immediate
6C48:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C4A:	AC-FC       	.data 0xfcac          ; Binary data
6C4C:	8D-F8       	.data 0xf88d          ; Binary data
6C4E:	6C-55       	subi r22, 0x5c        ; Subtract Immediate
6C50:	8D-F8       	.data 0xf88d          ; Binary data
6C52:	6D-65       	ori r22, 0x5d         ; Logical OR with Immediate
6C54:	8D-F8       	.data 0xf88d          ; Binary data
6C56:	6E-45       	sbci r22, 0x5e        ; Subtract Immediate with Carry SBI
6C58:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6C5A:	5B-10       	cpse r5, r11          ; Compare Skip if Equal
6C5C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6C5E:	6C-51       	subi r22, 0x1c        ; Subtract Immediate
6C60:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C62:	A0-FC       	sbrc r10, 0           ; Skip if Bit in Register is Cleared
6C64:	8D-F8       	.data 0xf88d          ; Binary data
6C66:	70-55       	subi r23, 0x50        ; Subtract Immediate
6C68:	8D-F8       	.data 0xf88d          ; Binary data
6C6A:	71-65       	ori r23, 0x51         ; Logical OR with Immediate
6C6C:	8D-F8       	.data 0xf88d          ; Binary data
6C6E:	72-45       	sbci r23, 0x52        ; Subtract Immediate with Carry SBI
6C70:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6C72:	AE-70       	andi r26, 0x0e        ; Logical AND with Immediate
6C74:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6C76:	AE-61       	ori r26, 0x1e         ; Logical OR with Immediate
6C78:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C7A:	94-FC       	sbrc r9, 4            ; Skip if Bit in Register is Cleared
6C7C:	8D-F8       	.data 0xf88d          ; Binary data
6C7E:	74-55       	subi r23, 0x54        ; Subtract Immediate
6C80:	8D-F8       	.data 0xf88d          ; Binary data
6C82:	75-65       	ori r23, 0x55         ; Logical OR with Immediate
6C84:	8D-F8       	.data 0xf88d          ; Binary data
6C86:	76-45       	sbci r23, 0x56        ; Subtract Immediate with Carry SBI
6C88:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6C8A:	5D-10       	cpse r5, r13          ; Compare Skip if Equal
6C8C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6C8E:	74-51       	subi r23, 0x14        ; Subtract Immediate
6C90:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6C92:	88-FC       	.data 0xfc88          ; Binary data
6C94:	8D-F8       	.data 0xf88d          ; Binary data
6C96:	78-55       	subi r23, 0x58        ; Subtract Immediate
6C98:	8D-F8       	.data 0xf88d          ; Binary data
6C9A:	79-65       	ori r23, 0x59         ; Logical OR with Immediate
6C9C:	8D-F8       	.data 0xf88d          ; Binary data
6C9E:	7A-45       	sbci r23, 0x5a        ; Subtract Immediate with Carry SBI
6CA0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6CA2:	AF-70       	andi r26, 0x0f        ; Logical AND with Immediate
6CA4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6CA6:	AF-61       	ori r26, 0x1f         ; Logical OR with Immediate
6CA8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6CAA:	7C-FC       	.data 0xfc7c          ; Binary data
6CAC:	8D-F8       	.data 0xf88d          ; Binary data
6CAE:	7C-55       	subi r23, 0x5c        ; Subtract Immediate
6CB0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6CB2:	60-08       	sbc r6, r0            ; Subtract with Carry
6CB4:	8D-F8       	.data 0xf88d          ; Binary data
6CB6:	7D-85       	std Y+13, r23         ; Store Indirect From Register to Data Space
6CB8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6CBA:	FC-0A       	sbc r15, r28          ; Subtract with Carry
6CBC:	8D-F8       	.data 0xf88d          ; Binary data
6CBE:	7E-A5       	std Y+46, r23         ; Store Indirect From Register to Data Space
6CC0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6CC2:	7C-50       	subi r23, 0x0c        ; Subtract Immediate
6CC4:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6CC6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6CC8:	8B-FE       	.data 0xfe8b          ; Binary data
6CCA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6CCC:	5F-10       	cpse r5, r15          ; Compare Skip if Equal
6CCE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6CD0:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
6CD2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6CD4:	67-FC       	sbrc r6, 7            ; Skip if Bit in Register is Cleared
6CD6:	8D-F8       	.data 0xf88d          ; Binary data
6CD8:	80-55       	subi r24, 0x50        ; Subtract Immediate
6CDA:	61-27       	clr r865              ; Clear Register
6CDC:	8D-F8       	.data 0xf88d          ; Binary data
6CDE:	81-75       	andi r24, 0x51        ; Logical AND with Immediate
6CE0:	FD-26       	clr r765              ; Clear Register
6CE2:	8D-F8       	.data 0xf88d          ; Binary data
6CE4:	82-65       	ori r24, 0x52         ; Logical OR with Immediate
6CE6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6CE8:	B0-60       	ori r27, 0x00         ; Logical OR with Immediate
6CEA:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6CEC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6CEE:	78-FE       	.data 0xfe78          ; Binary data
6CF0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6CF2:	B0-70       	andi r27, 0x00        ; Logical AND with Immediate
6CF4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6CF6:	B0-61       	ori r27, 0x10         ; Logical OR with Immediate
6CF8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6CFA:	54-FC       	sbrc r5, 4            ; Skip if Bit in Register is Cleared
6CFC:	8D-F8       	.data 0xf88d          ; Binary data
6CFE:	84-55       	subi r24, 0x54        ; Subtract Immediate
6D00:	8D-F8       	.data 0xf88d          ; Binary data
6D02:	85-75       	andi r24, 0x55        ; Logical AND with Immediate
6D04:	8D-F8       	.data 0xf88d          ; Binary data
6D06:	86-65       	ori r24, 0x56         ; Logical OR with Immediate
6D08:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6D0A:	84-50       	subi r24, 0x04        ; Subtract Immediate
6D0C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6D0E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6D10:	67-FE       	sbrs r6, 7            ; Skip if Bit in Register is Set
6D12:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6D14:	61-10       	cpse r6, r1           ; Compare Skip if Equal
6D16:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6D18:	84-51       	subi r24, 0x14        ; Subtract Immediate
6D1A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6D1C:	43-FC       	sbrc r4, 3            ; Skip if Bit in Register is Cleared
6D1E:	8D-F8       	.data 0xf88d          ; Binary data
6D20:	88-55       	subi r24, 0x58        ; Subtract Immediate
6D22:	8D-F8       	.data 0xf88d          ; Binary data
6D24:	89-75       	andi r24, 0x59        ; Logical AND with Immediate
6D26:	8D-F8       	.data 0xf88d          ; Binary data
6D28:	8A-65       	ori r24, 0x5a         ; Logical OR with Immediate
6D2A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6D2C:	B1-60       	ori r27, 0x01         ; Logical OR with Immediate
6D2E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6D30:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6D32:	56-FE       	sbrs r5, 6            ; Skip if Bit in Register is Set
6D34:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6D36:	B1-70       	andi r27, 0x01        ; Logical AND with Immediate
6D38:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6D3A:	B1-61       	ori r27, 0x11         ; Logical OR with Immediate
6D3C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6D3E:	32-FC       	sbrc r3, 2            ; Skip if Bit in Register is Cleared
6D40:	8D-F8       	.data 0xf88d          ; Binary data
6D42:	8C-55       	subi r24, 0x5c        ; Subtract Immediate
6D44:	8D-F8       	.data 0xf88d          ; Binary data
6D46:	8D-85       	std Y+13, r24         ; Store Indirect From Register to Data Space
6D48:	8D-F8       	.data 0xf88d          ; Binary data
6D4A:	8E-A5       	std Y+46, r24         ; Store Indirect From Register to Data Space
6D4C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6D4E:	8C-50       	subi r24, 0x0c        ; Subtract Immediate
6D50:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6D52:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6D54:	45-FE       	sbrs r4, 5            ; Skip if Bit in Register is Set
6D56:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6D58:	63-10       	cpse r6, r3           ; Compare Skip if Equal
6D5A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6D5C:	8C-51       	subi r24, 0x1c        ; Subtract Immediate
6D5E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6D60:	21-FC       	sbrc r2, 1            ; Skip if Bit in Register is Cleared
6D62:	8D-F8       	.data 0xf88d          ; Binary data
6D64:	90-55       	subi r25, 0x50        ; Subtract Immediate
6D66:	5F-27       	clr r863              ; Clear Register
6D68:	8D-F8       	.data 0xf88d          ; Binary data
6D6A:	91-75       	andi r25, 0x51        ; Logical AND with Immediate
6D6C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6D6E:	FE-09       	sbc r31, r14          ; Subtract with Carry
6D70:	8D-F8       	.data 0xf88d          ; Binary data
6D72:	92-95       	swap r25              ; Swap Nibbles
6D74:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6D76:	B2-60       	ori r27, 0x02         ; Logical OR with Immediate
6D78:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6D7A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6D7C:	31-FE       	sbrs r3, 1            ; Skip if Bit in Register is Set
6D7E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6D80:	B2-70       	andi r27, 0x02        ; Logical AND with Immediate
6D82:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6D84:	B2-61       	ori r27, 0x12         ; Logical OR with Immediate
6D86:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6D88:	0D-FC       	.data 0xfc0d          ; Binary data
6D8A:	8D-F8       	.data 0xf88d          ; Binary data
6D8C:	94-55       	subi r25, 0x54        ; Subtract Immediate
6D8E:	8D-F8       	.data 0xf88d          ; Binary data
6D90:	95-75       	andi r25, 0x55        ; Logical AND with Immediate
6D92:	8D-F8       	.data 0xf88d          ; Binary data
6D94:	96-95       	lsr r25               ; Logical Shift Right
6D96:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6D98:	94-50       	subi r25, 0x04        ; Subtract Immediate
6D9A:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6D9C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6D9E:	20-FE       	sbrs r2, 0            ; Skip if Bit in Register is Set
6DA0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6DA2:	65-10       	cpse r6, r5           ; Compare Skip if Equal
6DA4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6DA6:	94-51       	subi r25, 0x14        ; Subtract Immediate
6DA8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6DAA:	FC-FB       	.data 0xfbfc          ; Binary data
6DAC:	8D-F8       	.data 0xf88d          ; Binary data
6DAE:	98-55       	subi r25, 0x58        ; Subtract Immediate
6DB0:	5E-27       	clr r862              ; Clear Register
6DB2:	8D-F8       	.data 0xf88d          ; Binary data
6DB4:	99-75       	andi r25, 0x59        ; Logical AND with Immediate
6DB6:	8D-F8       	.data 0xf88d          ; Binary data
6DB8:	9A-65       	ori r25, 0x5a         ; Logical OR with Immediate
6DBA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6DBC:	B3-60       	ori r27, 0x03         ; Logical OR with Immediate
6DBE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6DC0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6DC2:	0E-FE       	.data 0xfe0e          ; Binary data
6DC4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6DC6:	B3-70       	andi r27, 0x03        ; Logical AND with Immediate
6DC8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6DCA:	B3-61       	ori r27, 0x13         ; Logical OR with Immediate
6DCC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6DCE:	EA-FB       	.data 0xfbea          ; Binary data
6DD0:	8D-F8       	.data 0xf88d          ; Binary data
6DD2:	9C-55       	subi r25, 0x5c        ; Subtract Immediate
6DD4:	8D-F8       	.data 0xf88d          ; Binary data
6DD6:	9D-75       	andi r25, 0x5d        ; Logical AND with Immediate
6DD8:	8D-F8       	.data 0xf88d          ; Binary data
6DDA:	9E-65       	ori r25, 0x5e         ; Logical OR with Immediate
6DDC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6DDE:	9C-50       	subi r25, 0x0c        ; Subtract Immediate
6DE0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6DE2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6DE4:	FD-FD       	.data 0xfdfd          ; Binary data
6DE6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6DE8:	67-10       	cpse r6, r7           ; Compare Skip if Equal
6DEA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6DEC:	9C-51       	subi r25, 0x1c        ; Subtract Immediate
6DEE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6DF0:	D9-FB       	.data 0xfbd9          ; Binary data
6DF2:	8D-F8       	.data 0xf88d          ; Binary data
6DF4:	A0-55       	subi r26, 0x50        ; Subtract Immediate
6DF6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6DF8:	5D-0B       	sbc r21, r29          ; Subtract with Carry
6DFA:	8D-F8       	.data 0xf88d          ; Binary data
6DFC:	A1-B5       	in r26, 0x21          ; Load an I/O Location to Register
6DFE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6E00:	FF-08       	sbc r15, r15          ; Subtract with Carry
6E02:	8D-F8       	.data 0xf88d          ; Binary data
6E04:	A2-85       	std Y+10, r26         ; Store Indirect From Register to Data Space
6E06:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6E08:	B4-60       	ori r27, 0x04         ; Logical OR with Immediate
6E0A:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6E0C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6E0E:	E8-FD       	.data 0xfde8          ; Binary data
6E10:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6E12:	B4-70       	andi r27, 0x04        ; Logical AND with Immediate
6E14:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6E16:	B4-61       	ori r27, 0x14         ; Logical OR with Immediate
6E18:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6E1A:	C4-FB       	bst r28, 4            ; Bit Store from Bit in Register to T Flag in SREG
6E1C:	8D-F8       	.data 0xf88d          ; Binary data
6E1E:	A4-55       	subi r26, 0x54        ; Subtract Immediate
6E20:	8D-F8       	.data 0xf88d          ; Binary data
6E22:	A5-B5       	in r26, 0x25          ; Load an I/O Location to Register
6E24:	8D-F8       	.data 0xf88d          ; Binary data
6E26:	A6-85       	std Y+14, r26         ; Store Indirect From Register to Data Space
6E28:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6E2A:	A4-50       	subi r26, 0x04        ; Subtract Immediate
6E2C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6E2E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6E30:	D7-FD       	sbrc r29, 7           ; Skip if Bit in Register is Cleared
6E32:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6E34:	69-10       	cpse r6, r9           ; Compare Skip if Equal
6E36:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6E38:	A4-51       	subi r26, 0x14        ; Subtract Immediate
6E3A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6E3C:	B3-FB       	bst r27, 3            ; Bit Store from Bit in Register to T Flag in SREG
6E3E:	8D-F8       	.data 0xf88d          ; Binary data
6E40:	A8-55       	subi r26, 0x58        ; Subtract Immediate
6E42:	8D-F8       	.data 0xf88d          ; Binary data
6E44:	A9-B5       	in r26, 0x29          ; Load an I/O Location to Register
6E46:	8D-F8       	.data 0xf88d          ; Binary data
6E48:	AA-85       	std Y+10, r26         ; Store Indirect From Register to Data Space
6E4A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6E4C:	B5-60       	ori r27, 0x05         ; Logical OR with Immediate
6E4E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6E50:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6E52:	C6-FD       	sbrc r28, 6           ; Skip if Bit in Register is Cleared
6E54:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6E56:	B5-70       	andi r27, 0x05        ; Logical AND with Immediate
6E58:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6E5A:	B5-61       	ori r27, 0x15         ; Logical OR with Immediate
6E5C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6E5E:	A2-FB       	bst r26, 2            ; Bit Store from Bit in Register to T Flag in SREG
6E60:	8D-F8       	.data 0xf88d          ; Binary data
6E62:	AC-55       	subi r26, 0x5c        ; Subtract Immediate
6E64:	5C-27       	clr r860              ; Clear Register
6E66:	8D-F8       	.data 0xf88d          ; Binary data
6E68:	AD-75       	andi r26, 0x5d        ; Logical AND with Immediate
6E6A:	8D-F8       	.data 0xf88d          ; Binary data
6E6C:	AE-85       	std Y+14, r26         ; Store Indirect From Register to Data Space
6E6E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6E70:	AC-50       	subi r26, 0x0c        ; Subtract Immediate
6E72:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6E74:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6E76:	B4-FD       	sbrc r27, 4           ; Skip if Bit in Register is Cleared
6E78:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6E7A:	6B-10       	cpse r6, r11          ; Compare Skip if Equal
6E7C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6E7E:	AC-51       	subi r26, 0x1c        ; Subtract Immediate
6E80:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6E82:	90-FB       	bst r25, 0            ; Bit Store from Bit in Register to T Flag in SREG
6E84:	8D-F8       	.data 0xf88d          ; Binary data
6E86:	B0-55       	subi r27, 0x50        ; Subtract Immediate
6E88:	8D-F8       	.data 0xf88d          ; Binary data
6E8A:	B1-75       	andi r27, 0x51        ; Logical AND with Immediate
6E8C:	8D-F8       	.data 0xf88d          ; Binary data
6E8E:	B2-85       	std Y+10, r27         ; Store Indirect From Register to Data Space
6E90:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6E92:	B6-60       	ori r27, 0x06         ; Logical OR with Immediate
6E94:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6E96:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6E98:	A3-FD       	sbrc r26, 3           ; Skip if Bit in Register is Cleared
6E9A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6E9C:	B6-70       	andi r27, 0x06        ; Logical AND with Immediate
6E9E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6EA0:	B6-61       	ori r27, 0x16         ; Logical OR with Immediate
6EA2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6EA4:	7F-FB       	.data 0xfb7f          ; Binary data
6EA6:	8D-F8       	.data 0xf88d          ; Binary data
6EA8:	B4-55       	subi r27, 0x54        ; Subtract Immediate
6EAA:	8D-F8       	.data 0xf88d          ; Binary data
6EAC:	B5-75       	andi r27, 0x55        ; Logical AND with Immediate
6EAE:	8D-F8       	.data 0xf88d          ; Binary data
6EB0:	B6-85       	std Y+14, r27         ; Store Indirect From Register to Data Space
6EB2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6EB4:	B4-50       	subi r27, 0x04        ; Subtract Immediate
6EB6:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6EB8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6EBA:	92-FD       	sbrc r25, 2           ; Skip if Bit in Register is Cleared
6EBC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6EBE:	6D-10       	cpse r6, r13          ; Compare Skip if Equal
6EC0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6EC2:	B4-51       	subi r27, 0x14        ; Subtract Immediate
6EC4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6EC6:	6E-FB       	.data 0xfb6e          ; Binary data
6EC8:	8D-F8       	.data 0xf88d          ; Binary data
6ECA:	B8-55       	subi r27, 0x58        ; Subtract Immediate
6ECC:	8D-F8       	.data 0xf88d          ; Binary data
6ECE:	B9-75       	andi r27, 0x59        ; Logical AND with Immediate
6ED0:	8D-F8       	.data 0xf88d          ; Binary data
6ED2:	BA-85       	std Y+10, r27         ; Store Indirect From Register to Data Space
6ED4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6ED6:	B7-60       	ori r27, 0x07         ; Logical OR with Immediate
6ED8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6EDA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6EDC:	81-FD       	sbrc r24, 1           ; Skip if Bit in Register is Cleared
6EDE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6EE0:	B7-70       	andi r27, 0x07        ; Logical AND with Immediate
6EE2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6EE4:	B7-61       	ori r27, 0x17         ; Logical OR with Immediate
6EE6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6EE8:	5D-FB       	.data 0xfb5d          ; Binary data
6EEA:	8D-F8       	.data 0xf88d          ; Binary data
6EEC:	BC-55       	subi r27, 0x5c        ; Subtract Immediate
6EEE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
6EF0:	5B-08       	sbc r5, r11           ; Subtract with Carry
6EF2:	8D-F8       	.data 0xf88d          ; Binary data
6EF4:	BD-85       	std Y+13, r27         ; Store Indirect From Register to Data Space
6EF6:	8D-F8       	.data 0xf88d          ; Binary data
6EF8:	BE-95-0D-F2 	call 0x6de41a         ; Long Call to a Subroutine
6EFC:	BC-50       	subi r27, 0x0c        ; Subtract Immediate
6EFE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6F00:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6F02:	6E-FD       	.data 0xfd6e          ; Binary data
6F04:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6F06:	6F-10       	cpse r6, r15          ; Compare Skip if Equal
6F08:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6F0A:	BC-51       	subi r27, 0x1c        ; Subtract Immediate
6F0C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6F0E:	4A-FB       	.data 0xfb4a          ; Binary data
6F10:	8D-F8       	.data 0xf88d          ; Binary data
6F12:	C0-55       	subi r28, 0x50        ; Subtract Immediate
6F14:	8D-F8       	.data 0xf88d          ; Binary data
6F16:	C1-B5       	in r28, 0x21          ; Load an I/O Location to Register
6F18:	8D-F8       	.data 0xf88d          ; Binary data
6F1A:	C2-65       	ori r28, 0x52         ; Logical OR with Immediate
6F1C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6F1E:	B8-60       	ori r27, 0x08         ; Logical OR with Immediate
6F20:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6F22:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6F24:	5D-FD       	.data 0xfd5d          ; Binary data
6F26:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6F28:	B8-70       	andi r27, 0x08        ; Logical AND with Immediate
6F2A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6F2C:	B8-61       	ori r27, 0x18         ; Logical OR with Immediate
6F2E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6F30:	39-FB       	.data 0xfb39          ; Binary data
6F32:	8D-F8       	.data 0xf88d          ; Binary data
6F34:	C4-55       	subi r28, 0x54        ; Subtract Immediate
6F36:	8D-F8       	.data 0xf88d          ; Binary data
6F38:	C5-B5       	in r28, 0x25          ; Load an I/O Location to Register
6F3A:	8D-F8       	.data 0xf88d          ; Binary data
6F3C:	C6-65       	ori r28, 0x56         ; Logical OR with Immediate
6F3E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6F40:	C4-50       	subi r28, 0x04        ; Subtract Immediate
6F42:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6F44:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6F46:	4C-FD       	.data 0xfd4c          ; Binary data
6F48:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6F4A:	71-10       	cpse r7, r1           ; Compare Skip if Equal
6F4C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6F4E:	C4-51       	subi r28, 0x14        ; Subtract Immediate
6F50:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6F52:	28-FB       	.data 0xfb28          ; Binary data
6F54:	8D-F8       	.data 0xf88d          ; Binary data
6F56:	C8-55       	subi r28, 0x58        ; Subtract Immediate
6F58:	8D-F8       	.data 0xf88d          ; Binary data
6F5A:	C9-75       	andi r28, 0x59        ; Logical AND with Immediate
6F5C:	8D-F8       	.data 0xf88d          ; Binary data
6F5E:	CA-A5       	std Y+42, r28         ; Store Indirect From Register to Data Space
6F60:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6F62:	B9-60       	ori r27, 0x09         ; Logical OR with Immediate
6F64:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6F66:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6F68:	3B-FD       	.data 0xfd3b          ; Binary data
6F6A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6F6C:	B9-70       	andi r27, 0x09        ; Logical AND with Immediate
6F6E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6F70:	B9-61       	ori r27, 0x19         ; Logical OR with Immediate
6F72:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6F74:	17-FB       	bst r17, 7            ; Bit Store from Bit in Register to T Flag in SREG
6F76:	8D-F8       	.data 0xf88d          ; Binary data
6F78:	CC-55       	subi r28, 0x5c        ; Subtract Immediate
6F7A:	8D-F8       	.data 0xf88d          ; Binary data
6F7C:	CD-75       	andi r28, 0x5d        ; Logical AND with Immediate
6F7E:	8D-F8       	.data 0xf88d          ; Binary data
6F80:	CE-A5       	std Y+46, r28         ; Store Indirect From Register to Data Space
6F82:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6F84:	CC-50       	subi r28, 0x0c        ; Subtract Immediate
6F86:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6F88:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6F8A:	2A-FD       	.data 0xfd2a          ; Binary data
6F8C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6F8E:	73-10       	cpse r7, r3           ; Compare Skip if Equal
6F90:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6F92:	CC-51       	subi r28, 0x1c        ; Subtract Immediate
6F94:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6F96:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
6F98:	8D-F8       	.data 0xf88d          ; Binary data
6F9A:	D0-55       	subi r29, 0x50        ; Subtract Immediate
6F9C:	8D-F8       	.data 0xf88d          ; Binary data
6F9E:	D1-75       	andi r29, 0x51        ; Logical AND with Immediate
6FA0:	8D-F8       	.data 0xf88d          ; Binary data
6FA2:	D2-A5       	std Y+42, r29         ; Store Indirect From Register to Data Space
6FA4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6FA6:	BA-60       	ori r27, 0x0a         ; Logical OR with Immediate
6FA8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6FAA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6FAC:	19-FD       	.data 0xfd19          ; Binary data
6FAE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6FB0:	BA-70       	andi r27, 0x0a        ; Logical AND with Immediate
6FB2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6FB4:	BA-61       	ori r27, 0x1a         ; Logical OR with Immediate
6FB6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6FB8:	F5-FA       	bst r15, 5            ; Bit Store from Bit in Register to T Flag in SREG
6FBA:	8D-F8       	.data 0xf88d          ; Binary data
6FBC:	D4-55       	subi r29, 0x54        ; Subtract Immediate
6FBE:	8D-F8       	.data 0xf88d          ; Binary data
6FC0:	D5-85       	std Y+13, r29         ; Store Indirect From Register to Data Space
6FC2:	FB-23       	and r31, r27          ; Logical AND
6FC4:	8D-F8       	.data 0xf88d          ; Binary data
6FC6:	D6-35       	cpi r29, 0x56         ; Compare with Immediate
6FC8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6FCA:	D4-50       	subi r29, 0x04        ; Subtract Immediate
6FCC:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6FCE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6FD0:	07-FD       	sbrc r16, 7           ; Skip if Bit in Register is Cleared
6FD2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
6FD4:	75-10       	cpse r7, r5           ; Compare Skip if Equal
6FD6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
6FD8:	D4-51       	subi r29, 0x14        ; Subtract Immediate
6FDA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
6FDC:	E3-FA       	bst r14, 3            ; Bit Store from Bit in Register to T Flag in SREG
6FDE:	8D-F8       	.data 0xf88d          ; Binary data
6FE0:	D8-55       	subi r29, 0x58        ; Subtract Immediate
6FE2:	5A-27       	clr r858              ; Clear Register
6FE4:	8D-F8       	.data 0xf88d          ; Binary data
6FE6:	D9-75       	andi r29, 0x59        ; Logical AND with Immediate
6FE8:	8D-F8       	.data 0xf88d          ; Binary data
6FEA:	DA-65       	ori r29, 0x5a         ; Logical OR with Immediate
6FEC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6FEE:	BB-60       	ori r27, 0x0b         ; Logical OR with Immediate
6FF0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
6FF2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
6FF4:	F5-FC       	sbrc r15, 5           ; Skip if Bit in Register is Cleared
6FF6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
6FF8:	BB-70       	andi r27, 0x0b        ; Logical AND with Immediate
6FFA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
6FFC:	BB-61       	ori r27, 0x1b         ; Logical OR with Immediate
6FFE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7000:	D1-FA       	bst r13, 1            ; Bit Store from Bit in Register to T Flag in SREG
7002:	8D-F8       	.data 0xf88d          ; Binary data
7004:	DC-55       	subi r29, 0x5c        ; Subtract Immediate
7006:	8D-F8       	.data 0xf88d          ; Binary data
7008:	DD-75       	andi r29, 0x5d        ; Logical AND with Immediate
700A:	8D-F8       	.data 0xf88d          ; Binary data
700C:	DE-65       	ori r29, 0x5e         ; Logical OR with Immediate
700E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7010:	DC-50       	subi r29, 0x0c        ; Subtract Immediate
7012:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
7014:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7016:	E4-FC       	sbrc r14, 4           ; Skip if Bit in Register is Cleared
7018:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
701A:	77-10       	cpse r7, r7           ; Compare Skip if Equal
701C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
701E:	DC-51       	subi r29, 0x1c        ; Subtract Immediate
7020:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7022:	C0-FA       	bst r12, 0            ; Bit Store from Bit in Register to T Flag in SREG
7024:	8D-F8       	.data 0xf88d          ; Binary data
7026:	E0-55       	subi r30, 0x50        ; Subtract Immediate
7028:	8D-F8       	.data 0xf88d          ; Binary data
702A:	E1-85       	std Y+9, r30          ; Store Indirect From Register to Data Space
702C:	8D-F8       	.data 0xf88d          ; Binary data
702E:	E2-95       	swap r30              ; Swap Nibbles
7030:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7032:	BC-60       	ori r27, 0x0c         ; Logical OR with Immediate
7034:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
7036:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7038:	D3-FC       	sbrc r13, 3           ; Skip if Bit in Register is Cleared
703A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
703C:	BC-70       	andi r27, 0x0c        ; Logical AND with Immediate
703E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7040:	BC-61       	ori r27, 0x1c         ; Logical OR with Immediate
7042:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7044:	AF-FA       	.data 0xfaaf          ; Binary data
7046:	8D-F8       	.data 0xf88d          ; Binary data
7048:	E4-55       	subi r30, 0x54        ; Subtract Immediate
704A:	8D-F8       	.data 0xf88d          ; Binary data
704C:	E5-85       	std Y+13, r30         ; Store Indirect From Register to Data Space
704E:	8D-F8       	.data 0xf88d          ; Binary data
7050:	E6-95       	lsr r30               ; Logical Shift Right
7052:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7054:	E4-50       	subi r30, 0x04        ; Subtract Immediate
7056:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
7058:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
705A:	C2-FC       	sbrc r12, 2           ; Skip if Bit in Register is Cleared
705C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
705E:	79-10       	cpse r7, r9           ; Compare Skip if Equal
7060:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7062:	E4-51       	subi r30, 0x14        ; Subtract Immediate
7064:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7066:	9E-FA       	.data 0xfa9e          ; Binary data
7068:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
706A:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
706C:	8D-F8       	.data 0xf88d          ; Binary data
706E:	E8-35       	cpi r30, 0x58         ; Compare with Immediate
7070:	8D-F8       	.data 0xf88d          ; Binary data
7072:	E9-75       	andi r30, 0x59        ; Logical AND with Immediate
7074:	FF-25       	clr r511              ; Clear Register
7076:	8D-F8       	.data 0xf88d          ; Binary data
7078:	EA-55       	subi r30, 0x5a        ; Subtract Immediate
707A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
707C:	BD-60       	ori r27, 0x0d         ; Logical OR with Immediate
707E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
7080:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7082:	AE-FC       	.data 0xfcae          ; Binary data
7084:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7086:	BD-70       	andi r27, 0x0d        ; Logical AND with Immediate
7088:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
708A:	BD-61       	ori r27, 0x1d         ; Logical OR with Immediate
708C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
708E:	8A-FA       	.data 0xfa8a          ; Binary data
7090:	00-24       	clr r0                ; Clear Register
7092:	8D-F8       	.data 0xf88d          ; Binary data
7094:	EC-45       	sbci r30, 0x5c        ; Subtract Immediate with Carry SBI
7096:	59-26       	clr r601              ; Clear Register
7098:	8D-F8       	.data 0xf88d          ; Binary data
709A:	ED-65       	ori r30, 0x5d         ; Logical OR with Immediate
709C:	8D-F8       	.data 0xf88d          ; Binary data
709E:	EE-55       	subi r30, 0x5e        ; Subtract Immediate
70A0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
70A2:	EC-50       	subi r30, 0x0c        ; Subtract Immediate
70A4:	32-21       	and r19, r2           ; Logical AND
70A6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
70A8:	9B-FC       	.data 0xfc9b          ; Binary data
70AA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
70AC:	7B-10       	cpse r7, r11          ; Compare Skip if Equal
70AE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
70B0:	EC-51       	subi r30, 0x1c        ; Subtract Immediate
70B2:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
70B4:	77-FA       	bst r7, 7             ; Bit Store from Bit in Register to T Flag in SREG
70B6:	8D-F8       	.data 0xf88d          ; Binary data
70B8:	F0-45       	sbci r31, 0x50        ; Subtract Immediate with Carry SBI
70BA:	8D-F8       	.data 0xf88d          ; Binary data
70BC:	F1-65       	ori r31, 0x51         ; Logical OR with Immediate
70BE:	8D-F8       	.data 0xf88d          ; Binary data
70C0:	F2-55       	subi r31, 0x52        ; Subtract Immediate
70C2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
70C4:	BE-60       	ori r27, 0x0e         ; Logical OR with Immediate
70C6:	32-21       	and r19, r2           ; Logical AND
70C8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
70CA:	8A-FC       	.data 0xfc8a          ; Binary data
70CC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
70CE:	BE-70       	andi r27, 0x0e        ; Logical AND with Immediate
70D0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
70D2:	BE-61       	ori r27, 0x1e         ; Logical OR with Immediate
70D4:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
70D6:	66-FA       	bst r6, 6             ; Bit Store from Bit in Register to T Flag in SREG
70D8:	8D-F8       	.data 0xf88d          ; Binary data
70DA:	F4-45       	sbci r31, 0x54        ; Subtract Immediate with Carry SBI
70DC:	8D-F8       	.data 0xf88d          ; Binary data
70DE:	F5-65       	ori r31, 0x55         ; Logical OR with Immediate
70E0:	8D-F8       	.data 0xf88d          ; Binary data
70E2:	F6-55       	subi r31, 0x56        ; Subtract Immediate
70E4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
70E6:	F4-50       	subi r31, 0x04        ; Subtract Immediate
70E8:	32-21       	and r19, r2           ; Logical AND
70EA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
70EC:	79-FC       	.data 0xfc79          ; Binary data
70EE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
70F0:	7D-10       	cpse r7, r13          ; Compare Skip if Equal
70F2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
70F4:	F4-51       	subi r31, 0x14        ; Subtract Immediate
70F6:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
70F8:	55-FA       	bst r5, 5             ; Bit Store from Bit in Register to T Flag in SREG
70FA:	8D-F8       	.data 0xf88d          ; Binary data
70FC:	F8-45       	sbci r31, 0x58        ; Subtract Immediate with Carry SBI
70FE:	58-26       	clr r600              ; Clear Register
7100:	8D-F8       	.data 0xf88d          ; Binary data
7102:	F9-65       	ori r31, 0x59         ; Logical OR with Immediate
7104:	4F-46       	sbci r20, 0x6f        ; Subtract Immediate with Carry SBI
7106:	8D-F8       	.data 0xf88d          ; Binary data
7108:	FA-95       	dec r31               ; Decrement
710A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
710C:	BF-60       	ori r27, 0x0f         ; Logical OR with Immediate
710E:	32-21       	and r19, r2           ; Logical AND
7110:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7112:	66-FC       	sbrc r6, 6            ; Skip if Bit in Register is Cleared
7114:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7116:	BF-70       	andi r27, 0x0f        ; Logical AND with Immediate
7118:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
711A:	BF-61       	ori r27, 0x1f         ; Logical OR with Immediate
711C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
711E:	42-FA       	bst r4, 2             ; Bit Store from Bit in Register to T Flag in SREG
7120:	8D-F8       	.data 0xf88d          ; Binary data
7122:	FC-45       	sbci r31, 0x5c        ; Subtract Immediate with Carry SBI
7124:	8D-F8       	.data 0xf88d          ; Binary data
7126:	FD-65       	ori r31, 0x5d         ; Logical OR with Immediate
7128:	8D-F8       	.data 0xf88d          ; Binary data
712A:	FE-95-0D-F2 	call 0x7de41a         ; Long Call to a Subroutine
712E:	FC-50       	subi r31, 0x0c        ; Subtract Immediate
7130:	32-21       	and r19, r2           ; Logical AND
7132:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7134:	55-FC       	sbrc r5, 5            ; Skip if Bit in Register is Cleared
7136:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7138:	7F-10       	cpse r7, r15          ; Compare Skip if Equal
713A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
713C:	FC-51       	subi r31, 0x1c        ; Subtract Immediate
713E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7140:	31-FA       	bst r3, 1             ; Bit Store from Bit in Register to T Flag in SREG
7142:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
7144:	01-0A       	sbc r0, r17           ; Subtract with Carry
7146:	8D-F8       	.data 0xf88d          ; Binary data
7148:	00-A6       	std Y+40, r0          ; Store Indirect From Register to Data Space
714A:	8D-F8       	.data 0xf88d          ; Binary data
714C:	01-66       	ori r16, 0x61         ; Logical OR with Immediate
714E:	8D-F8       	.data 0xf88d          ; Binary data
7150:	02-56       	subi r16, 0x62        ; Subtract Immediate
7152:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7154:	C0-60       	ori r28, 0x00         ; Logical OR with Immediate
7156:	32-21       	and r19, r2           ; Logical AND
7158:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
715A:	42-FC       	sbrc r4, 2            ; Skip if Bit in Register is Cleared
715C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
715E:	C0-70       	andi r28, 0x00        ; Logical AND with Immediate
7160:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7162:	C0-61       	ori r28, 0x10         ; Logical OR with Immediate
7164:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7166:	1E-FA       	.data 0xfa1e          ; Binary data
7168:	8D-F8       	.data 0xf88d          ; Binary data
716A:	04-A6       	std Y+44, r0          ; Store Indirect From Register to Data Space
716C:	8D-F8       	.data 0xf88d          ; Binary data
716E:	05-66       	ori r16, 0x65         ; Logical OR with Immediate
7170:	8D-F8       	.data 0xf88d          ; Binary data
7172:	06-56       	subi r16, 0x66        ; Subtract Immediate
7174:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7176:	04-60       	ori r16, 0x04         ; Logical OR with Immediate
7178:	32-21       	and r19, r2           ; Logical AND
717A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
717C:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
717E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7180:	81-10       	cpse r8, r1           ; Compare Skip if Equal
7182:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7184:	04-61       	ori r16, 0x14         ; Logical OR with Immediate
7186:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7188:	0D-FA       	.data 0xfa0d          ; Binary data
718A:	8D-F8       	.data 0xf88d          ; Binary data
718C:	08-A6       	std Y+40, r0          ; Store Indirect From Register to Data Space
718E:	8D-F8       	.data 0xf88d          ; Binary data
7190:	09-66       	ori r16, 0x69         ; Logical OR with Immediate
7192:	8D-F8       	.data 0xf88d          ; Binary data
7194:	0A-56       	subi r16, 0x6a        ; Subtract Immediate
7196:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7198:	C1-60       	ori r28, 0x01         ; Logical OR with Immediate
719A:	32-21       	and r19, r2           ; Logical AND
719C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
719E:	20-FC       	sbrc r2, 0            ; Skip if Bit in Register is Cleared
71A0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
71A2:	C1-70       	andi r28, 0x01        ; Logical AND with Immediate
71A4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
71A6:	C1-61       	ori r28, 0x11         ; Logical OR with Immediate
71A8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
71AA:	FC-F9       	.data 0xf9fc          ; Binary data
71AC:	8D-F8       	.data 0xf88d          ; Binary data
71AE:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
71B0:	57-26       	clr r599              ; Clear Register
71B2:	8D-F8       	.data 0xf88d          ; Binary data
71B4:	0D-66       	ori r16, 0x6d         ; Logical OR with Immediate
71B6:	8D-F8       	.data 0xf88d          ; Binary data
71B8:	0E-56       	subi r16, 0x6e        ; Subtract Immediate
71BA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
71BC:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
71BE:	32-21       	and r19, r2           ; Logical AND
71C0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
71C2:	0E-FC       	.data 0xfc0e          ; Binary data
71C4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
71C6:	83-10       	cpse r8, r3           ; Compare Skip if Equal
71C8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
71CA:	0C-61       	ori r16, 0x1c         ; Logical OR with Immediate
71CC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
71CE:	EA-F9       	.data 0xf9ea          ; Binary data
71D0:	8D-F8       	.data 0xf88d          ; Binary data
71D2:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
71D4:	8D-F8       	.data 0xf88d          ; Binary data
71D6:	11-66       	ori r17, 0x61         ; Logical OR with Immediate
71D8:	8D-F8       	.data 0xf88d          ; Binary data
71DA:	12-56       	subi r17, 0x62        ; Subtract Immediate
71DC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
71DE:	C2-60       	ori r28, 0x02         ; Logical OR with Immediate
71E0:	32-21       	and r19, r2           ; Logical AND
71E2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
71E4:	FD-FB       	.data 0xfbfd          ; Binary data
71E6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
71E8:	C2-70       	andi r28, 0x02        ; Logical AND with Immediate
71EA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
71EC:	C2-61       	ori r28, 0x12         ; Logical OR with Immediate
71EE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
71F0:	D9-F9       	.data 0xf9d9          ; Binary data
71F2:	8D-F8       	.data 0xf88d          ; Binary data
71F4:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
71F6:	8D-F8       	.data 0xf88d          ; Binary data
71F8:	15-66       	ori r17, 0x65         ; Logical OR with Immediate
71FA:	8D-F8       	.data 0xf88d          ; Binary data
71FC:	16-56       	subi r17, 0x66        ; Subtract Immediate
71FE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7200:	14-60       	ori r17, 0x04         ; Logical OR with Immediate
7202:	32-21       	and r19, r2           ; Logical AND
7204:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7206:	EC-FB       	.data 0xfbec          ; Binary data
7208:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
720A:	85-10       	cpse r8, r5           ; Compare Skip if Equal
720C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
720E:	14-61       	ori r17, 0x14         ; Logical OR with Immediate
7210:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7212:	C8-F9       	.data 0xf9c8          ; Binary data
7214:	8D-F8       	.data 0xf88d          ; Binary data
7216:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
7218:	8D-F8       	.data 0xf88d          ; Binary data
721A:	19-66       	ori r17, 0x69         ; Logical OR with Immediate
721C:	8D-F8       	.data 0xf88d          ; Binary data
721E:	1A-56       	subi r17, 0x6a        ; Subtract Immediate
7220:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7222:	C3-60       	ori r28, 0x03         ; Logical OR with Immediate
7224:	32-21       	and r19, r2           ; Logical AND
7226:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7228:	DB-FB       	.data 0xfbdb          ; Binary data
722A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
722C:	C3-70       	andi r28, 0x03        ; Logical AND with Immediate
722E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7230:	C3-61       	ori r28, 0x13         ; Logical OR with Immediate
7232:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7234:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
7236:	8D-F8       	.data 0xf88d          ; Binary data
7238:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
723A:	56-23       	and r21, r22          ; Logical AND
723C:	8D-F8       	.data 0xf88d          ; Binary data
723E:	1D-36       	cpi r17, 0x6d         ; Compare with Immediate
7240:	8D-F8       	.data 0xf88d          ; Binary data
7242:	1E-96       	adiw r26, 0x0e        ; Add Immediate to Word
7244:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7246:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
7248:	32-21       	and r19, r2           ; Logical AND
724A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
724C:	C9-FB       	.data 0xfbc9          ; Binary data
724E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7250:	87-10       	cpse r8, r7           ; Compare Skip if Equal
7252:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7254:	1C-61       	ori r17, 0x1c         ; Logical OR with Immediate
7256:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7258:	A5-F9       	bld r26, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
725A:	8D-F8       	.data 0xf88d          ; Binary data
725C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
725E:	8D-F8       	.data 0xf88d          ; Binary data
7260:	21-66       	ori r18, 0x61         ; Logical OR with Immediate
7262:	8D-F8       	.data 0xf88d          ; Binary data
7264:	22-56       	subi r18, 0x62        ; Subtract Immediate
7266:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7268:	C4-60       	ori r28, 0x04         ; Logical OR with Immediate
726A:	32-21       	and r19, r2           ; Logical AND
726C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
726E:	B8-FB       	.data 0xfbb8          ; Binary data
7270:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7272:	C4-70       	andi r28, 0x04        ; Logical AND with Immediate
7274:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7276:	C4-61       	ori r28, 0x14         ; Logical OR with Immediate
7278:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
727A:	94-F9       	bld r25, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
727C:	8D-F8       	.data 0xf88d          ; Binary data
727E:	24-46       	sbci r18, 0x64        ; Subtract Immediate with Carry SBI
7280:	8D-F8       	.data 0xf88d          ; Binary data
7282:	25-66       	ori r18, 0x65         ; Logical OR with Immediate
7284:	8D-F8       	.data 0xf88d          ; Binary data
7286:	26-56       	subi r18, 0x66        ; Subtract Immediate
7288:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
728A:	24-60       	ori r18, 0x04         ; Logical OR with Immediate
728C:	32-21       	and r19, r2           ; Logical AND
728E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7290:	A7-FB       	bst r26, 7            ; Bit Store from Bit in Register to T Flag in SREG
7292:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7294:	89-10       	cpse r8, r9           ; Compare Skip if Equal
7296:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7298:	24-61       	ori r18, 0x14         ; Logical OR with Immediate
729A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
729C:	83-F9       	bld r24, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
729E:	8D-F8       	.data 0xf88d          ; Binary data
72A0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
72A2:	8D-F8       	.data 0xf88d          ; Binary data
72A4:	29-66       	ori r18, 0x69         ; Logical OR with Immediate
72A6:	8D-F8       	.data 0xf88d          ; Binary data
72A8:	2A-56       	subi r18, 0x6a        ; Subtract Immediate
72AA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
72AC:	C5-60       	ori r28, 0x05         ; Logical OR with Immediate
72AE:	32-21       	and r19, r2           ; Logical AND
72B0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
72B2:	96-FB       	bst r25, 6            ; Bit Store from Bit in Register to T Flag in SREG
72B4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
72B6:	C5-70       	andi r28, 0x05        ; Logical AND with Immediate
72B8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
72BA:	C5-61       	ori r28, 0x15         ; Logical OR with Immediate
72BC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
72BE:	72-F9       	bld r23, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
72C0:	8D-F8       	.data 0xf88d          ; Binary data
72C2:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
72C4:	8D-F8       	.data 0xf88d          ; Binary data
72C6:	2D-66       	ori r18, 0x6d         ; Logical OR with Immediate
72C8:	8D-F8       	.data 0xf88d          ; Binary data
72CA:	2E-56       	subi r18, 0x6e        ; Subtract Immediate
72CC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
72CE:	2C-60       	ori r18, 0x0c         ; Logical OR with Immediate
72D0:	32-21       	and r19, r2           ; Logical AND
72D2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
72D4:	85-FB       	bst r24, 5            ; Bit Store from Bit in Register to T Flag in SREG
72D6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
72D8:	8B-10       	cpse r8, r11          ; Compare Skip if Equal
72DA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
72DC:	2C-61       	ori r18, 0x1c         ; Logical OR with Immediate
72DE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
72E0:	61-F9       	bld r22, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
72E2:	8D-F8       	.data 0xf88d          ; Binary data
72E4:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
72E6:	8D-F8       	.data 0xf88d          ; Binary data
72E8:	31-66       	ori r19, 0x61         ; Logical OR with Immediate
72EA:	8D-F8       	.data 0xf88d          ; Binary data
72EC:	32-56       	subi r19, 0x62        ; Subtract Immediate
72EE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
72F0:	C6-60       	ori r28, 0x06         ; Logical OR with Immediate
72F2:	32-21       	and r19, r2           ; Logical AND
72F4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
72F6:	74-FB       	bst r23, 4            ; Bit Store from Bit in Register to T Flag in SREG
72F8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
72FA:	C6-70       	andi r28, 0x06        ; Logical AND with Immediate
72FC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
72FE:	C6-61       	ori r28, 0x16         ; Logical OR with Immediate
7300:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7302:	50-F9       	bld r21, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
7304:	8D-F8       	.data 0xf88d          ; Binary data
7306:	34-46       	sbci r19, 0x64        ; Subtract Immediate with Carry SBI
7308:	8D-F8       	.data 0xf88d          ; Binary data
730A:	35-66       	ori r19, 0x65         ; Logical OR with Immediate
730C:	8D-F8       	.data 0xf88d          ; Binary data
730E:	36-56       	subi r19, 0x66        ; Subtract Immediate
7310:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7312:	34-60       	ori r19, 0x04         ; Logical OR with Immediate
7314:	32-21       	and r19, r2           ; Logical AND
7316:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7318:	63-FB       	bst r22, 3            ; Bit Store from Bit in Register to T Flag in SREG
731A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
731C:	8D-10       	cpse r8, r13          ; Compare Skip if Equal
731E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7320:	34-61       	ori r19, 0x14         ; Logical OR with Immediate
7322:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7324:	3F-F9       	.data 0xf93f          ; Binary data
7326:	8D-F8       	.data 0xf88d          ; Binary data
7328:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
732A:	8D-F8       	.data 0xf88d          ; Binary data
732C:	39-66       	ori r19, 0x69         ; Logical OR with Immediate
732E:	8D-F8       	.data 0xf88d          ; Binary data
7330:	3A-56       	subi r19, 0x6a        ; Subtract Immediate
7332:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7334:	C7-60       	ori r28, 0x07         ; Logical OR with Immediate
7336:	32-21       	and r19, r2           ; Logical AND
7338:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
733A:	52-FB       	bst r21, 2            ; Bit Store from Bit in Register to T Flag in SREG
733C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
733E:	C7-70       	andi r28, 0x07        ; Logical AND with Immediate
7340:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7342:	C7-61       	ori r28, 0x17         ; Logical OR with Immediate
7344:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7346:	2E-F9       	.data 0xf92e          ; Binary data
7348:	8D-F8       	.data 0xf88d          ; Binary data
734A:	3C-46       	sbci r19, 0x6c        ; Subtract Immediate with Carry SBI
734C:	8D-F8       	.data 0xf88d          ; Binary data
734E:	3D-66       	ori r19, 0x6d         ; Logical OR with Immediate
7350:	8D-F8       	.data 0xf88d          ; Binary data
7352:	3E-56       	subi r19, 0x6e        ; Subtract Immediate
7354:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7356:	3C-60       	ori r19, 0x0c         ; Logical OR with Immediate
7358:	32-21       	and r19, r2           ; Logical AND
735A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
735C:	41-FB       	bst r20, 1            ; Bit Store from Bit in Register to T Flag in SREG
735E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7360:	8F-10       	cpse r8, r15          ; Compare Skip if Equal
7362:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7364:	3C-61       	ori r19, 0x1c         ; Logical OR with Immediate
7366:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7368:	1D-F9       	.data 0xf91d          ; Binary data
736A:	8D-F8       	.data 0xf88d          ; Binary data
736C:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
736E:	55-26       	clr r597              ; Clear Register
7370:	8D-F8       	.data 0xf88d          ; Binary data
7372:	41-66       	ori r20, 0x61         ; Logical OR with Immediate
7374:	8D-F8       	.data 0xf88d          ; Binary data
7376:	42-96       	adiw r24, 0x12        ; Add Immediate to Word
7378:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
737A:	C8-60       	ori r28, 0x08         ; Logical OR with Immediate
737C:	32-21       	and r19, r2           ; Logical AND
737E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7380:	2F-FB       	.data 0xfb2f          ; Binary data
7382:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7384:	C8-70       	andi r28, 0x08        ; Logical AND with Immediate
7386:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7388:	C8-61       	ori r28, 0x18         ; Logical OR with Immediate
738A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
738C:	0B-F9       	.data 0xf90b          ; Binary data
738E:	8D-F8       	.data 0xf88d          ; Binary data
7390:	44-46       	sbci r20, 0x64        ; Subtract Immediate with Carry SBI
7392:	8D-F8       	.data 0xf88d          ; Binary data
7394:	45-66       	ori r20, 0x65         ; Logical OR with Immediate
7396:	8D-F8       	.data 0xf88d          ; Binary data
7398:	46-96       	adiw r24, 0x16        ; Add Immediate to Word
739A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
739C:	44-60       	ori r20, 0x04         ; Logical OR with Immediate
739E:	32-21       	and r19, r2           ; Logical AND
73A0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
73A2:	1E-FB       	.data 0xfb1e          ; Binary data
73A4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
73A6:	91-10       	cpse r9, r1           ; Compare Skip if Equal
73A8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
73AA:	44-61       	ori r20, 0x14         ; Logical OR with Immediate
73AC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
73AE:	FA-F8       	.data 0xf8fa          ; Binary data
73B0:	8D-F8       	.data 0xf88d          ; Binary data
73B2:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
73B4:	8D-F8       	.data 0xf88d          ; Binary data
73B6:	49-66       	ori r20, 0x69         ; Logical OR with Immediate
73B8:	8D-F8       	.data 0xf88d          ; Binary data
73BA:	4A-96       	adiw r24, 0x1a        ; Add Immediate to Word
73BC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
73BE:	C9-60       	ori r28, 0x09         ; Logical OR with Immediate
73C0:	32-21       	and r19, r2           ; Logical AND
73C2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
73C4:	0D-FB       	.data 0xfb0d          ; Binary data
73C6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
73C8:	C9-70       	andi r28, 0x09        ; Logical AND with Immediate
73CA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
73CC:	C9-61       	ori r28, 0x19         ; Logical OR with Immediate
73CE:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
73D0:	E9-F8       	.data 0xf8e9          ; Binary data
73D2:	8D-F8       	.data 0xf88d          ; Binary data
73D4:	4C-46       	sbci r20, 0x6c        ; Subtract Immediate with Carry SBI
73D6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
73D8:	54-0B       	sbc r21, r20          ; Subtract with Carry
73DA:	8D-F8       	.data 0xf88d          ; Binary data
73DC:	4D-B6       	in r4, 0x3d           ; Load an I/O Location to Register
73DE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
73E0:	FD-09       	sbc r31, r13          ; Subtract with Carry
73E2:	8D-F8       	.data 0xf88d          ; Binary data
73E4:	4E-96       	adiw r24, 0x1e        ; Add Immediate to Word
73E6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
73E8:	4C-60       	ori r20, 0x0c         ; Logical OR with Immediate
73EA:	32-21       	and r19, r2           ; Logical AND
73EC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
73EE:	F8-FA       	.data 0xfaf8          ; Binary data
73F0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
73F2:	93-10       	cpse r9, r3           ; Compare Skip if Equal
73F4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
73F6:	4C-61       	ori r20, 0x1c         ; Logical OR with Immediate
73F8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
73FA:	D4-F8       	bld r13, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
73FC:	8D-F8       	.data 0xf88d          ; Binary data
73FE:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
7400:	8D-F8       	.data 0xf88d          ; Binary data
7402:	51-B6       	in r5, 0x31           ; Load an I/O Location to Register
7404:	8D-F8       	.data 0xf88d          ; Binary data
7406:	52-96       	adiw r26, 0x12        ; Add Immediate to Word
7408:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
740A:	CA-60       	ori r28, 0x0a         ; Logical OR with Immediate
740C:	32-21       	and r19, r2           ; Logical AND
740E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7410:	E7-FA       	bst r14, 7            ; Bit Store from Bit in Register to T Flag in SREG
7412:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7414:	CA-70       	andi r28, 0x0a        ; Logical AND with Immediate
7416:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7418:	CA-61       	ori r28, 0x1a         ; Logical OR with Immediate
741A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
741C:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
741E:	8D-F8       	.data 0xf88d          ; Binary data
7420:	54-46       	sbci r21, 0x64        ; Subtract Immediate with Carry SBI
7422:	8D-F8       	.data 0xf88d          ; Binary data
7424:	55-B6       	in r5, 0x35           ; Load an I/O Location to Register
7426:	8D-F8       	.data 0xf88d          ; Binary data
7428:	56-96       	adiw r26, 0x16        ; Add Immediate to Word
742A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
742C:	54-60       	ori r21, 0x04         ; Logical OR with Immediate
742E:	32-21       	and r19, r2           ; Logical AND
7430:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7432:	D6-FA       	bst r13, 6            ; Bit Store from Bit in Register to T Flag in SREG
7434:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7436:	95-10       	cpse r9, r5           ; Compare Skip if Equal
7438:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
743A:	54-61       	ori r21, 0x14         ; Logical OR with Immediate
743C:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
743E:	B2-F8       	bld r11, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
7440:	8D-F8       	.data 0xf88d          ; Binary data
7442:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
7444:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
7446:	53-08       	sbc r5, r3            ; Subtract with Carry
7448:	8D-F8       	.data 0xf88d          ; Binary data
744A:	59-86       	std Y+9, r5           ; Store Indirect From Register to Data Space
744C:	FC-26       	clr r764              ; Clear Register
744E:	8D-F8       	.data 0xf88d          ; Binary data
7450:	5A-66       	ori r21, 0x6a         ; Logical OR with Immediate
7452:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7454:	CB-60       	ori r28, 0x0b         ; Logical OR with Immediate
7456:	32-21       	and r19, r2           ; Logical AND
7458:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
745A:	C2-FA       	bst r12, 2            ; Bit Store from Bit in Register to T Flag in SREG
745C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
745E:	CB-70       	andi r28, 0x0b        ; Logical AND with Immediate
7460:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7462:	CB-61       	ori r28, 0x1b         ; Logical OR with Immediate
7464:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7466:	9E-F8       	.data 0xf89e          ; Binary data
7468:	8D-F8       	.data 0xf88d          ; Binary data
746A:	5C-46       	sbci r21, 0x6c        ; Subtract Immediate with Carry SBI
746C:	8D-F8       	.data 0xf88d          ; Binary data
746E:	5D-86       	std Y+13, r5          ; Store Indirect From Register to Data Space
7470:	8D-F8       	.data 0xf88d          ; Binary data
7472:	5E-66       	ori r21, 0x6e         ; Logical OR with Immediate
7474:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7476:	5C-60       	ori r21, 0x0c         ; Logical OR with Immediate
7478:	32-21       	and r19, r2           ; Logical AND
747A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
747C:	B1-FA       	bst r11, 1            ; Bit Store from Bit in Register to T Flag in SREG
747E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7480:	97-10       	cpse r9, r7           ; Compare Skip if Equal
7482:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7484:	5C-61       	ori r21, 0x1c         ; Logical OR with Immediate
7486:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7488:	8D-F8       	.data 0xf88d          ; Binary data
748A:	8D-F8       	.data 0xf88d          ; Binary data
748C:	60-46       	sbci r22, 0x60        ; Subtract Immediate with Carry SBI
748E:	8D-F8       	.data 0xf88d          ; Binary data
7490:	61-B6       	in r6, 0x31           ; Load an I/O Location to Register
7492:	8D-F8       	.data 0xf88d          ; Binary data
7494:	62-96       	adiw r28, 0x12        ; Add Immediate to Word
7496:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7498:	CC-60       	ori r28, 0x0c         ; Logical OR with Immediate
749A:	32-21       	and r19, r2           ; Logical AND
749C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
749E:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
74A0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
74A2:	CC-70       	andi r28, 0x0c        ; Logical AND with Immediate
74A4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
74A6:	CC-61       	ori r28, 0x1c         ; Logical OR with Immediate
74A8:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
74AA:	7C-F8       	.data 0xf87c          ; Binary data
74AC:	8D-F8       	.data 0xf88d          ; Binary data
74AE:	64-46       	sbci r22, 0x64        ; Subtract Immediate with Carry SBI
74B0:	8D-F8       	.data 0xf88d          ; Binary data
74B2:	65-B6       	in r6, 0x35           ; Load an I/O Location to Register
74B4:	8D-F8       	.data 0xf88d          ; Binary data
74B6:	66-96       	adiw r28, 0x16        ; Add Immediate to Word
74B8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
74BA:	64-60       	ori r22, 0x04         ; Logical OR with Immediate
74BC:	32-21       	and r19, r2           ; Logical AND
74BE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
74C0:	8F-FA       	.data 0xfa8f          ; Binary data
74C2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
74C4:	99-10       	cpse r9, r9           ; Compare Skip if Equal
74C6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
74C8:	64-61       	ori r22, 0x14         ; Logical OR with Immediate
74CA:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
74CC:	6B-F8       	.data 0xf86b          ; Binary data
74CE:	8D-F8       	.data 0xf88d          ; Binary data
74D0:	68-46       	sbci r22, 0x68        ; Subtract Immediate with Carry SBI
74D2:	8D-F8       	.data 0xf88d          ; Binary data
74D4:	69-B6       	in r6, 0x39           ; Load an I/O Location to Register
74D6:	8D-F8       	.data 0xf88d          ; Binary data
74D8:	6A-96       	adiw r28, 0x1a        ; Add Immediate to Word
74DA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
74DC:	CD-60       	ori r28, 0x0d         ; Logical OR with Immediate
74DE:	32-21       	and r19, r2           ; Logical AND
74E0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
74E2:	7E-FA       	.data 0xfa7e          ; Binary data
74E4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
74E6:	CD-70       	andi r28, 0x0d        ; Logical AND with Immediate
74E8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
74EA:	CD-61       	ori r28, 0x1d         ; Logical OR with Immediate
74EC:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
74EE:	5A-F8       	.data 0xf85a          ; Binary data
74F0:	8D-F8       	.data 0xf88d          ; Binary data
74F2:	6C-46       	sbci r22, 0x6c        ; Subtract Immediate with Carry SBI
74F4:	8D-F8       	.data 0xf88d          ; Binary data
74F6:	6D-86       	std Y+13, r6          ; Store Indirect From Register to Data Space
74F8:	8D-F8       	.data 0xf88d          ; Binary data
74FA:	6E-66       	ori r22, 0x6e         ; Logical OR with Immediate
74FC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
74FE:	6C-60       	ori r22, 0x0c         ; Logical OR with Immediate
7500:	32-21       	and r19, r2           ; Logical AND
7502:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7504:	6D-FA       	.data 0xfa6d          ; Binary data
7506:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7508:	9B-10       	cpse r9, r11          ; Compare Skip if Equal
750A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
750C:	6C-61       	ori r22, 0x1c         ; Logical OR with Immediate
750E:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7510:	49-F8       	.data 0xf849          ; Binary data
7512:	8D-F8       	.data 0xf88d          ; Binary data
7514:	70-46       	sbci r23, 0x60        ; Subtract Immediate with Carry SBI
7516:	8D-F8       	.data 0xf88d          ; Binary data
7518:	71-86       	std Y+9, r7           ; Store Indirect From Register to Data Space
751A:	8D-F8       	.data 0xf88d          ; Binary data
751C:	72-66       	ori r23, 0x62         ; Logical OR with Immediate
751E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7520:	CE-60       	ori r28, 0x0e         ; Logical OR with Immediate
7522:	32-21       	and r19, r2           ; Logical AND
7524:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7526:	5C-FA       	.data 0xfa5c          ; Binary data
7528:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
752A:	CE-70       	andi r28, 0x0e        ; Logical AND with Immediate
752C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
752E:	CE-61       	ori r28, 0x1e         ; Logical OR with Immediate
7530:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7532:	38-F8       	.data 0xf838          ; Binary data
7534:	8D-F8       	.data 0xf88d          ; Binary data
7536:	74-46       	sbci r23, 0x64        ; Subtract Immediate with Carry SBI
7538:	8D-F8       	.data 0xf88d          ; Binary data
753A:	75-86       	std Y+13, r7          ; Store Indirect From Register to Data Space
753C:	8D-F8       	.data 0xf88d          ; Binary data
753E:	76-66       	ori r23, 0x66         ; Logical OR with Immediate
7540:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7542:	74-60       	ori r23, 0x04         ; Logical OR with Immediate
7544:	32-21       	and r19, r2           ; Logical AND
7546:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7548:	4B-FA       	.data 0xfa4b          ; Binary data
754A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
754C:	9D-10       	cpse r9, r13          ; Compare Skip if Equal
754E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7550:	74-61       	ori r23, 0x14         ; Logical OR with Immediate
7552:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7554:	27-F8       	bld r2, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
7556:	8D-F8       	.data 0xf88d          ; Binary data
7558:	78-46       	sbci r23, 0x68        ; Subtract Immediate with Carry SBI
755A:	8D-F8       	.data 0xf88d          ; Binary data
755C:	79-86       	std Y+9, r7           ; Store Indirect From Register to Data Space
755E:	8D-F8       	.data 0xf88d          ; Binary data
7560:	7A-66       	ori r23, 0x6a         ; Logical OR with Immediate
7562:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7564:	CF-60       	ori r28, 0x0f         ; Logical OR with Immediate
7566:	32-21       	and r19, r2           ; Logical AND
7568:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
756A:	3A-FA       	.data 0xfa3a          ; Binary data
756C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
756E:	CF-70       	andi r28, 0x0f        ; Logical AND with Immediate
7570:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7572:	CF-61       	ori r28, 0x1f         ; Logical OR with Immediate
7574:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
7576:	16-F8       	bld r1, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
7578:	8D-F8       	.data 0xf88d          ; Binary data
757A:	7C-46       	sbci r23, 0x6c        ; Subtract Immediate with Carry SBI
757C:	52-26       	clr r594              ; Clear Register
757E:	8D-F8       	.data 0xf88d          ; Binary data
7580:	7D-66       	ori r23, 0x6d         ; Logical OR with Immediate
7582:	FB-23       	and r31, r27          ; Logical AND
7584:	8D-F8       	.data 0xf88d          ; Binary data
7586:	7E-36       	cpi r23, 0x6e         ; Compare with Immediate
7588:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
758A:	7C-60       	ori r23, 0x0c         ; Logical OR with Immediate
758C:	32-21       	and r19, r2           ; Logical AND
758E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7590:	27-FA       	bst r2, 7             ; Bit Store from Bit in Register to T Flag in SREG
7592:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7594:	9F-10       	cpse r9, r15          ; Compare Skip if Equal
7596:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7598:	7C-61       	ori r23, 0x1c         ; Logical OR with Immediate
759A:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
759C:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
759E:	8D-F8       	.data 0xf88d          ; Binary data
75A0:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
75A2:	8D-F8       	.data 0xf88d          ; Binary data
75A4:	81-66       	ori r24, 0x61         ; Logical OR with Immediate
75A6:	8D-F8       	.data 0xf88d          ; Binary data
75A8:	82-56       	subi r24, 0x62        ; Subtract Immediate
75AA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
75AC:	D0-60       	ori r29, 0x00         ; Logical OR with Immediate
75AE:	32-21       	and r19, r2           ; Logical AND
75B0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
75B2:	16-FA       	bst r1, 6             ; Bit Store from Bit in Register to T Flag in SREG
75B4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
75B6:	D0-70       	andi r29, 0x00        ; Logical AND with Immediate
75B8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
75BA:	D0-61       	ori r29, 0x10         ; Logical OR with Immediate
75BC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
75BE:	F2-FF       	sbrs r31, 2           ; Skip if Bit in Register is Set
75C0:	8D-F8       	.data 0xf88d          ; Binary data
75C2:	84-46       	sbci r24, 0x64        ; Subtract Immediate with Carry SBI
75C4:	8D-F8       	.data 0xf88d          ; Binary data
75C6:	85-66       	ori r24, 0x65         ; Logical OR with Immediate
75C8:	8D-F8       	.data 0xf88d          ; Binary data
75CA:	86-56       	subi r24, 0x66        ; Subtract Immediate
75CC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
75CE:	84-60       	ori r24, 0x04         ; Logical OR with Immediate
75D0:	32-21       	and r19, r2           ; Logical AND
75D2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
75D4:	05-FA       	bst r0, 5             ; Bit Store from Bit in Register to T Flag in SREG
75D6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
75D8:	A1-10       	cpse r10, r1          ; Compare Skip if Equal
75DA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
75DC:	84-61       	ori r24, 0x14         ; Logical OR with Immediate
75DE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
75E0:	E1-FF       	sbrs r30, 1           ; Skip if Bit in Register is Set
75E2:	8D-F8       	.data 0xf88d          ; Binary data
75E4:	88-46       	sbci r24, 0x68        ; Subtract Immediate with Carry SBI
75E6:	8D-F8       	.data 0xf88d          ; Binary data
75E8:	89-66       	ori r24, 0x69         ; Logical OR with Immediate
75EA:	8D-F8       	.data 0xf88d          ; Binary data
75EC:	8A-56       	subi r24, 0x6a        ; Subtract Immediate
75EE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
75F0:	D1-60       	ori r29, 0x01         ; Logical OR with Immediate
75F2:	32-21       	and r19, r2           ; Logical AND
75F4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
75F6:	F4-F9       	bld r31, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
75F8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
75FA:	D1-70       	andi r29, 0x01        ; Logical AND with Immediate
75FC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
75FE:	D1-61       	ori r29, 0x11         ; Logical OR with Immediate
7600:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7602:	D0-FF       	sbrs r29, 0           ; Skip if Bit in Register is Set
7604:	8D-F8       	.data 0xf88d          ; Binary data
7606:	8C-46       	sbci r24, 0x6c        ; Subtract Immediate with Carry SBI
7608:	8D-F8       	.data 0xf88d          ; Binary data
760A:	8D-66       	ori r24, 0x6d         ; Logical OR with Immediate
760C:	8D-F8       	.data 0xf88d          ; Binary data
760E:	8E-56       	subi r24, 0x6e        ; Subtract Immediate
7610:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7612:	8C-60       	ori r24, 0x0c         ; Logical OR with Immediate
7614:	32-21       	and r19, r2           ; Logical AND
7616:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7618:	E3-F9       	bld r30, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
761A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
761C:	A3-10       	cpse r10, r3          ; Compare Skip if Equal
761E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7620:	8C-61       	ori r24, 0x1c         ; Logical OR with Immediate
7622:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7624:	BF-FF       	.data 0xffbf          ; Binary data
7626:	8D-F8       	.data 0xf88d          ; Binary data
7628:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
762A:	51-26       	clr r593              ; Clear Register
762C:	8D-F8       	.data 0xf88d          ; Binary data
762E:	91-66       	ori r25, 0x61         ; Logical OR with Immediate
7630:	8D-F8       	.data 0xf88d          ; Binary data
7632:	92-56       	subi r25, 0x62        ; Subtract Immediate
7634:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7636:	D2-60       	ori r29, 0x02         ; Logical OR with Immediate
7638:	32-21       	and r19, r2           ; Logical AND
763A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
763C:	D1-F9       	bld r29, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
763E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7640:	D2-70       	andi r29, 0x02        ; Logical AND with Immediate
7642:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7644:	D2-61       	ori r29, 0x12         ; Logical OR with Immediate
7646:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7648:	AD-FF       	.data 0xffad          ; Binary data
764A:	8D-F8       	.data 0xf88d          ; Binary data
764C:	94-46       	sbci r25, 0x64        ; Subtract Immediate with Carry SBI
764E:	8D-F8       	.data 0xf88d          ; Binary data
7650:	95-66       	ori r25, 0x65         ; Logical OR with Immediate
7652:	8D-F8       	.data 0xf88d          ; Binary data
7654:	96-56       	subi r25, 0x66        ; Subtract Immediate
7656:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7658:	94-60       	ori r25, 0x04         ; Logical OR with Immediate
765A:	32-21       	and r19, r2           ; Logical AND
765C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
765E:	C0-F9       	bld r28, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
7660:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7662:	A5-10       	cpse r10, r5          ; Compare Skip if Equal
7664:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7666:	94-61       	ori r25, 0x14         ; Logical OR with Immediate
7668:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
766A:	9C-FF       	.data 0xff9c          ; Binary data
766C:	8D-F8       	.data 0xf88d          ; Binary data
766E:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
7670:	8D-F8       	.data 0xf88d          ; Binary data
7672:	99-66       	ori r25, 0x69         ; Logical OR with Immediate
7674:	8D-F8       	.data 0xf88d          ; Binary data
7676:	9A-56       	subi r25, 0x6a        ; Subtract Immediate
7678:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
767A:	D3-60       	ori r29, 0x03         ; Logical OR with Immediate
767C:	32-21       	and r19, r2           ; Logical AND
767E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7680:	AF-F9       	.data 0xf9af          ; Binary data
7682:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7684:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
7686:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7688:	D3-61       	ori r29, 0x13         ; Logical OR with Immediate
768A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
768C:	8B-FF       	.data 0xff8b          ; Binary data
768E:	8D-F8       	.data 0xf88d          ; Binary data
7690:	9C-46       	sbci r25, 0x6c        ; Subtract Immediate with Carry SBI
7692:	8D-F8       	.data 0xf88d          ; Binary data
7694:	9D-66       	ori r25, 0x6d         ; Logical OR with Immediate
7696:	8D-F8       	.data 0xf88d          ; Binary data
7698:	9E-56       	subi r25, 0x6e        ; Subtract Immediate
769A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
769C:	9C-60       	ori r25, 0x0c         ; Logical OR with Immediate
769E:	32-21       	and r19, r2           ; Logical AND
76A0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
76A2:	9E-F9       	.data 0xf99e          ; Binary data
76A4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
76A6:	A7-10       	cpse r10, r7          ; Compare Skip if Equal
76A8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
76AA:	9C-61       	ori r25, 0x1c         ; Logical OR with Immediate
76AC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
76AE:	7A-FF       	.data 0xff7a          ; Binary data
76B0:	8D-F8       	.data 0xf88d          ; Binary data
76B2:	A0-46       	sbci r26, 0x60        ; Subtract Immediate with Carry SBI
76B4:	4F-25       	clr r335              ; Clear Register
76B6:	8D-F8       	.data 0xf88d          ; Binary data
76B8:	A1-56       	subi r26, 0x61        ; Subtract Immediate
76BA:	8D-F8       	.data 0xf88d          ; Binary data
76BC:	A2-76       	andi r26, 0x62        ; Logical AND with Immediate
76BE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
76C0:	D4-60       	ori r29, 0x04         ; Logical OR with Immediate
76C2:	32-21       	and r19, r2           ; Logical AND
76C4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
76C6:	8C-F9       	.data 0xf98c          ; Binary data
76C8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
76CA:	D4-70       	andi r29, 0x04        ; Logical AND with Immediate
76CC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
76CE:	D4-61       	ori r29, 0x14         ; Logical OR with Immediate
76D0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
76D2:	68-FF       	.data 0xff68          ; Binary data
76D4:	8D-F8       	.data 0xf88d          ; Binary data
76D6:	A4-46       	sbci r26, 0x64        ; Subtract Immediate with Carry SBI
76D8:	8D-F8       	.data 0xf88d          ; Binary data
76DA:	A5-56       	subi r26, 0x65        ; Subtract Immediate
76DC:	8D-F8       	.data 0xf88d          ; Binary data
76DE:	A6-76       	andi r26, 0x66        ; Logical AND with Immediate
76E0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
76E2:	A4-60       	ori r26, 0x04         ; Logical OR with Immediate
76E4:	32-21       	and r19, r2           ; Logical AND
76E6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
76E8:	7B-F9       	.data 0xf97b          ; Binary data
76EA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
76EC:	A9-10       	cpse r10, r9          ; Compare Skip if Equal
76EE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
76F0:	A4-61       	ori r26, 0x14         ; Logical OR with Immediate
76F2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
76F4:	57-FF       	sbrs r21, 7           ; Skip if Bit in Register is Set
76F6:	8D-F8       	.data 0xf88d          ; Binary data
76F8:	A8-46       	sbci r26, 0x68        ; Subtract Immediate with Carry SBI
76FA:	8D-F8       	.data 0xf88d          ; Binary data
76FC:	A9-56       	subi r26, 0x69        ; Subtract Immediate
76FE:	8D-F8       	.data 0xf88d          ; Binary data
7700:	AA-76       	andi r26, 0x6a        ; Logical AND with Immediate
7702:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7704:	D5-60       	ori r29, 0x05         ; Logical OR with Immediate
7706:	32-21       	and r19, r2           ; Logical AND
7708:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
770A:	6A-F9       	.data 0xf96a          ; Binary data
770C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
770E:	D5-70       	andi r29, 0x05        ; Logical AND with Immediate
7710:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7712:	D5-61       	ori r29, 0x15         ; Logical OR with Immediate
7714:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7716:	46-FF       	sbrs r20, 6           ; Skip if Bit in Register is Set
7718:	8D-F8       	.data 0xf88d          ; Binary data
771A:	AC-46       	sbci r26, 0x6c        ; Subtract Immediate with Carry SBI
771C:	8D-F8       	.data 0xf88d          ; Binary data
771E:	AD-56       	subi r26, 0x6d        ; Subtract Immediate
7720:	8D-F8       	.data 0xf88d          ; Binary data
7722:	AE-76       	andi r26, 0x6e        ; Logical AND with Immediate
7724:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7726:	AC-60       	ori r26, 0x0c         ; Logical OR with Immediate
7728:	32-21       	and r19, r2           ; Logical AND
772A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
772C:	59-F9       	.data 0xf959          ; Binary data
772E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7730:	AB-10       	cpse r10, r11         ; Compare Skip if Equal
7732:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7734:	AC-61       	ori r26, 0x1c         ; Logical OR with Immediate
7736:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7738:	35-FF       	sbrs r19, 5           ; Skip if Bit in Register is Set
773A:	8D-F8       	.data 0xf88d          ; Binary data
773C:	B0-A6       	std Y+40, r11         ; Store Indirect From Register to Data Space
773E:	4E-23       	and r20, r30          ; Logical AND
7740:	8D-F8       	.data 0xf88d          ; Binary data
7742:	B1-36       	cpi r27, 0x61         ; Compare with Immediate
7744:	3D-46       	sbci r19, 0x6d        ; Subtract Immediate with Carry SBI
7746:	8D-F8       	.data 0xf88d          ; Binary data
7748:	B2-76       	andi r27, 0x62        ; Logical AND with Immediate
774A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
774C:	D6-60       	ori r29, 0x06         ; Logical OR with Immediate
774E:	32-21       	and r19, r2           ; Logical AND
7750:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7752:	46-F9       	bld r20, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
7754:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7756:	D6-70       	andi r29, 0x06        ; Logical AND with Immediate
7758:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
775A:	D6-61       	ori r29, 0x16         ; Logical OR with Immediate
775C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
775E:	22-FF       	sbrs r18, 2           ; Skip if Bit in Register is Set
7760:	8D-F8       	.data 0xf88d          ; Binary data
7762:	B4-A6       	std Y+44, r11         ; Store Indirect From Register to Data Space
7764:	4E-24       	clr r78               ; Clear Register
7766:	8D-F8       	.data 0xf88d          ; Binary data
7768:	B5-46       	sbci r27, 0x65        ; Subtract Immediate with Carry SBI
776A:	8D-F8       	.data 0xf88d          ; Binary data
776C:	B6-56       	subi r27, 0x66        ; Subtract Immediate
776E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7770:	B4-60       	ori r27, 0x04         ; Logical OR with Immediate
7772:	32-21       	and r19, r2           ; Logical AND
7774:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7776:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
7778:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
777A:	AD-10       	cpse r10, r13         ; Compare Skip if Equal
777C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
777E:	B4-61       	ori r27, 0x14         ; Logical OR with Immediate
7780:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7782:	10-FF       	sbrs r17, 0           ; Skip if Bit in Register is Set
7784:	8D-F8       	.data 0xf88d          ; Binary data
7786:	B8-A6       	std Y+40, r11         ; Store Indirect From Register to Data Space
7788:	8D-F8       	.data 0xf88d          ; Binary data
778A:	B9-46       	sbci r27, 0x69        ; Subtract Immediate with Carry SBI
778C:	8D-F8       	.data 0xf88d          ; Binary data
778E:	BA-56       	subi r27, 0x6a        ; Subtract Immediate
7790:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7792:	D7-60       	ori r29, 0x07         ; Logical OR with Immediate
7794:	32-21       	and r19, r2           ; Logical AND
7796:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7798:	23-F9       	bld r18, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
779A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
779C:	D7-70       	andi r29, 0x07        ; Logical AND with Immediate
779E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
77A0:	D7-61       	ori r29, 0x17         ; Logical OR with Immediate
77A2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
77A4:	FF-FE       	.data 0xfeff          ; Binary data
77A6:	8D-F8       	.data 0xf88d          ; Binary data
77A8:	BC-A6       	std Y+44, r11         ; Store Indirect From Register to Data Space
77AA:	8D-F8       	.data 0xf88d          ; Binary data
77AC:	BD-46       	sbci r27, 0x6d        ; Subtract Immediate with Carry SBI
77AE:	8D-F8       	.data 0xf88d          ; Binary data
77B0:	BE-56       	subi r27, 0x6e        ; Subtract Immediate
77B2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
77B4:	BC-60       	ori r27, 0x0c         ; Logical OR with Immediate
77B6:	32-21       	and r19, r2           ; Logical AND
77B8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
77BA:	12-F9       	bld r17, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
77BC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
77BE:	AF-10       	cpse r10, r15         ; Compare Skip if Equal
77C0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
77C2:	BC-61       	ori r27, 0x1c         ; Logical OR with Immediate
77C4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
77C6:	EE-FE       	.data 0xfeee          ; Binary data
77C8:	8D-F8       	.data 0xf88d          ; Binary data
77CA:	C0-A6       	std Y+40, r12         ; Store Indirect From Register to Data Space
77CC:	8D-F8       	.data 0xf88d          ; Binary data
77CE:	C1-46       	sbci r28, 0x61        ; Subtract Immediate with Carry SBI
77D0:	FF-26       	clr r767              ; Clear Register
77D2:	8D-F8       	.data 0xf88d          ; Binary data
77D4:	C2-66       	ori r28, 0x62         ; Logical OR with Immediate
77D6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
77D8:	D8-60       	ori r29, 0x08         ; Logical OR with Immediate
77DA:	32-21       	and r19, r2           ; Logical AND
77DC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
77DE:	00-F9       	bld r16, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
77E0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
77E2:	D8-70       	andi r29, 0x08        ; Logical AND with Immediate
77E4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
77E6:	D8-61       	ori r29, 0x18         ; Logical OR with Immediate
77E8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
77EA:	DC-FE       	.data 0xfedc          ; Binary data
77EC:	8D-F8       	.data 0xf88d          ; Binary data
77EE:	C4-A6       	std Y+44, r12         ; Store Indirect From Register to Data Space
77F0:	8D-F8       	.data 0xf88d          ; Binary data
77F2:	C5-46       	sbci r28, 0x65        ; Subtract Immediate with Carry SBI
77F4:	8D-F8       	.data 0xf88d          ; Binary data
77F6:	C6-66       	ori r28, 0x66         ; Logical OR with Immediate
77F8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
77FA:	C4-60       	ori r28, 0x04         ; Logical OR with Immediate
77FC:	32-21       	and r19, r2           ; Logical AND
77FE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7800:	EF-F8       	.data 0xf8ef          ; Binary data
7802:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7804:	B1-10       	cpse r11, r1          ; Compare Skip if Equal
7806:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7808:	C4-61       	ori r28, 0x14         ; Logical OR with Immediate
780A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
780C:	CB-FE       	.data 0xfecb          ; Binary data
780E:	8D-F8       	.data 0xf88d          ; Binary data
7810:	C8-A6       	std Y+40, r12         ; Store Indirect From Register to Data Space
7812:	8D-F8       	.data 0xf88d          ; Binary data
7814:	C9-46       	sbci r28, 0x69        ; Subtract Immediate with Carry SBI
7816:	8D-F8       	.data 0xf88d          ; Binary data
7818:	CA-66       	ori r28, 0x6a         ; Logical OR with Immediate
781A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
781C:	D9-60       	ori r29, 0x09         ; Logical OR with Immediate
781E:	32-21       	and r19, r2           ; Logical AND
7820:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7822:	DE-F8       	.data 0xf8de          ; Binary data
7824:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7826:	D9-70       	andi r29, 0x09        ; Logical AND with Immediate
7828:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
782A:	D9-61       	ori r29, 0x19         ; Logical OR with Immediate
782C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
782E:	BA-FE       	.data 0xfeba          ; Binary data
7830:	00-24       	clr r0                ; Clear Register
7832:	8D-F8       	.data 0xf88d          ; Binary data
7834:	CC-46       	sbci r28, 0x6c        ; Subtract Immediate with Carry SBI
7836:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
7838:	4D-08       	sbc r4, r13           ; Subtract with Carry
783A:	8D-F8       	.data 0xf88d          ; Binary data
783C:	CD-86       	std Y+13, r12         ; Store Indirect From Register to Data Space
783E:	8D-F8       	.data 0xf88d          ; Binary data
7840:	CE-66       	ori r28, 0x6e         ; Logical OR with Immediate
7842:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7844:	CC-60       	ori r28, 0x0c         ; Logical OR with Immediate
7846:	32-21       	and r19, r2           ; Logical AND
7848:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
784A:	CA-F8       	.data 0xf8ca          ; Binary data
784C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
784E:	B3-10       	cpse r11, r3          ; Compare Skip if Equal
7850:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7852:	CC-61       	ori r28, 0x1c         ; Logical OR with Immediate
7854:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7856:	A6-FE       	sbrs r10, 6           ; Skip if Bit in Register is Set
7858:	8D-F8       	.data 0xf88d          ; Binary data
785A:	D0-46       	sbci r29, 0x60        ; Subtract Immediate with Carry SBI
785C:	8D-F8       	.data 0xf88d          ; Binary data
785E:	D1-86       	std Y+9, r13          ; Store Indirect From Register to Data Space
7860:	8D-F8       	.data 0xf88d          ; Binary data
7862:	D2-66       	ori r29, 0x62         ; Logical OR with Immediate
7864:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7866:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
7868:	32-21       	and r19, r2           ; Logical AND
786A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
786C:	B9-F8       	.data 0xf8b9          ; Binary data
786E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7870:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
7872:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7874:	DA-61       	ori r29, 0x1a         ; Logical OR with Immediate
7876:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7878:	95-FE       	sbrs r9, 5            ; Skip if Bit in Register is Set
787A:	8D-F8       	.data 0xf88d          ; Binary data
787C:	D4-46       	sbci r29, 0x64        ; Subtract Immediate with Carry SBI
787E:	8D-F8       	.data 0xf88d          ; Binary data
7880:	D5-86       	std Y+13, r13         ; Store Indirect From Register to Data Space
7882:	8D-F8       	.data 0xf88d          ; Binary data
7884:	D6-66       	ori r29, 0x66         ; Logical OR with Immediate
7886:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7888:	D4-60       	ori r29, 0x04         ; Logical OR with Immediate
788A:	32-21       	and r19, r2           ; Logical AND
788C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
788E:	A8-F8       	.data 0xf8a8          ; Binary data
7890:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7892:	B5-10       	cpse r11, r5          ; Compare Skip if Equal
7894:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7896:	D4-61       	ori r29, 0x14         ; Logical OR with Immediate
7898:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
789A:	84-FE       	sbrs r8, 4            ; Skip if Bit in Register is Set
789C:	8D-F8       	.data 0xf88d          ; Binary data
789E:	D8-46       	sbci r29, 0x68        ; Subtract Immediate with Carry SBI
78A0:	8D-F8       	.data 0xf88d          ; Binary data
78A2:	D9-86       	std Y+9, r13          ; Store Indirect From Register to Data Space
78A4:	8D-F8       	.data 0xf88d          ; Binary data
78A6:	DA-66       	ori r29, 0x6a         ; Logical OR with Immediate
78A8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
78AA:	DB-60       	ori r29, 0x0b         ; Logical OR with Immediate
78AC:	32-21       	and r19, r2           ; Logical AND
78AE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
78B0:	97-F8       	bld r9, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
78B2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
78B4:	DB-70       	andi r29, 0x0b        ; Logical AND with Immediate
78B6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
78B8:	DB-61       	ori r29, 0x1b         ; Logical OR with Immediate
78BA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
78BC:	73-FE       	sbrs r7, 3            ; Skip if Bit in Register is Set
78BE:	8D-F8       	.data 0xf88d          ; Binary data
78C0:	DC-46       	sbci r29, 0x6c        ; Subtract Immediate with Carry SBI
78C2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
78C4:	4C-09       	sbc r20, r12          ; Subtract with Carry
78C6:	8D-F8       	.data 0xf88d          ; Binary data
78C8:	DD-96       	adiw r26, 0x3d        ; Add Immediate to Word
78CA:	8D-F8       	.data 0xf88d          ; Binary data
78CC:	DE-56       	subi r29, 0x6e        ; Subtract Immediate
78CE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
78D0:	DC-60       	ori r29, 0x0c         ; Logical OR with Immediate
78D2:	32-21       	and r19, r2           ; Logical AND
78D4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
78D6:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
78D8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
78DA:	B7-10       	cpse r11, r7          ; Compare Skip if Equal
78DC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
78DE:	DC-61       	ori r29, 0x1c         ; Logical OR with Immediate
78E0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
78E2:	60-FE       	sbrs r6, 0            ; Skip if Bit in Register is Set
78E4:	8D-F8       	.data 0xf88d          ; Binary data
78E6:	E0-46       	sbci r30, 0x60        ; Subtract Immediate with Carry SBI
78E8:	8D-F8       	.data 0xf88d          ; Binary data
78EA:	E1-86       	std Y+9, r14          ; Store Indirect From Register to Data Space
78EC:	8D-F8       	.data 0xf88d          ; Binary data
78EE:	E2-66       	ori r30, 0x62         ; Logical OR with Immediate
78F0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
78F2:	DC-60       	ori r29, 0x0c         ; Logical OR with Immediate
78F4:	32-21       	and r19, r2           ; Logical AND
78F6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
78F8:	73-F8       	bld r7, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
78FA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
78FC:	DC-70       	andi r29, 0x0c        ; Logical AND with Immediate
78FE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7900:	DC-61       	ori r29, 0x1c         ; Logical OR with Immediate
7902:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7904:	4F-FE       	.data 0xfe4f          ; Binary data
7906:	8D-F8       	.data 0xf88d          ; Binary data
7908:	E4-46       	sbci r30, 0x64        ; Subtract Immediate with Carry SBI
790A:	8D-F8       	.data 0xf88d          ; Binary data
790C:	E5-86       	std Y+13, r14         ; Store Indirect From Register to Data Space
790E:	8D-F8       	.data 0xf88d          ; Binary data
7910:	E6-66       	ori r30, 0x66         ; Logical OR with Immediate
7912:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7914:	E4-60       	ori r30, 0x04         ; Logical OR with Immediate
7916:	32-21       	and r19, r2           ; Logical AND
7918:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
791A:	62-F8       	bld r6, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
791C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
791E:	B9-10       	cpse r11, r9          ; Compare Skip if Equal
7920:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7922:	E4-61       	ori r30, 0x14         ; Logical OR with Immediate
7924:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7926:	3E-FE       	.data 0xfe3e          ; Binary data
7928:	8D-F8       	.data 0xf88d          ; Binary data
792A:	E8-46       	sbci r30, 0x68        ; Subtract Immediate with Carry SBI
792C:	8D-F8       	.data 0xf88d          ; Binary data
792E:	E9-86       	std Y+9, r14          ; Store Indirect From Register to Data Space
7930:	8D-F8       	.data 0xf88d          ; Binary data
7932:	EA-66       	ori r30, 0x6a         ; Logical OR with Immediate
7934:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7936:	DD-60       	ori r29, 0x0d         ; Logical OR with Immediate
7938:	32-21       	and r19, r2           ; Logical AND
793A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
793C:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
793E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7940:	DD-70       	andi r29, 0x0d        ; Logical AND with Immediate
7942:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7944:	DD-61       	ori r29, 0x1d         ; Logical OR with Immediate
7946:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7948:	2D-FE       	.data 0xfe2d          ; Binary data
794A:	8D-F8       	.data 0xf88d          ; Binary data
794C:	EC-46       	sbci r30, 0x6c        ; Subtract Immediate with Carry SBI
794E:	8D-F8       	.data 0xf88d          ; Binary data
7950:	ED-86       	std Y+13, r14         ; Store Indirect From Register to Data Space
7952:	8D-F8       	.data 0xf88d          ; Binary data
7954:	EE-66       	ori r30, 0x6e         ; Logical OR with Immediate
7956:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7958:	EC-60       	ori r30, 0x0c         ; Logical OR with Immediate
795A:	32-21       	and r19, r2           ; Logical AND
795C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
795E:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
7960:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7962:	BB-10       	cpse r11, r11         ; Compare Skip if Equal
7964:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7966:	EC-61       	ori r30, 0x1c         ; Logical OR with Immediate
7968:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
796A:	1C-FE       	.data 0xfe1c          ; Binary data
796C:	8D-F8       	.data 0xf88d          ; Binary data
796E:	F0-46       	sbci r31, 0x60        ; Subtract Immediate with Carry SBI
7970:	8D-F8       	.data 0xf88d          ; Binary data
7972:	F1-96       	adiw r30, 0x31        ; Add Immediate to Word
7974:	8D-F8       	.data 0xf88d          ; Binary data
7976:	F2-56       	subi r31, 0x62        ; Subtract Immediate
7978:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
797A:	DE-60       	ori r29, 0x0e         ; Logical OR with Immediate
797C:	32-21       	and r19, r2           ; Logical AND
797E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7980:	2F-F8       	.data 0xf82f          ; Binary data
7982:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7984:	DE-70       	andi r29, 0x0e        ; Logical AND with Immediate
7986:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7988:	DE-61       	ori r29, 0x1e         ; Logical OR with Immediate
798A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
798C:	0B-FE       	.data 0xfe0b          ; Binary data
798E:	8D-F8       	.data 0xf88d          ; Binary data
7990:	F4-46       	sbci r31, 0x64        ; Subtract Immediate with Carry SBI
7992:	8D-F8       	.data 0xf88d          ; Binary data
7994:	F5-96       	adiw r30, 0x35        ; Add Immediate to Word
7996:	8D-F8       	.data 0xf88d          ; Binary data
7998:	F6-56       	subi r31, 0x66        ; Subtract Immediate
799A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
799C:	F4-60       	ori r31, 0x04         ; Logical OR with Immediate
799E:	32-21       	and r19, r2           ; Logical AND
79A0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
79A2:	1E-F8       	.data 0xf81e          ; Binary data
79A4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
79A6:	BD-10       	cpse r11, r13         ; Compare Skip if Equal
79A8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
79AA:	F4-61       	ori r31, 0x14         ; Logical OR with Immediate
79AC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
79AE:	FA-FD       	.data 0xfdfa          ; Binary data
79B0:	8D-F8       	.data 0xf88d          ; Binary data
79B2:	F8-46       	sbci r31, 0x68        ; Subtract Immediate with Carry SBI
79B4:	8D-F8       	.data 0xf88d          ; Binary data
79B6:	F9-96       	adiw r30, 0x39        ; Add Immediate to Word
79B8:	8D-F8       	.data 0xf88d          ; Binary data
79BA:	FA-56       	subi r31, 0x6a        ; Subtract Immediate
79BC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
79BE:	DF-60       	ori r29, 0x0f         ; Logical OR with Immediate
79C0:	32-21       	and r19, r2           ; Logical AND
79C2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
79C4:	0D-F8       	.data 0xf80d          ; Binary data
79C6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
79C8:	DF-70       	andi r29, 0x0f        ; Logical AND with Immediate
79CA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
79CC:	DF-61       	ori r29, 0x1f         ; Logical OR with Immediate
79CE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
79D0:	E9-FD       	.data 0xfde9          ; Binary data
79D2:	8D-F8       	.data 0xf88d          ; Binary data
79D4:	FC-46       	sbci r31, 0x6c        ; Subtract Immediate with Carry SBI
79D6:	8D-F8       	.data 0xf88d          ; Binary data
79D8:	FD-96       	adiw r30, 0x3d        ; Add Immediate to Word
79DA:	8D-F8       	.data 0xf88d          ; Binary data
79DC:	FE-56       	subi r31, 0x6e        ; Subtract Immediate
79DE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
79E0:	FC-60       	ori r31, 0x0c         ; Logical OR with Immediate
79E2:	32-21       	and r19, r2           ; Logical AND
79E4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
79E6:	FC-FF       	.data 0xfffc          ; Binary data
79E8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
79EA:	BF-10       	cpse r11, r15         ; Compare Skip if Equal
79EC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
79EE:	FC-61       	ori r31, 0x1c         ; Logical OR with Immediate
79F0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
79F2:	D8-FD       	.data 0xfdd8          ; Binary data
79F4:	8D-F8       	.data 0xf88d          ; Binary data
79F6:	00-A7       	std Y+40, r16         ; Store Indirect From Register to Data Space
79F8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
79FA:	4A-08       	sbc r4, r10           ; Subtract with Carry
79FC:	8D-F8       	.data 0xf88d          ; Binary data
79FE:	01-87       	std Y+9, r16          ; Store Indirect From Register to Data Space
7A00:	8D-F8       	.data 0xf88d          ; Binary data
7A02:	02-67       	ori r16, 0x72         ; Logical OR with Immediate
7A04:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7A06:	E0-60       	ori r30, 0x00         ; Logical OR with Immediate
7A08:	32-21       	and r19, r2           ; Logical AND
7A0A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7A0C:	E9-FF       	.data 0xffe9          ; Binary data
7A0E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7A10:	E0-70       	andi r30, 0x00        ; Logical AND with Immediate
7A12:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7A14:	E0-61       	ori r30, 0x10         ; Logical OR with Immediate
7A16:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7A18:	C5-FD       	sbrc r28, 5           ; Skip if Bit in Register is Cleared
7A1A:	8D-F8       	.data 0xf88d          ; Binary data
7A1C:	04-A7       	std Y+44, r16         ; Store Indirect From Register to Data Space
7A1E:	8D-F8       	.data 0xf88d          ; Binary data
7A20:	05-87       	std Y+13, r16         ; Store Indirect From Register to Data Space
7A22:	8D-F8       	.data 0xf88d          ; Binary data
7A24:	06-67       	ori r16, 0x76         ; Logical OR with Immediate
7A26:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7A28:	04-70       	andi r16, 0x04        ; Logical AND with Immediate
7A2A:	32-21       	and r19, r2           ; Logical AND
7A2C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7A2E:	D8-FF       	.data 0xffd8          ; Binary data
7A30:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7A32:	C1-10       	cpse r12, r1          ; Compare Skip if Equal
7A34:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7A36:	04-71       	andi r16, 0x14        ; Logical AND with Immediate
7A38:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7A3A:	B4-FD       	sbrc r27, 4           ; Skip if Bit in Register is Cleared
7A3C:	8D-F8       	.data 0xf88d          ; Binary data
7A3E:	08-A7       	std Y+40, r16         ; Store Indirect From Register to Data Space
7A40:	8D-F8       	.data 0xf88d          ; Binary data
7A42:	09-87       	std Y+9, r16          ; Store Indirect From Register to Data Space
7A44:	8D-F8       	.data 0xf88d          ; Binary data
7A46:	0A-67       	ori r16, 0x7a         ; Logical OR with Immediate
7A48:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7A4A:	E1-60       	ori r30, 0x01         ; Logical OR with Immediate
7A4C:	32-21       	and r19, r2           ; Logical AND
7A4E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7A50:	C7-FF       	sbrs r28, 7           ; Skip if Bit in Register is Set
7A52:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7A54:	E1-70       	andi r30, 0x01        ; Logical AND with Immediate
7A56:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7A58:	E1-61       	ori r30, 0x11         ; Logical OR with Immediate
7A5A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7A5C:	A3-FD       	sbrc r26, 3           ; Skip if Bit in Register is Cleared
7A5E:	8D-F8       	.data 0xf88d          ; Binary data
7A60:	0C-47       	sbci r16, 0x7c        ; Subtract Immediate with Carry SBI
7A62:	49-27       	clr r841              ; Clear Register
7A64:	8D-F8       	.data 0xf88d          ; Binary data
7A66:	0D-77       	andi r16, 0x7d        ; Logical AND with Immediate
7A68:	8D-F8       	.data 0xf88d          ; Binary data
7A6A:	0E-67       	ori r16, 0x7e         ; Logical OR with Immediate
7A6C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7A6E:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
7A70:	32-21       	and r19, r2           ; Logical AND
7A72:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7A74:	B5-FF       	sbrs r27, 5           ; Skip if Bit in Register is Set
7A76:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7A78:	C3-10       	cpse r12, r3          ; Compare Skip if Equal
7A7A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7A7C:	0C-71       	andi r16, 0x1c        ; Logical AND with Immediate
7A7E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7A80:	91-FD       	sbrc r25, 1           ; Skip if Bit in Register is Cleared
7A82:	8D-F8       	.data 0xf88d          ; Binary data
7A84:	10-47       	sbci r17, 0x70        ; Subtract Immediate with Carry SBI
7A86:	8D-F8       	.data 0xf88d          ; Binary data
7A88:	11-77       	andi r17, 0x71        ; Logical AND with Immediate
7A8A:	8D-F8       	.data 0xf88d          ; Binary data
7A8C:	12-67       	ori r17, 0x72         ; Logical OR with Immediate
7A8E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7A90:	E2-60       	ori r30, 0x02         ; Logical OR with Immediate
7A92:	32-21       	and r19, r2           ; Logical AND
7A94:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7A96:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
7A98:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7A9A:	E2-70       	andi r30, 0x02        ; Logical AND with Immediate
7A9C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7A9E:	E2-61       	ori r30, 0x12         ; Logical OR with Immediate
7AA0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7AA2:	80-FD       	sbrc r24, 0           ; Skip if Bit in Register is Cleared
7AA4:	8D-F8       	.data 0xf88d          ; Binary data
7AA6:	14-47       	sbci r17, 0x74        ; Subtract Immediate with Carry SBI
7AA8:	8D-F8       	.data 0xf88d          ; Binary data
7AAA:	15-77       	andi r17, 0x75        ; Logical AND with Immediate
7AAC:	8D-F8       	.data 0xf88d          ; Binary data
7AAE:	16-67       	ori r17, 0x76         ; Logical OR with Immediate
7AB0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7AB2:	14-70       	andi r17, 0x04        ; Logical AND with Immediate
7AB4:	32-21       	and r19, r2           ; Logical AND
7AB6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7AB8:	93-FF       	sbrs r25, 3           ; Skip if Bit in Register is Set
7ABA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7ABC:	C5-10       	cpse r12, r5          ; Compare Skip if Equal
7ABE:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7AC0:	14-71       	andi r17, 0x14        ; Logical AND with Immediate
7AC2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7AC4:	6F-FD       	.data 0xfd6f          ; Binary data
7AC6:	8D-F8       	.data 0xf88d          ; Binary data
7AC8:	18-47       	sbci r17, 0x78        ; Subtract Immediate with Carry SBI
7ACA:	48-26       	clr r584              ; Clear Register
7ACC:	8D-F8       	.data 0xf88d          ; Binary data
7ACE:	19-67       	ori r17, 0x79         ; Logical OR with Immediate
7AD0:	8D-F8       	.data 0xf88d          ; Binary data
7AD2:	1A-57       	subi r17, 0x7a        ; Subtract Immediate
7AD4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7AD6:	E3-60       	ori r30, 0x03         ; Logical OR with Immediate
7AD8:	32-21       	and r19, r2           ; Logical AND
7ADA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7ADC:	81-FF       	sbrs r24, 1           ; Skip if Bit in Register is Set
7ADE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7AE0:	E3-70       	andi r30, 0x03        ; Logical AND with Immediate
7AE2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7AE4:	E3-61       	ori r30, 0x13         ; Logical OR with Immediate
7AE6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7AE8:	5D-FD       	.data 0xfd5d          ; Binary data
7AEA:	8D-F8       	.data 0xf88d          ; Binary data
7AEC:	1C-47       	sbci r17, 0x7c        ; Subtract Immediate with Carry SBI
7AEE:	8D-F8       	.data 0xf88d          ; Binary data
7AF0:	1D-67       	ori r17, 0x7d         ; Logical OR with Immediate
7AF2:	8D-F8       	.data 0xf88d          ; Binary data
7AF4:	1E-57       	subi r17, 0x7e        ; Subtract Immediate
7AF6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7AF8:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
7AFA:	32-21       	and r19, r2           ; Logical AND
7AFC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7AFE:	70-FF       	sbrs r23, 0           ; Skip if Bit in Register is Set
7B00:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7B02:	C7-10       	cpse r12, r7          ; Compare Skip if Equal
7B04:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7B06:	1C-71       	andi r17, 0x1c        ; Logical AND with Immediate
7B08:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7B0A:	4C-FD       	.data 0xfd4c          ; Binary data
7B0C:	8D-F8       	.data 0xf88d          ; Binary data
7B0E:	20-47       	sbci r18, 0x70        ; Subtract Immediate with Carry SBI
7B10:	8D-F8       	.data 0xf88d          ; Binary data
7B12:	21-67       	ori r18, 0x71         ; Logical OR with Immediate
7B14:	8D-F8       	.data 0xf88d          ; Binary data
7B16:	22-57       	subi r18, 0x72        ; Subtract Immediate
7B18:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7B1A:	E4-60       	ori r30, 0x04         ; Logical OR with Immediate
7B1C:	32-21       	and r19, r2           ; Logical AND
7B1E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7B20:	5F-FF       	.data 0xff5f          ; Binary data
7B22:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7B24:	E4-70       	andi r30, 0x04        ; Logical AND with Immediate
7B26:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7B28:	E4-61       	ori r30, 0x14         ; Logical OR with Immediate
7B2A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7B2C:	3B-FD       	.data 0xfd3b          ; Binary data
7B2E:	8D-F8       	.data 0xf88d          ; Binary data
7B30:	24-47       	sbci r18, 0x74        ; Subtract Immediate with Carry SBI
7B32:	8D-F8       	.data 0xf88d          ; Binary data
7B34:	25-67       	ori r18, 0x75         ; Logical OR with Immediate
7B36:	8D-F8       	.data 0xf88d          ; Binary data
7B38:	26-57       	subi r18, 0x76        ; Subtract Immediate
7B3A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7B3C:	24-70       	andi r18, 0x04        ; Logical AND with Immediate
7B3E:	32-21       	and r19, r2           ; Logical AND
7B40:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7B42:	4E-FF       	.data 0xff4e          ; Binary data
7B44:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7B46:	C9-10       	cpse r12, r9          ; Compare Skip if Equal
7B48:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7B4A:	24-71       	andi r18, 0x14        ; Logical AND with Immediate
7B4C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7B4E:	2A-FD       	.data 0xfd2a          ; Binary data
7B50:	8D-F8       	.data 0xf88d          ; Binary data
7B52:	28-47       	sbci r18, 0x78        ; Subtract Immediate with Carry SBI
7B54:	8D-F8       	.data 0xf88d          ; Binary data
7B56:	29-67       	ori r18, 0x79         ; Logical OR with Immediate
7B58:	8D-F8       	.data 0xf88d          ; Binary data
7B5A:	2A-57       	subi r18, 0x7a        ; Subtract Immediate
7B5C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7B5E:	E5-60       	ori r30, 0x05         ; Logical OR with Immediate
7B60:	32-21       	and r19, r2           ; Logical AND
7B62:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7B64:	3D-FF       	.data 0xff3d          ; Binary data
7B66:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7B68:	E5-70       	andi r30, 0x05        ; Logical AND with Immediate
7B6A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7B6C:	E5-61       	ori r30, 0x15         ; Logical OR with Immediate
7B6E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7B70:	19-FD       	.data 0xfd19          ; Binary data
7B72:	8D-F8       	.data 0xf88d          ; Binary data
7B74:	2C-47       	sbci r18, 0x7c        ; Subtract Immediate with Carry SBI
7B76:	8D-F8       	.data 0xf88d          ; Binary data
7B78:	2D-67       	ori r18, 0x7d         ; Logical OR with Immediate
7B7A:	8D-F8       	.data 0xf88d          ; Binary data
7B7C:	2E-57       	subi r18, 0x7e        ; Subtract Immediate
7B7E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7B80:	2C-70       	andi r18, 0x0c        ; Logical AND with Immediate
7B82:	32-21       	and r19, r2           ; Logical AND
7B84:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7B86:	2C-FF       	.data 0xff2c          ; Binary data
7B88:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7B8A:	CB-10       	cpse r12, r11         ; Compare Skip if Equal
7B8C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7B8E:	2C-71       	andi r18, 0x1c        ; Logical AND with Immediate
7B90:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7B92:	08-FD       	.data 0xfd08          ; Binary data
7B94:	8D-F8       	.data 0xf88d          ; Binary data
7B96:	30-47       	sbci r19, 0x70        ; Subtract Immediate with Carry SBI
7B98:	8D-F8       	.data 0xf88d          ; Binary data
7B9A:	31-67       	ori r19, 0x71         ; Logical OR with Immediate
7B9C:	8D-F8       	.data 0xf88d          ; Binary data
7B9E:	32-57       	subi r19, 0x72        ; Subtract Immediate
7BA0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7BA2:	E6-60       	ori r30, 0x06         ; Logical OR with Immediate
7BA4:	32-21       	and r19, r2           ; Logical AND
7BA6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7BA8:	1B-FF       	.data 0xff1b          ; Binary data
7BAA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7BAC:	E6-70       	andi r30, 0x06        ; Logical AND with Immediate
7BAE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7BB0:	E6-61       	ori r30, 0x16         ; Logical OR with Immediate
7BB2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7BB4:	F7-FC       	sbrc r15, 7           ; Skip if Bit in Register is Cleared
7BB6:	8D-F8       	.data 0xf88d          ; Binary data
7BB8:	34-47       	sbci r19, 0x74        ; Subtract Immediate with Carry SBI
7BBA:	8D-F8       	.data 0xf88d          ; Binary data
7BBC:	35-67       	ori r19, 0x75         ; Logical OR with Immediate
7BBE:	8D-F8       	.data 0xf88d          ; Binary data
7BC0:	36-57       	subi r19, 0x76        ; Subtract Immediate
7BC2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7BC4:	34-70       	andi r19, 0x04        ; Logical AND with Immediate
7BC6:	32-21       	and r19, r2           ; Logical AND
7BC8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7BCA:	0A-FF       	.data 0xff0a          ; Binary data
7BCC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7BCE:	CD-10       	cpse r12, r13         ; Compare Skip if Equal
7BD0:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7BD2:	34-71       	andi r19, 0x14        ; Logical AND with Immediate
7BD4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7BD6:	E6-FC       	sbrc r14, 6           ; Skip if Bit in Register is Cleared
7BD8:	8D-F8       	.data 0xf88d          ; Binary data
7BDA:	38-47       	sbci r19, 0x78        ; Subtract Immediate with Carry SBI
7BDC:	8D-F8       	.data 0xf88d          ; Binary data
7BDE:	39-67       	ori r19, 0x79         ; Logical OR with Immediate
7BE0:	8D-F8       	.data 0xf88d          ; Binary data
7BE2:	3A-57       	subi r19, 0x7a        ; Subtract Immediate
7BE4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7BE6:	E7-60       	ori r30, 0x07         ; Logical OR with Immediate
7BE8:	32-21       	and r19, r2           ; Logical AND
7BEA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7BEC:	F9-FE       	.data 0xfef9          ; Binary data
7BEE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7BF0:	E7-70       	andi r30, 0x07        ; Logical AND with Immediate
7BF2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7BF4:	E7-61       	ori r30, 0x17         ; Logical OR with Immediate
7BF6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7BF8:	D5-FC       	sbrc r13, 5           ; Skip if Bit in Register is Cleared
7BFA:	8D-F8       	.data 0xf88d          ; Binary data
7BFC:	3C-47       	sbci r19, 0x7c        ; Subtract Immediate with Carry SBI
7BFE:	8D-F8       	.data 0xf88d          ; Binary data
7C00:	3D-67       	ori r19, 0x7d         ; Logical OR with Immediate
7C02:	8D-F8       	.data 0xf88d          ; Binary data
7C04:	3E-57       	subi r19, 0x7e        ; Subtract Immediate
7C06:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7C08:	3C-70       	andi r19, 0x0c        ; Logical AND with Immediate
7C0A:	32-21       	and r19, r2           ; Logical AND
7C0C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7C0E:	E8-FE       	.data 0xfee8          ; Binary data
7C10:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7C12:	CF-10       	cpse r12, r15         ; Compare Skip if Equal
7C14:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7C16:	3C-71       	andi r19, 0x1c        ; Logical AND with Immediate
7C18:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7C1A:	C4-FC       	sbrc r12, 4           ; Skip if Bit in Register is Cleared
7C1C:	8D-F8       	.data 0xf88d          ; Binary data
7C1E:	40-47       	sbci r20, 0x70        ; Subtract Immediate with Carry SBI
7C20:	46-26       	clr r582              ; Clear Register
7C22:	8D-F8       	.data 0xf88d          ; Binary data
7C24:	41-67       	ori r20, 0x71         ; Logical OR with Immediate
7C26:	8D-F8       	.data 0xf88d          ; Binary data
7C28:	42-57       	subi r20, 0x72        ; Subtract Immediate
7C2A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7C2C:	E8-60       	ori r30, 0x08         ; Logical OR with Immediate
7C2E:	32-21       	and r19, r2           ; Logical AND
7C30:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7C32:	D6-FE       	sbrs r13, 6           ; Skip if Bit in Register is Set
7C34:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7C36:	E8-70       	andi r30, 0x08        ; Logical AND with Immediate
7C38:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7C3A:	E8-61       	ori r30, 0x18         ; Logical OR with Immediate
7C3C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7C3E:	B2-FC       	sbrc r11, 2           ; Skip if Bit in Register is Cleared
7C40:	8D-F8       	.data 0xf88d          ; Binary data
7C42:	44-47       	sbci r20, 0x74        ; Subtract Immediate with Carry SBI
7C44:	8D-F8       	.data 0xf88d          ; Binary data
7C46:	45-67       	ori r20, 0x75         ; Logical OR with Immediate
7C48:	8D-F8       	.data 0xf88d          ; Binary data
7C4A:	46-57       	subi r20, 0x76        ; Subtract Immediate
7C4C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7C4E:	44-70       	andi r20, 0x04        ; Logical AND with Immediate
7C50:	32-21       	and r19, r2           ; Logical AND
7C52:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7C54:	C5-FE       	sbrs r12, 5           ; Skip if Bit in Register is Set
7C56:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7C58:	D1-10       	cpse r13, r1          ; Compare Skip if Equal
7C5A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7C5C:	44-71       	andi r20, 0x14        ; Logical AND with Immediate
7C5E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7C60:	A1-FC       	sbrc r10, 1           ; Skip if Bit in Register is Cleared
7C62:	8D-F8       	.data 0xf88d          ; Binary data
7C64:	48-47       	sbci r20, 0x78        ; Subtract Immediate with Carry SBI
7C66:	8D-F8       	.data 0xf88d          ; Binary data
7C68:	49-67       	ori r20, 0x79         ; Logical OR with Immediate
7C6A:	8D-F8       	.data 0xf88d          ; Binary data
7C6C:	4A-57       	subi r20, 0x7a        ; Subtract Immediate
7C6E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7C70:	E9-60       	ori r30, 0x09         ; Logical OR with Immediate
7C72:	32-21       	and r19, r2           ; Logical AND
7C74:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7C76:	B4-FE       	sbrs r11, 4           ; Skip if Bit in Register is Set
7C78:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7C7A:	E9-70       	andi r30, 0x09        ; Logical AND with Immediate
7C7C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7C7E:	E9-61       	ori r30, 0x19         ; Logical OR with Immediate
7C80:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7C82:	90-FC       	sbrc r9, 0            ; Skip if Bit in Register is Cleared
7C84:	8D-F8       	.data 0xf88d          ; Binary data
7C86:	4C-47       	sbci r20, 0x7c        ; Subtract Immediate with Carry SBI
7C88:	8D-F8       	.data 0xf88d          ; Binary data
7C8A:	4D-67       	ori r20, 0x7d         ; Logical OR with Immediate
7C8C:	8D-F8       	.data 0xf88d          ; Binary data
7C8E:	4E-57       	subi r20, 0x7e        ; Subtract Immediate
7C90:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7C92:	4C-70       	andi r20, 0x0c        ; Logical AND with Immediate
7C94:	32-21       	and r19, r2           ; Logical AND
7C96:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7C98:	A3-FE       	sbrs r10, 3           ; Skip if Bit in Register is Set
7C9A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7C9C:	D3-10       	cpse r13, r3          ; Compare Skip if Equal
7C9E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7CA0:	4C-71       	andi r20, 0x1c        ; Logical AND with Immediate
7CA2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7CA4:	7F-FC       	.data 0xfc7f          ; Binary data
7CA6:	8D-F8       	.data 0xf88d          ; Binary data
7CA8:	50-47       	sbci r21, 0x70        ; Subtract Immediate with Carry SBI
7CAA:	8D-F8       	.data 0xf88d          ; Binary data
7CAC:	51-67       	ori r21, 0x71         ; Logical OR with Immediate
7CAE:	8D-F8       	.data 0xf88d          ; Binary data
7CB0:	52-57       	subi r21, 0x72        ; Subtract Immediate
7CB2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7CB4:	EA-60       	ori r30, 0x0a         ; Logical OR with Immediate
7CB6:	32-21       	and r19, r2           ; Logical AND
7CB8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7CBA:	92-FE       	sbrs r9, 2            ; Skip if Bit in Register is Set
7CBC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7CBE:	EA-70       	andi r30, 0x0a        ; Logical AND with Immediate
7CC0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7CC2:	EA-61       	ori r30, 0x1a         ; Logical OR with Immediate
7CC4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7CC6:	6E-FC       	.data 0xfc6e          ; Binary data
7CC8:	8D-F8       	.data 0xf88d          ; Binary data
7CCA:	54-47       	sbci r21, 0x74        ; Subtract Immediate with Carry SBI
7CCC:	8D-F8       	.data 0xf88d          ; Binary data
7CCE:	55-67       	ori r21, 0x75         ; Logical OR with Immediate
7CD0:	8D-F8       	.data 0xf88d          ; Binary data
7CD2:	56-57       	subi r21, 0x76        ; Subtract Immediate
7CD4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7CD6:	54-70       	andi r21, 0x04        ; Logical AND with Immediate
7CD8:	32-21       	and r19, r2           ; Logical AND
7CDA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7CDC:	81-FE       	sbrs r8, 1            ; Skip if Bit in Register is Set
7CDE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7CE0:	D5-10       	cpse r13, r5          ; Compare Skip if Equal
7CE2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7CE4:	54-71       	andi r21, 0x14        ; Logical AND with Immediate
7CE6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7CE8:	5D-FC       	.data 0xfc5d          ; Binary data
7CEA:	8D-F8       	.data 0xf88d          ; Binary data
7CEC:	58-47       	sbci r21, 0x78        ; Subtract Immediate with Carry SBI
7CEE:	8D-F8       	.data 0xf88d          ; Binary data
7CF0:	59-67       	ori r21, 0x79         ; Logical OR with Immediate
7CF2:	8D-F8       	.data 0xf88d          ; Binary data
7CF4:	5A-57       	subi r21, 0x7a        ; Subtract Immediate
7CF6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7CF8:	EB-60       	ori r30, 0x0b         ; Logical OR with Immediate
7CFA:	32-21       	and r19, r2           ; Logical AND
7CFC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7CFE:	70-FE       	sbrs r7, 0            ; Skip if Bit in Register is Set
7D00:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7D02:	EB-70       	andi r30, 0x0b        ; Logical AND with Immediate
7D04:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7D06:	EB-61       	ori r30, 0x1b         ; Logical OR with Immediate
7D08:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7D0A:	4C-FC       	.data 0xfc4c          ; Binary data
7D0C:	8D-F8       	.data 0xf88d          ; Binary data
7D0E:	5C-47       	sbci r21, 0x7c        ; Subtract Immediate with Carry SBI
7D10:	8D-F8       	.data 0xf88d          ; Binary data
7D12:	5D-67       	ori r21, 0x7d         ; Logical OR with Immediate
7D14:	8D-F8       	.data 0xf88d          ; Binary data
7D16:	5E-57       	subi r21, 0x7e        ; Subtract Immediate
7D18:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7D1A:	5C-70       	andi r21, 0x0c        ; Logical AND with Immediate
7D1C:	32-21       	and r19, r2           ; Logical AND
7D1E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7D20:	5F-FE       	.data 0xfe5f          ; Binary data
7D22:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7D24:	D7-10       	cpse r13, r7          ; Compare Skip if Equal
7D26:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7D28:	5C-71       	andi r21, 0x1c        ; Logical AND with Immediate
7D2A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7D2C:	3B-FC       	.data 0xfc3b          ; Binary data
7D2E:	8D-F8       	.data 0xf88d          ; Binary data
7D30:	60-47       	sbci r22, 0x70        ; Subtract Immediate with Carry SBI
7D32:	8D-F8       	.data 0xf88d          ; Binary data
7D34:	61-67       	ori r22, 0x71         ; Logical OR with Immediate
7D36:	8D-F8       	.data 0xf88d          ; Binary data
7D38:	62-57       	subi r22, 0x72        ; Subtract Immediate
7D3A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7D3C:	EC-60       	ori r30, 0x0c         ; Logical OR with Immediate
7D3E:	32-21       	and r19, r2           ; Logical AND
7D40:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7D42:	4E-FE       	.data 0xfe4e          ; Binary data
7D44:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7D46:	EC-70       	andi r30, 0x0c        ; Logical AND with Immediate
7D48:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7D4A:	EC-61       	ori r30, 0x1c         ; Logical OR with Immediate
7D4C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7D4E:	2A-FC       	.data 0xfc2a          ; Binary data
7D50:	8D-F8       	.data 0xf88d          ; Binary data
7D52:	64-47       	sbci r22, 0x74        ; Subtract Immediate with Carry SBI
7D54:	8D-F8       	.data 0xf88d          ; Binary data
7D56:	65-67       	ori r22, 0x75         ; Logical OR with Immediate
7D58:	8D-F8       	.data 0xf88d          ; Binary data
7D5A:	66-57       	subi r22, 0x76        ; Subtract Immediate
7D5C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7D5E:	64-70       	andi r22, 0x04        ; Logical AND with Immediate
7D60:	32-21       	and r19, r2           ; Logical AND
7D62:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7D64:	3D-FE       	.data 0xfe3d          ; Binary data
7D66:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7D68:	D9-10       	cpse r13, r9          ; Compare Skip if Equal
7D6A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7D6C:	64-71       	andi r22, 0x14        ; Logical AND with Immediate
7D6E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7D70:	19-FC       	.data 0xfc19          ; Binary data
7D72:	8D-F8       	.data 0xf88d          ; Binary data
7D74:	68-47       	sbci r22, 0x78        ; Subtract Immediate with Carry SBI
7D76:	8D-F8       	.data 0xf88d          ; Binary data
7D78:	69-67       	ori r22, 0x79         ; Logical OR with Immediate
7D7A:	8D-F8       	.data 0xf88d          ; Binary data
7D7C:	6A-57       	subi r22, 0x7a        ; Subtract Immediate
7D7E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7D80:	ED-60       	ori r30, 0x0d         ; Logical OR with Immediate
7D82:	32-21       	and r19, r2           ; Logical AND
7D84:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7D86:	2C-FE       	.data 0xfe2c          ; Binary data
7D88:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7D8A:	ED-70       	andi r30, 0x0d        ; Logical AND with Immediate
7D8C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7D8E:	ED-61       	ori r30, 0x1d         ; Logical OR with Immediate
7D90:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7D92:	08-FC       	.data 0xfc08          ; Binary data
7D94:	8D-F8       	.data 0xf88d          ; Binary data
7D96:	6C-47       	sbci r22, 0x7c        ; Subtract Immediate with Carry SBI
7D98:	45-26       	clr r581              ; Clear Register
7D9A:	8D-F8       	.data 0xf88d          ; Binary data
7D9C:	6D-67       	ori r22, 0x7d         ; Logical OR with Immediate
7D9E:	FD-25       	clr r509              ; Clear Register
7DA0:	8D-F8       	.data 0xf88d          ; Binary data
7DA2:	6E-57       	subi r22, 0x7e        ; Subtract Immediate
7DA4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7DA6:	6C-70       	andi r22, 0x0c        ; Logical AND with Immediate
7DA8:	32-21       	and r19, r2           ; Logical AND
7DAA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7DAC:	19-FE       	.data 0xfe19          ; Binary data
7DAE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7DB0:	DB-10       	cpse r13, r11         ; Compare Skip if Equal
7DB2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7DB4:	6C-71       	andi r22, 0x1c        ; Logical AND with Immediate
7DB6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7DB8:	F5-FB       	bst r31, 5            ; Bit Store from Bit in Register to T Flag in SREG
7DBA:	8D-F8       	.data 0xf88d          ; Binary data
7DBC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
7DBE:	8D-F8       	.data 0xf88d          ; Binary data
7DC0:	71-67       	ori r23, 0x71         ; Logical OR with Immediate
7DC2:	8D-F8       	.data 0xf88d          ; Binary data
7DC4:	72-57       	subi r23, 0x72        ; Subtract Immediate
7DC6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7DC8:	EE-60       	ori r30, 0x0e         ; Logical OR with Immediate
7DCA:	32-21       	and r19, r2           ; Logical AND
7DCC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7DCE:	08-FE       	.data 0xfe08          ; Binary data
7DD0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7DD2:	EE-70       	andi r30, 0x0e        ; Logical AND with Immediate
7DD4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7DD6:	EE-61       	ori r30, 0x1e         ; Logical OR with Immediate
7DD8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7DDA:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
7DDC:	8D-F8       	.data 0xf88d          ; Binary data
7DDE:	74-47       	sbci r23, 0x74        ; Subtract Immediate with Carry SBI
7DE0:	8D-F8       	.data 0xf88d          ; Binary data
7DE2:	75-67       	ori r23, 0x75         ; Logical OR with Immediate
7DE4:	8D-F8       	.data 0xf88d          ; Binary data
7DE6:	76-57       	subi r23, 0x76        ; Subtract Immediate
7DE8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7DEA:	74-70       	andi r23, 0x04        ; Logical AND with Immediate
7DEC:	32-21       	and r19, r2           ; Logical AND
7DEE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7DF0:	F7-FD       	sbrc r31, 7           ; Skip if Bit in Register is Cleared
7DF2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7DF4:	DD-10       	cpse r13, r13         ; Compare Skip if Equal
7DF6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7DF8:	74-71       	andi r23, 0x14        ; Logical AND with Immediate
7DFA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7DFC:	D3-FB       	bst r29, 3            ; Bit Store from Bit in Register to T Flag in SREG
7DFE:	8D-F8       	.data 0xf88d          ; Binary data
7E00:	78-47       	sbci r23, 0x78        ; Subtract Immediate with Carry SBI
7E02:	44-23       	and r20, r20          ; Logical AND
7E04:	8D-F8       	.data 0xf88d          ; Binary data
7E06:	79-37       	cpi r23, 0x79         ; Compare with Immediate
7E08:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
7E0A:	FC-0B       	sbc r31, r28          ; Subtract with Carry
7E0C:	8D-F8       	.data 0xf88d          ; Binary data
7E0E:	7A-B7       	in r23, 0x3a          ; Load an I/O Location to Register
7E10:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7E12:	EF-60       	ori r30, 0x0f         ; Logical OR with Immediate
7E14:	32-21       	and r19, r2           ; Logical AND
7E16:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7E18:	E3-FD       	sbrc r30, 3           ; Skip if Bit in Register is Cleared
7E1A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7E1C:	EF-70       	andi r30, 0x0f        ; Logical AND with Immediate
7E1E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7E20:	EF-61       	ori r30, 0x1f         ; Logical OR with Immediate
7E22:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7E24:	BF-FB       	.data 0xfbbf          ; Binary data
7E26:	8D-F8       	.data 0xf88d          ; Binary data
7E28:	7C-47       	sbci r23, 0x7c        ; Subtract Immediate with Carry SBI
7E2A:	44-23       	and r20, r20          ; Logical AND
7E2C:	8D-F8       	.data 0xf88d          ; Binary data
7E2E:	7D-37       	cpi r23, 0x7d         ; Compare with Immediate
7E30:	8D-F8       	.data 0xf88d          ; Binary data
7E32:	7E-B7       	in r23, 0x3e          ; Load an I/O Location to Register
7E34:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7E36:	7C-70       	andi r23, 0x0c        ; Logical AND with Immediate
7E38:	32-21       	and r19, r2           ; Logical AND
7E3A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7E3C:	D1-FD       	sbrc r29, 1           ; Skip if Bit in Register is Cleared
7E3E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7E40:	DF-10       	cpse r13, r15         ; Compare Skip if Equal
7E42:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7E44:	7C-71       	andi r23, 0x1c        ; Logical AND with Immediate
7E46:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7E48:	AD-FB       	.data 0xfbad          ; Binary data
7E4A:	56-46       	sbci r21, 0x66        ; Subtract Immediate with Carry SBI
7E4C:	8D-F8       	.data 0xf88d          ; Binary data
7E4E:	80-A7       	std Y+40, r24         ; Store Indirect From Register to Data Space
7E50:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
7E52:	42-09       	sbc r20, r2           ; Subtract with Carry
7E54:	8D-F8       	.data 0xf88d          ; Binary data
7E56:	81-97       	sbiw r24, 0x21        ; Subtract Immediate from Word
7E58:	FE-27       	clr r1022             ; Clear Register
7E5A:	8D-F8       	.data 0xf88d          ; Binary data
7E5C:	82-77       	andi r24, 0x72        ; Logical AND with Immediate
7E5E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7E60:	F0-60       	ori r31, 0x00         ; Logical OR with Immediate
7E62:	32-21       	and r19, r2           ; Logical AND
7E64:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7E66:	BC-FD       	.data 0xfdbc          ; Binary data
7E68:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7E6A:	F0-70       	andi r31, 0x00        ; Logical AND with Immediate
7E6C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7E6E:	F0-61       	ori r31, 0x10         ; Logical OR with Immediate
7E70:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7E72:	98-FB       	.data 0xfb98          ; Binary data
7E74:	8D-F8       	.data 0xf88d          ; Binary data
7E76:	84-A7       	std Y+44, r24         ; Store Indirect From Register to Data Space
7E78:	8D-F8       	.data 0xf88d          ; Binary data
7E7A:	85-97       	sbiw r24, 0x25        ; Subtract Immediate from Word
7E7C:	8D-F8       	.data 0xf88d          ; Binary data
7E7E:	86-77       	andi r24, 0x76        ; Logical AND with Immediate
7E80:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7E82:	84-70       	andi r24, 0x04        ; Logical AND with Immediate
7E84:	32-21       	and r19, r2           ; Logical AND
7E86:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7E88:	AB-FD       	.data 0xfdab          ; Binary data
7E8A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7E8C:	E1-10       	cpse r14, r1          ; Compare Skip if Equal
7E8E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7E90:	84-71       	andi r24, 0x14        ; Logical AND with Immediate
7E92:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7E94:	87-FB       	bst r24, 7            ; Bit Store from Bit in Register to T Flag in SREG
7E96:	8D-F8       	.data 0xf88d          ; Binary data
7E98:	88-A7       	std Y+40, r24         ; Store Indirect From Register to Data Space
7E9A:	8D-F8       	.data 0xf88d          ; Binary data
7E9C:	89-97       	sbiw r24, 0x29        ; Subtract Immediate from Word
7E9E:	8D-F8       	.data 0xf88d          ; Binary data
7EA0:	8A-77       	andi r24, 0x7a        ; Logical AND with Immediate
7EA2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7EA4:	F1-60       	ori r31, 0x01         ; Logical OR with Immediate
7EA6:	32-21       	and r19, r2           ; Logical AND
7EA8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7EAA:	9A-FD       	.data 0xfd9a          ; Binary data
7EAC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7EAE:	F1-70       	andi r31, 0x01        ; Logical AND with Immediate
7EB0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7EB2:	F1-61       	ori r31, 0x11         ; Logical OR with Immediate
7EB4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7EB6:	76-FB       	bst r23, 6            ; Bit Store from Bit in Register to T Flag in SREG
7EB8:	8D-F8       	.data 0xf88d          ; Binary data
7EBA:	8C-A7       	std Y+44, r24         ; Store Indirect From Register to Data Space
7EBC:	8D-F8       	.data 0xf88d          ; Binary data
7EBE:	8D-97       	sbiw r24, 0x2d        ; Subtract Immediate from Word
7EC0:	8D-F8       	.data 0xf88d          ; Binary data
7EC2:	8E-77       	andi r24, 0x7e        ; Logical AND with Immediate
7EC4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7EC6:	8C-70       	andi r24, 0x0c        ; Logical AND with Immediate
7EC8:	32-21       	and r19, r2           ; Logical AND
7ECA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7ECC:	89-FD       	.data 0xfd89          ; Binary data
7ECE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7ED0:	E3-10       	cpse r14, r3          ; Compare Skip if Equal
7ED2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7ED4:	8C-71       	andi r24, 0x1c        ; Logical AND with Immediate
7ED6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7ED8:	65-FB       	bst r22, 5            ; Bit Store from Bit in Register to T Flag in SREG
7EDA:	8D-F8       	.data 0xf88d          ; Binary data
7EDC:	90-A7       	std Y+40, r25         ; Store Indirect From Register to Data Space
7EDE:	8D-F8       	.data 0xf88d          ; Binary data
7EE0:	91-97       	sbiw r26, 0x21        ; Subtract Immediate from Word
7EE2:	8D-F8       	.data 0xf88d          ; Binary data
7EE4:	92-77       	andi r25, 0x72        ; Logical AND with Immediate
7EE6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7EE8:	F2-60       	ori r31, 0x02         ; Logical OR with Immediate
7EEA:	32-21       	and r19, r2           ; Logical AND
7EEC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7EEE:	78-FD       	.data 0xfd78          ; Binary data
7EF0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7EF2:	F2-70       	andi r31, 0x02        ; Logical AND with Immediate
7EF4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7EF6:	F2-61       	ori r31, 0x12         ; Logical OR with Immediate
7EF8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7EFA:	54-FB       	bst r21, 4            ; Bit Store from Bit in Register to T Flag in SREG
7EFC:	8D-F8       	.data 0xf88d          ; Binary data
7EFE:	94-A7       	std Y+44, r25         ; Store Indirect From Register to Data Space
7F00:	8D-F8       	.data 0xf88d          ; Binary data
7F02:	95-97       	sbiw r26, 0x25        ; Subtract Immediate from Word
7F04:	8D-F8       	.data 0xf88d          ; Binary data
7F06:	96-77       	andi r25, 0x76        ; Logical AND with Immediate
7F08:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7F0A:	94-70       	andi r25, 0x04        ; Logical AND with Immediate
7F0C:	32-21       	and r19, r2           ; Logical AND
7F0E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7F10:	67-FD       	sbrc r22, 7           ; Skip if Bit in Register is Cleared
7F12:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7F14:	E5-10       	cpse r14, r5          ; Compare Skip if Equal
7F16:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7F18:	94-71       	andi r25, 0x14        ; Logical AND with Immediate
7F1A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7F1C:	43-FB       	bst r20, 3            ; Bit Store from Bit in Register to T Flag in SREG
7F1E:	8D-F8       	.data 0xf88d          ; Binary data
7F20:	98-A7       	std Y+40, r25         ; Store Indirect From Register to Data Space
7F22:	8D-F8       	.data 0xf88d          ; Binary data
7F24:	99-97       	sbiw r26, 0x29        ; Subtract Immediate from Word
7F26:	8D-F8       	.data 0xf88d          ; Binary data
7F28:	9A-77       	andi r25, 0x7a        ; Logical AND with Immediate
7F2A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7F2C:	F3-60       	ori r31, 0x03         ; Logical OR with Immediate
7F2E:	32-21       	and r19, r2           ; Logical AND
7F30:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7F32:	56-FD       	sbrc r21, 6           ; Skip if Bit in Register is Cleared
7F34:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7F36:	F3-70       	andi r31, 0x03        ; Logical AND with Immediate
7F38:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7F3A:	F3-61       	ori r31, 0x13         ; Logical OR with Immediate
7F3C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7F3E:	32-FB       	bst r19, 2            ; Bit Store from Bit in Register to T Flag in SREG
7F40:	8D-F8       	.data 0xf88d          ; Binary data
7F42:	9C-A7       	std Y+44, r25         ; Store Indirect From Register to Data Space
7F44:	8D-F8       	.data 0xf88d          ; Binary data
7F46:	9D-97       	sbiw r26, 0x2d        ; Subtract Immediate from Word
7F48:	8D-F8       	.data 0xf88d          ; Binary data
7F4A:	9E-77       	andi r25, 0x7e        ; Logical AND with Immediate
7F4C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7F4E:	9C-70       	andi r25, 0x0c        ; Logical AND with Immediate
7F50:	32-21       	and r19, r2           ; Logical AND
7F52:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7F54:	45-FD       	sbrc r20, 5           ; Skip if Bit in Register is Cleared
7F56:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7F58:	E7-10       	cpse r14, r7          ; Compare Skip if Equal
7F5A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7F5C:	9C-71       	andi r25, 0x1c        ; Logical AND with Immediate
7F5E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7F60:	21-FB       	bst r18, 1            ; Bit Store from Bit in Register to T Flag in SREG
7F62:	8D-F8       	.data 0xf88d          ; Binary data
7F64:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
7F66:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
7F68:	41-0A       	sbc r4, r17           ; Subtract with Carry
7F6A:	8D-F8       	.data 0xf88d          ; Binary data
7F6C:	A1-A7       	std Y+41, r26         ; Store Indirect From Register to Data Space
7F6E:	8D-F8       	.data 0xf88d          ; Binary data
7F70:	A2-57       	subi r26, 0x72        ; Subtract Immediate
7F72:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7F74:	F4-60       	ori r31, 0x04         ; Logical OR with Immediate
7F76:	32-21       	and r19, r2           ; Logical AND
7F78:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7F7A:	32-FD       	sbrc r19, 2           ; Skip if Bit in Register is Cleared
7F7C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7F7E:	F4-70       	andi r31, 0x04        ; Logical AND with Immediate
7F80:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7F82:	F4-61       	ori r31, 0x14         ; Logical OR with Immediate
7F84:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7F86:	0E-FB       	.data 0xfb0e          ; Binary data
7F88:	8D-F8       	.data 0xf88d          ; Binary data
7F8A:	A4-47       	sbci r26, 0x74        ; Subtract Immediate with Carry SBI
7F8C:	8D-F8       	.data 0xf88d          ; Binary data
7F8E:	A5-A7       	std Y+45, r26         ; Store Indirect From Register to Data Space
7F90:	8D-F8       	.data 0xf88d          ; Binary data
7F92:	A6-57       	subi r26, 0x76        ; Subtract Immediate
7F94:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7F96:	A4-70       	andi r26, 0x04        ; Logical AND with Immediate
7F98:	32-21       	and r19, r2           ; Logical AND
7F9A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7F9C:	21-FD       	sbrc r18, 1           ; Skip if Bit in Register is Cleared
7F9E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7FA0:	E9-10       	cpse r14, r9          ; Compare Skip if Equal
7FA2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7FA4:	A4-71       	andi r26, 0x14        ; Logical AND with Immediate
7FA6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7FA8:	FD-FA       	.data 0xfafd          ; Binary data
7FAA:	8D-F8       	.data 0xf88d          ; Binary data
7FAC:	A8-47       	sbci r26, 0x78        ; Subtract Immediate with Carry SBI
7FAE:	8D-F8       	.data 0xf88d          ; Binary data
7FB0:	A9-A7       	std Y+41, r26         ; Store Indirect From Register to Data Space
7FB2:	8D-F8       	.data 0xf88d          ; Binary data
7FB4:	AA-57       	subi r26, 0x7a        ; Subtract Immediate
7FB6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7FB8:	F5-60       	ori r31, 0x05         ; Logical OR with Immediate
7FBA:	32-21       	and r19, r2           ; Logical AND
7FBC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7FBE:	10-FD       	sbrc r17, 0           ; Skip if Bit in Register is Cleared
7FC0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
7FC2:	F5-70       	andi r31, 0x05        ; Logical AND with Immediate
7FC4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7FC6:	F5-61       	ori r31, 0x15         ; Logical OR with Immediate
7FC8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7FCA:	EC-FA       	.data 0xfaec          ; Binary data
7FCC:	8D-F8       	.data 0xf88d          ; Binary data
7FCE:	AC-47       	sbci r26, 0x7c        ; Subtract Immediate with Carry SBI
7FD0:	8D-F8       	.data 0xf88d          ; Binary data
7FD2:	AD-A7       	std Y+45, r26         ; Store Indirect From Register to Data Space
7FD4:	8D-F8       	.data 0xf88d          ; Binary data
7FD6:	AE-57       	subi r26, 0x7e        ; Subtract Immediate
7FD8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7FDA:	AC-70       	andi r26, 0x0c        ; Logical AND with Immediate
7FDC:	32-21       	and r19, r2           ; Logical AND
7FDE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
7FE0:	FF-FC       	.data 0xfcff          ; Binary data
7FE2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
7FE4:	EB-10       	cpse r14, r11         ; Compare Skip if Equal
7FE6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
7FE8:	AC-71       	andi r26, 0x1c        ; Logical AND with Immediate
7FEA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
7FEC:	DB-FA       	.data 0xfadb          ; Binary data
7FEE:	8D-F8       	.data 0xf88d          ; Binary data
7FF0:	B0-47       	sbci r27, 0x70        ; Subtract Immediate with Carry SBI
7FF2:	8D-F8       	.data 0xf88d          ; Binary data
7FF4:	B1-A7       	std Y+41, r27         ; Store Indirect From Register to Data Space
7FF6:	8D-F8       	.data 0xf88d          ; Binary data
7FF8:	B2-57       	subi r27, 0x72        ; Subtract Immediate
7FFA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
7FFC:	F6-60       	ori r31, 0x06         ; Logical OR with Immediate
7FFE:	32-21       	and r19, r2           ; Logical AND
8000:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8002:	EE-FC       	.data 0xfcee          ; Binary data
8004:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8006:	F6-70       	andi r31, 0x06        ; Logical AND with Immediate
8008:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
800A:	F6-61       	ori r31, 0x16         ; Logical OR with Immediate
800C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
800E:	CA-FA       	.data 0xfaca          ; Binary data
8010:	8D-F8       	.data 0xf88d          ; Binary data
8012:	B4-47       	sbci r27, 0x74        ; Subtract Immediate with Carry SBI
8014:	8D-F8       	.data 0xf88d          ; Binary data
8016:	B5-A7       	std Y+45, r27         ; Store Indirect From Register to Data Space
8018:	8D-F8       	.data 0xf88d          ; Binary data
801A:	B6-57       	subi r27, 0x76        ; Subtract Immediate
801C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
801E:	B4-70       	andi r27, 0x04        ; Logical AND with Immediate
8020:	32-21       	and r19, r2           ; Logical AND
8022:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8024:	DD-FC       	.data 0xfcdd          ; Binary data
8026:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8028:	ED-10       	cpse r14, r13         ; Compare Skip if Equal
802A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
802C:	B4-71       	andi r27, 0x14        ; Logical AND with Immediate
802E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8030:	B9-FA       	.data 0xfab9          ; Binary data
8032:	8D-F8       	.data 0xf88d          ; Binary data
8034:	B8-47       	sbci r27, 0x78        ; Subtract Immediate with Carry SBI
8036:	8D-F8       	.data 0xf88d          ; Binary data
8038:	B9-A7       	std Y+41, r27         ; Store Indirect From Register to Data Space
803A:	8D-F8       	.data 0xf88d          ; Binary data
803C:	BA-57       	subi r27, 0x7a        ; Subtract Immediate
803E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8040:	F7-60       	ori r31, 0x07         ; Logical OR with Immediate
8042:	32-21       	and r19, r2           ; Logical AND
8044:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8046:	CC-FC       	.data 0xfccc          ; Binary data
8048:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
804A:	F7-70       	andi r31, 0x07        ; Logical AND with Immediate
804C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
804E:	F7-61       	ori r31, 0x17         ; Logical OR with Immediate
8050:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8052:	A8-FA       	.data 0xfaa8          ; Binary data
8054:	8D-F8       	.data 0xf88d          ; Binary data
8056:	BC-47       	sbci r27, 0x7c        ; Subtract Immediate with Carry SBI
8058:	8D-F8       	.data 0xf88d          ; Binary data
805A:	BD-A7       	std Y+45, r27         ; Store Indirect From Register to Data Space
805C:	8D-F8       	.data 0xf88d          ; Binary data
805E:	BE-57       	subi r27, 0x7e        ; Subtract Immediate
8060:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
8062:	BC-70       	andi r27, 0x0c        ; Logical AND with Immediate
8064:	32-21       	and r19, r2           ; Logical AND
8066:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8068:	BB-FC       	.data 0xfcbb          ; Binary data
806A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
806C:	EF-10       	cpse r14, r15         ; Compare Skip if Equal
806E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
8070:	BC-71       	andi r27, 0x1c        ; Logical AND with Immediate
8072:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8074:	97-FA       	bst r9, 7             ; Bit Store from Bit in Register to T Flag in SREG
8076:	8D-F8       	.data 0xf88d          ; Binary data
8078:	C0-47       	sbci r28, 0x70        ; Subtract Immediate with Carry SBI
807A:	8D-F8       	.data 0xf88d          ; Binary data
807C:	C1-97       	sbiw r24, 0x31        ; Subtract Immediate from Word
807E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8080:	FF-08       	sbc r15, r15          ; Subtract with Carry
8082:	8D-F8       	.data 0xf88d          ; Binary data
8084:	C2-87       	std Y+10, r28         ; Store Indirect From Register to Data Space
8086:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8088:	F8-60       	ori r31, 0x08         ; Logical OR with Immediate
808A:	32-21       	and r19, r2           ; Logical AND
808C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
808E:	A8-FC       	.data 0xfca8          ; Binary data
8090:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8092:	F8-70       	andi r31, 0x08        ; Logical AND with Immediate
8094:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8096:	F8-61       	ori r31, 0x18         ; Logical OR with Immediate
8098:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
809A:	84-FA       	bst r8, 4             ; Bit Store from Bit in Register to T Flag in SREG
809C:	8D-F8       	.data 0xf88d          ; Binary data
809E:	C4-47       	sbci r28, 0x74        ; Subtract Immediate with Carry SBI
80A0:	8D-F8       	.data 0xf88d          ; Binary data
80A2:	C5-97       	sbiw r24, 0x35        ; Subtract Immediate from Word
80A4:	8D-F8       	.data 0xf88d          ; Binary data
80A6:	C6-87       	std Y+14, r28         ; Store Indirect From Register to Data Space
80A8:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
80AA:	C4-70       	andi r28, 0x04        ; Logical AND with Immediate
80AC:	32-21       	and r19, r2           ; Logical AND
80AE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
80B0:	97-FC       	sbrc r9, 7            ; Skip if Bit in Register is Cleared
80B2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
80B4:	F1-10       	cpse r15, r1          ; Compare Skip if Equal
80B6:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
80B8:	C4-71       	andi r28, 0x14        ; Logical AND with Immediate
80BA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
80BC:	73-FA       	bst r7, 3             ; Bit Store from Bit in Register to T Flag in SREG
80BE:	8D-F8       	.data 0xf88d          ; Binary data
80C0:	C8-47       	sbci r28, 0x78        ; Subtract Immediate with Carry SBI
80C2:	8D-F8       	.data 0xf88d          ; Binary data
80C4:	C9-97       	sbiw r24, 0x39        ; Subtract Immediate from Word
80C6:	8D-F8       	.data 0xf88d          ; Binary data
80C8:	CA-87       	std Y+10, r28         ; Store Indirect From Register to Data Space
80CA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
80CC:	F9-60       	ori r31, 0x09         ; Logical OR with Immediate
80CE:	32-21       	and r19, r2           ; Logical AND
80D0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
80D2:	86-FC       	sbrc r8, 6            ; Skip if Bit in Register is Cleared
80D4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
80D6:	F9-70       	andi r31, 0x09        ; Logical AND with Immediate
80D8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
80DA:	F9-61       	ori r31, 0x19         ; Logical OR with Immediate
80DC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
80DE:	62-FA       	bst r6, 2             ; Bit Store from Bit in Register to T Flag in SREG
80E0:	8D-F8       	.data 0xf88d          ; Binary data
80E2:	CC-47       	sbci r28, 0x7c        ; Subtract Immediate with Carry SBI
80E4:	8D-F8       	.data 0xf88d          ; Binary data
80E6:	CD-A7       	std Y+45, r28         ; Store Indirect From Register to Data Space
80E8:	8D-F8       	.data 0xf88d          ; Binary data
80EA:	CE-77       	andi r28, 0x7e        ; Logical AND with Immediate
80EC:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
80EE:	CC-70       	andi r28, 0x0c        ; Logical AND with Immediate
80F0:	32-21       	and r19, r2           ; Logical AND
80F2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
80F4:	75-FC       	sbrc r7, 5            ; Skip if Bit in Register is Cleared
80F6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
80F8:	F3-10       	cpse r15, r3          ; Compare Skip if Equal
80FA:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
80FC:	CC-71       	andi r28, 0x1c        ; Logical AND with Immediate
80FE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8100:	51-FA       	bst r5, 1             ; Bit Store from Bit in Register to T Flag in SREG
8102:	8D-F8       	.data 0xf88d          ; Binary data
8104:	D0-47       	sbci r29, 0x70        ; Subtract Immediate with Carry SBI
8106:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8108:	40-09       	sbc r20, r0           ; Subtract with Carry
810A:	8D-F8       	.data 0xf88d          ; Binary data
810C:	D1-97       	sbiw r26, 0x31        ; Subtract Immediate from Word
810E:	8D-F8       	.data 0xf88d          ; Binary data
8110:	D2-77       	andi r29, 0x72        ; Logical AND with Immediate
8112:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8114:	FA-60       	ori r31, 0x0a         ; Logical OR with Immediate
8116:	32-21       	and r19, r2           ; Logical AND
8118:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
811A:	62-FC       	sbrc r6, 2            ; Skip if Bit in Register is Cleared
811C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
811E:	FA-70       	andi r31, 0x0a        ; Logical AND with Immediate
8120:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8122:	FA-61       	ori r31, 0x1a         ; Logical OR with Immediate
8124:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8126:	3E-FA       	.data 0xfa3e          ; Binary data
8128:	8D-F8       	.data 0xf88d          ; Binary data
812A:	D4-47       	sbci r29, 0x74        ; Subtract Immediate with Carry SBI
812C:	8D-F8       	.data 0xf88d          ; Binary data
812E:	D5-97       	sbiw r26, 0x35        ; Subtract Immediate from Word
8130:	8D-F8       	.data 0xf88d          ; Binary data
8132:	D6-77       	andi r29, 0x76        ; Logical AND with Immediate
8134:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
8136:	D4-70       	andi r29, 0x04        ; Logical AND with Immediate
8138:	32-21       	and r19, r2           ; Logical AND
813A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
813C:	51-FC       	sbrc r5, 1            ; Skip if Bit in Register is Cleared
813E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8140:	F5-10       	cpse r15, r5          ; Compare Skip if Equal
8142:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
8144:	D4-71       	andi r29, 0x14        ; Logical AND with Immediate
8146:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8148:	2D-FA       	.data 0xfa2d          ; Binary data
814A:	8D-F8       	.data 0xf88d          ; Binary data
814C:	D8-47       	sbci r29, 0x78        ; Subtract Immediate with Carry SBI
814E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8150:	3F-09       	sbc r19, r15          ; Subtract with Carry
8152:	8D-F8       	.data 0xf88d          ; Binary data
8154:	D9-97       	sbiw r26, 0x39        ; Subtract Immediate from Word
8156:	8D-F8       	.data 0xf88d          ; Binary data
8158:	DA-57       	subi r29, 0x7a        ; Subtract Immediate
815A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
815C:	FB-60       	ori r31, 0x0b         ; Logical OR with Immediate
815E:	32-21       	and r19, r2           ; Logical AND
8160:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8162:	3E-FC       	.data 0xfc3e          ; Binary data
8164:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8166:	FB-70       	andi r31, 0x0b        ; Logical AND with Immediate
8168:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
816A:	FB-61       	ori r31, 0x1b         ; Logical OR with Immediate
816C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
816E:	1A-FA       	.data 0xfa1a          ; Binary data
8170:	8D-F8       	.data 0xf88d          ; Binary data
8172:	DC-47       	sbci r29, 0x7c        ; Subtract Immediate with Carry SBI
8174:	8D-F8       	.data 0xf88d          ; Binary data
8176:	DD-97       	sbiw r26, 0x3d        ; Subtract Immediate from Word
8178:	8D-F8       	.data 0xf88d          ; Binary data
817A:	DE-57       	subi r29, 0x7e        ; Subtract Immediate
817C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
817E:	DC-70       	andi r29, 0x0c        ; Logical AND with Immediate
8180:	32-21       	and r19, r2           ; Logical AND
8182:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8184:	2D-FC       	.data 0xfc2d          ; Binary data
8186:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8188:	F7-10       	cpse r15, r7          ; Compare Skip if Equal
818A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
818C:	DC-71       	andi r29, 0x1c        ; Logical AND with Immediate
818E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8190:	09-FA       	.data 0xfa09          ; Binary data
8192:	8D-F8       	.data 0xf88d          ; Binary data
8194:	E0-47       	sbci r30, 0x70        ; Subtract Immediate with Carry SBI
8196:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8198:	3E-09       	sbc r19, r14          ; Subtract with Carry
819A:	8D-F8       	.data 0xf88d          ; Binary data
819C:	E1-97       	sbiw r28, 0x31        ; Subtract Immediate from Word
819E:	8D-F8       	.data 0xf88d          ; Binary data
81A0:	E2-57       	subi r30, 0x72        ; Subtract Immediate
81A2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
81A4:	FC-60       	ori r31, 0x0c         ; Logical OR with Immediate
81A6:	32-21       	and r19, r2           ; Logical AND
81A8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
81AA:	1A-FC       	.data 0xfc1a          ; Binary data
81AC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
81AE:	FC-70       	andi r31, 0x0c        ; Logical AND with Immediate
81B0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
81B2:	FC-61       	ori r31, 0x1c         ; Logical OR with Immediate
81B4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
81B6:	F6-F9       	bld r31, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
81B8:	8D-F8       	.data 0xf88d          ; Binary data
81BA:	E4-47       	sbci r30, 0x74        ; Subtract Immediate with Carry SBI
81BC:	8D-F8       	.data 0xf88d          ; Binary data
81BE:	E5-97       	sbiw r28, 0x35        ; Subtract Immediate from Word
81C0:	8D-F8       	.data 0xf88d          ; Binary data
81C2:	E6-57       	subi r30, 0x76        ; Subtract Immediate
81C4:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
81C6:	E4-70       	andi r30, 0x04        ; Logical AND with Immediate
81C8:	32-21       	and r19, r2           ; Logical AND
81CA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
81CC:	09-FC       	.data 0xfc09          ; Binary data
81CE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
81D0:	F9-10       	cpse r15, r9          ; Compare Skip if Equal
81D2:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
81D4:	E4-71       	andi r30, 0x14        ; Logical AND with Immediate
81D6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
81D8:	E5-F9       	bld r30, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
81DA:	8D-F8       	.data 0xf88d          ; Binary data
81DC:	E8-47       	sbci r30, 0x78        ; Subtract Immediate with Carry SBI
81DE:	8D-F8       	.data 0xf88d          ; Binary data
81E0:	E9-97       	sbiw r28, 0x39        ; Subtract Immediate from Word
81E2:	8D-F8       	.data 0xf88d          ; Binary data
81E4:	EA-57       	subi r30, 0x7a        ; Subtract Immediate
81E6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
81E8:	FD-60       	ori r31, 0x0d         ; Logical OR with Immediate
81EA:	32-21       	and r19, r2           ; Logical AND
81EC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
81EE:	F8-FB       	.data 0xfbf8          ; Binary data
81F0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
81F2:	FD-70       	andi r31, 0x0d        ; Logical AND with Immediate
81F4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
81F6:	FD-61       	ori r31, 0x1d         ; Logical OR with Immediate
81F8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
81FA:	D4-F9       	bld r29, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
81FC:	8D-F8       	.data 0xf88d          ; Binary data
81FE:	EC-47       	sbci r30, 0x7c        ; Subtract Immediate with Carry SBI
8200:	8D-F8       	.data 0xf88d          ; Binary data
8202:	ED-97       	sbiw r28, 0x3d        ; Subtract Immediate from Word
8204:	8D-F8       	.data 0xf88d          ; Binary data
8206:	EE-57       	subi r30, 0x7e        ; Subtract Immediate
8208:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
820A:	EC-70       	andi r30, 0x0c        ; Logical AND with Immediate
820C:	32-21       	and r19, r2           ; Logical AND
820E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8210:	E7-FB       	bst r30, 7            ; Bit Store from Bit in Register to T Flag in SREG
8212:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8214:	FB-10       	cpse r15, r11         ; Compare Skip if Equal
8216:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
8218:	EC-71       	andi r30, 0x1c        ; Logical AND with Immediate
821A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
821C:	C3-F9       	bld r28, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
821E:	8D-F8       	.data 0xf88d          ; Binary data
8220:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
8222:	8D-F8       	.data 0xf88d          ; Binary data
8224:	F1-97       	sbiw r30, 0x31        ; Subtract Immediate from Word
8226:	8D-F8       	.data 0xf88d          ; Binary data
8228:	F2-57       	subi r31, 0x72        ; Subtract Immediate
822A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
822C:	FE-60       	ori r31, 0x0e         ; Logical OR with Immediate
822E:	32-21       	and r19, r2           ; Logical AND
8230:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8232:	D6-FB       	bst r29, 6            ; Bit Store from Bit in Register to T Flag in SREG
8234:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8236:	FE-70       	andi r31, 0x0e        ; Logical AND with Immediate
8238:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
823A:	FE-61       	ori r31, 0x1e         ; Logical OR with Immediate
823C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
823E:	B2-F9       	bld r27, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
8240:	8D-F8       	.data 0xf88d          ; Binary data
8242:	F4-47       	sbci r31, 0x74        ; Subtract Immediate with Carry SBI
8244:	8D-F8       	.data 0xf88d          ; Binary data
8246:	F5-97       	sbiw r30, 0x35        ; Subtract Immediate from Word
8248:	8D-F8       	.data 0xf88d          ; Binary data
824A:	F6-57       	subi r31, 0x76        ; Subtract Immediate
824C:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
824E:	F4-70       	andi r31, 0x04        ; Logical AND with Immediate
8250:	32-21       	and r19, r2           ; Logical AND
8252:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8254:	C5-FB       	bst r28, 5            ; Bit Store from Bit in Register to T Flag in SREG
8256:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8258:	FD-10       	cpse r15, r13         ; Compare Skip if Equal
825A:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
825C:	F4-71       	andi r31, 0x14        ; Logical AND with Immediate
825E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8260:	A1-F9       	bld r26, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
8262:	8D-F8       	.data 0xf88d          ; Binary data
8264:	F8-47       	sbci r31, 0x78        ; Subtract Immediate with Carry SBI
8266:	8D-F8       	.data 0xf88d          ; Binary data
8268:	F9-97       	sbiw r30, 0x39        ; Subtract Immediate from Word
826A:	8D-F8       	.data 0xf88d          ; Binary data
826C:	FA-57       	subi r31, 0x7a        ; Subtract Immediate
826E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8270:	FF-60       	ori r31, 0x0f         ; Logical OR with Immediate
8272:	32-21       	and r19, r2           ; Logical AND
8274:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8276:	B4-FB       	bst r27, 4            ; Bit Store from Bit in Register to T Flag in SREG
8278:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
827A:	FF-70       	andi r31, 0x0f        ; Logical AND with Immediate
827C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
827E:	FF-61       	ori r31, 0x1f         ; Logical OR with Immediate
8280:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8282:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
8284:	8D-F8       	.data 0xf88d          ; Binary data
8286:	FC-47       	sbci r31, 0x7c        ; Subtract Immediate with Carry SBI
8288:	8D-F8       	.data 0xf88d          ; Binary data
828A:	FD-97       	sbiw r30, 0x3d        ; Subtract Immediate from Word
828C:	8D-F8       	.data 0xf88d          ; Binary data
828E:	FE-57       	subi r31, 0x7e        ; Subtract Immediate
8290:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
8292:	FC-70       	andi r31, 0x0c        ; Logical AND with Immediate
8294:	32-21       	and r19, r2           ; Logical AND
8296:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8298:	A3-FB       	bst r26, 3            ; Bit Store from Bit in Register to T Flag in SREG
829A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
829C:	FF-10       	cpse r15, r15         ; Compare Skip if Equal
829E:	0D-F2       	brbs 5, .-126         ; Branch if Bit in SREG is Set
82A0:	FC-71       	andi r31, 0x1c        ; Logical AND with Immediate
82A2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
82A4:	7F-F9       	.data 0xf97f          ; Binary data
82A6:	8D-F8       	.data 0xf88d          ; Binary data
82A8:	00-68       	ori r16, 0x80         ; Logical OR with Immediate
82AA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
82AC:	3B-09       	sbc r19, r11          ; Subtract with Carry
82AE:	8D-F8       	.data 0xf88d          ; Binary data
82B0:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
82B2:	8D-F8       	.data 0xf88d          ; Binary data
82B4:	02-88       	std Y+18, r0          ; Store Indirect From Register to Data Space
82B6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
82B8:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
82BA:	32-21       	and r19, r2           ; Logical AND
82BC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
82BE:	90-FB       	bst r25, 0            ; Bit Store from Bit in Register to T Flag in SREG
82C0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
82C2:	00-70       	andi r16, 0x00        ; Logical AND with Immediate
82C4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
82C6:	00-61       	ori r16, 0x10         ; Logical OR with Immediate
82C8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
82CA:	6C-F9       	.data 0xf96c          ; Binary data
82CC:	8D-F8       	.data 0xf88d          ; Binary data
82CE:	04-68       	ori r16, 0x84         ; Logical OR with Immediate
82D0:	8D-F8       	.data 0xf88d          ; Binary data
82D2:	05-98       	cbi 0x00, 5           ; Clear Bit in I/O Register
82D4:	8D-F8       	.data 0xf88d          ; Binary data
82D6:	06-88       	std Y+22, r0          ; Store Indirect From Register to Data Space
82D8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
82DA:	04-00       	.data 0x0004          ; Binary data
82DC:	32-21       	and r19, r2           ; Logical AND
82DE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
82E0:	7F-FB       	.data 0xfb7f          ; Binary data
82E2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
82E4:	01-20       	and r0, r1            ; Logical AND
82E6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
82E8:	04-01       	movw r0, r8           ; Copy Register Word
82EA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
82EC:	5B-F9       	.data 0xf95b          ; Binary data
82EE:	8D-F8       	.data 0xf88d          ; Binary data
82F0:	08-68       	ori r16, 0x88         ; Logical OR with Immediate
82F2:	8D-F8       	.data 0xf88d          ; Binary data
82F4:	09-98       	cbi 0x01, 1           ; Clear Bit in I/O Register
82F6:	8D-F8       	.data 0xf88d          ; Binary data
82F8:	0A-88       	std Y+18, r0          ; Store Indirect From Register to Data Space
82FA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
82FC:	08-00       	.data 0x0008          ; Binary data
82FE:	32-21       	and r19, r2           ; Logical AND
8300:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8302:	6E-FB       	.data 0xfb6e          ; Binary data
8304:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8306:	02-20       	and r0, r2            ; Logical AND
8308:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
830A:	08-01       	movw r0, r16          ; Copy Register Word
830C:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
830E:	4A-F9       	.data 0xf94a          ; Binary data
8310:	8D-F8       	.data 0xf88d          ; Binary data
8312:	0C-68       	ori r16, 0x8c         ; Logical OR with Immediate
8314:	8D-F8       	.data 0xf88d          ; Binary data
8316:	0D-98       	cbi 0x01, 5           ; Clear Bit in I/O Register
8318:	8D-F8       	.data 0xf88d          ; Binary data
831A:	0E-88       	std Y+22, r0          ; Store Indirect From Register to Data Space
831C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
831E:	0C-00       	.data 0x000c          ; Binary data
8320:	32-21       	and r19, r2           ; Logical AND
8322:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8324:	5D-FB       	.data 0xfb5d          ; Binary data
8326:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8328:	03-20       	and r0, r3            ; Logical AND
832A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
832C:	0C-01       	movw r0, r24          ; Copy Register Word
832E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8330:	39-F9       	.data 0xf939          ; Binary data
8332:	8D-F8       	.data 0xf88d          ; Binary data
8334:	10-68       	ori r17, 0x80         ; Logical OR with Immediate
8336:	8D-F8       	.data 0xf88d          ; Binary data
8338:	11-98       	cbi 0x02, 1           ; Clear Bit in I/O Register
833A:	8D-F8       	.data 0xf88d          ; Binary data
833C:	12-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
833E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8340:	01-60       	ori r16, 0x01         ; Logical OR with Immediate
8342:	32-21       	and r19, r2           ; Logical AND
8344:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8346:	4C-FB       	.data 0xfb4c          ; Binary data
8348:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
834A:	01-70       	andi r16, 0x01        ; Logical AND with Immediate
834C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
834E:	01-61       	ori r16, 0x11         ; Logical OR with Immediate
8350:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8352:	28-F9       	.data 0xf928          ; Binary data
8354:	8D-F8       	.data 0xf88d          ; Binary data
8356:	14-68       	ori r17, 0x84         ; Logical OR with Immediate
8358:	8D-F8       	.data 0xf88d          ; Binary data
835A:	15-98       	cbi 0x02, 5           ; Clear Bit in I/O Register
835C:	8D-F8       	.data 0xf88d          ; Binary data
835E:	16-88       	std Y+22, r1          ; Store Indirect From Register to Data Space
8360:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8362:	14-00       	.data 0x0014          ; Binary data
8364:	32-21       	and r19, r2           ; Logical AND
8366:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8368:	3B-FB       	.data 0xfb3b          ; Binary data
836A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
836C:	05-20       	and r0, r5            ; Logical AND
836E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8370:	14-01       	movw r2, r8           ; Copy Register Word
8372:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8374:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
8376:	8D-F8       	.data 0xf88d          ; Binary data
8378:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
837A:	8D-F8       	.data 0xf88d          ; Binary data
837C:	19-98       	cbi 0x03, 1           ; Clear Bit in I/O Register
837E:	8D-F8       	.data 0xf88d          ; Binary data
8380:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
8382:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8384:	18-00       	.data 0x0018          ; Binary data
8386:	32-21       	and r19, r2           ; Logical AND
8388:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
838A:	2A-FB       	.data 0xfb2a          ; Binary data
838C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
838E:	06-20       	and r0, r6            ; Logical AND
8390:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8392:	18-01       	movw r2, r16          ; Copy Register Word
8394:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8396:	06-F9       	bld r16, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
8398:	8D-F8       	.data 0xf88d          ; Binary data
839A:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
839C:	8D-F8       	.data 0xf88d          ; Binary data
839E:	1D-98       	cbi 0x03, 5           ; Clear Bit in I/O Register
83A0:	8D-F8       	.data 0xf88d          ; Binary data
83A2:	1E-88       	std Y+22, r1          ; Store Indirect From Register to Data Space
83A4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
83A6:	1C-00       	.data 0x001c          ; Binary data
83A8:	32-21       	and r19, r2           ; Logical AND
83AA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
83AC:	19-FB       	.data 0xfb19          ; Binary data
83AE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
83B0:	07-20       	and r0, r7            ; Logical AND
83B2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
83B4:	1C-01       	movw r2, r24          ; Copy Register Word
83B6:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
83B8:	F5-F8       	bld r15, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
83BA:	8D-F8       	.data 0xf88d          ; Binary data
83BC:	20-48       	sbci r18, 0x80        ; Subtract Immediate with Carry SBI
83BE:	3A-26       	clr r570              ; Clear Register
83C0:	8D-F8       	.data 0xf88d          ; Binary data
83C2:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
83C4:	8D-F8       	.data 0xf88d          ; Binary data
83C6:	22-78       	andi r18, 0x82        ; Logical AND with Immediate
83C8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
83CA:	02-60       	ori r16, 0x02         ; Logical OR with Immediate
83CC:	32-21       	and r19, r2           ; Logical AND
83CE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
83D0:	07-FB       	bst r16, 7            ; Bit Store from Bit in Register to T Flag in SREG
83D2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
83D4:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
83D6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
83D8:	02-61       	ori r16, 0x12         ; Logical OR with Immediate
83DA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
83DC:	E3-F8       	bld r14, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
83DE:	8D-F8       	.data 0xf88d          ; Binary data
83E0:	24-48       	sbci r18, 0x84        ; Subtract Immediate with Carry SBI
83E2:	8D-F8       	.data 0xf88d          ; Binary data
83E4:	25-68       	ori r18, 0x85         ; Logical OR with Immediate
83E6:	8D-F8       	.data 0xf88d          ; Binary data
83E8:	26-78       	andi r18, 0x86        ; Logical AND with Immediate
83EA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
83EC:	24-00       	.data 0x0024          ; Binary data
83EE:	32-21       	and r19, r2           ; Logical AND
83F0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
83F2:	F6-FA       	bst r15, 6            ; Bit Store from Bit in Register to T Flag in SREG
83F4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
83F6:	09-20       	and r0, r9            ; Logical AND
83F8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
83FA:	24-01       	movw r4, r8           ; Copy Register Word
83FC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
83FE:	D2-F8       	bld r13, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
8400:	8D-F8       	.data 0xf88d          ; Binary data
8402:	28-48       	sbci r18, 0x88        ; Subtract Immediate with Carry SBI
8404:	8D-F8       	.data 0xf88d          ; Binary data
8406:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
8408:	8D-F8       	.data 0xf88d          ; Binary data
840A:	2A-78       	andi r18, 0x8a        ; Logical AND with Immediate
840C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
840E:	28-00       	.data 0x0028          ; Binary data
8410:	32-21       	and r19, r2           ; Logical AND
8412:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8414:	E5-FA       	bst r14, 5            ; Bit Store from Bit in Register to T Flag in SREG
8416:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8418:	0A-20       	and r0, r10           ; Logical AND
841A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
841C:	28-01       	movw r4, r16          ; Copy Register Word
841E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8420:	C1-F8       	bld r12, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
8422:	8D-F8       	.data 0xf88d          ; Binary data
8424:	2C-48       	sbci r18, 0x8c        ; Subtract Immediate with Carry SBI
8426:	39-27       	clr r825              ; Clear Register
8428:	8D-F8       	.data 0xf88d          ; Binary data
842A:	2D-78       	andi r18, 0x8d        ; Logical AND with Immediate
842C:	8D-F8       	.data 0xf88d          ; Binary data
842E:	2E-58       	subi r18, 0x8e        ; Subtract Immediate
8430:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8432:	2C-00       	.data 0x002c          ; Binary data
8434:	32-21       	and r19, r2           ; Logical AND
8436:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8438:	D3-FA       	bst r13, 3            ; Bit Store from Bit in Register to T Flag in SREG
843A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
843C:	0B-20       	and r0, r11           ; Logical AND
843E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8440:	2C-01       	movw r4, r24          ; Copy Register Word
8442:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8444:	AF-F8       	.data 0xf8af          ; Binary data
8446:	8D-F8       	.data 0xf88d          ; Binary data
8448:	30-48       	sbci r19, 0x80        ; Subtract Immediate with Carry SBI
844A:	8D-F8       	.data 0xf88d          ; Binary data
844C:	31-78       	andi r19, 0x81        ; Logical AND with Immediate
844E:	8D-F8       	.data 0xf88d          ; Binary data
8450:	32-58       	subi r19, 0x82        ; Subtract Immediate
8452:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8454:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
8456:	32-21       	and r19, r2           ; Logical AND
8458:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
845A:	C2-FA       	bst r12, 2            ; Bit Store from Bit in Register to T Flag in SREG
845C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
845E:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
8460:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8462:	03-61       	ori r16, 0x13         ; Logical OR with Immediate
8464:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8466:	9E-F8       	.data 0xf89e          ; Binary data
8468:	8D-F8       	.data 0xf88d          ; Binary data
846A:	34-48       	sbci r19, 0x84        ; Subtract Immediate with Carry SBI
846C:	8D-F8       	.data 0xf88d          ; Binary data
846E:	35-78       	andi r19, 0x85        ; Logical AND with Immediate
8470:	8D-F8       	.data 0xf88d          ; Binary data
8472:	36-58       	subi r19, 0x86        ; Subtract Immediate
8474:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8476:	34-00       	.data 0x0034          ; Binary data
8478:	32-21       	and r19, r2           ; Logical AND
847A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
847C:	B1-FA       	bst r11, 1            ; Bit Store from Bit in Register to T Flag in SREG
847E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8480:	0D-20       	and r0, r13           ; Logical AND
8482:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8484:	34-01       	movw r6, r8           ; Copy Register Word
8486:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8488:	8D-F8       	.data 0xf88d          ; Binary data
848A:	8D-F8       	.data 0xf88d          ; Binary data
848C:	38-48       	sbci r19, 0x88        ; Subtract Immediate with Carry SBI
848E:	8D-F8       	.data 0xf88d          ; Binary data
8490:	39-78       	andi r19, 0x89        ; Logical AND with Immediate
8492:	8D-F8       	.data 0xf88d          ; Binary data
8494:	3A-58       	subi r19, 0x8a        ; Subtract Immediate
8496:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8498:	38-00       	.data 0x0038          ; Binary data
849A:	32-21       	and r19, r2           ; Logical AND
849C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
849E:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
84A0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
84A2:	0E-20       	and r0, r14           ; Logical AND
84A4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
84A6:	38-01       	movw r6, r16          ; Copy Register Word
84A8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
84AA:	7C-F8       	.data 0xf87c          ; Binary data
84AC:	8D-F8       	.data 0xf88d          ; Binary data
84AE:	3C-48       	sbci r19, 0x8c        ; Subtract Immediate with Carry SBI
84B0:	38-23       	and r19, r24          ; Logical AND
84B2:	8D-F8       	.data 0xf88d          ; Binary data
84B4:	3D-38       	cpi r19, 0x8d         ; Compare with Immediate
84B6:	8D-F8       	.data 0xf88d          ; Binary data
84B8:	3E-B8       	out 0x0e, r3          ; Store Register to I/O Location
84BA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
84BC:	3C-00       	.data 0x003c          ; Binary data
84BE:	32-21       	and r19, r2           ; Logical AND
84C0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
84C2:	8E-FA       	.data 0xfa8e          ; Binary data
84C4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
84C6:	0F-20       	and r0, r15           ; Logical AND
84C8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
84CA:	3C-01       	movw r6, r24          ; Copy Register Word
84CC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
84CE:	6A-F8       	.data 0xf86a          ; Binary data
84D0:	8D-F8       	.data 0xf88d          ; Binary data
84D2:	40-48       	sbci r20, 0x80        ; Subtract Immediate with Carry SBI
84D4:	8D-F8       	.data 0xf88d          ; Binary data
84D6:	41-68       	ori r20, 0x81         ; Logical OR with Immediate
84D8:	FA-23       	and r31, r26          ; Logical AND
84DA:	8D-F8       	.data 0xf88d          ; Binary data
84DC:	42-38       	cpi r20, 0x82         ; Compare with Immediate
84DE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
84E0:	04-60       	ori r16, 0x04         ; Logical OR with Immediate
84E2:	32-21       	and r19, r2           ; Logical AND
84E4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
84E6:	7C-FA       	.data 0xfa7c          ; Binary data
84E8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
84EA:	04-70       	andi r16, 0x04        ; Logical AND with Immediate
84EC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
84EE:	04-61       	ori r16, 0x14         ; Logical OR with Immediate
84F0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
84F2:	58-F8       	.data 0xf858          ; Binary data
84F4:	8D-F8       	.data 0xf88d          ; Binary data
84F6:	44-48       	sbci r20, 0x84        ; Subtract Immediate with Carry SBI
84F8:	8D-F8       	.data 0xf88d          ; Binary data
84FA:	45-68       	ori r20, 0x85         ; Logical OR with Immediate
84FC:	FA-23       	and r31, r26          ; Logical AND
84FE:	8D-F8       	.data 0xf88d          ; Binary data
8500:	46-38       	cpi r20, 0x86         ; Compare with Immediate
8502:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8504:	44-00       	.data 0x0044          ; Binary data
8506:	32-21       	and r19, r2           ; Logical AND
8508:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
850A:	6A-FA       	.data 0xfa6a          ; Binary data
850C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
850E:	11-20       	and r1, r1            ; Logical AND
8510:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8512:	44-01       	movw r8, r8           ; Copy Register Word
8514:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8516:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
8518:	8D-F8       	.data 0xf88d          ; Binary data
851A:	48-48       	sbci r20, 0x88        ; Subtract Immediate with Carry SBI
851C:	8D-F8       	.data 0xf88d          ; Binary data
851E:	49-68       	ori r20, 0x89         ; Logical OR with Immediate
8520:	F8-25       	clr r504              ; Clear Register
8522:	8D-F8       	.data 0xf88d          ; Binary data
8524:	4A-58       	subi r20, 0x8a        ; Subtract Immediate
8526:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8528:	48-00       	.data 0x0048          ; Binary data
852A:	32-21       	and r19, r2           ; Logical AND
852C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
852E:	58-FA       	.data 0xfa58          ; Binary data
8530:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8532:	12-20       	and r1, r2            ; Logical AND
8534:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8536:	48-01       	movw r8, r16          ; Copy Register Word
8538:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
853A:	34-F8       	bld r3, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
853C:	8D-F8       	.data 0xf88d          ; Binary data
853E:	4C-48       	sbci r20, 0x8c        ; Subtract Immediate with Carry SBI
8540:	8D-F8       	.data 0xf88d          ; Binary data
8542:	4D-68       	ori r20, 0x8d         ; Logical OR with Immediate
8544:	8D-F8       	.data 0xf88d          ; Binary data
8546:	4E-58       	subi r20, 0x8e        ; Subtract Immediate
8548:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
854A:	4C-00       	.data 0x004c          ; Binary data
854C:	32-21       	and r19, r2           ; Logical AND
854E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8550:	47-FA       	bst r4, 7             ; Bit Store from Bit in Register to T Flag in SREG
8552:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8554:	13-20       	and r1, r3            ; Logical AND
8556:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8558:	4C-01       	movw r8, r24          ; Copy Register Word
855A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
855C:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
855E:	8D-F8       	.data 0xf88d          ; Binary data
8560:	50-48       	sbci r21, 0x80        ; Subtract Immediate with Carry SBI
8562:	8D-F8       	.data 0xf88d          ; Binary data
8564:	51-68       	ori r21, 0x81         ; Logical OR with Immediate
8566:	F6-25       	clr r502              ; Clear Register
8568:	8D-F8       	.data 0xf88d          ; Binary data
856A:	52-58       	subi r21, 0x82        ; Subtract Immediate
856C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
856E:	05-60       	ori r16, 0x05         ; Logical OR with Immediate
8570:	32-21       	and r19, r2           ; Logical AND
8572:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8574:	35-FA       	bst r3, 5             ; Bit Store from Bit in Register to T Flag in SREG
8576:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8578:	05-70       	andi r16, 0x05        ; Logical AND with Immediate
857A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
857C:	05-61       	ori r16, 0x15         ; Logical OR with Immediate
857E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
8580:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
8582:	8D-F8       	.data 0xf88d          ; Binary data
8584:	54-48       	sbci r21, 0x84        ; Subtract Immediate with Carry SBI
8586:	8D-F8       	.data 0xf88d          ; Binary data
8588:	55-68       	ori r21, 0x85         ; Logical OR with Immediate
858A:	8D-F8       	.data 0xf88d          ; Binary data
858C:	56-58       	subi r21, 0x86        ; Subtract Immediate
858E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8590:	54-00       	.data 0x0054          ; Binary data
8592:	32-21       	and r19, r2           ; Logical AND
8594:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8596:	24-FA       	bst r2, 4             ; Bit Store from Bit in Register to T Flag in SREG
8598:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
859A:	15-20       	and r1, r5            ; Logical AND
859C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
859E:	54-01       	movw r10, r8          ; Copy Register Word
85A0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
85A2:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
85A4:	8D-F8       	.data 0xf88d          ; Binary data
85A6:	58-48       	sbci r21, 0x88        ; Subtract Immediate with Carry SBI
85A8:	4D-46       	sbci r20, 0x6d        ; Subtract Immediate with Carry SBI
85AA:	8D-F8       	.data 0xf88d          ; Binary data
85AC:	59-98       	cbi 0x0b, 1           ; Clear Bit in I/O Register
85AE:	F5-27       	clr r1013             ; Clear Register
85B0:	8D-F8       	.data 0xf88d          ; Binary data
85B2:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
85B4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
85B6:	58-00       	.data 0x0058          ; Binary data
85B8:	32-21       	and r19, r2           ; Logical AND
85BA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
85BC:	11-FA       	bst r1, 1             ; Bit Store from Bit in Register to T Flag in SREG
85BE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
85C0:	16-20       	and r1, r6            ; Logical AND
85C2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
85C4:	58-01       	movw r10, r16         ; Copy Register Word
85C6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
85C8:	ED-FF       	.data 0xffed          ; Binary data
85CA:	8D-F8       	.data 0xf88d          ; Binary data
85CC:	5C-48       	sbci r21, 0x8c        ; Subtract Immediate with Carry SBI
85CE:	8D-F8       	.data 0xf88d          ; Binary data
85D0:	5D-98       	cbi 0x0b, 5           ; Clear Bit in I/O Register
85D2:	8D-F8       	.data 0xf88d          ; Binary data
85D4:	5E-78       	andi r21, 0x8e        ; Logical AND with Immediate
85D6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
85D8:	5C-00       	.data 0x005c          ; Binary data
85DA:	32-21       	and r19, r2           ; Logical AND
85DC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
85DE:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
85E0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
85E2:	17-20       	and r1, r7            ; Logical AND
85E4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
85E6:	5C-01       	movw r10, r24         ; Copy Register Word
85E8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
85EA:	DC-FF       	.data 0xffdc          ; Binary data
85EC:	8D-F8       	.data 0xf88d          ; Binary data
85EE:	60-48       	sbci r22, 0x80        ; Subtract Immediate with Carry SBI
85F0:	8D-F8       	.data 0xf88d          ; Binary data
85F2:	61-98       	cbi 0x0c, 1           ; Clear Bit in I/O Register
85F4:	F3-27       	clr r1011             ; Clear Register
85F6:	8D-F8       	.data 0xf88d          ; Binary data
85F8:	62-78       	andi r22, 0x82        ; Logical AND with Immediate
85FA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
85FC:	06-60       	ori r16, 0x06         ; Logical OR with Immediate
85FE:	32-21       	and r19, r2           ; Logical AND
8600:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8602:	EE-F9       	.data 0xf9ee          ; Binary data
8604:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8606:	06-70       	andi r16, 0x06        ; Logical AND with Immediate
8608:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
860A:	06-61       	ori r16, 0x16         ; Logical OR with Immediate
860C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
860E:	CA-FF       	.data 0xffca          ; Binary data
8610:	8D-F8       	.data 0xf88d          ; Binary data
8612:	64-48       	sbci r22, 0x84        ; Subtract Immediate with Carry SBI
8614:	8D-F8       	.data 0xf88d          ; Binary data
8616:	65-98       	cbi 0x0c, 5           ; Clear Bit in I/O Register
8618:	8D-F8       	.data 0xf88d          ; Binary data
861A:	66-78       	andi r22, 0x86        ; Logical AND with Immediate
861C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
861E:	64-00       	.data 0x0064          ; Binary data
8620:	32-21       	and r19, r2           ; Logical AND
8622:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8624:	DD-F9       	.data 0xf9dd          ; Binary data
8626:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8628:	19-20       	and r1, r9            ; Logical AND
862A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
862C:	64-01       	movw r12, r8          ; Copy Register Word
862E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8630:	B9-FF       	.data 0xffb9          ; Binary data
8632:	8D-F8       	.data 0xf88d          ; Binary data
8634:	68-48       	sbci r22, 0x88        ; Subtract Immediate with Carry SBI
8636:	3C-27       	clr r828              ; Clear Register
8638:	8D-F8       	.data 0xf88d          ; Binary data
863A:	69-78       	andi r22, 0x89        ; Logical AND with Immediate
863C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
863E:	EF-08       	sbc r14, r15          ; Subtract with Carry
8640:	8D-F8       	.data 0xf88d          ; Binary data
8642:	6A-88       	std Y+18, r6          ; Store Indirect From Register to Data Space
8644:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8646:	68-00       	.data 0x0068          ; Binary data
8648:	32-21       	and r19, r2           ; Logical AND
864A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
864C:	C9-F9       	.data 0xf9c9          ; Binary data
864E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8650:	1A-20       	and r1, r10           ; Logical AND
8652:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8654:	68-01       	movw r12, r16         ; Copy Register Word
8656:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8658:	A5-FF       	sbrs r26, 5           ; Skip if Bit in Register is Set
865A:	8D-F8       	.data 0xf88d          ; Binary data
865C:	6C-48       	sbci r22, 0x8c        ; Subtract Immediate with Carry SBI
865E:	8D-F8       	.data 0xf88d          ; Binary data
8660:	6D-78       	andi r22, 0x8d        ; Logical AND with Immediate
8662:	8D-F8       	.data 0xf88d          ; Binary data
8664:	6E-88       	std Y+22, r6          ; Store Indirect From Register to Data Space
8666:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8668:	6C-00       	.data 0x006c          ; Binary data
866A:	32-21       	and r19, r2           ; Logical AND
866C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
866E:	B8-F9       	.data 0xf9b8          ; Binary data
8670:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8672:	1B-20       	and r1, r11           ; Logical AND
8674:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8676:	6C-01       	movw r12, r24         ; Copy Register Word
8678:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
867A:	94-FF       	sbrs r25, 4           ; Skip if Bit in Register is Set
867C:	8D-F8       	.data 0xf88d          ; Binary data
867E:	70-48       	sbci r23, 0x80        ; Subtract Immediate with Carry SBI
8680:	8D-F8       	.data 0xf88d          ; Binary data
8682:	71-78       	andi r23, 0x81        ; Logical AND with Immediate
8684:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8686:	ED-08       	sbc r14, r13          ; Subtract with Carry
8688:	8D-F8       	.data 0xf88d          ; Binary data
868A:	72-88       	std Y+18, r7          ; Store Indirect From Register to Data Space
868C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
868E:	07-60       	ori r16, 0x07         ; Logical OR with Immediate
8690:	32-21       	and r19, r2           ; Logical AND
8692:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8694:	A5-F9       	bld r26, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
8696:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8698:	07-70       	andi r16, 0x07        ; Logical AND with Immediate
869A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
869C:	07-61       	ori r16, 0x17         ; Logical OR with Immediate
869E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
86A0:	81-FF       	sbrs r24, 1           ; Skip if Bit in Register is Set
86A2:	8D-F8       	.data 0xf88d          ; Binary data
86A4:	74-48       	sbci r23, 0x84        ; Subtract Immediate with Carry SBI
86A6:	8D-F8       	.data 0xf88d          ; Binary data
86A8:	75-78       	andi r23, 0x85        ; Logical AND with Immediate
86AA:	8D-F8       	.data 0xf88d          ; Binary data
86AC:	76-88       	std Y+22, r7          ; Store Indirect From Register to Data Space
86AE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
86B0:	74-00       	.data 0x0074          ; Binary data
86B2:	32-21       	and r19, r2           ; Logical AND
86B4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
86B6:	94-F9       	bld r25, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
86B8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
86BA:	1D-20       	and r1, r13           ; Logical AND
86BC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
86BE:	74-01       	movw r14, r8          ; Copy Register Word
86C0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
86C2:	70-FF       	sbrs r23, 0           ; Skip if Bit in Register is Set
86C4:	8D-F8       	.data 0xf88d          ; Binary data
86C6:	78-48       	sbci r23, 0x88        ; Subtract Immediate with Carry SBI
86C8:	8D-F8       	.data 0xf88d          ; Binary data
86CA:	79-78       	andi r23, 0x89        ; Logical AND with Immediate
86CC:	8D-F8       	.data 0xf88d          ; Binary data
86CE:	7A-88       	std Y+18, r7          ; Store Indirect From Register to Data Space
86D0:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
86D2:	78-00       	.data 0x0078          ; Binary data
86D4:	32-21       	and r19, r2           ; Logical AND
86D6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
86D8:	83-F9       	bld r24, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
86DA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
86DC:	1E-20       	and r1, r14           ; Logical AND
86DE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
86E0:	78-01       	movw r14, r16         ; Copy Register Word
86E2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
86E4:	5F-FF       	.data 0xff5f          ; Binary data
86E6:	8D-F8       	.data 0xf88d          ; Binary data
86E8:	7C-48       	sbci r23, 0x8c        ; Subtract Immediate with Carry SBI
86EA:	8D-F8       	.data 0xf88d          ; Binary data
86EC:	7D-78       	andi r23, 0x8d        ; Logical AND with Immediate
86EE:	8D-F8       	.data 0xf88d          ; Binary data
86F0:	7E-88       	std Y+22, r7          ; Store Indirect From Register to Data Space
86F2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
86F4:	7C-00       	.data 0x007c          ; Binary data
86F6:	32-21       	and r19, r2           ; Logical AND
86F8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
86FA:	72-F9       	bld r23, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
86FC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
86FE:	1F-20       	and r1, r15           ; Logical AND
8700:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8702:	7C-01       	movw r14, r24         ; Copy Register Word
8704:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8706:	4E-FF       	.data 0xff4e          ; Binary data
8708:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
870A:	01-08       	sbc r0, r1            ; Subtract with Carry
870C:	8D-F8       	.data 0xf88d          ; Binary data
870E:	80-88       	std Y+16, r8          ; Store Indirect From Register to Data Space
8710:	8D-F8       	.data 0xf88d          ; Binary data
8712:	81-68       	ori r24, 0x81         ; Logical OR with Immediate
8714:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8716:	EB-09       	sbc r30, r11          ; Subtract with Carry
8718:	8D-F8       	.data 0xf88d          ; Binary data
871A:	82-98       	cbi 0x10, 2           ; Clear Bit in I/O Register
871C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
871E:	08-60       	ori r16, 0x08         ; Logical OR with Immediate
8720:	32-21       	and r19, r2           ; Logical AND
8722:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8724:	5D-F9       	.data 0xf95d          ; Binary data
8726:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8728:	08-70       	andi r16, 0x08        ; Logical AND with Immediate
872A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
872C:	08-61       	ori r16, 0x18         ; Logical OR with Immediate
872E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8730:	39-FF       	.data 0xff39          ; Binary data
8732:	8D-F8       	.data 0xf88d          ; Binary data
8734:	84-88       	std Y+20, r8          ; Store Indirect From Register to Data Space
8736:	8D-F8       	.data 0xf88d          ; Binary data
8738:	85-68       	ori r24, 0x85         ; Logical OR with Immediate
873A:	8D-F8       	.data 0xf88d          ; Binary data
873C:	86-98       	cbi 0x10, 6           ; Clear Bit in I/O Register
873E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8740:	84-00       	.data 0x0084          ; Binary data
8742:	32-21       	and r19, r2           ; Logical AND
8744:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8746:	4C-F9       	.data 0xf94c          ; Binary data
8748:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
874A:	21-20       	and r2, r1            ; Logical AND
874C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
874E:	84-01       	movw r16, r8          ; Copy Register Word
8750:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8752:	28-FF       	.data 0xff28          ; Binary data
8754:	8D-F8       	.data 0xf88d          ; Binary data
8756:	88-88       	std Y+16, r8          ; Store Indirect From Register to Data Space
8758:	8D-F8       	.data 0xf88d          ; Binary data
875A:	89-68       	ori r24, 0x89         ; Logical OR with Immediate
875C:	8D-F8       	.data 0xf88d          ; Binary data
875E:	8A-98       	cbi 0x11, 2           ; Clear Bit in I/O Register
8760:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8762:	88-00       	.data 0x0088          ; Binary data
8764:	32-21       	and r19, r2           ; Logical AND
8766:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8768:	3B-F9       	.data 0xf93b          ; Binary data
876A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
876C:	22-20       	and r2, r2            ; Logical AND
876E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8770:	88-01       	movw r16, r16         ; Copy Register Word
8772:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8774:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
8776:	8D-F8       	.data 0xf88d          ; Binary data
8778:	8C-88       	std Y+20, r8          ; Store Indirect From Register to Data Space
877A:	8D-F8       	.data 0xf88d          ; Binary data
877C:	8D-68       	ori r24, 0x8d         ; Logical OR with Immediate
877E:	8D-F8       	.data 0xf88d          ; Binary data
8780:	8E-98       	cbi 0x11, 6           ; Clear Bit in I/O Register
8782:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8784:	8C-00       	.data 0x008c          ; Binary data
8786:	32-21       	and r19, r2           ; Logical AND
8788:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
878A:	2A-F9       	.data 0xf92a          ; Binary data
878C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
878E:	23-20       	and r2, r3            ; Logical AND
8790:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8792:	8C-01       	movw r16, r24         ; Copy Register Word
8794:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8796:	06-FF       	sbrs r16, 6           ; Skip if Bit in Register is Set
8798:	8D-F8       	.data 0xf88d          ; Binary data
879A:	90-88       	std Y+16, r9          ; Store Indirect From Register to Data Space
879C:	8D-F8       	.data 0xf88d          ; Binary data
879E:	91-68       	ori r25, 0x81         ; Logical OR with Immediate
87A0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
87A2:	E9-09       	sbc r30, r9           ; Subtract with Carry
87A4:	8D-F8       	.data 0xf88d          ; Binary data
87A6:	92-98       	cbi 0x12, 2           ; Clear Bit in I/O Register
87A8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
87AA:	09-60       	ori r16, 0x09         ; Logical OR with Immediate
87AC:	32-21       	and r19, r2           ; Logical AND
87AE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
87B0:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
87B2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
87B4:	09-70       	andi r16, 0x09        ; Logical AND with Immediate
87B6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
87B8:	09-61       	ori r16, 0x19         ; Logical OR with Immediate
87BA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
87BC:	F3-FE       	sbrs r15, 3           ; Skip if Bit in Register is Set
87BE:	8D-F8       	.data 0xf88d          ; Binary data
87C0:	94-88       	std Y+20, r9          ; Store Indirect From Register to Data Space
87C2:	8D-F8       	.data 0xf88d          ; Binary data
87C4:	95-68       	ori r25, 0x85         ; Logical OR with Immediate
87C6:	8D-F8       	.data 0xf88d          ; Binary data
87C8:	96-98       	cbi 0x12, 6           ; Clear Bit in I/O Register
87CA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
87CC:	94-00       	.data 0x0094          ; Binary data
87CE:	32-21       	and r19, r2           ; Logical AND
87D0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
87D2:	06-F9       	bld r16, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
87D4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
87D6:	25-20       	and r2, r5            ; Logical AND
87D8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
87DA:	94-01       	movw r18, r8          ; Copy Register Word
87DC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
87DE:	E2-FE       	sbrs r14, 2           ; Skip if Bit in Register is Set
87E0:	8D-F8       	.data 0xf88d          ; Binary data
87E2:	98-88       	std Y+16, r9          ; Store Indirect From Register to Data Space
87E4:	8D-F8       	.data 0xf88d          ; Binary data
87E6:	99-58       	subi r25, 0x89        ; Subtract Immediate
87E8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
87EA:	E7-09       	sbc r30, r7           ; Subtract with Carry
87EC:	8D-F8       	.data 0xf88d          ; Binary data
87EE:	9A-98       	cbi 0x13, 2           ; Clear Bit in I/O Register
87F0:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
87F2:	98-00       	.data 0x0098          ; Binary data
87F4:	32-21       	and r19, r2           ; Logical AND
87F6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
87F8:	F3-F8       	bld r15, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
87FA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
87FC:	26-20       	and r2, r6            ; Logical AND
87FE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8800:	98-01       	movw r18, r16         ; Copy Register Word
8802:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8804:	CF-FE       	.data 0xfecf          ; Binary data
8806:	8D-F8       	.data 0xf88d          ; Binary data
8808:	9C-88       	std Y+20, r9          ; Store Indirect From Register to Data Space
880A:	8D-F8       	.data 0xf88d          ; Binary data
880C:	9D-58       	subi r25, 0x8d        ; Subtract Immediate
880E:	8D-F8       	.data 0xf88d          ; Binary data
8810:	9E-98       	cbi 0x13, 6           ; Clear Bit in I/O Register
8812:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8814:	9C-00       	.data 0x009c          ; Binary data
8816:	32-21       	and r19, r2           ; Logical AND
8818:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
881A:	E2-F8       	bld r14, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
881C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
881E:	27-20       	and r2, r7            ; Logical AND
8820:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8822:	9C-01       	movw r18, r24         ; Copy Register Word
8824:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8826:	BE-FE       	.data 0xfebe          ; Binary data
8828:	8D-F8       	.data 0xf88d          ; Binary data
882A:	A0-88       	std Y+16, r10         ; Store Indirect From Register to Data Space
882C:	8D-F8       	.data 0xf88d          ; Binary data
882E:	A1-58       	subi r26, 0x81        ; Subtract Immediate
8830:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
8832:	E4-09       	sbc r30, r4           ; Subtract with Carry
8834:	8D-F8       	.data 0xf88d          ; Binary data
8836:	A2-98       	cbi 0x14, 2           ; Clear Bit in I/O Register
8838:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
883A:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
883C:	32-21       	and r19, r2           ; Logical AND
883E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8840:	CF-F8       	.data 0xf8cf          ; Binary data
8842:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8844:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
8846:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8848:	0A-61       	ori r16, 0x1a         ; Logical OR with Immediate
884A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
884C:	AB-FE       	.data 0xfeab          ; Binary data
884E:	8D-F8       	.data 0xf88d          ; Binary data
8850:	A4-88       	std Y+20, r10         ; Store Indirect From Register to Data Space
8852:	8D-F8       	.data 0xf88d          ; Binary data
8854:	A5-58       	subi r26, 0x85        ; Subtract Immediate
8856:	8D-F8       	.data 0xf88d          ; Binary data
8858:	A6-98       	cbi 0x14, 6           ; Clear Bit in I/O Register
885A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
885C:	A4-00       	.data 0x00a4          ; Binary data
885E:	32-21       	and r19, r2           ; Logical AND
8860:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8862:	BE-F8       	.data 0xf8be          ; Binary data
8864:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8866:	29-20       	and r2, r9            ; Logical AND
8868:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
886A:	A4-01       	movw r20, r8          ; Copy Register Word
886C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
886E:	9A-FE       	.data 0xfe9a          ; Binary data
8870:	8D-F8       	.data 0xf88d          ; Binary data
8872:	A8-88       	std Y+16, r10         ; Store Indirect From Register to Data Space
8874:	8D-F8       	.data 0xf88d          ; Binary data
8876:	A9-78       	andi r26, 0x89        ; Logical AND with Immediate
8878:	E2-23       	and r30, r18          ; Logical AND
887A:	8D-F8       	.data 0xf88d          ; Binary data
887C:	AA-38       	cpi r26, 0x8a         ; Compare with Immediate
887E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8880:	A8-00       	.data 0x00a8          ; Binary data
8882:	32-21       	and r19, r2           ; Logical AND
8884:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8886:	AC-F8       	.data 0xf8ac          ; Binary data
8888:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
888A:	2A-20       	and r2, r10           ; Logical AND
888C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
888E:	A8-01       	movw r20, r16         ; Copy Register Word
8890:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8892:	88-FE       	.data 0xfe88          ; Binary data
8894:	8D-F8       	.data 0xf88d          ; Binary data
8896:	AC-48       	sbci r26, 0x8c        ; Subtract Immediate with Carry SBI
8898:	8D-F8       	.data 0xf88d          ; Binary data
889A:	AD-58       	subi r26, 0x8d        ; Subtract Immediate
889C:	E1-23       	and r30, r17          ; Logical AND
889E:	8D-F8       	.data 0xf88d          ; Binary data
88A0:	AE-38       	cpi r26, 0x8e         ; Compare with Immediate
88A2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
88A4:	AC-00       	.data 0x00ac          ; Binary data
88A6:	32-21       	and r19, r2           ; Logical AND
88A8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
88AA:	9A-F8       	.data 0xf89a          ; Binary data
88AC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
88AE:	2B-20       	and r2, r11           ; Logical AND
88B0:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
88B2:	AC-01       	movw r20, r24         ; Copy Register Word
88B4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
88B6:	76-FE       	sbrs r7, 6            ; Skip if Bit in Register is Set
88B8:	8D-F8       	.data 0xf88d          ; Binary data
88BA:	B0-48       	sbci r27, 0x80        ; Subtract Immediate with Carry SBI
88BC:	8D-F8       	.data 0xf88d          ; Binary data
88BE:	B1-58       	subi r27, 0x81        ; Subtract Immediate
88C0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
88C2:	DF-08       	sbc r13, r15          ; Subtract with Carry
88C4:	8D-F8       	.data 0xf88d          ; Binary data
88C6:	B2-88       	std Y+18, r11         ; Store Indirect From Register to Data Space
88C8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
88CA:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
88CC:	32-21       	and r19, r2           ; Logical AND
88CE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
88D0:	87-F8       	bld r8, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
88D2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
88D4:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
88D6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
88D8:	0B-61       	ori r16, 0x1b         ; Logical OR with Immediate
88DA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
88DC:	63-FE       	sbrs r6, 3            ; Skip if Bit in Register is Set
88DE:	8D-F8       	.data 0xf88d          ; Binary data
88E0:	B4-48       	sbci r27, 0x84        ; Subtract Immediate with Carry SBI
88E2:	8D-F8       	.data 0xf88d          ; Binary data
88E4:	B5-58       	subi r27, 0x85        ; Subtract Immediate
88E6:	8D-F8       	.data 0xf88d          ; Binary data
88E8:	B6-88       	std Y+22, r11         ; Store Indirect From Register to Data Space
88EA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
88EC:	B4-00       	.data 0x00b4          ; Binary data
88EE:	32-21       	and r19, r2           ; Logical AND
88F0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
88F2:	76-F8       	bld r7, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
88F4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
88F6:	2D-20       	and r2, r13           ; Logical AND
88F8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
88FA:	B4-01       	movw r22, r8          ; Copy Register Word
88FC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
88FE:	52-FE       	sbrs r5, 2            ; Skip if Bit in Register is Set
8900:	8D-F8       	.data 0xf88d          ; Binary data
8902:	B8-48       	sbci r27, 0x88        ; Subtract Immediate with Carry SBI
8904:	8D-F8       	.data 0xf88d          ; Binary data
8906:	B9-68       	ori r27, 0x89         ; Logical OR with Immediate
8908:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
890A:	DC-08       	sbc r13, r12          ; Subtract with Carry
890C:	8D-F8       	.data 0xf88d          ; Binary data
890E:	BA-88       	std Y+18, r11         ; Store Indirect From Register to Data Space
8910:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8912:	B8-00       	.data 0x00b8          ; Binary data
8914:	32-21       	and r19, r2           ; Logical AND
8916:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8918:	63-F8       	bld r6, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
891A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
891C:	2E-20       	and r2, r14           ; Logical AND
891E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8920:	B8-01       	movw r22, r16         ; Copy Register Word
8922:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8924:	3F-FE       	.data 0xfe3f          ; Binary data
8926:	8D-F8       	.data 0xf88d          ; Binary data
8928:	BC-48       	sbci r27, 0x8c        ; Subtract Immediate with Carry SBI
892A:	8D-F8       	.data 0xf88d          ; Binary data
892C:	BD-68       	ori r27, 0x8d         ; Logical OR with Immediate
892E:	8D-F8       	.data 0xf88d          ; Binary data
8930:	BE-88       	std Y+22, r11         ; Store Indirect From Register to Data Space
8932:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8934:	BC-00       	.data 0x00bc          ; Binary data
8936:	32-21       	and r19, r2           ; Logical AND
8938:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
893A:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
893C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
893E:	2F-20       	and r2, r15           ; Logical AND
8940:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8942:	BC-01       	movw r22, r24         ; Copy Register Word
8944:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8946:	2E-FE       	.data 0xfe2e          ; Binary data
8948:	8D-F8       	.data 0xf88d          ; Binary data
894A:	C0-48       	sbci r28, 0x80        ; Subtract Immediate with Carry SBI
894C:	8D-F8       	.data 0xf88d          ; Binary data
894E:	C1-58       	subi r28, 0x81        ; Subtract Immediate
8950:	D9-26       	clr r729              ; Clear Register
8952:	8D-F8       	.data 0xf88d          ; Binary data
8954:	C2-68       	ori r28, 0x82         ; Logical OR with Immediate
8956:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8958:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
895A:	32-21       	and r19, r2           ; Logical AND
895C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
895E:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
8960:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8962:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
8964:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8966:	0C-61       	ori r16, 0x1c         ; Logical OR with Immediate
8968:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
896A:	1C-FE       	.data 0xfe1c          ; Binary data
896C:	8D-F8       	.data 0xf88d          ; Binary data
896E:	C4-48       	sbci r28, 0x84        ; Subtract Immediate with Carry SBI
8970:	8D-F8       	.data 0xf88d          ; Binary data
8972:	C5-58       	subi r28, 0x85        ; Subtract Immediate
8974:	8D-F8       	.data 0xf88d          ; Binary data
8976:	C6-68       	ori r28, 0x86         ; Logical OR with Immediate
8978:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
897A:	C4-00       	.data 0x00c4          ; Binary data
897C:	32-21       	and r19, r2           ; Logical AND
897E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8980:	2F-F8       	.data 0xf82f          ; Binary data
8982:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8984:	31-20       	and r3, r1            ; Logical AND
8986:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8988:	C4-01       	movw r24, r8          ; Copy Register Word
898A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
898C:	0B-FE       	.data 0xfe0b          ; Binary data
898E:	8D-F8       	.data 0xf88d          ; Binary data
8990:	C8-48       	sbci r28, 0x88        ; Subtract Immediate with Carry SBI
8992:	8D-F8       	.data 0xf88d          ; Binary data
8994:	C9-58       	subi r28, 0x89        ; Subtract Immediate
8996:	8D-F8       	.data 0xf88d          ; Binary data
8998:	CA-68       	ori r28, 0x8a         ; Logical OR with Immediate
899A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
899C:	C8-00       	.data 0x00c8          ; Binary data
899E:	32-21       	and r19, r2           ; Logical AND
89A0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
89A2:	1E-F8       	.data 0xf81e          ; Binary data
89A4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
89A6:	32-20       	and r3, r2            ; Logical AND
89A8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
89AA:	C8-01       	movw r24, r16         ; Copy Register Word
89AC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
89AE:	FA-FD       	.data 0xfdfa          ; Binary data
89B0:	8D-F8       	.data 0xf88d          ; Binary data
89B2:	CC-48       	sbci r28, 0x8c        ; Subtract Immediate with Carry SBI
89B4:	8D-F8       	.data 0xf88d          ; Binary data
89B6:	CD-58       	subi r28, 0x8d        ; Subtract Immediate
89B8:	8D-F8       	.data 0xf88d          ; Binary data
89BA:	CE-68       	ori r28, 0x8e         ; Logical OR with Immediate
89BC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
89BE:	CC-00       	.data 0x00cc          ; Binary data
89C0:	32-21       	and r19, r2           ; Logical AND
89C2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
89C4:	0D-F8       	.data 0xf80d          ; Binary data
89C6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
89C8:	33-20       	and r3, r3            ; Logical AND
89CA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
89CC:	CC-01       	movw r24, r24         ; Copy Register Word
89CE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
89D0:	E9-FD       	.data 0xfde9          ; Binary data
89D2:	8D-F8       	.data 0xf88d          ; Binary data
89D4:	D0-48       	sbci r29, 0x80        ; Subtract Immediate with Carry SBI
89D6:	8D-F8       	.data 0xf88d          ; Binary data
89D8:	D1-58       	subi r29, 0x81        ; Subtract Immediate
89DA:	D7-26       	clr r727              ; Clear Register
89DC:	8D-F8       	.data 0xf88d          ; Binary data
89DE:	D2-68       	ori r29, 0x82         ; Logical OR with Immediate
89E0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
89E2:	0D-60       	ori r16, 0x0d         ; Logical OR with Immediate
89E4:	32-21       	and r19, r2           ; Logical AND
89E6:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
89E8:	FB-FF       	.data 0xfffb          ; Binary data
89EA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
89EC:	0D-70       	andi r16, 0x0d        ; Logical AND with Immediate
89EE:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
89F0:	0D-61       	ori r16, 0x1d         ; Logical OR with Immediate
89F2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
89F4:	D7-FD       	sbrc r29, 7           ; Skip if Bit in Register is Cleared
89F6:	8D-F8       	.data 0xf88d          ; Binary data
89F8:	D4-48       	sbci r29, 0x84        ; Subtract Immediate with Carry SBI
89FA:	8D-F8       	.data 0xf88d          ; Binary data
89FC:	D5-58       	subi r29, 0x85        ; Subtract Immediate
89FE:	8D-F8       	.data 0xf88d          ; Binary data
8A00:	D6-68       	ori r29, 0x86         ; Logical OR with Immediate
8A02:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A04:	D4-00       	.data 0x00d4          ; Binary data
8A06:	32-21       	and r19, r2           ; Logical AND
8A08:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8A0A:	EA-FF       	.data 0xffea          ; Binary data
8A0C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8A0E:	35-20       	and r3, r5            ; Logical AND
8A10:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A12:	D4-01       	movw r26, r8          ; Copy Register Word
8A14:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8A16:	C6-FD       	sbrc r28, 6           ; Skip if Bit in Register is Cleared
8A18:	8D-F8       	.data 0xf88d          ; Binary data
8A1A:	D8-48       	sbci r29, 0x88        ; Subtract Immediate with Carry SBI
8A1C:	8D-F8       	.data 0xf88d          ; Binary data
8A1E:	D9-78       	andi r29, 0x89        ; Logical AND with Immediate
8A20:	D5-25       	clr r469              ; Clear Register
8A22:	8D-F8       	.data 0xf88d          ; Binary data
8A24:	DA-58       	subi r29, 0x8a        ; Subtract Immediate
8A26:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A28:	D8-00       	.data 0x00d8          ; Binary data
8A2A:	32-21       	and r19, r2           ; Logical AND
8A2C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8A2E:	D8-FF       	.data 0xffd8          ; Binary data
8A30:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8A32:	36-20       	and r3, r6            ; Logical AND
8A34:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A36:	D8-01       	movw r26, r16         ; Copy Register Word
8A38:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8A3A:	B4-FD       	sbrc r27, 4           ; Skip if Bit in Register is Cleared
8A3C:	8D-F8       	.data 0xf88d          ; Binary data
8A3E:	DC-48       	sbci r29, 0x8c        ; Subtract Immediate with Carry SBI
8A40:	8D-F8       	.data 0xf88d          ; Binary data
8A42:	DD-78       	andi r29, 0x8d        ; Logical AND with Immediate
8A44:	8D-F8       	.data 0xf88d          ; Binary data
8A46:	DE-58       	subi r29, 0x8e        ; Subtract Immediate
8A48:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A4A:	DC-00       	.data 0x00dc          ; Binary data
8A4C:	32-21       	and r19, r2           ; Logical AND
8A4E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8A50:	C7-FF       	sbrs r28, 7           ; Skip if Bit in Register is Set
8A52:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8A54:	37-20       	and r3, r7            ; Logical AND
8A56:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A58:	DC-01       	movw r26, r24         ; Copy Register Word
8A5A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8A5C:	A3-FD       	sbrc r26, 3           ; Skip if Bit in Register is Cleared
8A5E:	8D-F8       	.data 0xf88d          ; Binary data
8A60:	E0-48       	sbci r30, 0x80        ; Subtract Immediate with Carry SBI
8A62:	8D-F8       	.data 0xf88d          ; Binary data
8A64:	E1-78       	andi r30, 0x81        ; Logical AND with Immediate
8A66:	D2-25       	clr r466              ; Clear Register
8A68:	8D-F8       	.data 0xf88d          ; Binary data
8A6A:	E2-58       	subi r30, 0x82        ; Subtract Immediate
8A6C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8A6E:	0E-60       	ori r16, 0x0e         ; Logical OR with Immediate
8A70:	32-21       	and r19, r2           ; Logical AND
8A72:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8A74:	B5-FF       	sbrs r27, 5           ; Skip if Bit in Register is Set
8A76:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8A78:	0E-70       	andi r16, 0x0e        ; Logical AND with Immediate
8A7A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8A7C:	0E-61       	ori r16, 0x1e         ; Logical OR with Immediate
8A7E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8A80:	91-FD       	sbrc r25, 1           ; Skip if Bit in Register is Cleared
8A82:	8D-F8       	.data 0xf88d          ; Binary data
8A84:	E4-48       	sbci r30, 0x84        ; Subtract Immediate with Carry SBI
8A86:	8D-F8       	.data 0xf88d          ; Binary data
8A88:	E5-78       	andi r30, 0x85        ; Logical AND with Immediate
8A8A:	8D-F8       	.data 0xf88d          ; Binary data
8A8C:	E6-58       	subi r30, 0x86        ; Subtract Immediate
8A8E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A90:	E4-00       	.data 0x00e4          ; Binary data
8A92:	32-21       	and r19, r2           ; Logical AND
8A94:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8A96:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
8A98:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8A9A:	39-20       	and r3, r9            ; Logical AND
8A9C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8A9E:	E4-01       	movw r28, r8          ; Copy Register Word
8AA0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8AA2:	80-FD       	sbrc r24, 0           ; Skip if Bit in Register is Cleared
8AA4:	8D-F8       	.data 0xf88d          ; Binary data
8AA6:	E8-48       	sbci r30, 0x88        ; Subtract Immediate with Carry SBI
8AA8:	3D-25       	clr r317              ; Clear Register
8AAA:	8D-F8       	.data 0xf88d          ; Binary data
8AAC:	E9-58       	subi r30, 0x89        ; Subtract Immediate
8AAE:	D0-26       	clr r720              ; Clear Register
8AB0:	8D-F8       	.data 0xf88d          ; Binary data
8AB2:	EA-68       	ori r30, 0x8a         ; Logical OR with Immediate
8AB4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8AB6:	E8-00       	.data 0x00e8          ; Binary data
8AB8:	32-21       	and r19, r2           ; Logical AND
8ABA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8ABC:	91-FF       	sbrs r25, 1           ; Skip if Bit in Register is Set
8ABE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8AC0:	3A-20       	and r3, r10           ; Logical AND
8AC2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8AC4:	E8-01       	movw r28, r16         ; Copy Register Word
8AC6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8AC8:	6D-FD       	.data 0xfd6d          ; Binary data
8ACA:	8D-F8       	.data 0xf88d          ; Binary data
8ACC:	EC-48       	sbci r30, 0x8c        ; Subtract Immediate with Carry SBI
8ACE:	8D-F8       	.data 0xf88d          ; Binary data
8AD0:	ED-58       	subi r30, 0x8d        ; Subtract Immediate
8AD2:	8D-F8       	.data 0xf88d          ; Binary data
8AD4:	EE-68       	ori r30, 0x8e         ; Logical OR with Immediate
8AD6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8AD8:	EC-00       	.data 0x00ec          ; Binary data
8ADA:	32-21       	and r19, r2           ; Logical AND
8ADC:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8ADE:	80-FF       	sbrs r24, 0           ; Skip if Bit in Register is Set
8AE0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8AE2:	3B-20       	and r3, r11           ; Logical AND
8AE4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8AE6:	EC-01       	movw r28, r24         ; Copy Register Word
8AE8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8AEA:	5C-FD       	.data 0xfd5c          ; Binary data
8AEC:	8D-F8       	.data 0xf88d          ; Binary data
8AEE:	F0-48       	sbci r31, 0x80        ; Subtract Immediate with Carry SBI
8AF0:	8D-F8       	.data 0xf88d          ; Binary data
8AF2:	F1-58       	subi r31, 0x81        ; Subtract Immediate
8AF4:	CE-26       	clr r718              ; Clear Register
8AF6:	8D-F8       	.data 0xf88d          ; Binary data
8AF8:	F2-68       	ori r31, 0x82         ; Logical OR with Immediate
8AFA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8AFC:	0F-60       	ori r16, 0x0f         ; Logical OR with Immediate
8AFE:	32-21       	and r19, r2           ; Logical AND
8B00:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8B02:	6E-FF       	.data 0xff6e          ; Binary data
8B04:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8B06:	0F-70       	andi r16, 0x0f        ; Logical AND with Immediate
8B08:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8B0A:	0F-61       	ori r16, 0x1f         ; Logical OR with Immediate
8B0C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8B0E:	4A-FD       	.data 0xfd4a          ; Binary data
8B10:	8D-F8       	.data 0xf88d          ; Binary data
8B12:	F4-48       	sbci r31, 0x84        ; Subtract Immediate with Carry SBI
8B14:	8D-F8       	.data 0xf88d          ; Binary data
8B16:	F5-58       	subi r31, 0x85        ; Subtract Immediate
8B18:	8D-F8       	.data 0xf88d          ; Binary data
8B1A:	F6-68       	ori r31, 0x86         ; Logical OR with Immediate
8B1C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8B1E:	F4-00       	.data 0x00f4          ; Binary data
8B20:	32-21       	and r19, r2           ; Logical AND
8B22:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8B24:	5D-FF       	.data 0xff5d          ; Binary data
8B26:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8B28:	3D-20       	and r3, r13           ; Logical AND
8B2A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8B2C:	F4-01       	movw r30, r8          ; Copy Register Word
8B2E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8B30:	39-FD       	.data 0xfd39          ; Binary data
8B32:	8D-F8       	.data 0xf88d          ; Binary data
8B34:	F8-48       	sbci r31, 0x88        ; Subtract Immediate with Carry SBI
8B36:	8D-F8       	.data 0xf88d          ; Binary data
8B38:	F9-58       	subi r31, 0x89        ; Subtract Immediate
8B3A:	CC-26       	clr r716              ; Clear Register
8B3C:	8D-F8       	.data 0xf88d          ; Binary data
8B3E:	FA-68       	ori r31, 0x8a         ; Logical OR with Immediate
8B40:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8B42:	F8-00       	.data 0x00f8          ; Binary data
8B44:	32-21       	and r19, r2           ; Logical AND
8B46:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8B48:	4B-FF       	.data 0xff4b          ; Binary data
8B4A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8B4C:	3E-20       	and r3, r14           ; Logical AND
8B4E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8B50:	F8-01       	movw r30, r16         ; Copy Register Word
8B52:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8B54:	27-FD       	sbrc r18, 7           ; Skip if Bit in Register is Cleared
8B56:	8D-F8       	.data 0xf88d          ; Binary data
8B58:	FC-48       	sbci r31, 0x8c        ; Subtract Immediate with Carry SBI
8B5A:	8D-F8       	.data 0xf88d          ; Binary data
8B5C:	FD-58       	subi r31, 0x8d        ; Subtract Immediate
8B5E:	8D-F8       	.data 0xf88d          ; Binary data
8B60:	FE-68       	ori r31, 0x8e         ; Logical OR with Immediate
8B62:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8B64:	FC-00       	.data 0x00fc          ; Binary data
8B66:	32-21       	and r19, r2           ; Logical AND
8B68:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8B6A:	3A-FF       	.data 0xff3a          ; Binary data
8B6C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8B6E:	3F-20       	and r3, r15           ; Logical AND
8B70:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8B72:	FC-01       	movw r30, r24         ; Copy Register Word
8B74:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8B76:	16-FD       	sbrc r17, 6           ; Skip if Bit in Register is Cleared
8B78:	8D-F8       	.data 0xf88d          ; Binary data
8B7A:	00-49       	sbci r16, 0x90        ; Subtract Immediate with Carry SBI
8B7C:	3E-26       	clr r574              ; Clear Register
8B7E:	8D-F8       	.data 0xf88d          ; Binary data
8B80:	01-69       	ori r16, 0x91         ; Logical OR with Immediate
8B82:	C9-25       	clr r457              ; Clear Register
8B84:	8D-F8       	.data 0xf88d          ; Binary data
8B86:	02-59       	subi r16, 0x92        ; Subtract Immediate
8B88:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8B8A:	10-60       	ori r17, 0x00         ; Logical OR with Immediate
8B8C:	32-21       	and r19, r2           ; Logical AND
8B8E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8B90:	27-FF       	sbrs r18, 7           ; Skip if Bit in Register is Set
8B92:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8B94:	10-70       	andi r17, 0x00        ; Logical AND with Immediate
8B96:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8B98:	10-61       	ori r17, 0x10         ; Logical OR with Immediate
8B9A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8B9C:	03-FD       	sbrc r16, 3           ; Skip if Bit in Register is Cleared
8B9E:	8D-F8       	.data 0xf88d          ; Binary data
8BA0:	04-49       	sbci r16, 0x94        ; Subtract Immediate with Carry SBI
8BA2:	8D-F8       	.data 0xf88d          ; Binary data
8BA4:	05-69       	ori r16, 0x95         ; Logical OR with Immediate
8BA6:	8D-F8       	.data 0xf88d          ; Binary data
8BA8:	06-59       	subi r16, 0x96        ; Subtract Immediate
8BAA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8BAC:	04-10       	cpse r0, r4           ; Compare Skip if Equal
8BAE:	32-21       	and r19, r2           ; Logical AND
8BB0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8BB2:	16-FF       	sbrs r17, 6           ; Skip if Bit in Register is Set
8BB4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8BB6:	41-20       	and r4, r1            ; Logical AND
8BB8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8BBA:	04-11       	cpse r16, r4          ; Compare Skip if Equal
8BBC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8BBE:	F2-FC       	sbrc r15, 2           ; Skip if Bit in Register is Cleared
8BC0:	8D-F8       	.data 0xf88d          ; Binary data
8BC2:	08-49       	sbci r16, 0x98        ; Subtract Immediate with Carry SBI
8BC4:	8D-F8       	.data 0xf88d          ; Binary data
8BC6:	09-69       	ori r16, 0x99         ; Logical OR with Immediate
8BC8:	8D-F8       	.data 0xf88d          ; Binary data
8BCA:	0A-59       	subi r16, 0x9a        ; Subtract Immediate
8BCC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8BCE:	08-10       	cpse r0, r8           ; Compare Skip if Equal
8BD0:	32-21       	and r19, r2           ; Logical AND
8BD2:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8BD4:	05-FF       	sbrs r16, 5           ; Skip if Bit in Register is Set
8BD6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8BD8:	42-20       	and r4, r2            ; Logical AND
8BDA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8BDC:	08-11       	cpse r16, r8          ; Compare Skip if Equal
8BDE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8BE0:	E1-FC       	sbrc r14, 1           ; Skip if Bit in Register is Cleared
8BE2:	8D-F8       	.data 0xf88d          ; Binary data
8BE4:	0C-49       	sbci r16, 0x9c        ; Subtract Immediate with Carry SBI
8BE6:	8D-F8       	.data 0xf88d          ; Binary data
8BE8:	0D-69       	ori r16, 0x9d         ; Logical OR with Immediate
8BEA:	8D-F8       	.data 0xf88d          ; Binary data
8BEC:	0E-59       	subi r16, 0x9e        ; Subtract Immediate
8BEE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8BF0:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
8BF2:	32-21       	and r19, r2           ; Logical AND
8BF4:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8BF6:	F4-FE       	sbrs r15, 4           ; Skip if Bit in Register is Set
8BF8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8BFA:	43-20       	and r4, r3            ; Logical AND
8BFC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8BFE:	0C-11       	cpse r16, r12         ; Compare Skip if Equal
8C00:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8C02:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
8C04:	8D-F8       	.data 0xf88d          ; Binary data
8C06:	10-49       	sbci r17, 0x90        ; Subtract Immediate with Carry SBI
8C08:	3F-25       	clr r319              ; Clear Register
8C0A:	8D-F8       	.data 0xf88d          ; Binary data
8C0C:	11-59       	subi r17, 0x91        ; Subtract Immediate
8C0E:	C7-26       	clr r711              ; Clear Register
8C10:	8D-F8       	.data 0xf88d          ; Binary data
8C12:	12-69       	ori r17, 0x92         ; Logical OR with Immediate
8C14:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8C16:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
8C18:	32-21       	and r19, r2           ; Logical AND
8C1A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8C1C:	E1-FE       	sbrs r14, 1           ; Skip if Bit in Register is Set
8C1E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8C20:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
8C22:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8C24:	11-61       	ori r17, 0x11         ; Logical OR with Immediate
8C26:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8C28:	BD-FC       	.data 0xfcbd          ; Binary data
8C2A:	8D-F8       	.data 0xf88d          ; Binary data
8C2C:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
8C2E:	8D-F8       	.data 0xf88d          ; Binary data
8C30:	15-59       	subi r17, 0x95        ; Subtract Immediate
8C32:	8D-F8       	.data 0xf88d          ; Binary data
8C34:	16-69       	ori r17, 0x96         ; Logical OR with Immediate
8C36:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8C38:	14-10       	cpse r1, r4           ; Compare Skip if Equal
8C3A:	32-21       	and r19, r2           ; Logical AND
8C3C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8C3E:	D0-FE       	sbrs r13, 0           ; Skip if Bit in Register is Set
8C40:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8C42:	45-20       	and r4, r5            ; Logical AND
8C44:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8C46:	14-11       	cpse r17, r4          ; Compare Skip if Equal
8C48:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8C4A:	AC-FC       	.data 0xfcac          ; Binary data
8C4C:	8D-F8       	.data 0xf88d          ; Binary data
8C4E:	18-49       	sbci r17, 0x98        ; Subtract Immediate with Carry SBI
8C50:	8D-F8       	.data 0xf88d          ; Binary data
8C52:	19-59       	subi r17, 0x99        ; Subtract Immediate
8C54:	C5-26       	clr r709              ; Clear Register
8C56:	8D-F8       	.data 0xf88d          ; Binary data
8C58:	1A-69       	ori r17, 0x9a         ; Logical OR with Immediate
8C5A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8C5C:	18-10       	cpse r1, r8           ; Compare Skip if Equal
8C5E:	32-21       	and r19, r2           ; Logical AND
8C60:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8C62:	BE-FE       	.data 0xfebe          ; Binary data
8C64:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8C66:	46-20       	and r4, r6            ; Logical AND
8C68:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8C6A:	18-11       	cpse r17, r8          ; Compare Skip if Equal
8C6C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8C6E:	9A-FC       	.data 0xfc9a          ; Binary data
8C70:	8D-F8       	.data 0xf88d          ; Binary data
8C72:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
8C74:	8D-F8       	.data 0xf88d          ; Binary data
8C76:	1D-59       	subi r17, 0x9d        ; Subtract Immediate
8C78:	8D-F8       	.data 0xf88d          ; Binary data
8C7A:	1E-69       	ori r17, 0x9e         ; Logical OR with Immediate
8C7C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8C7E:	1C-10       	cpse r1, r12          ; Compare Skip if Equal
8C80:	32-21       	and r19, r2           ; Logical AND
8C82:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8C84:	AD-FE       	.data 0xfead          ; Binary data
8C86:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8C88:	47-20       	and r4, r7            ; Logical AND
8C8A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8C8C:	1C-11       	cpse r17, r12         ; Compare Skip if Equal
8C8E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8C90:	89-FC       	.data 0xfc89          ; Binary data
8C92:	8D-F8       	.data 0xf88d          ; Binary data
8C94:	20-49       	sbci r18, 0x90        ; Subtract Immediate with Carry SBI
8C96:	40-25       	clr r320              ; Clear Register
8C98:	8D-F8       	.data 0xf88d          ; Binary data
8C9A:	21-59       	subi r18, 0x91        ; Subtract Immediate
8C9C:	C2-26       	clr r706              ; Clear Register
8C9E:	8D-F8       	.data 0xf88d          ; Binary data
8CA0:	22-69       	ori r18, 0x92         ; Logical OR with Immediate
8CA2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8CA4:	12-60       	ori r17, 0x02         ; Logical OR with Immediate
8CA6:	32-21       	and r19, r2           ; Logical AND
8CA8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8CAA:	9A-FE       	.data 0xfe9a          ; Binary data
8CAC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8CAE:	12-70       	andi r17, 0x02        ; Logical AND with Immediate
8CB0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8CB2:	12-61       	ori r17, 0x12         ; Logical OR with Immediate
8CB4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8CB6:	76-FC       	sbrc r7, 6            ; Skip if Bit in Register is Cleared
8CB8:	8D-F8       	.data 0xf88d          ; Binary data
8CBA:	24-49       	sbci r18, 0x94        ; Subtract Immediate with Carry SBI
8CBC:	8D-F8       	.data 0xf88d          ; Binary data
8CBE:	25-59       	subi r18, 0x95        ; Subtract Immediate
8CC0:	8D-F8       	.data 0xf88d          ; Binary data
8CC2:	26-69       	ori r18, 0x96         ; Logical OR with Immediate
8CC4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8CC6:	24-10       	cpse r2, r4           ; Compare Skip if Equal
8CC8:	32-21       	and r19, r2           ; Logical AND
8CCA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8CCC:	89-FE       	.data 0xfe89          ; Binary data
8CCE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8CD0:	49-20       	and r4, r9            ; Logical AND
8CD2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8CD4:	24-11       	cpse r18, r4          ; Compare Skip if Equal
8CD6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8CD8:	65-FC       	sbrc r6, 5            ; Skip if Bit in Register is Cleared
8CDA:	8D-F8       	.data 0xf88d          ; Binary data
8CDC:	28-49       	sbci r18, 0x98        ; Subtract Immediate with Carry SBI
8CDE:	8D-F8       	.data 0xf88d          ; Binary data
8CE0:	29-59       	subi r18, 0x99        ; Subtract Immediate
8CE2:	C0-26       	clr r704              ; Clear Register
8CE4:	8D-F8       	.data 0xf88d          ; Binary data
8CE6:	2A-69       	ori r18, 0x9a         ; Logical OR with Immediate
8CE8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8CEA:	28-10       	cpse r2, r8           ; Compare Skip if Equal
8CEC:	32-21       	and r19, r2           ; Logical AND
8CEE:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8CF0:	77-FE       	sbrs r7, 7            ; Skip if Bit in Register is Set
8CF2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8CF4:	4A-20       	and r4, r10           ; Logical AND
8CF6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8CF8:	28-11       	cpse r18, r8          ; Compare Skip if Equal
8CFA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8CFC:	53-FC       	sbrc r5, 3            ; Skip if Bit in Register is Cleared
8CFE:	8D-F8       	.data 0xf88d          ; Binary data
8D00:	2C-49       	sbci r18, 0x9c        ; Subtract Immediate with Carry SBI
8D02:	8D-F8       	.data 0xf88d          ; Binary data
8D04:	2D-59       	subi r18, 0x9d        ; Subtract Immediate
8D06:	8D-F8       	.data 0xf88d          ; Binary data
8D08:	2E-69       	ori r18, 0x9e         ; Logical OR with Immediate
8D0A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D0C:	2C-10       	cpse r2, r12          ; Compare Skip if Equal
8D0E:	32-21       	and r19, r2           ; Logical AND
8D10:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8D12:	66-FE       	sbrs r6, 6            ; Skip if Bit in Register is Set
8D14:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8D16:	4B-20       	and r4, r11           ; Logical AND
8D18:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D1A:	2C-11       	cpse r18, r12         ; Compare Skip if Equal
8D1C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8D1E:	42-FC       	sbrc r4, 2            ; Skip if Bit in Register is Cleared
8D20:	8D-F8       	.data 0xf88d          ; Binary data
8D22:	30-49       	sbci r19, 0x90        ; Subtract Immediate with Carry SBI
8D24:	8D-F8       	.data 0xf88d          ; Binary data
8D26:	31-59       	subi r19, 0x91        ; Subtract Immediate
8D28:	BE-26       	clr r702              ; Clear Register
8D2A:	8D-F8       	.data 0xf88d          ; Binary data
8D2C:	32-69       	ori r19, 0x92         ; Logical OR with Immediate
8D2E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8D30:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
8D32:	32-21       	and r19, r2           ; Logical AND
8D34:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8D36:	54-FE       	sbrs r5, 4            ; Skip if Bit in Register is Set
8D38:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8D3A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
8D3C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8D3E:	13-61       	ori r17, 0x13         ; Logical OR with Immediate
8D40:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8D42:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
8D44:	8D-F8       	.data 0xf88d          ; Binary data
8D46:	34-49       	sbci r19, 0x94        ; Subtract Immediate with Carry SBI
8D48:	8D-F8       	.data 0xf88d          ; Binary data
8D4A:	35-59       	subi r19, 0x95        ; Subtract Immediate
8D4C:	8D-F8       	.data 0xf88d          ; Binary data
8D4E:	36-69       	ori r19, 0x96         ; Logical OR with Immediate
8D50:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D52:	34-10       	cpse r3, r4           ; Compare Skip if Equal
8D54:	32-21       	and r19, r2           ; Logical AND
8D56:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8D58:	43-FE       	sbrs r4, 3            ; Skip if Bit in Register is Set
8D5A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8D5C:	4D-20       	and r4, r13           ; Logical AND
8D5E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D60:	34-11       	cpse r19, r4          ; Compare Skip if Equal
8D62:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8D64:	1F-FC       	.data 0xfc1f          ; Binary data
8D66:	8D-F8       	.data 0xf88d          ; Binary data
8D68:	38-49       	sbci r19, 0x98        ; Subtract Immediate with Carry SBI
8D6A:	8D-F8       	.data 0xf88d          ; Binary data
8D6C:	39-A9       	std Y+49, r19         ; Store Indirect From Register to Data Space
8D6E:	BC-26       	clr r700              ; Clear Register
8D70:	8D-F8       	.data 0xf88d          ; Binary data
8D72:	3A-69       	ori r19, 0x9a         ; Logical OR with Immediate
8D74:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D76:	38-10       	cpse r3, r8           ; Compare Skip if Equal
8D78:	32-21       	and r19, r2           ; Logical AND
8D7A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8D7C:	31-FE       	sbrs r3, 1            ; Skip if Bit in Register is Set
8D7E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8D80:	4E-20       	and r4, r14           ; Logical AND
8D82:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D84:	38-11       	cpse r19, r8          ; Compare Skip if Equal
8D86:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8D88:	0D-FC       	.data 0xfc0d          ; Binary data
8D8A:	8D-F8       	.data 0xf88d          ; Binary data
8D8C:	3C-49       	sbci r19, 0x9c        ; Subtract Immediate with Carry SBI
8D8E:	8D-F8       	.data 0xf88d          ; Binary data
8D90:	3D-A9       	std Y+53, r19         ; Store Indirect From Register to Data Space
8D92:	8D-F8       	.data 0xf88d          ; Binary data
8D94:	3E-69       	ori r19, 0x9e         ; Logical OR with Immediate
8D96:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8D98:	3C-10       	cpse r3, r12          ; Compare Skip if Equal
8D9A:	32-21       	and r19, r2           ; Logical AND
8D9C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8D9E:	20-FE       	sbrs r2, 0            ; Skip if Bit in Register is Set
8DA0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8DA2:	4F-20       	and r4, r15           ; Logical AND
8DA4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8DA6:	3C-11       	cpse r19, r12         ; Compare Skip if Equal
8DA8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8DAA:	FC-FB       	.data 0xfbfc          ; Binary data
8DAC:	8D-F8       	.data 0xf88d          ; Binary data
8DAE:	40-49       	sbci r20, 0x90        ; Subtract Immediate with Carry SBI
8DB0:	8D-F8       	.data 0xf88d          ; Binary data
8DB2:	41-A9       	std Y+49, r20         ; Store Indirect From Register to Data Space
8DB4:	BB-26       	clr r699              ; Clear Register
8DB6:	8D-F8       	.data 0xf88d          ; Binary data
8DB8:	42-69       	ori r20, 0x92         ; Logical OR with Immediate
8DBA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8DBC:	14-60       	ori r17, 0x04         ; Logical OR with Immediate
8DBE:	32-21       	and r19, r2           ; Logical AND
8DC0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8DC2:	0E-FE       	.data 0xfe0e          ; Binary data
8DC4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8DC6:	14-70       	andi r17, 0x04        ; Logical AND with Immediate
8DC8:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8DCA:	14-61       	ori r17, 0x14         ; Logical OR with Immediate
8DCC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8DCE:	EA-FB       	.data 0xfbea          ; Binary data
8DD0:	8D-F8       	.data 0xf88d          ; Binary data
8DD2:	44-49       	sbci r20, 0x94        ; Subtract Immediate with Carry SBI
8DD4:	8D-F8       	.data 0xf88d          ; Binary data
8DD6:	45-A9       	std Y+53, r20         ; Store Indirect From Register to Data Space
8DD8:	8D-F8       	.data 0xf88d          ; Binary data
8DDA:	46-69       	ori r20, 0x96         ; Logical OR with Immediate
8DDC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8DDE:	44-10       	cpse r4, r4           ; Compare Skip if Equal
8DE0:	32-21       	and r19, r2           ; Logical AND
8DE2:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8DE4:	FD-FD       	.data 0xfdfd          ; Binary data
8DE6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8DE8:	51-20       	and r5, r1            ; Logical AND
8DEA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8DEC:	44-11       	cpse r20, r4          ; Compare Skip if Equal
8DEE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8DF0:	D9-FB       	.data 0xfbd9          ; Binary data
8DF2:	8D-F8       	.data 0xf88d          ; Binary data
8DF4:	48-49       	sbci r20, 0x98        ; Subtract Immediate with Carry SBI
8DF6:	8D-F8       	.data 0xf88d          ; Binary data
8DF8:	49-A9       	std Y+49, r20         ; Store Indirect From Register to Data Space
8DFA:	8D-F8       	.data 0xf88d          ; Binary data
8DFC:	4A-69       	ori r20, 0x9a         ; Logical OR with Immediate
8DFE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E00:	48-10       	cpse r4, r8           ; Compare Skip if Equal
8E02:	32-21       	and r19, r2           ; Logical AND
8E04:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8E06:	EC-FD       	.data 0xfdec          ; Binary data
8E08:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8E0A:	52-20       	and r5, r2            ; Logical AND
8E0C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E0E:	48-11       	cpse r20, r8          ; Compare Skip if Equal
8E10:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8E12:	C8-FB       	.data 0xfbc8          ; Binary data
8E14:	8D-F8       	.data 0xf88d          ; Binary data
8E16:	4C-49       	sbci r20, 0x9c        ; Subtract Immediate with Carry SBI
8E18:	8D-F8       	.data 0xf88d          ; Binary data
8E1A:	4D-A9       	std Y+53, r20         ; Store Indirect From Register to Data Space
8E1C:	8D-F8       	.data 0xf88d          ; Binary data
8E1E:	4E-69       	ori r20, 0x9e         ; Logical OR with Immediate
8E20:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E22:	4C-10       	cpse r4, r12          ; Compare Skip if Equal
8E24:	32-21       	and r19, r2           ; Logical AND
8E26:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8E28:	DB-FD       	.data 0xfddb          ; Binary data
8E2A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8E2C:	53-20       	and r5, r3            ; Logical AND
8E2E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E30:	4C-11       	cpse r20, r12         ; Compare Skip if Equal
8E32:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8E34:	B7-FB       	bst r27, 7            ; Bit Store from Bit in Register to T Flag in SREG
8E36:	8D-F8       	.data 0xf88d          ; Binary data
8E38:	50-49       	sbci r21, 0x90        ; Subtract Immediate with Carry SBI
8E3A:	8D-F8       	.data 0xf88d          ; Binary data
8E3C:	51-A9       	std Y+49, r21         ; Store Indirect From Register to Data Space
8E3E:	B9-26       	clr r697              ; Clear Register
8E40:	8D-F8       	.data 0xf88d          ; Binary data
8E42:	52-69       	ori r21, 0x92         ; Logical OR with Immediate
8E44:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8E46:	15-60       	ori r17, 0x05         ; Logical OR with Immediate
8E48:	32-21       	and r19, r2           ; Logical AND
8E4A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8E4C:	C9-FD       	.data 0xfdc9          ; Binary data
8E4E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8E50:	15-70       	andi r17, 0x05        ; Logical AND with Immediate
8E52:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8E54:	15-61       	ori r17, 0x15         ; Logical OR with Immediate
8E56:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8E58:	A5-FB       	bst r26, 5            ; Bit Store from Bit in Register to T Flag in SREG
8E5A:	8D-F8       	.data 0xf88d          ; Binary data
8E5C:	54-49       	sbci r21, 0x94        ; Subtract Immediate with Carry SBI
8E5E:	8D-F8       	.data 0xf88d          ; Binary data
8E60:	55-A9       	std Y+53, r21         ; Store Indirect From Register to Data Space
8E62:	8D-F8       	.data 0xf88d          ; Binary data
8E64:	56-69       	ori r21, 0x96         ; Logical OR with Immediate
8E66:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E68:	54-10       	cpse r5, r4           ; Compare Skip if Equal
8E6A:	32-21       	and r19, r2           ; Logical AND
8E6C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8E6E:	B8-FD       	.data 0xfdb8          ; Binary data
8E70:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8E72:	55-20       	and r5, r5            ; Logical AND
8E74:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E76:	54-11       	cpse r21, r4          ; Compare Skip if Equal
8E78:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8E7A:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
8E7C:	8D-F8       	.data 0xf88d          ; Binary data
8E7E:	58-49       	sbci r21, 0x98        ; Subtract Immediate with Carry SBI
8E80:	42-26       	clr r578              ; Clear Register
8E82:	8D-F8       	.data 0xf88d          ; Binary data
8E84:	59-69       	ori r21, 0x99         ; Logical OR with Immediate
8E86:	B5-25       	clr r437              ; Clear Register
8E88:	8D-F8       	.data 0xf88d          ; Binary data
8E8A:	5A-59       	subi r21, 0x9a        ; Subtract Immediate
8E8C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E8E:	58-10       	cpse r5, r8           ; Compare Skip if Equal
8E90:	32-21       	and r19, r2           ; Logical AND
8E92:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8E94:	A5-FD       	sbrc r26, 5           ; Skip if Bit in Register is Cleared
8E96:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8E98:	56-20       	and r5, r6            ; Logical AND
8E9A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8E9C:	58-11       	cpse r21, r8          ; Compare Skip if Equal
8E9E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8EA0:	81-FB       	bst r24, 1            ; Bit Store from Bit in Register to T Flag in SREG
8EA2:	8D-F8       	.data 0xf88d          ; Binary data
8EA4:	5C-49       	sbci r21, 0x9c        ; Subtract Immediate with Carry SBI
8EA6:	8D-F8       	.data 0xf88d          ; Binary data
8EA8:	5D-69       	ori r21, 0x9d         ; Logical OR with Immediate
8EAA:	8D-F8       	.data 0xf88d          ; Binary data
8EAC:	5E-59       	subi r21, 0x9e        ; Subtract Immediate
8EAE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8EB0:	5C-10       	cpse r5, r12          ; Compare Skip if Equal
8EB2:	32-21       	and r19, r2           ; Logical AND
8EB4:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8EB6:	94-FD       	sbrc r25, 4           ; Skip if Bit in Register is Cleared
8EB8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8EBA:	57-20       	and r5, r7            ; Logical AND
8EBC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8EBE:	5C-11       	cpse r21, r12         ; Compare Skip if Equal
8EC0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8EC2:	70-FB       	bst r23, 0            ; Bit Store from Bit in Register to T Flag in SREG
8EC4:	8D-F8       	.data 0xf88d          ; Binary data
8EC6:	60-49       	sbci r22, 0x90        ; Subtract Immediate with Carry SBI
8EC8:	43-26       	clr r579              ; Clear Register
8ECA:	8D-F8       	.data 0xf88d          ; Binary data
8ECC:	61-69       	ori r22, 0x91         ; Logical OR with Immediate
8ECE:	B4-25       	clr r436              ; Clear Register
8ED0:	8D-F8       	.data 0xf88d          ; Binary data
8ED2:	62-59       	subi r22, 0x92        ; Subtract Immediate
8ED4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8ED6:	16-60       	ori r17, 0x06         ; Logical OR with Immediate
8ED8:	32-21       	and r19, r2           ; Logical AND
8EDA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8EDC:	81-FD       	sbrc r24, 1           ; Skip if Bit in Register is Cleared
8EDE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8EE0:	16-70       	andi r17, 0x06        ; Logical AND with Immediate
8EE2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8EE4:	16-61       	ori r17, 0x16         ; Logical OR with Immediate
8EE6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8EE8:	5D-FB       	.data 0xfb5d          ; Binary data
8EEA:	8D-F8       	.data 0xf88d          ; Binary data
8EEC:	64-49       	sbci r22, 0x94        ; Subtract Immediate with Carry SBI
8EEE:	8D-F8       	.data 0xf88d          ; Binary data
8EF0:	65-69       	ori r22, 0x95         ; Logical OR with Immediate
8EF2:	8D-F8       	.data 0xf88d          ; Binary data
8EF4:	66-59       	subi r22, 0x96        ; Subtract Immediate
8EF6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8EF8:	64-10       	cpse r6, r4           ; Compare Skip if Equal
8EFA:	32-21       	and r19, r2           ; Logical AND
8EFC:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8EFE:	70-FD       	sbrc r23, 0           ; Skip if Bit in Register is Cleared
8F00:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8F02:	59-20       	and r5, r9            ; Logical AND
8F04:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F06:	64-11       	cpse r22, r4          ; Compare Skip if Equal
8F08:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8F0A:	4C-FB       	.data 0xfb4c          ; Binary data
8F0C:	8D-F8       	.data 0xf88d          ; Binary data
8F0E:	68-49       	sbci r22, 0x98        ; Subtract Immediate with Carry SBI
8F10:	44-25       	clr r324              ; Clear Register
8F12:	8D-F8       	.data 0xf88d          ; Binary data
8F14:	69-59       	subi r22, 0x99        ; Subtract Immediate
8F16:	B1-26       	clr r689              ; Clear Register
8F18:	8D-F8       	.data 0xf88d          ; Binary data
8F1A:	6A-69       	ori r22, 0x9a         ; Logical OR with Immediate
8F1C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F1E:	68-10       	cpse r6, r8           ; Compare Skip if Equal
8F20:	32-21       	and r19, r2           ; Logical AND
8F22:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8F24:	5D-FD       	.data 0xfd5d          ; Binary data
8F26:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8F28:	5A-20       	and r5, r10           ; Logical AND
8F2A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F2C:	68-11       	cpse r22, r8          ; Compare Skip if Equal
8F2E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8F30:	39-FB       	.data 0xfb39          ; Binary data
8F32:	8D-F8       	.data 0xf88d          ; Binary data
8F34:	6C-49       	sbci r22, 0x9c        ; Subtract Immediate with Carry SBI
8F36:	8D-F8       	.data 0xf88d          ; Binary data
8F38:	6D-59       	subi r22, 0x9d        ; Subtract Immediate
8F3A:	8D-F8       	.data 0xf88d          ; Binary data
8F3C:	6E-69       	ori r22, 0x9e         ; Logical OR with Immediate
8F3E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F40:	6C-10       	cpse r6, r12          ; Compare Skip if Equal
8F42:	32-21       	and r19, r2           ; Logical AND
8F44:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8F46:	4C-FD       	.data 0xfd4c          ; Binary data
8F48:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8F4A:	5B-20       	and r5, r11           ; Logical AND
8F4C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F4E:	6C-11       	cpse r22, r12         ; Compare Skip if Equal
8F50:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8F52:	28-FB       	.data 0xfb28          ; Binary data
8F54:	8D-F8       	.data 0xf88d          ; Binary data
8F56:	70-49       	sbci r23, 0x90        ; Subtract Immediate with Carry SBI
8F58:	8D-F8       	.data 0xf88d          ; Binary data
8F5A:	71-59       	subi r23, 0x91        ; Subtract Immediate
8F5C:	AF-26       	clr r687              ; Clear Register
8F5E:	8D-F8       	.data 0xf88d          ; Binary data
8F60:	72-69       	ori r23, 0x92         ; Logical OR with Immediate
8F62:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8F64:	17-60       	ori r17, 0x07         ; Logical OR with Immediate
8F66:	32-21       	and r19, r2           ; Logical AND
8F68:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8F6A:	3A-FD       	.data 0xfd3a          ; Binary data
8F6C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8F6E:	17-70       	andi r17, 0x07        ; Logical AND with Immediate
8F70:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8F72:	17-61       	ori r17, 0x17         ; Logical OR with Immediate
8F74:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8F76:	16-FB       	bst r17, 6            ; Bit Store from Bit in Register to T Flag in SREG
8F78:	8D-F8       	.data 0xf88d          ; Binary data
8F7A:	74-49       	sbci r23, 0x94        ; Subtract Immediate with Carry SBI
8F7C:	8D-F8       	.data 0xf88d          ; Binary data
8F7E:	75-59       	subi r23, 0x95        ; Subtract Immediate
8F80:	8D-F8       	.data 0xf88d          ; Binary data
8F82:	76-69       	ori r23, 0x96         ; Logical OR with Immediate
8F84:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F86:	74-10       	cpse r7, r4           ; Compare Skip if Equal
8F88:	32-21       	and r19, r2           ; Logical AND
8F8A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
8F8C:	29-FD       	.data 0xfd29          ; Binary data
8F8E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8F90:	5D-20       	and r5, r13           ; Logical AND
8F92:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8F94:	74-11       	cpse r23, r4          ; Compare Skip if Equal
8F96:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8F98:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
8F9A:	8D-F8       	.data 0xf88d          ; Binary data
8F9C:	78-49       	sbci r23, 0x98        ; Subtract Immediate with Carry SBI
8F9E:	0E-25       	clr r270              ; Clear Register
8FA0:	8D-F8       	.data 0xf88d          ; Binary data
8FA2:	79-59       	subi r23, 0x99        ; Subtract Immediate
8FA4:	23-26       	clr r547              ; Clear Register
8FA6:	8D-F8       	.data 0xf88d          ; Binary data
8FA8:	7A-69       	ori r23, 0x9a         ; Logical OR with Immediate
8FAA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8FAC:	5E-20       	and r5, r14           ; Logical AND
8FAE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8FB0:	78-11       	cpse r23, r8          ; Compare Skip if Equal
8FB2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8FB4:	F7-FA       	bst r15, 7            ; Bit Store from Bit in Register to T Flag in SREG
8FB6:	8D-F8       	.data 0xf88d          ; Binary data
8FB8:	7C-49       	sbci r23, 0x9c        ; Subtract Immediate with Carry SBI
8FBA:	8D-F8       	.data 0xf88d          ; Binary data
8FBC:	7D-59       	subi r23, 0x9d        ; Subtract Immediate
8FBE:	8D-F8       	.data 0xf88d          ; Binary data
8FC0:	7E-69       	ori r23, 0x9e         ; Logical OR with Immediate
8FC2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8FC4:	5F-20       	and r5, r15           ; Logical AND
8FC6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8FC8:	7C-11       	cpse r23, r12         ; Compare Skip if Equal
8FCA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8FCC:	EB-FA       	.data 0xfaeb          ; Binary data
8FCE:	8D-F8       	.data 0xf88d          ; Binary data
8FD0:	80-49       	sbci r24, 0x90        ; Subtract Immediate with Carry SBI
8FD2:	8D-F8       	.data 0xf88d          ; Binary data
8FD4:	81-59       	subi r24, 0x91        ; Subtract Immediate
8FD6:	22-27       	clr r802              ; Clear Register
8FD8:	8D-F8       	.data 0xf88d          ; Binary data
8FDA:	82-79       	andi r24, 0x92        ; Logical AND with Immediate
8FDC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
8FDE:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
8FE0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
8FE2:	18-61       	ori r17, 0x18         ; Logical OR with Immediate
8FE4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8FE6:	DE-FA       	.data 0xfade          ; Binary data
8FE8:	8D-F8       	.data 0xf88d          ; Binary data
8FEA:	84-49       	sbci r24, 0x94        ; Subtract Immediate with Carry SBI
8FEC:	8D-F8       	.data 0xf88d          ; Binary data
8FEE:	85-59       	subi r24, 0x95        ; Subtract Immediate
8FF0:	8D-F8       	.data 0xf88d          ; Binary data
8FF2:	86-79       	andi r24, 0x96        ; Logical AND with Immediate
8FF4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
8FF6:	61-20       	and r6, r1            ; Logical AND
8FF8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
8FFA:	84-11       	cpse r24, r4          ; Compare Skip if Equal
8FFC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
8FFE:	D2-FA       	bst r13, 2            ; Bit Store from Bit in Register to T Flag in SREG
9000:	01-26       	clr r513              ; Clear Register
9002:	8D-F8       	.data 0xf88d          ; Binary data
9004:	88-69       	ori r24, 0x98         ; Logical OR with Immediate
9006:	8D-F8       	.data 0xf88d          ; Binary data
9008:	89-59       	subi r24, 0x99        ; Subtract Immediate
900A:	8D-F8       	.data 0xf88d          ; Binary data
900C:	8A-79       	andi r24, 0x9a        ; Logical AND with Immediate
900E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9010:	62-20       	and r6, r2            ; Logical AND
9012:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9014:	88-11       	cpse r24, r8          ; Compare Skip if Equal
9016:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9018:	C5-FA       	bst r12, 5            ; Bit Store from Bit in Register to T Flag in SREG
901A:	8D-F8       	.data 0xf88d          ; Binary data
901C:	8C-69       	ori r24, 0x9c         ; Logical OR with Immediate
901E:	8D-F8       	.data 0xf88d          ; Binary data
9020:	8D-59       	subi r24, 0x9d        ; Subtract Immediate
9022:	8D-F8       	.data 0xf88d          ; Binary data
9024:	8E-79       	andi r24, 0x9e        ; Logical AND with Immediate
9026:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9028:	63-20       	and r6, r3            ; Logical AND
902A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
902C:	8C-11       	cpse r24, r12         ; Compare Skip if Equal
902E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9030:	B9-FA       	.data 0xfab9          ; Binary data
9032:	8D-F8       	.data 0xf88d          ; Binary data
9034:	90-49       	sbci r25, 0x90        ; Subtract Immediate with Carry SBI
9036:	8D-F8       	.data 0xf88d          ; Binary data
9038:	91-59       	subi r25, 0x91        ; Subtract Immediate
903A:	21-27       	clr r801              ; Clear Register
903C:	8D-F8       	.data 0xf88d          ; Binary data
903E:	92-79       	andi r25, 0x92        ; Logical AND with Immediate
9040:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9042:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
9044:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9046:	19-61       	ori r17, 0x19         ; Logical OR with Immediate
9048:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
904A:	AC-FA       	.data 0xfaac          ; Binary data
904C:	8D-F8       	.data 0xf88d          ; Binary data
904E:	94-49       	sbci r25, 0x94        ; Subtract Immediate with Carry SBI
9050:	8D-F8       	.data 0xf88d          ; Binary data
9052:	95-59       	subi r25, 0x95        ; Subtract Immediate
9054:	8D-F8       	.data 0xf88d          ; Binary data
9056:	96-79       	andi r25, 0x96        ; Logical AND with Immediate
9058:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
905A:	65-20       	and r6, r5            ; Logical AND
905C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
905E:	94-11       	cpse r25, r4          ; Compare Skip if Equal
9060:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9062:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
9064:	8D-F8       	.data 0xf88d          ; Binary data
9066:	98-49       	sbci r25, 0x98        ; Subtract Immediate with Carry SBI
9068:	8D-F8       	.data 0xf88d          ; Binary data
906A:	99-59       	subi r25, 0x99        ; Subtract Immediate
906C:	8D-F8       	.data 0xf88d          ; Binary data
906E:	9A-79       	andi r25, 0x9a        ; Logical AND with Immediate
9070:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9072:	66-20       	and r6, r6            ; Logical AND
9074:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9076:	98-11       	cpse r25, r8          ; Compare Skip if Equal
9078:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
907A:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
907C:	8D-F8       	.data 0xf88d          ; Binary data
907E:	9C-69       	ori r25, 0x9c         ; Logical OR with Immediate
9080:	8D-F8       	.data 0xf88d          ; Binary data
9082:	9D-59       	subi r25, 0x9d        ; Subtract Immediate
9084:	8D-F8       	.data 0xf88d          ; Binary data
9086:	9E-79       	andi r25, 0x9e        ; Logical AND with Immediate
9088:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
908A:	67-20       	and r6, r7            ; Logical AND
908C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
908E:	9C-11       	cpse r25, r12         ; Compare Skip if Equal
9090:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9092:	88-FA       	.data 0xfa88          ; Binary data
9094:	8D-F8       	.data 0xf88d          ; Binary data
9096:	A0-69       	ori r26, 0x90         ; Logical OR with Immediate
9098:	0F-25       	clr r271              ; Clear Register
909A:	8D-F8       	.data 0xf88d          ; Binary data
909C:	A1-59       	subi r26, 0x91        ; Subtract Immediate
909E:	8D-F8       	.data 0xf88d          ; Binary data
90A0:	A2-79       	andi r26, 0x92        ; Logical AND with Immediate
90A2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
90A4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
90A6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
90A8:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
90AA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
90AC:	7B-FA       	.data 0xfa7b          ; Binary data
90AE:	8D-F8       	.data 0xf88d          ; Binary data
90B0:	A4-69       	ori r26, 0x94         ; Logical OR with Immediate
90B2:	8D-F8       	.data 0xf88d          ; Binary data
90B4:	A5-59       	subi r26, 0x95        ; Subtract Immediate
90B6:	8D-F8       	.data 0xf88d          ; Binary data
90B8:	A6-79       	andi r26, 0x96        ; Logical AND with Immediate
90BA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
90BC:	69-20       	and r6, r9            ; Logical AND
90BE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
90C0:	A4-11       	cpse r26, r4          ; Compare Skip if Equal
90C2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
90C4:	6F-FA       	.data 0xfa6f          ; Binary data
90C6:	8D-F8       	.data 0xf88d          ; Binary data
90C8:	A8-69       	ori r26, 0x98         ; Logical OR with Immediate
90CA:	8D-F8       	.data 0xf88d          ; Binary data
90CC:	A9-59       	subi r26, 0x99        ; Subtract Immediate
90CE:	20-27       	clr r800              ; Clear Register
90D0:	8D-F8       	.data 0xf88d          ; Binary data
90D2:	AA-79       	andi r26, 0x9a        ; Logical AND with Immediate
90D4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
90D6:	6A-20       	and r6, r10           ; Logical AND
90D8:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
90DA:	A8-11       	cpse r26, r8          ; Compare Skip if Equal
90DC:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
90DE:	62-FA       	bst r6, 2             ; Bit Store from Bit in Register to T Flag in SREG
90E0:	8D-F8       	.data 0xf88d          ; Binary data
90E2:	AC-69       	ori r26, 0x9c         ; Logical OR with Immediate
90E4:	8D-F8       	.data 0xf88d          ; Binary data
90E6:	AD-59       	subi r26, 0x9d        ; Subtract Immediate
90E8:	8D-F8       	.data 0xf88d          ; Binary data
90EA:	AE-79       	andi r26, 0x9e        ; Logical AND with Immediate
90EC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
90EE:	6B-20       	and r6, r11           ; Logical AND
90F0:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
90F2:	AC-11       	cpse r26, r12         ; Compare Skip if Equal
90F4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
90F6:	56-FA       	bst r5, 6             ; Bit Store from Bit in Register to T Flag in SREG
90F8:	8D-F8       	.data 0xf88d          ; Binary data
90FA:	B0-69       	ori r27, 0x90         ; Logical OR with Immediate
90FC:	8D-F8       	.data 0xf88d          ; Binary data
90FE:	B1-59       	subi r27, 0x91        ; Subtract Immediate
9100:	8D-F8       	.data 0xf88d          ; Binary data
9102:	B2-79       	andi r27, 0x92        ; Logical AND with Immediate
9104:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9106:	1B-70       	andi r17, 0x0b        ; Logical AND with Immediate
9108:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
910A:	1B-61       	ori r17, 0x1b         ; Logical OR with Immediate
910C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
910E:	4A-FA       	.data 0xfa4a          ; Binary data
9110:	8D-F8       	.data 0xf88d          ; Binary data
9112:	B4-69       	ori r27, 0x94         ; Logical OR with Immediate
9114:	8D-F8       	.data 0xf88d          ; Binary data
9116:	B5-59       	subi r27, 0x95        ; Subtract Immediate
9118:	8D-F8       	.data 0xf88d          ; Binary data
911A:	B6-79       	andi r27, 0x96        ; Logical AND with Immediate
911C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
911E:	6D-20       	and r6, r13           ; Logical AND
9120:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9122:	B4-11       	cpse r27, r4          ; Compare Skip if Equal
9124:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9126:	3E-FA       	.data 0xfa3e          ; Binary data
9128:	8D-F8       	.data 0xf88d          ; Binary data
912A:	B8-69       	ori r27, 0x98         ; Logical OR with Immediate
912C:	8D-F8       	.data 0xf88d          ; Binary data
912E:	B9-59       	subi r27, 0x99        ; Subtract Immediate
9130:	1F-27       	clr r799              ; Clear Register
9132:	8D-F8       	.data 0xf88d          ; Binary data
9134:	BA-79       	andi r27, 0x9a        ; Logical AND with Immediate
9136:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9138:	6E-20       	and r6, r14           ; Logical AND
913A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
913C:	B8-11       	cpse r27, r8          ; Compare Skip if Equal
913E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9140:	31-FA       	bst r3, 1             ; Bit Store from Bit in Register to T Flag in SREG
9142:	8D-F8       	.data 0xf88d          ; Binary data
9144:	BC-69       	ori r27, 0x9c         ; Logical OR with Immediate
9146:	8D-F8       	.data 0xf88d          ; Binary data
9148:	BD-59       	subi r27, 0x9d        ; Subtract Immediate
914A:	8D-F8       	.data 0xf88d          ; Binary data
914C:	BE-79       	andi r27, 0x9e        ; Logical AND with Immediate
914E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9150:	6F-20       	and r6, r15           ; Logical AND
9152:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9154:	BC-11       	cpse r27, r12         ; Compare Skip if Equal
9156:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9158:	25-FA       	bst r2, 5             ; Bit Store from Bit in Register to T Flag in SREG
915A:	8D-F8       	.data 0xf88d          ; Binary data
915C:	C0-49       	sbci r28, 0x90        ; Subtract Immediate with Carry SBI
915E:	8D-F8       	.data 0xf88d          ; Binary data
9160:	C1-59       	subi r28, 0x91        ; Subtract Immediate
9162:	8D-F8       	.data 0xf88d          ; Binary data
9164:	C2-79       	andi r28, 0x92        ; Logical AND with Immediate
9166:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9168:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
916A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
916C:	1C-61       	ori r17, 0x1c         ; Logical OR with Immediate
916E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9170:	19-FA       	.data 0xfa19          ; Binary data
9172:	8D-F8       	.data 0xf88d          ; Binary data
9174:	C4-49       	sbci r28, 0x94        ; Subtract Immediate with Carry SBI
9176:	8D-F8       	.data 0xf88d          ; Binary data
9178:	C5-59       	subi r28, 0x95        ; Subtract Immediate
917A:	8D-F8       	.data 0xf88d          ; Binary data
917C:	C6-79       	andi r28, 0x96        ; Logical AND with Immediate
917E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9180:	71-20       	and r7, r1            ; Logical AND
9182:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9184:	C4-11       	cpse r28, r4          ; Compare Skip if Equal
9186:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9188:	0D-FA       	.data 0xfa0d          ; Binary data
918A:	8D-F8       	.data 0xf88d          ; Binary data
918C:	C8-49       	sbci r28, 0x98        ; Subtract Immediate with Carry SBI
918E:	8D-F8       	.data 0xf88d          ; Binary data
9190:	C9-59       	subi r28, 0x99        ; Subtract Immediate
9192:	8D-F8       	.data 0xf88d          ; Binary data
9194:	CA-79       	andi r28, 0x9a        ; Logical AND with Immediate
9196:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9198:	72-20       	and r7, r2            ; Logical AND
919A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
919C:	C8-11       	cpse r28, r8          ; Compare Skip if Equal
919E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
91A0:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
91A2:	8D-F8       	.data 0xf88d          ; Binary data
91A4:	CC-49       	sbci r28, 0x9c        ; Subtract Immediate with Carry SBI
91A6:	8D-F8       	.data 0xf88d          ; Binary data
91A8:	CD-59       	subi r28, 0x9d        ; Subtract Immediate
91AA:	8D-F8       	.data 0xf88d          ; Binary data
91AC:	CE-79       	andi r28, 0x9e        ; Logical AND with Immediate
91AE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
91B0:	73-20       	and r7, r3            ; Logical AND
91B2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
91B4:	CC-11       	cpse r28, r12         ; Compare Skip if Equal
91B6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
91B8:	F5-F9       	bld r31, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
91BA:	8D-F8       	.data 0xf88d          ; Binary data
91BC:	D0-49       	sbci r29, 0x90        ; Subtract Immediate with Carry SBI
91BE:	8D-F8       	.data 0xf88d          ; Binary data
91C0:	D1-59       	subi r29, 0x91        ; Subtract Immediate
91C2:	1E-26       	clr r542              ; Clear Register
91C4:	8D-F8       	.data 0xf88d          ; Binary data
91C6:	D2-69       	ori r29, 0x92         ; Logical OR with Immediate
91C8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
91CA:	1D-70       	andi r17, 0x0d        ; Logical AND with Immediate
91CC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
91CE:	1D-61       	ori r17, 0x1d         ; Logical OR with Immediate
91D0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
91D2:	E8-F9       	.data 0xf9e8          ; Binary data
91D4:	8D-F8       	.data 0xf88d          ; Binary data
91D6:	D4-49       	sbci r29, 0x94        ; Subtract Immediate with Carry SBI
91D8:	8D-F8       	.data 0xf88d          ; Binary data
91DA:	D5-59       	subi r29, 0x95        ; Subtract Immediate
91DC:	8D-F8       	.data 0xf88d          ; Binary data
91DE:	D6-69       	ori r29, 0x96         ; Logical OR with Immediate
91E0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
91E2:	75-20       	and r7, r5            ; Logical AND
91E4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
91E6:	D4-11       	cpse r29, r4          ; Compare Skip if Equal
91E8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
91EA:	DC-F9       	.data 0xf9dc          ; Binary data
91EC:	8D-F8       	.data 0xf88d          ; Binary data
91EE:	D8-49       	sbci r29, 0x98        ; Subtract Immediate with Carry SBI
91F0:	8D-F8       	.data 0xf88d          ; Binary data
91F2:	D9-59       	subi r29, 0x99        ; Subtract Immediate
91F4:	8D-F8       	.data 0xf88d          ; Binary data
91F6:	DA-69       	ori r29, 0x9a         ; Logical OR with Immediate
91F8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
91FA:	76-20       	and r7, r6            ; Logical AND
91FC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
91FE:	D8-11       	cpse r29, r8          ; Compare Skip if Equal
9200:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9202:	D0-F9       	bld r29, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
9204:	8D-F8       	.data 0xf88d          ; Binary data
9206:	DC-49       	sbci r29, 0x9c        ; Subtract Immediate with Carry SBI
9208:	8D-F8       	.data 0xf88d          ; Binary data
920A:	DD-59       	subi r29, 0x9d        ; Subtract Immediate
920C:	8D-F8       	.data 0xf88d          ; Binary data
920E:	DE-69       	ori r29, 0x9e         ; Logical OR with Immediate
9210:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9212:	77-20       	and r7, r7            ; Logical AND
9214:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9216:	DC-11       	cpse r29, r12         ; Compare Skip if Equal
9218:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
921A:	C4-F9       	bld r28, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
921C:	8D-F8       	.data 0xf88d          ; Binary data
921E:	E0-49       	sbci r30, 0x90        ; Subtract Immediate with Carry SBI
9220:	10-25       	clr r272              ; Clear Register
9222:	8D-F8       	.data 0xf88d          ; Binary data
9224:	E1-59       	subi r30, 0x91        ; Subtract Immediate
9226:	8D-F8       	.data 0xf88d          ; Binary data
9228:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
922A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
922C:	1E-70       	andi r17, 0x0e        ; Logical AND with Immediate
922E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9230:	1E-61       	ori r17, 0x1e         ; Logical OR with Immediate
9232:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9234:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
9236:	8D-F8       	.data 0xf88d          ; Binary data
9238:	E4-49       	sbci r30, 0x94        ; Subtract Immediate with Carry SBI
923A:	8D-F8       	.data 0xf88d          ; Binary data
923C:	E5-59       	subi r30, 0x95        ; Subtract Immediate
923E:	8D-F8       	.data 0xf88d          ; Binary data
9240:	E6-69       	ori r30, 0x96         ; Logical OR with Immediate
9242:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9244:	79-20       	and r7, r9            ; Logical AND
9246:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9248:	E4-11       	cpse r30, r4          ; Compare Skip if Equal
924A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
924C:	AB-F9       	.data 0xf9ab          ; Binary data
924E:	8D-F8       	.data 0xf88d          ; Binary data
9250:	E8-49       	sbci r30, 0x98        ; Subtract Immediate with Carry SBI
9252:	8D-F8       	.data 0xf88d          ; Binary data
9254:	E9-59       	subi r30, 0x99        ; Subtract Immediate
9256:	1D-24       	clr r29               ; Clear Register
9258:	8D-F8       	.data 0xf88d          ; Binary data
925A:	EA-49       	sbci r30, 0x9a        ; Subtract Immediate with Carry SBI
925C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
925E:	7A-20       	and r7, r10           ; Logical AND
9260:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9262:	E8-11       	cpse r30, r8          ; Compare Skip if Equal
9264:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9266:	9E-F9       	.data 0xf99e          ; Binary data
9268:	00-25       	clr r256              ; Clear Register
926A:	8D-F8       	.data 0xf88d          ; Binary data
926C:	EC-59       	subi r30, 0x9c        ; Subtract Immediate
926E:	10-26       	clr r528              ; Clear Register
9270:	8D-F8       	.data 0xf88d          ; Binary data
9272:	ED-69       	ori r30, 0x9d         ; Logical OR with Immediate
9274:	8D-F8       	.data 0xf88d          ; Binary data
9276:	EE-49       	sbci r30, 0x9e        ; Subtract Immediate with Carry SBI
9278:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
927A:	7B-20       	and r7, r11           ; Logical AND
927C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
927E:	EC-11       	cpse r30, r12         ; Compare Skip if Equal
9280:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9282:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
9284:	8D-F8       	.data 0xf88d          ; Binary data
9286:	F0-59       	subi r31, 0x90        ; Subtract Immediate
9288:	8D-F8       	.data 0xf88d          ; Binary data
928A:	F1-69       	ori r31, 0x91         ; Logical OR with Immediate
928C:	8D-F8       	.data 0xf88d          ; Binary data
928E:	F2-49       	sbci r31, 0x92        ; Subtract Immediate with Carry SBI
9290:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9292:	1F-70       	andi r17, 0x0f        ; Logical AND with Immediate
9294:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9296:	1F-61       	ori r17, 0x1f         ; Logical OR with Immediate
9298:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
929A:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
929C:	8D-F8       	.data 0xf88d          ; Binary data
929E:	F4-59       	subi r31, 0x94        ; Subtract Immediate
92A0:	8D-F8       	.data 0xf88d          ; Binary data
92A2:	F5-69       	ori r31, 0x95         ; Logical OR with Immediate
92A4:	8D-F8       	.data 0xf88d          ; Binary data
92A6:	F6-49       	sbci r31, 0x96        ; Subtract Immediate with Carry SBI
92A8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
92AA:	7D-20       	and r7, r13           ; Logical AND
92AC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
92AE:	F4-11       	cpse r31, r4          ; Compare Skip if Equal
92B0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
92B2:	78-F9       	.data 0xf978          ; Binary data
92B4:	8D-F8       	.data 0xf88d          ; Binary data
92B6:	F8-59       	subi r31, 0x98        ; Subtract Immediate
92B8:	8D-F8       	.data 0xf88d          ; Binary data
92BA:	F9-69       	ori r31, 0x99         ; Logical OR with Immediate
92BC:	8D-F8       	.data 0xf88d          ; Binary data
92BE:	FA-49       	sbci r31, 0x9a        ; Subtract Immediate with Carry SBI
92C0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
92C2:	7E-20       	and r7, r14           ; Logical AND
92C4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
92C6:	F8-11       	cpse r31, r8          ; Compare Skip if Equal
92C8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
92CA:	6C-F9       	.data 0xf96c          ; Binary data
92CC:	8D-F8       	.data 0xf88d          ; Binary data
92CE:	FC-59       	subi r31, 0x9c        ; Subtract Immediate
92D0:	8D-F8       	.data 0xf88d          ; Binary data
92D2:	FD-69       	ori r31, 0x9d         ; Logical OR with Immediate
92D4:	8D-F8       	.data 0xf88d          ; Binary data
92D6:	FE-49       	sbci r31, 0x9e        ; Subtract Immediate with Carry SBI
92D8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
92DA:	7F-20       	and r7, r15           ; Logical AND
92DC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
92DE:	FC-11       	cpse r31, r12         ; Compare Skip if Equal
92E0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
92E2:	60-F9       	bld r22, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
92E4:	8D-F8       	.data 0xf88d          ; Binary data
92E6:	00-5A       	subi r16, 0xa0        ; Subtract Immediate
92E8:	8D-F8       	.data 0xf88d          ; Binary data
92EA:	01-6A       	ori r16, 0xa1         ; Logical OR with Immediate
92EC:	1C-24       	clr r28               ; Clear Register
92EE:	8D-F8       	.data 0xf88d          ; Binary data
92F0:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
92F2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
92F4:	20-70       	andi r18, 0x00        ; Logical AND with Immediate
92F6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
92F8:	20-61       	ori r18, 0x10         ; Logical OR with Immediate
92FA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
92FC:	53-F9       	bld r21, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
92FE:	8D-F8       	.data 0xf88d          ; Binary data
9300:	04-5A       	subi r16, 0xa4        ; Subtract Immediate
9302:	8D-F8       	.data 0xf88d          ; Binary data
9304:	05-6A       	ori r16, 0xa5         ; Logical OR with Immediate
9306:	8D-F8       	.data 0xf88d          ; Binary data
9308:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
930A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
930C:	81-20       	and r8, r1            ; Logical AND
930E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9310:	04-21       	and r16, r4           ; Logical AND
9312:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9314:	47-F9       	bld r20, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
9316:	8D-F8       	.data 0xf88d          ; Binary data
9318:	08-5A       	subi r16, 0xa8        ; Subtract Immediate
931A:	8D-F8       	.data 0xf88d          ; Binary data
931C:	09-6A       	ori r16, 0xa9         ; Logical OR with Immediate
931E:	1B-24       	clr r27               ; Clear Register
9320:	8D-F8       	.data 0xf88d          ; Binary data
9322:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
9324:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9326:	82-20       	and r8, r2            ; Logical AND
9328:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
932A:	08-21       	and r16, r8           ; Logical AND
932C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
932E:	3A-F9       	.data 0xf93a          ; Binary data
9330:	8D-F8       	.data 0xf88d          ; Binary data
9332:	0C-5A       	subi r16, 0xac        ; Subtract Immediate
9334:	8D-F8       	.data 0xf88d          ; Binary data
9336:	0D-6A       	ori r16, 0xad         ; Logical OR with Immediate
9338:	8D-F8       	.data 0xf88d          ; Binary data
933A:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
933C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
933E:	83-20       	and r8, r3            ; Logical AND
9340:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9342:	0C-21       	and r16, r12          ; Logical AND
9344:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9346:	2E-F9       	.data 0xf92e          ; Binary data
9348:	8D-F8       	.data 0xf88d          ; Binary data
934A:	10-5A       	subi r17, 0xa0        ; Subtract Immediate
934C:	8D-F8       	.data 0xf88d          ; Binary data
934E:	11-6A       	ori r17, 0xa1         ; Logical OR with Immediate
9350:	8D-F8       	.data 0xf88d          ; Binary data
9352:	12-4A       	sbci r17, 0xa2        ; Subtract Immediate with Carry SBI
9354:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9356:	21-70       	andi r18, 0x01        ; Logical AND with Immediate
9358:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
935A:	21-61       	ori r18, 0x11         ; Logical OR with Immediate
935C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
935E:	22-F9       	bld r18, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
9360:	8D-F8       	.data 0xf88d          ; Binary data
9362:	14-5A       	subi r17, 0xa4        ; Subtract Immediate
9364:	8D-F8       	.data 0xf88d          ; Binary data
9366:	15-6A       	ori r17, 0xa5         ; Logical OR with Immediate
9368:	8D-F8       	.data 0xf88d          ; Binary data
936A:	16-4A       	sbci r17, 0xa6        ; Subtract Immediate with Carry SBI
936C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
936E:	85-20       	and r8, r5            ; Logical AND
9370:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9372:	14-21       	and r17, r4           ; Logical AND
9374:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9376:	16-F9       	bld r17, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
9378:	8D-F8       	.data 0xf88d          ; Binary data
937A:	18-5A       	subi r17, 0xa8        ; Subtract Immediate
937C:	8D-F8       	.data 0xf88d          ; Binary data
937E:	19-6A       	ori r17, 0xa9         ; Logical OR with Immediate
9380:	8D-F8       	.data 0xf88d          ; Binary data
9382:	1A-4A       	sbci r17, 0xaa        ; Subtract Immediate with Carry SBI
9384:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9386:	86-20       	and r8, r6            ; Logical AND
9388:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
938A:	18-21       	and r17, r8           ; Logical AND
938C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
938E:	0A-F9       	.data 0xf90a          ; Binary data
9390:	8D-F8       	.data 0xf88d          ; Binary data
9392:	1C-5A       	subi r17, 0xac        ; Subtract Immediate
9394:	8D-F8       	.data 0xf88d          ; Binary data
9396:	1D-6A       	ori r17, 0xad         ; Logical OR with Immediate
9398:	8D-F8       	.data 0xf88d          ; Binary data
939A:	1E-4A       	sbci r17, 0xae        ; Subtract Immediate with Carry SBI
939C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
939E:	87-20       	and r8, r7            ; Logical AND
93A0:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
93A2:	1C-21       	and r17, r12          ; Logical AND
93A4:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
93A6:	FE-F8       	.data 0xf8fe          ; Binary data
93A8:	8D-F8       	.data 0xf88d          ; Binary data
93AA:	20-5A       	subi r18, 0xa0        ; Subtract Immediate
93AC:	8D-F8       	.data 0xf88d          ; Binary data
93AE:	21-6A       	ori r18, 0xa1         ; Logical OR with Immediate
93B0:	1A-24       	clr r26               ; Clear Register
93B2:	8D-F8       	.data 0xf88d          ; Binary data
93B4:	22-4A       	sbci r18, 0xa2        ; Subtract Immediate with Carry SBI
93B6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
93B8:	22-70       	andi r18, 0x02        ; Logical AND with Immediate
93BA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
93BC:	22-61       	ori r18, 0x12         ; Logical OR with Immediate
93BE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
93C0:	F1-F8       	bld r15, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
93C2:	8D-F8       	.data 0xf88d          ; Binary data
93C4:	24-5A       	subi r18, 0xa4        ; Subtract Immediate
93C6:	8D-F8       	.data 0xf88d          ; Binary data
93C8:	25-6A       	ori r18, 0xa5         ; Logical OR with Immediate
93CA:	8D-F8       	.data 0xf88d          ; Binary data
93CC:	26-4A       	sbci r18, 0xa6        ; Subtract Immediate with Carry SBI
93CE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
93D0:	89-20       	and r8, r9            ; Logical AND
93D2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
93D4:	24-21       	and r18, r4           ; Logical AND
93D6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
93D8:	E5-F8       	bld r14, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
93DA:	8D-F8       	.data 0xf88d          ; Binary data
93DC:	28-5A       	subi r18, 0xa8        ; Subtract Immediate
93DE:	11-26       	clr r529              ; Clear Register
93E0:	8D-F8       	.data 0xf88d          ; Binary data
93E2:	29-6A       	ori r18, 0xa9         ; Logical OR with Immediate
93E4:	8D-F8       	.data 0xf88d          ; Binary data
93E6:	2A-4A       	sbci r18, 0xaa        ; Subtract Immediate with Carry SBI
93E8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
93EA:	8A-20       	and r8, r10           ; Logical AND
93EC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
93EE:	28-21       	and r18, r8           ; Logical AND
93F0:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
93F2:	D8-F8       	.data 0xf8d8          ; Binary data
93F4:	8D-F8       	.data 0xf88d          ; Binary data
93F6:	2C-5A       	subi r18, 0xac        ; Subtract Immediate
93F8:	8D-F8       	.data 0xf88d          ; Binary data
93FA:	2D-6A       	ori r18, 0xad         ; Logical OR with Immediate
93FC:	8D-F8       	.data 0xf88d          ; Binary data
93FE:	2E-4A       	sbci r18, 0xae        ; Subtract Immediate with Carry SBI
9400:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9402:	8B-20       	and r8, r11           ; Logical AND
9404:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9406:	2C-21       	and r18, r12          ; Logical AND
9408:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
940A:	CC-F8       	.data 0xf8cc          ; Binary data
940C:	8D-F8       	.data 0xf88d          ; Binary data
940E:	30-5A       	subi r19, 0xa0        ; Subtract Immediate
9410:	8D-F8       	.data 0xf88d          ; Binary data
9412:	31-6A       	ori r19, 0xa1         ; Logical OR with Immediate
9414:	8D-F8       	.data 0xf88d          ; Binary data
9416:	32-4A       	sbci r19, 0xa2        ; Subtract Immediate with Carry SBI
9418:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
941A:	23-70       	andi r18, 0x03        ; Logical AND with Immediate
941C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
941E:	23-61       	ori r18, 0x13         ; Logical OR with Immediate
9420:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9422:	C0-F8       	bld r12, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
9424:	01-27       	clr r769              ; Clear Register
9426:	8D-F8       	.data 0xf88d          ; Binary data
9428:	34-7A       	andi r19, 0xa4        ; Logical AND with Immediate
942A:	8D-F8       	.data 0xf88d          ; Binary data
942C:	35-6A       	ori r19, 0xa5         ; Logical OR with Immediate
942E:	8D-F8       	.data 0xf88d          ; Binary data
9430:	36-4A       	sbci r19, 0xa6        ; Subtract Immediate with Carry SBI
9432:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9434:	8D-20       	and r8, r13           ; Logical AND
9436:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9438:	34-21       	and r19, r4           ; Logical AND
943A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
943C:	B3-F8       	bld r11, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
943E:	8D-F8       	.data 0xf88d          ; Binary data
9440:	38-7A       	andi r19, 0xa8        ; Logical AND with Immediate
9442:	8D-F8       	.data 0xf88d          ; Binary data
9444:	39-6A       	ori r19, 0xa9         ; Logical OR with Immediate
9446:	8D-F8       	.data 0xf88d          ; Binary data
9448:	3A-4A       	sbci r19, 0xaa        ; Subtract Immediate with Carry SBI
944A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
944C:	8E-20       	and r8, r14           ; Logical AND
944E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9450:	38-21       	and r19, r8           ; Logical AND
9452:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9454:	A7-F8       	bld r10, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
9456:	8D-F8       	.data 0xf88d          ; Binary data
9458:	3C-7A       	andi r19, 0xac        ; Logical AND with Immediate
945A:	8D-F8       	.data 0xf88d          ; Binary data
945C:	3D-6A       	ori r19, 0xad         ; Logical OR with Immediate
945E:	8D-F8       	.data 0xf88d          ; Binary data
9460:	3E-4A       	sbci r19, 0xae        ; Subtract Immediate with Carry SBI
9462:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9464:	8F-20       	and r8, r15           ; Logical AND
9466:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9468:	3C-21       	and r19, r12          ; Logical AND
946A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
946C:	9B-F8       	.data 0xf89b          ; Binary data
946E:	8D-F8       	.data 0xf88d          ; Binary data
9470:	40-5A       	subi r20, 0xa0        ; Subtract Immediate
9472:	8D-F8       	.data 0xf88d          ; Binary data
9474:	41-6A       	ori r20, 0xa1         ; Logical OR with Immediate
9476:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9478:	19-08       	sbc r1, r9            ; Subtract with Carry
947A:	8D-F8       	.data 0xf88d          ; Binary data
947C:	42-8A       	std Y+18, r4          ; Store Indirect From Register to Data Space
947E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9480:	24-70       	andi r18, 0x04        ; Logical AND with Immediate
9482:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9484:	24-61       	ori r18, 0x14         ; Logical OR with Immediate
9486:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9488:	8D-F8       	.data 0xf88d          ; Binary data
948A:	8D-F8       	.data 0xf88d          ; Binary data
948C:	44-5A       	subi r20, 0xa4        ; Subtract Immediate
948E:	8D-F8       	.data 0xf88d          ; Binary data
9490:	45-6A       	ori r20, 0xa5         ; Logical OR with Immediate
9492:	8D-F8       	.data 0xf88d          ; Binary data
9494:	46-8A       	std Y+22, r4          ; Store Indirect From Register to Data Space
9496:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9498:	91-20       	and r9, r1            ; Logical AND
949A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
949C:	44-21       	and r20, r4           ; Logical AND
949E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
94A0:	81-F8       	bld r8, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
94A2:	8D-F8       	.data 0xf88d          ; Binary data
94A4:	48-5A       	subi r20, 0xa8        ; Subtract Immediate
94A6:	8D-F8       	.data 0xf88d          ; Binary data
94A8:	49-6A       	ori r20, 0xa9         ; Logical OR with Immediate
94AA:	8D-F8       	.data 0xf88d          ; Binary data
94AC:	4A-8A       	std Y+18, r4          ; Store Indirect From Register to Data Space
94AE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
94B0:	92-20       	and r9, r2            ; Logical AND
94B2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
94B4:	48-21       	and r20, r8           ; Logical AND
94B6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
94B8:	75-F8       	bld r7, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
94BA:	8D-F8       	.data 0xf88d          ; Binary data
94BC:	4C-5A       	subi r20, 0xac        ; Subtract Immediate
94BE:	8D-F8       	.data 0xf88d          ; Binary data
94C0:	4D-6A       	ori r20, 0xad         ; Logical OR with Immediate
94C2:	8D-F8       	.data 0xf88d          ; Binary data
94C4:	4E-8A       	std Y+22, r4          ; Store Indirect From Register to Data Space
94C6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
94C8:	93-20       	and r9, r3            ; Logical AND
94CA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
94CC:	4C-21       	and r20, r12          ; Logical AND
94CE:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
94D0:	69-F8       	.data 0xf869          ; Binary data
94D2:	8D-F8       	.data 0xf88d          ; Binary data
94D4:	50-7A       	andi r21, 0xa0        ; Logical AND with Immediate
94D6:	8D-F8       	.data 0xf88d          ; Binary data
94D8:	51-6A       	ori r21, 0xa1         ; Logical OR with Immediate
94DA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
94DC:	18-09       	sbc r17, r8           ; Subtract with Carry
94DE:	8D-F8       	.data 0xf88d          ; Binary data
94E0:	52-9A       	sbi 0x0a, 2           ; Set Bit in I/O Register
94E2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
94E4:	25-70       	andi r18, 0x05        ; Logical AND with Immediate
94E6:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
94E8:	25-61       	ori r18, 0x15         ; Logical OR with Immediate
94EA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
94EC:	5B-F8       	.data 0xf85b          ; Binary data
94EE:	8D-F8       	.data 0xf88d          ; Binary data
94F0:	54-7A       	andi r21, 0xa4        ; Logical AND with Immediate
94F2:	8D-F8       	.data 0xf88d          ; Binary data
94F4:	55-6A       	ori r21, 0xa5         ; Logical OR with Immediate
94F6:	8D-F8       	.data 0xf88d          ; Binary data
94F8:	56-9A       	sbi 0x0a, 6           ; Set Bit in I/O Register
94FA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
94FC:	95-20       	and r9, r5            ; Logical AND
94FE:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9500:	54-21       	and r21, r4           ; Logical AND
9502:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9504:	4F-F8       	.data 0xf84f          ; Binary data
9506:	8D-F8       	.data 0xf88d          ; Binary data
9508:	58-7A       	andi r21, 0xa8        ; Logical AND with Immediate
950A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
950C:	12-0A       	sbc r1, r18           ; Subtract with Carry
950E:	8D-F8       	.data 0xf88d          ; Binary data
9510:	59-AA       	std Y+49, r5          ; Store Indirect From Register to Data Space
9512:	8D-F8       	.data 0xf88d          ; Binary data
9514:	5A-9A       	sbi 0x0b, 2           ; Set Bit in I/O Register
9516:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9518:	96-20       	and r9, r6            ; Logical AND
951A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
951C:	58-21       	and r21, r8           ; Logical AND
951E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9520:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
9522:	8D-F8       	.data 0xf88d          ; Binary data
9524:	5C-7A       	andi r21, 0xac        ; Logical AND with Immediate
9526:	8D-F8       	.data 0xf88d          ; Binary data
9528:	5D-AA       	std Y+53, r5          ; Store Indirect From Register to Data Space
952A:	8D-F8       	.data 0xf88d          ; Binary data
952C:	5E-9A       	sbi 0x0b, 6           ; Set Bit in I/O Register
952E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9530:	97-20       	and r9, r7            ; Logical AND
9532:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9534:	5C-21       	and r21, r12          ; Logical AND
9536:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9538:	35-F8       	bld r3, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
953A:	8D-F8       	.data 0xf88d          ; Binary data
953C:	60-5A       	subi r22, 0xa0        ; Subtract Immediate
953E:	8D-F8       	.data 0xf88d          ; Binary data
9540:	61-6A       	ori r22, 0xa1         ; Logical OR with Immediate
9542:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9544:	17-0B       	sbc r17, r23          ; Subtract with Carry
9546:	8D-F8       	.data 0xf88d          ; Binary data
9548:	62-BA       	out 0x12, r6          ; Store Register to I/O Location
954A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
954C:	26-70       	andi r18, 0x06        ; Logical AND with Immediate
954E:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9550:	26-61       	ori r18, 0x16         ; Logical OR with Immediate
9552:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9554:	27-F8       	bld r2, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
9556:	8D-F8       	.data 0xf88d          ; Binary data
9558:	64-5A       	subi r22, 0xa4        ; Subtract Immediate
955A:	8D-F8       	.data 0xf88d          ; Binary data
955C:	65-6A       	ori r22, 0xa5         ; Logical OR with Immediate
955E:	8D-F8       	.data 0xf88d          ; Binary data
9560:	66-BA       	out 0x16, r6          ; Store Register to I/O Location
9562:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9564:	99-20       	and r9, r9            ; Logical AND
9566:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9568:	64-21       	and r22, r4           ; Logical AND
956A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
956C:	1B-F8       	.data 0xf81b          ; Binary data
956E:	8D-F8       	.data 0xf88d          ; Binary data
9570:	68-5A       	subi r22, 0xa8        ; Subtract Immediate
9572:	8D-F8       	.data 0xf88d          ; Binary data
9574:	69-6A       	ori r22, 0xa9         ; Logical OR with Immediate
9576:	8D-F8       	.data 0xf88d          ; Binary data
9578:	6A-BA       	out 0x1a, r6          ; Store Register to I/O Location
957A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
957C:	9A-20       	and r9, r10           ; Logical AND
957E:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9580:	68-21       	and r22, r8           ; Logical AND
9582:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
9584:	0F-F8       	.data 0xf80f          ; Binary data
9586:	8D-F8       	.data 0xf88d          ; Binary data
9588:	6C-7A       	andi r22, 0xac        ; Logical AND with Immediate
958A:	8D-F8       	.data 0xf88d          ; Binary data
958C:	6D-AA       	std Y+53, r6          ; Store Indirect From Register to Data Space
958E:	8D-F8       	.data 0xf88d          ; Binary data
9590:	6E-9A       	sbi 0x0d, 6           ; Set Bit in I/O Register
9592:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9594:	9B-20       	and r9, r11           ; Logical AND
9596:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9598:	6C-21       	and r22, r12          ; Logical AND
959A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
959C:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
959E:	8D-F8       	.data 0xf88d          ; Binary data
95A0:	70-8A       	std Y+16, r7          ; Store Indirect From Register to Data Space
95A2:	2A-26       	clr r554              ; Clear Register
95A4:	8D-F8       	.data 0xf88d          ; Binary data
95A6:	71-6A       	ori r23, 0xa1         ; Logical OR with Immediate
95A8:	31-23       	and r19, r17          ; Logical AND
95AA:	8D-F8       	.data 0xf88d          ; Binary data
95AC:	72-3A       	cpi r23, 0xa2         ; Compare with Immediate
95AE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
95B0:	27-70       	andi r18, 0x07        ; Logical AND with Immediate
95B2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
95B4:	27-61       	ori r18, 0x17         ; Logical OR with Immediate
95B6:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
95B8:	F5-FF       	sbrs r31, 5           ; Skip if Bit in Register is Set
95BA:	8D-F8       	.data 0xf88d          ; Binary data
95BC:	74-4A       	sbci r23, 0xa4        ; Subtract Immediate with Carry SBI
95BE:	8D-F8       	.data 0xf88d          ; Binary data
95C0:	75-6A       	ori r23, 0xa5         ; Logical OR with Immediate
95C2:	32-25       	clr r306              ; Clear Register
95C4:	8D-F8       	.data 0xf88d          ; Binary data
95C6:	76-5A       	subi r23, 0xa6        ; Subtract Immediate
95C8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
95CA:	9D-20       	and r9, r13           ; Logical AND
95CC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
95CE:	74-21       	and r23, r4           ; Logical AND
95D0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
95D2:	E8-FF       	.data 0xffe8          ; Binary data
95D4:	80-23       	and r24, r16          ; Logical AND
95D6:	8D-F8       	.data 0xf88d          ; Binary data
95D8:	78-3A       	cpi r23, 0xa8         ; Compare with Immediate
95DA:	D5-23       	and r29, r21          ; Logical AND
95DC:	8D-F8       	.data 0xf88d          ; Binary data
95DE:	79-3A       	cpi r23, 0xa9         ; Compare with Immediate
95E0:	FE-23       	and r31, r30          ; Logical AND
95E2:	8D-F8       	.data 0xf88d          ; Binary data
95E4:	7A-3A       	cpi r23, 0xaa         ; Compare with Immediate
95E6:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
95E8:	78-20       	and r7, r8            ; Logical AND
95EA:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
95EC:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
95EE:	F8-F9       	.data 0xf9f8          ; Binary data
95F0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
95F2:	9E-20       	and r9, r14           ; Logical AND
95F4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
95F6:	78-21       	and r23, r8           ; Logical AND
95F8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
95FA:	D4-FF       	sbrs r29, 4           ; Skip if Bit in Register is Set
95FC:	8D-F8       	.data 0xf88d          ; Binary data
95FE:	7C-4A       	sbci r23, 0xac        ; Subtract Immediate with Carry SBI
9600:	8D-F8       	.data 0xf88d          ; Binary data
9602:	7D-6A       	ori r23, 0xad         ; Logical OR with Immediate
9604:	8D-F8       	.data 0xf88d          ; Binary data
9606:	7E-5A       	subi r23, 0xae        ; Subtract Immediate
9608:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
960A:	9F-20       	and r9, r15           ; Logical AND
960C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
960E:	7C-21       	and r23, r12          ; Logical AND
9610:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9612:	C8-FF       	.data 0xffc8          ; Binary data
9614:	8D-F8       	.data 0xf88d          ; Binary data
9616:	80-4A       	sbci r24, 0xa0        ; Subtract Immediate with Carry SBI
9618:	8D-F8       	.data 0xf88d          ; Binary data
961A:	81-6A       	ori r24, 0xa1         ; Logical OR with Immediate
961C:	8D-F8       	.data 0xf88d          ; Binary data
961E:	82-5A       	subi r24, 0xa2        ; Subtract Immediate
9620:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9622:	28-70       	andi r18, 0x08        ; Logical AND with Immediate
9624:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9626:	28-61       	ori r18, 0x18         ; Logical OR with Immediate
9628:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
962A:	BC-FF       	.data 0xffbc          ; Binary data
962C:	8D-F8       	.data 0xf88d          ; Binary data
962E:	84-4A       	sbci r24, 0xa4        ; Subtract Immediate with Carry SBI
9630:	8D-F8       	.data 0xf88d          ; Binary data
9632:	85-6A       	ori r24, 0xa5         ; Logical OR with Immediate
9634:	8D-F8       	.data 0xf88d          ; Binary data
9636:	86-5A       	subi r24, 0xa6        ; Subtract Immediate
9638:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
963A:	A1-20       	and r10, r1           ; Logical AND
963C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
963E:	84-21       	and r24, r4           ; Logical AND
9640:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9642:	B0-FF       	sbrs r27, 0           ; Skip if Bit in Register is Set
9644:	8D-F8       	.data 0xf88d          ; Binary data
9646:	88-4A       	sbci r24, 0xa8        ; Subtract Immediate with Carry SBI
9648:	8D-F8       	.data 0xf88d          ; Binary data
964A:	89-6A       	ori r24, 0xa9         ; Logical OR with Immediate
964C:	8D-F8       	.data 0xf88d          ; Binary data
964E:	8A-5A       	subi r24, 0xaa        ; Subtract Immediate
9650:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9652:	A2-20       	and r10, r2           ; Logical AND
9654:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9656:	88-21       	and r24, r8           ; Logical AND
9658:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
965A:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
965C:	8D-F8       	.data 0xf88d          ; Binary data
965E:	8C-4A       	sbci r24, 0xac        ; Subtract Immediate with Carry SBI
9660:	8D-F8       	.data 0xf88d          ; Binary data
9662:	8D-6A       	ori r24, 0xad         ; Logical OR with Immediate
9664:	8D-F8       	.data 0xf88d          ; Binary data
9666:	8E-5A       	subi r24, 0xae        ; Subtract Immediate
9668:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
966A:	A3-20       	and r10, r3           ; Logical AND
966C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
966E:	8C-21       	and r24, r12          ; Logical AND
9670:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9672:	98-FF       	.data 0xff98          ; Binary data
9674:	8D-F8       	.data 0xf88d          ; Binary data
9676:	90-4A       	sbci r25, 0xa0        ; Subtract Immediate with Carry SBI
9678:	8D-F8       	.data 0xf88d          ; Binary data
967A:	91-6A       	ori r25, 0xa1         ; Logical OR with Immediate
967C:	8D-F8       	.data 0xf88d          ; Binary data
967E:	92-5A       	subi r25, 0xa2        ; Subtract Immediate
9680:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9682:	29-70       	andi r18, 0x09        ; Logical AND with Immediate
9684:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9686:	29-61       	ori r18, 0x19         ; Logical OR with Immediate
9688:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
968A:	8C-FF       	.data 0xff8c          ; Binary data
968C:	8D-F8       	.data 0xf88d          ; Binary data
968E:	94-4A       	sbci r25, 0xa4        ; Subtract Immediate with Carry SBI
9690:	8D-F8       	.data 0xf88d          ; Binary data
9692:	95-6A       	ori r25, 0xa5         ; Logical OR with Immediate
9694:	8D-F8       	.data 0xf88d          ; Binary data
9696:	96-5A       	subi r25, 0xa6        ; Subtract Immediate
9698:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
969A:	A5-20       	and r10, r5           ; Logical AND
969C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
969E:	94-21       	and r25, r4           ; Logical AND
96A0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
96A2:	80-FF       	sbrs r24, 0           ; Skip if Bit in Register is Set
96A4:	8D-F8       	.data 0xf88d          ; Binary data
96A6:	98-4A       	sbci r25, 0xa8        ; Subtract Immediate with Carry SBI
96A8:	8D-F8       	.data 0xf88d          ; Binary data
96AA:	99-6A       	ori r25, 0xa9         ; Logical OR with Immediate
96AC:	8D-F8       	.data 0xf88d          ; Binary data
96AE:	9A-5A       	subi r25, 0xaa        ; Subtract Immediate
96B0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
96B2:	A6-20       	and r10, r6           ; Logical AND
96B4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
96B6:	98-21       	and r25, r8           ; Logical AND
96B8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
96BA:	74-FF       	sbrs r23, 4           ; Skip if Bit in Register is Set
96BC:	8D-F8       	.data 0xf88d          ; Binary data
96BE:	9C-4A       	sbci r25, 0xac        ; Subtract Immediate with Carry SBI
96C0:	8D-F8       	.data 0xf88d          ; Binary data
96C2:	9D-6A       	ori r25, 0xad         ; Logical OR with Immediate
96C4:	8D-F8       	.data 0xf88d          ; Binary data
96C6:	9E-5A       	subi r25, 0xae        ; Subtract Immediate
96C8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
96CA:	A7-20       	and r10, r7           ; Logical AND
96CC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
96CE:	9C-21       	and r25, r12          ; Logical AND
96D0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
96D2:	68-FF       	.data 0xff68          ; Binary data
96D4:	8D-F8       	.data 0xf88d          ; Binary data
96D6:	A0-4A       	sbci r26, 0xa0        ; Subtract Immediate with Carry SBI
96D8:	8D-F8       	.data 0xf88d          ; Binary data
96DA:	A1-6A       	ori r26, 0xa1         ; Logical OR with Immediate
96DC:	8D-F8       	.data 0xf88d          ; Binary data
96DE:	A2-5A       	subi r26, 0xa2        ; Subtract Immediate
96E0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
96E2:	2A-70       	andi r18, 0x0a        ; Logical AND with Immediate
96E4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
96E6:	2A-61       	ori r18, 0x1a         ; Logical OR with Immediate
96E8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
96EA:	5C-FF       	.data 0xff5c          ; Binary data
96EC:	8D-F8       	.data 0xf88d          ; Binary data
96EE:	A4-4A       	sbci r26, 0xa4        ; Subtract Immediate with Carry SBI
96F0:	8D-F8       	.data 0xf88d          ; Binary data
96F2:	A5-6A       	ori r26, 0xa5         ; Logical OR with Immediate
96F4:	8D-F8       	.data 0xf88d          ; Binary data
96F6:	A6-5A       	subi r26, 0xa6        ; Subtract Immediate
96F8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
96FA:	A9-20       	and r10, r9           ; Logical AND
96FC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
96FE:	A4-21       	and r26, r4           ; Logical AND
9700:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9702:	50-FF       	sbrs r21, 0           ; Skip if Bit in Register is Set
9704:	8D-F8       	.data 0xf88d          ; Binary data
9706:	A8-4A       	sbci r26, 0xa8        ; Subtract Immediate with Carry SBI
9708:	8D-F8       	.data 0xf88d          ; Binary data
970A:	A9-6A       	ori r26, 0xa9         ; Logical OR with Immediate
970C:	8D-F8       	.data 0xf88d          ; Binary data
970E:	AA-5A       	subi r26, 0xaa        ; Subtract Immediate
9710:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9712:	AA-20       	and r10, r10          ; Logical AND
9714:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9716:	A8-21       	and r26, r8           ; Logical AND
9718:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
971A:	44-FF       	sbrs r20, 4           ; Skip if Bit in Register is Set
971C:	8D-F8       	.data 0xf88d          ; Binary data
971E:	AC-4A       	sbci r26, 0xac        ; Subtract Immediate with Carry SBI
9720:	8D-F8       	.data 0xf88d          ; Binary data
9722:	AD-6A       	ori r26, 0xad         ; Logical OR with Immediate
9724:	8D-F8       	.data 0xf88d          ; Binary data
9726:	AE-5A       	subi r26, 0xae        ; Subtract Immediate
9728:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
972A:	AB-20       	and r10, r11          ; Logical AND
972C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
972E:	AC-21       	and r26, r12          ; Logical AND
9730:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9732:	38-FF       	.data 0xff38          ; Binary data
9734:	8D-F8       	.data 0xf88d          ; Binary data
9736:	B0-4A       	sbci r27, 0xa0        ; Subtract Immediate with Carry SBI
9738:	8D-F8       	.data 0xf88d          ; Binary data
973A:	B1-6A       	ori r27, 0xa1         ; Logical OR with Immediate
973C:	8D-F8       	.data 0xf88d          ; Binary data
973E:	B2-5A       	subi r27, 0xa2        ; Subtract Immediate
9740:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9742:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
9744:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9746:	2B-61       	ori r18, 0x1b         ; Logical OR with Immediate
9748:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
974A:	2C-FF       	.data 0xff2c          ; Binary data
974C:	8D-F8       	.data 0xf88d          ; Binary data
974E:	B4-4A       	sbci r27, 0xa4        ; Subtract Immediate with Carry SBI
9750:	8D-F8       	.data 0xf88d          ; Binary data
9752:	B5-6A       	ori r27, 0xa5         ; Logical OR with Immediate
9754:	8D-F8       	.data 0xf88d          ; Binary data
9756:	B6-5A       	subi r27, 0xa6        ; Subtract Immediate
9758:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
975A:	AD-20       	and r10, r13          ; Logical AND
975C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
975E:	B4-21       	and r27, r4           ; Logical AND
9760:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9762:	20-FF       	sbrs r18, 0           ; Skip if Bit in Register is Set
9764:	8D-F8       	.data 0xf88d          ; Binary data
9766:	B8-4A       	sbci r27, 0xa8        ; Subtract Immediate with Carry SBI
9768:	8D-F8       	.data 0xf88d          ; Binary data
976A:	B9-6A       	ori r27, 0xa9         ; Logical OR with Immediate
976C:	8D-F8       	.data 0xf88d          ; Binary data
976E:	BA-5A       	subi r27, 0xaa        ; Subtract Immediate
9770:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9772:	AE-20       	and r10, r14          ; Logical AND
9774:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9776:	B8-21       	and r27, r8           ; Logical AND
9778:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
977A:	14-FF       	sbrs r17, 4           ; Skip if Bit in Register is Set
977C:	8D-F8       	.data 0xf88d          ; Binary data
977E:	BC-4A       	sbci r27, 0xac        ; Subtract Immediate with Carry SBI
9780:	8D-F8       	.data 0xf88d          ; Binary data
9782:	BD-6A       	ori r27, 0xad         ; Logical OR with Immediate
9784:	8D-F8       	.data 0xf88d          ; Binary data
9786:	BE-5A       	subi r27, 0xae        ; Subtract Immediate
9788:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
978A:	AF-20       	and r10, r15          ; Logical AND
978C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
978E:	BC-21       	and r27, r12          ; Logical AND
9790:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9792:	08-FF       	.data 0xff08          ; Binary data
9794:	8D-F8       	.data 0xf88d          ; Binary data
9796:	C0-4A       	sbci r28, 0xa0        ; Subtract Immediate with Carry SBI
9798:	8D-F8       	.data 0xf88d          ; Binary data
979A:	C1-6A       	ori r28, 0xa1         ; Logical OR with Immediate
979C:	8D-F8       	.data 0xf88d          ; Binary data
979E:	C2-5A       	subi r28, 0xa2        ; Subtract Immediate
97A0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
97A2:	2C-70       	andi r18, 0x0c        ; Logical AND with Immediate
97A4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
97A6:	2C-61       	ori r18, 0x1c         ; Logical OR with Immediate
97A8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
97AA:	FC-FE       	.data 0xfefc          ; Binary data
97AC:	8D-F8       	.data 0xf88d          ; Binary data
97AE:	C4-4A       	sbci r28, 0xa4        ; Subtract Immediate with Carry SBI
97B0:	8D-F8       	.data 0xf88d          ; Binary data
97B2:	C5-6A       	ori r28, 0xa5         ; Logical OR with Immediate
97B4:	8D-F8       	.data 0xf88d          ; Binary data
97B6:	C6-5A       	subi r28, 0xa6        ; Subtract Immediate
97B8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
97BA:	B1-20       	and r11, r1           ; Logical AND
97BC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
97BE:	C4-21       	and r28, r4           ; Logical AND
97C0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
97C2:	F0-FE       	sbrs r15, 0           ; Skip if Bit in Register is Set
97C4:	8D-F8       	.data 0xf88d          ; Binary data
97C6:	C8-4A       	sbci r28, 0xa8        ; Subtract Immediate with Carry SBI
97C8:	8D-F8       	.data 0xf88d          ; Binary data
97CA:	C9-6A       	ori r28, 0xa9         ; Logical OR with Immediate
97CC:	8D-F8       	.data 0xf88d          ; Binary data
97CE:	CA-5A       	subi r28, 0xaa        ; Subtract Immediate
97D0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
97D2:	B2-20       	and r11, r2           ; Logical AND
97D4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
97D6:	C8-21       	and r28, r8           ; Logical AND
97D8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
97DA:	E4-FE       	sbrs r14, 4           ; Skip if Bit in Register is Set
97DC:	8D-F8       	.data 0xf88d          ; Binary data
97DE:	CC-4A       	sbci r28, 0xac        ; Subtract Immediate with Carry SBI
97E0:	8D-F8       	.data 0xf88d          ; Binary data
97E2:	CD-6A       	ori r28, 0xad         ; Logical OR with Immediate
97E4:	8D-F8       	.data 0xf88d          ; Binary data
97E6:	CE-5A       	subi r28, 0xae        ; Subtract Immediate
97E8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
97EA:	B3-20       	and r11, r3           ; Logical AND
97EC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
97EE:	CC-21       	and r28, r12          ; Logical AND
97F0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
97F2:	D8-FE       	.data 0xfed8          ; Binary data
97F4:	8D-F8       	.data 0xf88d          ; Binary data
97F6:	D0-4A       	sbci r29, 0xa0        ; Subtract Immediate with Carry SBI
97F8:	8D-F8       	.data 0xf88d          ; Binary data
97FA:	D1-6A       	ori r29, 0xa1         ; Logical OR with Immediate
97FC:	8D-F8       	.data 0xf88d          ; Binary data
97FE:	D2-5A       	subi r29, 0xa2        ; Subtract Immediate
9800:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9802:	2D-70       	andi r18, 0x0d        ; Logical AND with Immediate
9804:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9806:	2D-61       	ori r18, 0x1d         ; Logical OR with Immediate
9808:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
980A:	CC-FE       	.data 0xfecc          ; Binary data
980C:	8D-F8       	.data 0xf88d          ; Binary data
980E:	D4-4A       	sbci r29, 0xa4        ; Subtract Immediate with Carry SBI
9810:	8D-F8       	.data 0xf88d          ; Binary data
9812:	D5-6A       	ori r29, 0xa5         ; Logical OR with Immediate
9814:	8D-F8       	.data 0xf88d          ; Binary data
9816:	D6-5A       	subi r29, 0xa6        ; Subtract Immediate
9818:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
981A:	B5-20       	and r11, r5           ; Logical AND
981C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
981E:	D4-21       	and r29, r4           ; Logical AND
9820:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9822:	C0-FE       	sbrs r12, 0           ; Skip if Bit in Register is Set
9824:	8D-F8       	.data 0xf88d          ; Binary data
9826:	D8-4A       	sbci r29, 0xa8        ; Subtract Immediate with Carry SBI
9828:	8D-F8       	.data 0xf88d          ; Binary data
982A:	D9-6A       	ori r29, 0xa9         ; Logical OR with Immediate
982C:	8D-F8       	.data 0xf88d          ; Binary data
982E:	DA-5A       	subi r29, 0xaa        ; Subtract Immediate
9830:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9832:	B6-20       	and r11, r6           ; Logical AND
9834:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9836:	D8-21       	and r29, r8           ; Logical AND
9838:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
983A:	B4-FE       	sbrs r11, 4           ; Skip if Bit in Register is Set
983C:	8D-F8       	.data 0xf88d          ; Binary data
983E:	DC-4A       	sbci r29, 0xac        ; Subtract Immediate with Carry SBI
9840:	8D-F8       	.data 0xf88d          ; Binary data
9842:	DD-6A       	ori r29, 0xad         ; Logical OR with Immediate
9844:	8D-F8       	.data 0xf88d          ; Binary data
9846:	DE-5A       	subi r29, 0xae        ; Subtract Immediate
9848:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
984A:	B7-20       	and r11, r7           ; Logical AND
984C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
984E:	DC-21       	and r29, r12          ; Logical AND
9850:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9852:	A8-FE       	.data 0xfea8          ; Binary data
9854:	8D-F8       	.data 0xf88d          ; Binary data
9856:	E0-4A       	sbci r30, 0xa0        ; Subtract Immediate with Carry SBI
9858:	8D-F8       	.data 0xf88d          ; Binary data
985A:	E1-6A       	ori r30, 0xa1         ; Logical OR with Immediate
985C:	8D-F8       	.data 0xf88d          ; Binary data
985E:	E2-5A       	subi r30, 0xa2        ; Subtract Immediate
9860:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9862:	2E-70       	andi r18, 0x0e        ; Logical AND with Immediate
9864:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9866:	2E-61       	ori r18, 0x1e         ; Logical OR with Immediate
9868:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
986A:	9C-FE       	.data 0xfe9c          ; Binary data
986C:	8D-F8       	.data 0xf88d          ; Binary data
986E:	E4-4A       	sbci r30, 0xa4        ; Subtract Immediate with Carry SBI
9870:	8D-F8       	.data 0xf88d          ; Binary data
9872:	E5-6A       	ori r30, 0xa5         ; Logical OR with Immediate
9874:	8D-F8       	.data 0xf88d          ; Binary data
9876:	E6-5A       	subi r30, 0xa6        ; Subtract Immediate
9878:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
987A:	B9-20       	and r11, r9           ; Logical AND
987C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
987E:	E4-21       	and r30, r4           ; Logical AND
9880:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9882:	90-FE       	sbrs r9, 0            ; Skip if Bit in Register is Set
9884:	8D-F8       	.data 0xf88d          ; Binary data
9886:	E8-4A       	sbci r30, 0xa8        ; Subtract Immediate with Carry SBI
9888:	8D-F8       	.data 0xf88d          ; Binary data
988A:	E9-6A       	ori r30, 0xa9         ; Logical OR with Immediate
988C:	8D-F8       	.data 0xf88d          ; Binary data
988E:	EA-5A       	subi r30, 0xaa        ; Subtract Immediate
9890:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9892:	BA-20       	and r11, r10          ; Logical AND
9894:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9896:	E8-21       	and r30, r8           ; Logical AND
9898:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
989A:	84-FE       	sbrs r8, 4            ; Skip if Bit in Register is Set
989C:	8D-F8       	.data 0xf88d          ; Binary data
989E:	EC-4A       	sbci r30, 0xac        ; Subtract Immediate with Carry SBI
98A0:	8D-F8       	.data 0xf88d          ; Binary data
98A2:	ED-6A       	ori r30, 0xad         ; Logical OR with Immediate
98A4:	8D-F8       	.data 0xf88d          ; Binary data
98A6:	EE-5A       	subi r30, 0xae        ; Subtract Immediate
98A8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
98AA:	BB-20       	and r11, r11          ; Logical AND
98AC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
98AE:	EC-21       	and r30, r12          ; Logical AND
98B0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
98B2:	78-FE       	.data 0xfe78          ; Binary data
98B4:	8D-F8       	.data 0xf88d          ; Binary data
98B6:	F0-4A       	sbci r31, 0xa0        ; Subtract Immediate with Carry SBI
98B8:	8D-F8       	.data 0xf88d          ; Binary data
98BA:	F1-6A       	ori r31, 0xa1         ; Logical OR with Immediate
98BC:	8D-F8       	.data 0xf88d          ; Binary data
98BE:	F2-5A       	subi r31, 0xa2        ; Subtract Immediate
98C0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
98C2:	2F-70       	andi r18, 0x0f        ; Logical AND with Immediate
98C4:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
98C6:	2F-61       	ori r18, 0x1f         ; Logical OR with Immediate
98C8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
98CA:	6C-FE       	.data 0xfe6c          ; Binary data
98CC:	8D-F8       	.data 0xf88d          ; Binary data
98CE:	F4-4A       	sbci r31, 0xa4        ; Subtract Immediate with Carry SBI
98D0:	8D-F8       	.data 0xf88d          ; Binary data
98D2:	F5-6A       	ori r31, 0xa5         ; Logical OR with Immediate
98D4:	8D-F8       	.data 0xf88d          ; Binary data
98D6:	F6-5A       	subi r31, 0xa6        ; Subtract Immediate
98D8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
98DA:	BD-20       	and r11, r13          ; Logical AND
98DC:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
98DE:	F4-21       	and r31, r4           ; Logical AND
98E0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
98E2:	60-FE       	sbrs r6, 0            ; Skip if Bit in Register is Set
98E4:	8D-F8       	.data 0xf88d          ; Binary data
98E6:	F8-4A       	sbci r31, 0xa8        ; Subtract Immediate with Carry SBI
98E8:	8D-F8       	.data 0xf88d          ; Binary data
98EA:	F9-6A       	ori r31, 0xa9         ; Logical OR with Immediate
98EC:	8D-F8       	.data 0xf88d          ; Binary data
98EE:	FA-5A       	subi r31, 0xaa        ; Subtract Immediate
98F0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
98F2:	BE-20       	and r11, r14          ; Logical AND
98F4:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
98F6:	F8-21       	and r31, r8           ; Logical AND
98F8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
98FA:	54-FE       	sbrs r5, 4            ; Skip if Bit in Register is Set
98FC:	8D-F8       	.data 0xf88d          ; Binary data
98FE:	FC-4A       	sbci r31, 0xac        ; Subtract Immediate with Carry SBI
9900:	8D-F8       	.data 0xf88d          ; Binary data
9902:	FD-6A       	ori r31, 0xad         ; Logical OR with Immediate
9904:	8D-F8       	.data 0xf88d          ; Binary data
9906:	FE-5A       	subi r31, 0xae        ; Subtract Immediate
9908:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
990A:	BF-20       	and r11, r15          ; Logical AND
990C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
990E:	FC-21       	and r31, r12          ; Logical AND
9910:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9912:	48-FE       	.data 0xfe48          ; Binary data
9914:	8D-F8       	.data 0xf88d          ; Binary data
9916:	00-4B       	sbci r16, 0xb0        ; Subtract Immediate with Carry SBI
9918:	8D-F8       	.data 0xf88d          ; Binary data
991A:	01-6B       	ori r16, 0xb1         ; Logical OR with Immediate
991C:	8D-F8       	.data 0xf88d          ; Binary data
991E:	02-5B       	subi r16, 0xb2        ; Subtract Immediate
9920:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9922:	30-70       	andi r19, 0x00        ; Logical AND with Immediate
9924:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9926:	30-61       	ori r19, 0x10         ; Logical OR with Immediate
9928:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
992A:	3C-FE       	.data 0xfe3c          ; Binary data
992C:	8D-F8       	.data 0xf88d          ; Binary data
992E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
9930:	8D-F8       	.data 0xf88d          ; Binary data
9932:	05-6B       	ori r16, 0xb5         ; Logical OR with Immediate
9934:	8D-F8       	.data 0xf88d          ; Binary data
9936:	06-5B       	subi r16, 0xb6        ; Subtract Immediate
9938:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
993A:	C1-20       	and r12, r1           ; Logical AND
993C:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
993E:	04-31       	cpi r16, 0x14         ; Compare with Immediate
9940:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9942:	30-FE       	sbrs r3, 0            ; Skip if Bit in Register is Set
9944:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
9946:	8D-F8       	.data 0xf88d          ; Binary data
9948:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
994A:	2A-25       	clr r298              ; Clear Register
994C:	8D-F8       	.data 0xf88d          ; Binary data
994E:	09-5B       	subi r16, 0xb9        ; Subtract Immediate
9950:	32-24       	clr r50               ; Clear Register
9952:	8D-F8       	.data 0xf88d          ; Binary data
9954:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
9956:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9958:	C2-20       	and r12, r2           ; Logical AND
995A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
995C:	08-31       	cpi r16, 0x18         ; Compare with Immediate
995E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9960:	21-FE       	sbrs r2, 1            ; Skip if Bit in Register is Set
9962:	8D-F8       	.data 0xf88d          ; Binary data
9964:	0C-6B       	ori r16, 0xbc         ; Logical OR with Immediate
9966:	8D-F8       	.data 0xf88d          ; Binary data
9968:	0D-5B       	subi r16, 0xbd        ; Subtract Immediate
996A:	8D-F8       	.data 0xf88d          ; Binary data
996C:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
996E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9970:	C3-20       	and r12, r3           ; Logical AND
9972:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9974:	0C-31       	cpi r16, 0x1c         ; Compare with Immediate
9976:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9978:	15-FE       	sbrs r1, 5            ; Skip if Bit in Register is Set
997A:	8D-F8       	.data 0xf88d          ; Binary data
997C:	10-6B       	ori r17, 0xb0         ; Logical OR with Immediate
997E:	8D-F8       	.data 0xf88d          ; Binary data
9980:	11-5B       	subi r17, 0xb1        ; Subtract Immediate
9982:	8D-F8       	.data 0xf88d          ; Binary data
9984:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
9986:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9988:	31-70       	andi r19, 0x01        ; Logical AND with Immediate
998A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
998C:	31-61       	ori r19, 0x11         ; Logical OR with Immediate
998E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9990:	09-FE       	.data 0xfe09          ; Binary data
9992:	8D-F8       	.data 0xf88d          ; Binary data
9994:	14-6B       	ori r17, 0xb4         ; Logical OR with Immediate
9996:	8D-F8       	.data 0xf88d          ; Binary data
9998:	15-5B       	subi r17, 0xb5        ; Subtract Immediate
999A:	8D-F8       	.data 0xf88d          ; Binary data
999C:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
999E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
99A0:	C5-20       	and r12, r5           ; Logical AND
99A2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
99A4:	14-31       	cpi r17, 0x14         ; Compare with Immediate
99A6:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
99A8:	FD-FD       	.data 0xfdfd          ; Binary data
99AA:	8D-F8       	.data 0xf88d          ; Binary data
99AC:	18-6B       	ori r17, 0xb8         ; Logical OR with Immediate
99AE:	8D-F8       	.data 0xf88d          ; Binary data
99B0:	19-5B       	subi r17, 0xb9        ; Subtract Immediate
99B2:	8D-F8       	.data 0xf88d          ; Binary data
99B4:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
99B6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
99B8:	C6-20       	and r12, r6           ; Logical AND
99BA:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
99BC:	18-31       	cpi r17, 0x18         ; Compare with Immediate
99BE:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
99C0:	F1-FD       	sbrc r31, 1           ; Skip if Bit in Register is Cleared
99C2:	8D-F8       	.data 0xf88d          ; Binary data
99C4:	1C-6B       	ori r17, 0xbc         ; Logical OR with Immediate
99C6:	8D-F8       	.data 0xf88d          ; Binary data
99C8:	1D-5B       	subi r17, 0xbd        ; Subtract Immediate
99CA:	8D-F8       	.data 0xf88d          ; Binary data
99CC:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
99CE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
99D0:	C7-20       	and r12, r7           ; Logical AND
99D2:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
99D4:	1C-31       	cpi r17, 0x1c         ; Compare with Immediate
99D6:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
99D8:	E5-FD       	sbrc r30, 5           ; Skip if Bit in Register is Cleared
99DA:	8D-F8       	.data 0xf88d          ; Binary data
99DC:	20-6B       	ori r18, 0xb0         ; Logical OR with Immediate
99DE:	8D-F8       	.data 0xf88d          ; Binary data
99E0:	21-5B       	subi r18, 0xb1        ; Subtract Immediate
99E2:	8D-F8       	.data 0xf88d          ; Binary data
99E4:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
99E6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
99E8:	32-70       	andi r19, 0x02        ; Logical AND with Immediate
99EA:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
99EC:	32-61       	ori r19, 0x12         ; Logical OR with Immediate
99EE:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
99F0:	D9-FD       	.data 0xfdd9          ; Binary data
99F2:	8D-F8       	.data 0xf88d          ; Binary data
99F4:	24-6B       	ori r18, 0xb4         ; Logical OR with Immediate
99F6:	8D-F8       	.data 0xf88d          ; Binary data
99F8:	25-5B       	subi r18, 0xb5        ; Subtract Immediate
99FA:	8D-F8       	.data 0xf88d          ; Binary data
99FC:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
99FE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9A00:	C9-20       	and r12, r9           ; Logical AND
9A02:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A04:	24-31       	cpi r18, 0x14         ; Compare with Immediate
9A06:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A08:	CD-FD       	.data 0xfdcd          ; Binary data
9A0A:	8D-F8       	.data 0xf88d          ; Binary data
9A0C:	28-6B       	ori r18, 0xb8         ; Logical OR with Immediate
9A0E:	8D-F8       	.data 0xf88d          ; Binary data
9A10:	29-5B       	subi r18, 0xb9        ; Subtract Immediate
9A12:	8D-F8       	.data 0xf88d          ; Binary data
9A14:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
9A16:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9A18:	CA-20       	and r12, r10          ; Logical AND
9A1A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A1C:	28-31       	cpi r18, 0x18         ; Compare with Immediate
9A1E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A20:	C1-FD       	sbrc r28, 1           ; Skip if Bit in Register is Cleared
9A22:	8D-F8       	.data 0xf88d          ; Binary data
9A24:	2C-6B       	ori r18, 0xbc         ; Logical OR with Immediate
9A26:	8D-F8       	.data 0xf88d          ; Binary data
9A28:	2D-5B       	subi r18, 0xbd        ; Subtract Immediate
9A2A:	8D-F8       	.data 0xf88d          ; Binary data
9A2C:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
9A2E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9A30:	CB-20       	and r12, r11          ; Logical AND
9A32:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A34:	2C-31       	cpi r18, 0x1c         ; Compare with Immediate
9A36:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A38:	B5-FD       	sbrc r27, 5           ; Skip if Bit in Register is Cleared
9A3A:	8D-F8       	.data 0xf88d          ; Binary data
9A3C:	30-6B       	ori r19, 0xb0         ; Logical OR with Immediate
9A3E:	8D-F8       	.data 0xf88d          ; Binary data
9A40:	31-5B       	subi r19, 0xb1        ; Subtract Immediate
9A42:	8D-F8       	.data 0xf88d          ; Binary data
9A44:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
9A46:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9A48:	33-70       	andi r19, 0x03        ; Logical AND with Immediate
9A4A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
9A4C:	33-61       	ori r19, 0x13         ; Logical OR with Immediate
9A4E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A50:	A9-FD       	.data 0xfda9          ; Binary data
9A52:	8D-F8       	.data 0xf88d          ; Binary data
9A54:	34-6B       	ori r19, 0xb4         ; Logical OR with Immediate
9A56:	8D-F8       	.data 0xf88d          ; Binary data
9A58:	35-5B       	subi r19, 0xb5        ; Subtract Immediate
9A5A:	8D-F8       	.data 0xf88d          ; Binary data
9A5C:	36-4B       	sbci r19, 0xb6        ; Subtract Immediate with Carry SBI
9A5E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9A60:	CD-20       	and r12, r13          ; Logical AND
9A62:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A64:	34-31       	cpi r19, 0x14         ; Compare with Immediate
9A66:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A68:	9D-FD       	.data 0xfd9d          ; Binary data
9A6A:	8D-F8       	.data 0xf88d          ; Binary data
9A6C:	38-6B       	ori r19, 0xb8         ; Logical OR with Immediate
9A6E:	8D-F8       	.data 0xf88d          ; Binary data
9A70:	39-5B       	subi r19, 0xb9        ; Subtract Immediate
9A72:	8D-F8       	.data 0xf88d          ; Binary data
9A74:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
9A76:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9A78:	CE-20       	and r12, r14          ; Logical AND
9A7A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A7C:	38-31       	cpi r19, 0x18         ; Compare with Immediate
9A7E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A80:	91-FD       	sbrc r25, 1           ; Skip if Bit in Register is Cleared
9A82:	8D-F8       	.data 0xf88d          ; Binary data
9A84:	3C-6B       	ori r19, 0xbc         ; Logical OR with Immediate
9A86:	8D-F8       	.data 0xf88d          ; Binary data
9A88:	3D-5B       	subi r19, 0xbd        ; Subtract Immediate
9A8A:	8D-F8       	.data 0xf88d          ; Binary data
9A8C:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
9A8E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9A90:	CF-20       	and r12, r15          ; Logical AND
9A92:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A94:	3C-31       	cpi r19, 0x1c         ; Compare with Immediate
9A96:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9A98:	85-FD       	sbrc r24, 5           ; Skip if Bit in Register is Cleared
9A9A:	0D-F6       	brbc 5, .-126         ; Branch if Bit in SREG is Cleared
9A9C:	44-3D       	cpi r20, 0xd4         ; Compare with Immediate
9A9E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9AA0:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
9AA2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
9AA4:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
9AA6:	8B-B0       	in r8, 0x0b           ; Load an I/O Location to Register
9AA8:	57-4C       	sbci r21, 0xc7        ; Subtract Immediate with Carry SBI
9AAA:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
9AAC:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9AAE:	BC-FE       	.data 0xfebc          ; Binary data
9AB0:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9AB2:	20-30       	cpi r18, 0x00         ; Compare with Immediate
9AB4:	8D-F8       	.data 0xf88d          ; Binary data
9AB6:	04-30       	cpi r16, 0x04         ; Compare with Immediate
9AB8:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9ABA:	21-30       	cpi r18, 0x01         ; Compare with Immediate
9ABC:	8D-F8       	.data 0xf88d          ; Binary data
9ABE:	05-30       	cpi r16, 0x05         ; Compare with Immediate
9AC0:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9AC2:	22-30       	cpi r18, 0x02         ; Compare with Immediate
9AC4:	8D-F8       	.data 0xf88d          ; Binary data
9AC6:	06-30       	cpi r16, 0x06         ; Compare with Immediate
9AC8:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
9ACA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9ACC:	6B-FD       	.data 0xfd6b          ; Binary data
9ACE:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
9AD0:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
9AD2:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
9AD4:	64-24       	clr r100              ; Clear Register
9AD6:	25-46       	sbci r18, 0x65        ; Subtract Immediate with Carry SBI
9AD8:	01-E0       	ldi r16, 0x01         ; Load Immediate
9ADA:	00-24       	clr r0                ; Clear Register
9ADC:	F5-25       	clr r501              ; Clear Register
9ADE:	4A-4B       	sbci r20, 0xba        ; Subtract Immediate with Carry SBI
9AE0:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
9AE2:	4B-4B       	sbci r20, 0xbb        ; Subtract Immediate with Carry SBI
9AE4:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
9AE6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9AE8:	85-FC       	sbrc r8, 5            ; Skip if Bit in Register is Cleared
9AEA:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9AEC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
9AEE:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9AF0:	91-FE       	sbrs r9, 1            ; Skip if Bit in Register is Set
9AF2:	00-28       	or r0, r0             ; Logical OR
9AF4:	42-D0       	rcall .+132           ; Relative Call to Subroutine
9AF6:	8D-F8       	.data 0xf88d          ; Binary data
9AF8:	08-50       	subi r16, 0x08        ; Subtract Immediate
9AFA:	00-27       	clr r768              ; Clear Register
9AFC:	8D-F8       	.data 0xf88d          ; Binary data
9AFE:	09-70       	andi r16, 0x09        ; Logical AND with Immediate
9B00:	8D-F8       	.data 0xf88d          ; Binary data
9B02:	0A-40       	sbci r16, 0x0a        ; Subtract Immediate with Carry SBI
9B04:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
9B06:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9B08:	80-41       	sbci r24, 0x10        ; Subtract Immediate with Carry SBI
9B0A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B0C:	BD-FB       	.data 0xfbbd          ; Binary data
9B0E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B10:	8B-FE       	.data 0xfe8b          ; Binary data
9B12:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
9B14:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9B16:	46-FD       	sbrc r20, 6           ; Skip if Bit in Register is Cleared
9B18:	3B-4E       	sbci r19, 0xeb        ; Subtract Immediate with Carry SBI
9B1A:	30-68       	ori r19, 0x80         ; Logical OR with Immediate
9B1C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9B1E:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
9B20:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B22:	B2-FB       	bst r27, 2            ; Bit Store from Bit in Register to T Flag in SREG
9B24:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B26:	80-FE       	sbrs r8, 0            ; Skip if Bit in Register is Set
9B28:	8D-F8       	.data 0xf88d          ; Binary data
9B2A:	0C-50       	subi r16, 0x0c        ; Subtract Immediate
9B2C:	8D-F8       	.data 0xf88d          ; Binary data
9B2E:	0D-70       	andi r16, 0x0d        ; Logical AND with Immediate
9B30:	8D-F8       	.data 0xf88d          ; Binary data
9B32:	0E-40       	sbci r16, 0x0e        ; Subtract Immediate with Carry SBI
9B34:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
9B36:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9B38:	35-FD       	sbrc r19, 5           ; Skip if Bit in Register is Cleared
9B3A:	30-68       	ori r19, 0x80         ; Logical OR with Immediate
9B3C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9B3E:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
9B40:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B42:	A4-FB       	bst r26, 4            ; Bit Store from Bit in Register to T Flag in SREG
9B44:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B46:	70-FE       	sbrs r7, 0            ; Skip if Bit in Register is Set
9B48:	8D-F8       	.data 0xf88d          ; Binary data
9B4A:	10-50       	subi r17, 0x00        ; Subtract Immediate
9B4C:	8D-F8       	.data 0xf88d          ; Binary data
9B4E:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
9B50:	8D-F8       	.data 0xf88d          ; Binary data
9B52:	12-40       	sbci r17, 0x02        ; Subtract Immediate with Carry SBI
9B54:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
9B56:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9B58:	25-FD       	sbrc r18, 5           ; Skip if Bit in Register is Cleared
9B5A:	30-68       	ori r19, 0x80         ; Logical OR with Immediate
9B5C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9B5E:	80-41       	sbci r24, 0x10        ; Subtract Immediate with Carry SBI
9B60:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B62:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
9B64:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B66:	60-FE       	sbrs r6, 0            ; Skip if Bit in Register is Set
9B68:	8D-F8       	.data 0xf88d          ; Binary data
9B6A:	14-50       	subi r17, 0x04        ; Subtract Immediate
9B6C:	8D-F8       	.data 0xf88d          ; Binary data
9B6E:	15-70       	andi r17, 0x05        ; Logical AND with Immediate
9B70:	8D-F8       	.data 0xf88d          ; Binary data
9B72:	16-40       	sbci r17, 0x06        ; Subtract Immediate with Carry SBI
9B74:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
9B76:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9B78:	15-FD       	sbrc r17, 5           ; Skip if Bit in Register is Cleared
9B7A:	43-E0       	ldi r20, 0x03         ; Load Immediate
9B7C:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
9B7E:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
9B80:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
9B82:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B84:	37-FC       	sbrc r3, 7            ; Skip if Bit in Register is Cleared
9B86:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9B88:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
9B8A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9B8C:	43-FE       	sbrs r4, 3            ; Skip if Bit in Register is Set
9B8E:	10-B3       	in r17, 0x10          ; Load an I/O Location to Register
9B90:	8D-F8       	.data 0xf88d          ; Binary data
9B92:	18-50       	subi r17, 0x08        ; Subtract Immediate
9B94:	00-27       	clr r768              ; Clear Register
9B96:	8D-F8       	.data 0xf88d          ; Binary data
9B98:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
9B9A:	8D-F8       	.data 0xf88d          ; Binary data
9B9C:	1A-40       	sbci r17, 0x0a        ; Subtract Immediate with Carry SBI
9B9E:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
9BA0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9BA2:	80-41       	sbci r24, 0x10        ; Subtract Immediate with Carry SBI
9BA4:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9BA6:	72-FB       	bst r23, 2            ; Bit Store from Bit in Register to T Flag in SREG
9BA8:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9BAA:	3E-FE       	.data 0xfe3e          ; Binary data
9BAC:	06-A9       	std Y+54, r16         ; Store Indirect From Register to Data Space
9BAE:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9BB0:	F9-FC       	.data 0xfcf9          ; Binary data
9BB2:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
9BB4:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
9BB6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9BB8:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
9BBA:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9BBC:	67-FB       	bst r22, 7            ; Bit Store from Bit in Register to T Flag in SREG
9BBE:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9BC0:	33-FE       	sbrs r3, 3            ; Skip if Bit in Register is Set
9BC2:	8D-F8       	.data 0xf88d          ; Binary data
9BC4:	1C-50       	subi r17, 0x0c        ; Subtract Immediate
9BC6:	8D-F8       	.data 0xf88d          ; Binary data
9BC8:	1D-70       	andi r17, 0x0d        ; Logical AND with Immediate
9BCA:	8D-F8       	.data 0xf88d          ; Binary data
9BCC:	1E-40       	sbci r17, 0x0e        ; Subtract Immediate with Carry SBI
9BCE:	07-A9       	std Y+55, r16         ; Store Indirect From Register to Data Space
9BD0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9BD2:	E8-FC       	.data 0xfce8          ; Binary data
9BD4:	16-E0       	ldi r17, 0x06         ; Load Immediate
9BD6:	8D-F8       	.data 0xf88d          ; Binary data
9BD8:	20-50       	subi r18, 0x00        ; Subtract Immediate
9BDA:	00-26       	clr r512              ; Clear Register
9BDC:	8D-F8       	.data 0xf88d          ; Binary data
9BDE:	21-60       	ori r18, 0x01         ; Logical OR with Immediate
9BE0:	8D-F8       	.data 0xf88d          ; Binary data
9BE2:	22-40       	sbci r18, 0x02        ; Subtract Immediate with Carry SBI
9BE4:	78-1C       	adc r7, r8            ; Add with Carry
9BE6:	08-A9       	std Y+48, r16         ; Store Indirect From Register to Data Space
9BE8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9BEA:	DC-FC       	.data 0xfcdc          ; Binary data
9BEC:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
9BEE:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
9BF0:	8D-F8       	.data 0xf88d          ; Binary data
9BF2:	24-50       	subi r18, 0x04        ; Subtract Immediate
9BF4:	8D-F8       	.data 0xf88d          ; Binary data
9BF6:	25-60       	ori r18, 0x05         ; Logical OR with Immediate
9BF8:	8D-F8       	.data 0xf88d          ; Binary data
9BFA:	26-40       	sbci r18, 0x06        ; Subtract Immediate with Carry SBI
9BFC:	02-30       	cpi r16, 0x02         ; Compare with Immediate
9BFE:	09-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
9C00:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9C02:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
9C04:	0B-B0       	in r0, 0x0b           ; Load an I/O Location to Register
9C06:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
9C08:	64-F8       	bld r6, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9C0A:	FF-1F       	adc r31, r31          ; Add with Carry
9C0C:	79-B9       	out 0x09, r23         ; Store Register to I/O Location
9C0E:	FF-1F       	adc r31, r31          ; Add with Carry
9C10:	98-EF       	ldi r25, 0xf8         ; Load Immediate
9C12:	FF-1F       	adc r31, r31          ; Add with Carry
9C14:	C0-92-FF-1F 	sts 0x1fff, r12       ; Store Direct to Data Space
9C18:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
9C1A:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
9C1C:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
9C1E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
9C20:	AB-B1       	in r26, 0x0b          ; Load an I/O Location to Register
9C22:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
9C24:	00-24       	clr r0                ; Clear Register
9C26:	01-34       	cpi r16, 0x41         ; Compare with Immediate
9C28:	1A-7E       	andi r17, 0xea        ; Logical AND with Immediate
9C2A:	12-B9       	out 0x02, r17         ; Store Register to I/O Location
9C2C:	C8-2C       	mov r12, r8           ; Copy Register
9C2E:	0F-D1       	rcall .+542           ; Relative Call to Subroutine
9C30:	01-E0       	ldi r16, 0x01         ; Load Immediate
9C32:	18-33       	cpi r17, 0x38         ; Compare with Immediate
9C34:	F7-E7       	ldi r31, 0x77         ; Load Immediate
9C36:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
9C38:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
9C3A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
9C3C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
9C3E:	1F-49       	sbci r17, 0x9f        ; Subtract Immediate with Carry SBI
9C40:	15-22       	and r1, r21           ; Logical AND
9C42:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
9C44:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
9C46:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
9C48:	8D-FD       	.data 0xfd8d          ; Binary data
9C4A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9C4C:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
9C4E:	00-24       	clr r0                ; Clear Register
9C50:	18-4E       	sbci r17, 0xe8        ; Subtract Immediate with Carry SBI
9C52:	67-00       	.data 0x0067          ; Binary data
9C54:	3B-19       	sub r19, r11          ; Subtract Without Carry
9C56:	DB-00       	.data 0x00db          ; Binary data
9C58:	F5-18       	sub r15, r5           ; Subtract Without Carry
9C5A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9C5C:	01-08       	sbc r0, r1            ; Subtract with Carry
9C5E:	06-F8       	bld r0, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
9C60:	03-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
9C62:	14-20       	and r1, r4            ; Logical AND
9C64:	64-21       	and r22, r4           ; Logical AND
9C66:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
9C68:	35-FF       	sbrs r19, 5           ; Skip if Bit in Register is Set
9C6A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9C6C:	C3-FB       	bst r28, 3            ; Bit Store from Bit in Register to T Flag in SREG
9C6E:	A8-60       	ori r26, 0x08         ; Logical OR with Immediate
9C70:	E8-60       	ori r30, 0x08         ; Logical OR with Immediate
9C72:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
9C74:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
9C76:	96-30       	cpi r25, 0x06         ; Compare with Immediate
9C78:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9C7A:	BC-FB       	.data 0xfbbc          ; Binary data
9C7C:	68-60       	ori r22, 0x08         ; Logical OR with Immediate
9C7E:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
9C80:	10-09       	sbc r17, r0           ; Subtract with Carry
9C82:	00-23       	and r16, r16          ; Logical AND
9C84:	2B-61       	ori r18, 0x1b         ; Logical OR with Immediate
9C86:	85-F8       	bld r8, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
9C88:	01-80       	ldd r0, Y+1           ; Load Indirect from Data Space to Register
9C8A:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
9C8C:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
9C8E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9C90:	B1-FB       	bst r27, 1            ; Bit Store from Bit in Register to T Flag in SREG
9C92:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
9C94:	3C-44       	sbci r19, 0x4c        ; Subtract Immediate with Carry SBI
9C96:	06-EB       	ldi r16, 0xb6         ; Load Immediate
9C98:	C4-06       	cpc r12, r20          ; Compare with Carry
9C9A:	B0-68       	ori r27, 0x80         ; Logical OR with Immediate
9C9C:	0A-49       	sbci r16, 0x9a        ; Subtract Immediate with Carry SBI
9C9E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9CA0:	FD-FB       	.data 0xfbfd          ; Binary data
9CA2:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9CA4:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
9CA6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9CA8:	F1-FA       	bst r15, 1            ; Bit Store from Bit in Register to T Flag in SREG
9CAA:	C9-F8       	.data 0xf8c9          ; Binary data
9CAC:	04-00       	.data 0x0004          ; Binary data
9CAE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9CB0:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
9CB2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
9CB4:	38-9E       	mul r3, r24           ; Multiply Unsigned
9CB6:	FF-1F       	adc r31, r31          ; Add with Carry
9CB8:	C0-01       	movw r24, r0          ; Copy Register Word
9CBA:	00-20       	and r0, r0            ; Logical AND
9CBC:	1C-7C       	andi r17, 0xcc        ; Logical AND with Immediate
9CBE:	01-00       	.data 0x0001          ; Binary data
9CC0:	40-9D       	mul r20, r0           ; Multiply Unsigned
9CC2:	FF-1F       	adc r31, r31          ; Add with Carry
9CC4:	98-EF       	ldi r25, 0xf8         ; Load Immediate
9CC6:	FF-1F       	adc r31, r31          ; Add with Carry
9CC8:	00-00       	nop                   ; No Operation
9CCA:	A0-40       	sbci r26, 0x00        ; Subtract Immediate with Carry SBI
9CCC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
9CCE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
9CD0:	2D-72       	andi r18, 0x2d        ; Logical AND with Immediate
9CD2:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
9CD4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
9CD6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
9CD8:	6E-22       	and r6, r30           ; Logical AND
9CDA:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
9CDC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
9CDE:	45-22       	and r4, r21           ; Logical AND
9CE0:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
9CE2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
9CE4:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
9CE6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9CE8:	81-43       	sbci r24, 0x31        ; Subtract Immediate with Carry SBI
9CEA:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
9CEC:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
9CEE:	93-61       	ori r25, 0x13         ; Logical OR with Immediate
9CF0:	00-23       	and r16, r16          ; Logical AND
9CF2:	82-F8       	bld r8, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
9CF4:	20-30       	cpi r18, 0x00         ; Compare with Immediate
9CF6:	FF-21       	and r31, r15          ; Logical AND
9CF8:	82-F8       	bld r8, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
9CFA:	21-10       	cpse r2, r1           ; Compare Skip if Equal
9CFC:	82-F8       	bld r8, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
9CFE:	22-30       	cpi r18, 0x02         ; Compare with Immediate
9D00:	0A-49       	sbci r16, 0x9a        ; Subtract Immediate with Carry SBI
9D02:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
9D04:	5A-54       	subi r21, 0x4a        ; Subtract Immediate
9D06:	C8-18       	sub r12, r8           ; Subtract Without Carry
9D08:	42-70       	andi r20, 0x02        ; Logical AND with Immediate
9D0A:	18-33       	cpi r17, 0x38         ; Compare with Immediate
9D0C:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
9D0E:	96-5F       	subi r25, 0xf6        ; Subtract Immediate
9D10:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
9D12:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
9D14:	81-FF       	sbrs r24, 1           ; Skip if Bit in Register is Set
9D16:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
9D18:	2C-FC       	.data 0xfc2c          ; Binary data
9D1A:	FF-1F       	adc r31, r31          ; Add with Carry
9D1C:	40-9D       	mul r20, r0           ; Multiply Unsigned
9D1E:	FF-1F       	adc r31, r31          ; Add with Carry
9D20:	98-EF       	ldi r25, 0xf8         ; Load Immediate
9D22:	FF-1F       	adc r31, r31          ; Add with Carry
9D24:	64-F8       	bld r6, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9D26:	FF-1F       	adc r31, r31          ; Add with Carry
9D28:	00-00       	nop                   ; No Operation
9D2A:	40-40       	sbci r20, 0x00        ; Subtract Immediate with Carry SBI
9D2C:	38-9E       	mul r3, r24           ; Multiply Unsigned
9D2E:	FF-1F       	adc r31, r31          ; Add with Carry
9D30:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
9D32:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
9D34:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
9D36:	3D-4E       	sbci r19, 0xed        ; Subtract Immediate with Carry SBI
9D38:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
9D3A:	0C-04       	cpc r0, r12           ; Compare with Carry
9D3C:	06-F5       	brbc 6, .+64          ; Branch if Bit in SREG is Cleared
9D3E:	96-5A       	subi r25, 0xa6        ; Subtract Immediate
9D40:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
9D42:	0C-0A       	sbc r0, r28           ; Subtract with Carry
9D44:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9D46:	7E-5B       	subi r23, 0xbe        ; Subtract Immediate
9D48:	25-46       	sbci r18, 0x65        ; Subtract Immediate with Carry SBI
9D4A:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9D4C:	0C-3C       	cpi r16, 0xcc         ; Compare with Immediate
9D4E:	00-2B       	or r16, r16           ; Logical OR
9D50:	65-D0       	rcall .+202           ; Relative Call to Subroutine
9D52:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
9D54:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
9D56:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
9D58:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
9D5A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9D5C:	9F-FB       	.data 0xfb9f          ; Binary data
9D5E:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9D60:	08-1C       	adc r0, r8            ; Add with Carry
9D62:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9D64:	93-FA       	bst r9, 3             ; Bit Store from Bit in Register to T Flag in SREG
9D66:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9D68:	08-0C       	add r0, r8            ; Add without Carry
9D6A:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9D6C:	0B-3C       	cpi r16, 0xcb         ; Compare with Immediate
9D6E:	43-B1       	in r20, 0x03          ; Load an I/O Location to Register
9D70:	31-49       	sbci r19, 0x91        ; Subtract Immediate with Carry SBI
9D72:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9D74:	31-FD       	sbrc r19, 1           ; Skip if Bit in Register is Cleared
9D76:	20-B1       	in r18, 0x00          ; Load an I/O Location to Register
9D78:	00-23       	and r16, r16          ; Logical AND
9D7A:	04-F8       	bld r0, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
9D7C:	0B-3C       	cpi r16, 0xcb         ; Compare with Immediate
9D7E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
9D80:	4B-FF       	.data 0xff4b          ; Binary data
9D82:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
9D84:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
9D86:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
9D88:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9D8A:	34-FB       	bst r19, 4            ; Bit Store from Bit in Register to T Flag in SREG
9D8C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9D8E:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
9D90:	08-0C       	add r0, r8            ; Add without Carry
9D92:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9D94:	79-FA       	.data 0xfa79          ; Binary data
9D96:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
9D98:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
9D9A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9D9C:	27-FD       	sbrc r18, 7           ; Skip if Bit in Register is Cleared
9D9E:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
9DA0:	00-23       	and r16, r16          ; Logical AND
9DA2:	05-F8       	bld r0, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
9DA4:	0C-3C       	cpi r16, 0xcc         ; Compare with Immediate
9DA6:	3A-E0       	ldi r19, 0x0a         ; Load Immediate
9DA8:	F1-68       	ori r31, 0x81         ; Logical OR with Immediate
9DAA:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
9DAC:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9DAE:	6E-FA       	.data 0xfa6e          ; Binary data
9DB0:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9DB2:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
9DB4:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9DB6:	10-FD       	sbrc r17, 0           ; Skip if Bit in Register is Cleared
9DB8:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
9DBA:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
9DBC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
9DBE:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
9DC0:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9DC2:	6C-FB       	.data 0xfb6c          ; Binary data
9DC4:	F0-60       	ori r31, 0x00         ; Logical OR with Immediate
9DC6:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
9DC8:	08-9C       	mul r0, r8            ; Multiply Unsigned
9DCA:	D5-F8       	bld r13, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
9DCC:	08-80       	ld r0, Y              ; Load Indirect from Data Space to Register
9DCE:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
9DD0:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
9DD2:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9DD4:	1F-FD       	.data 0xfd1f          ; Binary data
9DD6:	90-B1       	in r25, 0x00          ; Load an I/O Location to Register
9DD8:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
9DDA:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9DDC:	25-FD       	sbrc r18, 5           ; Skip if Bit in Register is Cleared
9DDE:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
9DE0:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
9DE2:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
9DE4:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
9DE6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9DE8:	1F-FD       	.data 0xfd1f          ; Binary data
9DEA:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
9DEC:	64-23       	and r22, r20          ; Logical AND
9DEE:	00-93-48-46 	sts 0x4648, r16       ; Store Direct to Data Space
9DF2:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
9DF4:	00-23       	and r16, r16          ; Logical AND
9DF6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
9DF8:	77-FE       	sbrs r7, 7            ; Skip if Bit in Register is Set
9DFA:	68-60       	ori r22, 0x08         ; Logical OR with Immediate
9DFC:	0F-E0       	ldi r16, 0x0f         ; Load Immediate
9DFE:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
9E00:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E02:	12-FD       	sbrc r17, 2           ; Skip if Bit in Register is Cleared
9E04:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
9E06:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
9E08:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E0A:	0E-FD       	.data 0xfd0e          ; Binary data
9E0C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9E0E:	C8-23       	and r28, r24          ; Logical AND
9E10:	00-93-48-46 	sts 0x4648, r16       ; Store Direct to Data Space
9E14:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
9E16:	64-23       	and r22, r20          ; Logical AND
9E18:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
9E1A:	66-FE       	sbrs r6, 6            ; Skip if Bit in Register is Set
9E1C:	68-60       	ori r22, 0x08         ; Logical OR with Immediate
9E1E:	18-36       	cpi r17, 0x68         ; Compare with Immediate
9E20:	18-34       	cpi r17, 0x48         ; Compare with Immediate
9E22:	54-45       	sbci r21, 0x54        ; Subtract Immediate with Carry SBI
9E24:	90-D1       	rcall .+800           ; Relative Call to Subroutine
9E26:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
9E28:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9E2A:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
9E2C:	38-9E       	mul r3, r24           ; Multiply Unsigned
9E2E:	FF-1F       	adc r31, r31          ; Add with Carry
9E30:	50-92-FF-1F 	sts 0x1fff, r5        ; Store Direct to Data Space
9E34:	7C-B9       	out 0x0c, r23         ; Store Register to I/O Location
9E36:	FF-1F       	adc r31, r31          ; Add with Carry
9E38:	33-33       	cpi r19, 0x33         ; Compare with Immediate
9E3A:	F2-43       	sbci r31, 0x32        ; Subtract Immediate with Carry SBI
9E3C:	98-EF       	ldi r25, 0xf8         ; Load Immediate
9E3E:	FF-1F       	adc r31, r31          ; Add with Carry
9E40:	40-9D       	mul r20, r0           ; Multiply Unsigned
9E42:	FF-1F       	adc r31, r31          ; Add with Carry
9E44:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
9E46:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
9E48:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
9E4A:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
9E4C:	1A-1D       	adc r17, r10          ; Add with Carry
9E4E:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
9E50:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
9E52:	0C-02       	muls r16, r28         ; Multiply Signed
9E54:	02-92       	st -Z, r0             ; Store Indirect From Register to Data Space
9E56:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
9E58:	96-53       	subi r25, 0x36        ; Subtract Immediate
9E5A:	04-33       	cpi r16, 0x34         ; Compare with Immediate
9E5C:	03-93       	.data 0x9303          ; Binary data
9E5E:	DF-F8       	.data 0xf8df          ; Binary data
9E60:	CC-B0       	in r12, 0x0c          ; Load an I/O Location to Register
9E62:	DF-F8       	.data 0xf8df          ; Binary data
9E64:	CC-A0       	ldd r12, Y+36         ; Load Indirect from Data Space to Register
9E66:	DD-F8       	.data 0xf8dd          ; Binary data
9E68:	08-90       	.data 0x9008          ; Binary data
9E6A:	59-F8       	.data 0xf859          ; Binary data
9E6C:	08-5C       	subi r16, 0xc8        ; Subtract Immediate
9E6E:	DD-F8       	.data 0xf8dd          ; Binary data
9E70:	04-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
9E72:	D8-F8       	.data 0xf8d8          ; Binary data
9E74:	08-60       	ori r16, 0x08         ; Logical OR with Immediate
9E76:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
9E78:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
9E7A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E7C:	05-FA       	bst r0, 5             ; Bit Store from Bit in Register to T Flag in SREG
9E7E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E80:	D3-FC       	sbrc r13, 3           ; Skip if Bit in Register is Cleared
9E82:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
9E84:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E86:	B6-FA       	bst r11, 6            ; Bit Store from Bit in Register to T Flag in SREG
9E88:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
9E8A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
9E8C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
9E8E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E90:	FD-F9       	.data 0xf9fd          ; Binary data
9E92:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9E94:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
9E96:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9E98:	9F-FC       	.data 0xfc9f          ; Binary data
9E9A:	00-28       	or r0, r0             ; Logical OR
9E9C:	38-D0       	rcall .+112           ; Relative Call to Subroutine
9E9E:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
9EA0:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
9EA2:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9EA4:	F1-F9       	bld r31, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
9EA6:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
9EA8:	00-21       	and r16, r0           ; Logical AND
9EAA:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9EAC:	B3-FC       	sbrc r11, 3           ; Skip if Bit in Register is Cleared
9EAE:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
9EB0:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
9EB2:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
9EB4:	00-E0       	ldi r16, 0x00         ; Load Immediate
9EB6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
9EB8:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
9EBA:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9EBC:	EF-FA       	.data 0xfaef          ; Binary data
9EBE:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
9EC0:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9EC2:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
9EC4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9EC6:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
9EC8:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9ECA:	DE-F9       	.data 0xf9de          ; Binary data
9ECC:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9ECE:	AC-FC       	.data 0xfcac          ; Binary data
9ED0:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
9ED2:	8D-F8       	.data 0xf88d          ; Binary data
9ED4:	14-00       	.data 0x0014          ; Binary data
9ED6:	8D-F8       	.data 0xf88d          ; Binary data
9ED8:	15-00       	.data 0x0015          ; Binary data
9EDA:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
9EDC:	69-03       	fmul r22, r17         ; Fractional Multiply Unsigned
9EDE:	8D-F8       	.data 0xf88d          ; Binary data
9EE0:	16-30       	cpi r17, 0x06         ; Compare with Immediate
9EE2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
9EE4:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
9EE6:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
9EE8:	5D-FB       	.data 0xfb5d          ; Binary data
9EEA:	01-34       	cpi r16, 0x41         ; Compare with Immediate
9EEC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
9EEE:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9EF0:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
9EF2:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
9EF4:	59-F8       	.data 0xf859          ; Binary data
9EF6:	08-5C       	subi r16, 0xc8        ; Subtract Immediate
9EF8:	D8-F8       	.data 0xf8d8          ; Binary data
9EFA:	08-60       	ori r16, 0x08         ; Logical OR with Immediate
9EFC:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
9EFE:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
9F00:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F02:	C4-F9       	bld r28, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
9F04:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9F06:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
9F08:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F0A:	66-FC       	sbrc r6, 6            ; Skip if Bit in Register is Cleared
9F0C:	00-28       	or r0, r0             ; Logical OR
9F0E:	C6-D1       	rcall .+908           ; Relative Call to Subroutine
9F10:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
9F12:	18-32       	cpi r17, 0x28         ; Compare with Immediate
9F14:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
9F16:	02-9B       	sbis 0x00, 2          ; Skip if Bit in I/O Register is Set
9F18:	18-33       	cpi r17, 0x38         ; Compare with Immediate
9F1A:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
9F1C:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
9F1E:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
9F20:	A1-D1       	rcall .+834           ; Relative Call to Subroutine
9F22:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
9F24:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9F26:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
9F28:	38-9E       	mul r3, r24           ; Multiply Unsigned
9F2A:	FF-1F       	adc r31, r31          ; Add with Carry
9F2C:	00-00       	nop                   ; No Operation
9F2E:	C8-42       	sbci r28, 0x28        ; Subtract Immediate with Carry SBI
9F30:	00-00       	nop                   ; No Operation
9F32:	DC-42       	sbci r29, 0x2c        ; Subtract Immediate with Carry SBI
9F34:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
9F36:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
9F38:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
9F3A:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
9F3C:	01-91       	ld r16, Z+            ; Load Indirect from Data Space to Register
9F3E:	19-4B       	sbci r17, 0xb9        ; Subtract Immediate with Carry SBI
9F40:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
9F42:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
9F44:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
9F46:	00-0F       	add r16, r16          ; Add without Carry
9F48:	28-DD       	rcall .+6736          ; Relative Call to Subroutine
9F4A:	00-24       	clr r0                ; Clear Register
9F4C:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
9F4E:	16-4D       	sbci r17, 0xd6        ; Subtract Immediate with Carry SBI
9F50:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
9F52:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F54:	4F-FA       	.data 0xfa4f          ; Binary data
9F56:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
9F58:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
9F5A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F5C:	4B-FA       	.data 0xfa4b          ; Binary data
9F5E:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
9F60:	28-5F       	subi r18, 0xf8        ; Subtract Immediate
9F62:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F64:	47-FA       	bst r4, 7             ; Bit Store from Bit in Register to T Flag in SREG
9F66:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
9F68:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F6A:	98-FA       	.data 0xfa98          ; Binary data
9F6C:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
9F6E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F70:	49-FB       	.data 0xfb49          ; Binary data
9F72:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F74:	59-FC       	.data 0xfc59          ; Binary data
9F76:	28-53       	subi r18, 0x38        ; Subtract Immediate
9F78:	2F-19       	sub r18, r15          ; Subtract Without Carry
9F7A:	78-88       	std Y+16, r7          ; Store Indirect From Register to Data Space
9F7C:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F7E:	3A-FA       	.data 0xfa3a          ; Binary data
9F80:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
9F82:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
9F84:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F86:	8A-FA       	.data 0xfa8a          ; Binary data
9F88:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
9F8A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F8C:	3B-FB       	.data 0xfb3b          ; Binary data
9F8E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9F90:	71-FC       	sbrc r7, 1            ; Skip if Bit in Register is Cleared
9F92:	78-80       	ld r7, Y              ; Load Indirect from Data Space to Register
9F94:	01-36       	cpi r16, 0x61         ; Compare with Immediate
9F96:	0C-34       	cpi r16, 0x4c         ; Compare with Immediate
9F98:	56-45       	sbci r21, 0x56        ; Subtract Immediate with Carry SBI
9F9A:	D9-DB       	rcall .+6066          ; Relative Call to Subroutine
9F9C:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
9F9E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9FA0:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
9FA2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
9FA4:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
9FA6:	FF-1F       	adc r31, r31          ; Add with Carry
9FA8:	A0-F9       	bld r26, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
9FAA:	FF-1F       	adc r31, r31          ; Add with Carry
9FAC:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
9FAE:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
9FB0:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
9FB2:	10-4E       	sbci r17, 0xe0        ; Subtract Immediate with Carry SBI
9FB4:	35-68       	ori r19, 0x85         ; Logical OR with Immediate
9FB6:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
9FB8:	05-EB       	ldi r16, 0xb5         ; Load Immediate
9FBA:	45-07       	cpc r20, r21          ; Compare with Carry
9FBC:	BF-00       	.data 0x00bf          ; Binary data
9FBE:	DC-19       	sub r29, r12          ; Subtract Without Carry
9FC0:	D8-53       	subi r29, 0x38        ; Subtract Immediate
9FC2:	61-80       	ldd r6, Y+1           ; Load Indirect from Data Space to Register
9FC4:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
9FC6:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
9FC8:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9FCA:	68-FA       	.data 0xfa68          ; Binary data
9FCC:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9FCE:	2C-FC       	.data 0xfc2c          ; Binary data
9FD0:	A0-80       	ld r10, Z             ; Load Indirect from Data Space to Register
9FD2:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
9FD4:	09-49       	sbci r16, 0x99        ; Subtract Immediate with Carry SBI
9FD6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9FD8:	61-FA       	bst r6, 1             ; Bit Store from Bit in Register to T Flag in SREG
9FDA:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
9FDC:	4B-FC       	.data 0xfc4b          ; Binary data
9FDE:	E0-80       	ld r14, Z             ; Load Indirect from Data Space to Register
9FE0:	9D-F8       	.data 0xf89d          ; Binary data
9FE2:	18-30       	cpi r17, 0x08         ; Compare with Immediate
9FE4:	23-72       	andi r18, 0x23        ; Logical AND with Immediate
9FE6:	07-9B       	sbis 0x00, 7          ; Skip if Bit in I/O Register is Set
9FE8:	63-81       	ldd r22, Y+3          ; Load Indirect from Data Space to Register
9FEA:	01-35       	cpi r16, 0x51         ; Compare with Immediate
9FEC:	35-60       	ori r19, 0x05         ; Logical OR with Immediate
9FEE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
9FF0:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
9FF2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
9FF4:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
9FF6:	FF-1F       	adc r31, r31          ; Add with Carry
9FF8:	A0-F9       	bld r26, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
9FFA:	FF-1F       	adc r31, r31          ; Add with Carry
9FFC:	00-00       	nop                   ; No Operation
9FFE:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
A000:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
A002:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
A004:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
A006:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
A008:	01-20       	and r0, r1            ; Logical AND
A00A:	E1-B2       	in r14, 0x11          ; Load an I/O Location to Register
A00C:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
A00E:	46-FC       	sbrc r4, 6            ; Skip if Bit in Register is Cleared
A010:	AE-4D       	sbci r26, 0xde        ; Subtract Immediate with Carry SBI
A012:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
A014:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
A016:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A018:	AD-49       	sbci r26, 0x9d        ; Subtract Immediate with Carry SBI
A01A:	13-22       	and r1, r19           ; Logical AND
A01C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
A01E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A020:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
A022:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A024:	EB-FB       	.data 0xfbeb          ; Binary data
A026:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A028:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A02A:	9C-FB       	.data 0xfb9c          ; Binary data
A02C:	00-25       	clr r256              ; Clear Register
A02E:	A9-4B       	sbci r26, 0xb9        ; Subtract Immediate with Carry SBI
A030:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A032:	A9-4B       	sbci r26, 0xb9        ; Subtract Immediate with Carry SBI
A034:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A036:	A9-4B       	sbci r26, 0xb9        ; Subtract Immediate with Carry SBI
A038:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A03A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A03C:	43-FE       	sbrs r4, 3            ; Skip if Bit in Register is Set
A03E:	A8-4B       	sbci r26, 0xb8        ; Subtract Immediate with Carry SBI
A040:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A042:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
A044:	2F-F8       	.data 0xf82f          ; Binary data
A046:	2C-BB       	out 0x1c, r18         ; Store Register to I/O Location
A048:	A6-4B       	sbci r26, 0xb6        ; Subtract Immediate with Carry SBI
A04A:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A04C:	A6-4B       	sbci r26, 0xb6        ; Subtract Immediate with Carry SBI
A04E:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A050:	67-20       	and r6, r7            ; Logical AND
A052:	0A-21       	and r16, r10          ; Logical AND
A054:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
A056:	01-23       	and r16, r17          ; Logical AND
A058:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A05A:	76-FA       	bst r7, 6             ; Bit Store from Bit in Register to T Flag in SREG
A05C:	CF-20       	and r12, r15          ; Logical AND
A05E:	0A-21       	and r16, r10          ; Logical AND
A060:	01-22       	and r0, r17           ; Logical AND
A062:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
A064:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A066:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
A068:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A06A:	AD-70       	andi r26, 0x0d        ; Logical AND with Immediate
A06C:	14-21       	and r17, r4           ; Logical AND
A06E:	02-22       	and r0, r18           ; Logical AND
A070:	01-23       	and r16, r17          ; Logical AND
A072:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A074:	69-FA       	.data 0xfa69          ; Binary data
A076:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A078:	F2-70       	andi r31, 0x02        ; Logical AND with Immediate
A07A:	28-21       	and r18, r8           ; Logical AND
A07C:	06-22       	and r0, r22           ; Logical AND
A07E:	01-23       	and r16, r17          ; Logical AND
A080:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A082:	62-FA       	bst r6, 2             ; Bit Store from Bit in Register to T Flag in SREG
A084:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A086:	AF-20       	and r10, r15          ; Logical AND
A088:	0A-21       	and r16, r10          ; Logical AND
A08A:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
A08C:	01-23       	and r16, r17          ; Logical AND
A08E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A090:	5B-FA       	.data 0xfa5b          ; Binary data
A092:	65-E2       	ldi r22, 0x25         ; Load Immediate
A094:	01-2C       	mov r0, r1            ; Copy Register
A096:	4D-D1       	rcall .+666           ; Relative Call to Subroutine
A098:	45-20       	and r4, r5            ; Logical AND
A09A:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
A09C:	93-4A       	sbci r25, 0xa3        ; Subtract Immediate with Carry SBI
A09E:	01-23       	and r16, r17          ; Logical AND
A0A0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0A2:	F2-FF       	sbrs r31, 2           ; Skip if Bit in Register is Set
A0A4:	8A-20       	and r8, r10           ; Logical AND
A0A6:	22-21       	and r18, r2           ; Logical AND
A0A8:	91-4A       	sbci r25, 0xa1        ; Subtract Immediate with Carry SBI
A0AA:	01-23       	and r16, r17          ; Logical AND
A0AC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0AE:	EC-FF       	.data 0xffec          ; Binary data
A0B0:	AD-20       	and r10, r13          ; Logical AND
A0B2:	22-21       	and r18, r2           ; Logical AND
A0B4:	8F-4A       	sbci r24, 0xaf        ; Subtract Immediate with Carry SBI
A0B6:	01-23       	and r16, r17          ; Logical AND
A0B8:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0BA:	E6-FF       	sbrs r30, 6           ; Skip if Bit in Register is Set
A0BC:	CF-20       	and r12, r15          ; Logical AND
A0BE:	22-21       	and r18, r2           ; Logical AND
A0C0:	8D-4A       	sbci r24, 0xad        ; Subtract Immediate with Carry SBI
A0C2:	01-23       	and r16, r17          ; Logical AND
A0C4:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0C6:	E0-FF       	sbrs r30, 0           ; Skip if Bit in Register is Set
A0C8:	F2-20       	and r15, r2           ; Logical AND
A0CA:	22-21       	and r18, r2           ; Logical AND
A0CC:	8B-4A       	sbci r24, 0xab        ; Subtract Immediate with Carry SBI
A0CE:	01-23       	and r16, r17          ; Logical AND
A0D0:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0D2:	DA-FF       	.data 0xffda          ; Binary data
A0D4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A0D6:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
A0D8:	45-21       	and r20, r5           ; Logical AND
A0DA:	89-4A       	sbci r24, 0xa9        ; Subtract Immediate with Carry SBI
A0DC:	01-23       	and r16, r17          ; Logical AND
A0DE:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0E0:	D3-FF       	sbrs r29, 3           ; Skip if Bit in Register is Set
A0E2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A0E4:	9F-10       	cpse r9, r15          ; Compare Skip if Equal
A0E6:	8A-21       	and r24, r10          ; Logical AND
A0E8:	86-4A       	sbci r24, 0xa6        ; Subtract Immediate with Carry SBI
A0EA:	01-23       	and r16, r17          ; Logical AND
A0EC:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A0EE:	CC-FF       	.data 0xffcc          ; Binary data
A0F0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A0F2:	29-20       	and r2, r9            ; Logical AND
A0F4:	00-21       	and r16, r0           ; Logical AND
A0F6:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A0F8:	01-23       	and r16, r17          ; Logical AND
A0FA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A0FC:	25-FA       	bst r2, 5             ; Bit Store from Bit in Register to T Flag in SREG
A0FE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A100:	2A-20       	and r2, r10           ; Logical AND
A102:	00-21       	and r16, r0           ; Logical AND
A104:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A106:	01-23       	and r16, r17          ; Logical AND
A108:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A10A:	1E-FA       	.data 0xfa1e          ; Binary data
A10C:	8A-20       	and r8, r10           ; Logical AND
A10E:	00-21       	and r16, r0           ; Logical AND
A110:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A112:	01-23       	and r16, r17          ; Logical AND
A114:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A116:	18-FA       	.data 0xfa18          ; Binary data
A118:	CF-20       	and r12, r15          ; Logical AND
A11A:	00-21       	and r16, r0           ; Logical AND
A11C:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A11E:	01-23       	and r16, r17          ; Logical AND
A120:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A122:	12-FA       	bst r1, 2             ; Bit Store from Bit in Register to T Flag in SREG
A124:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A126:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
A128:	00-21       	and r16, r0           ; Logical AND
A12A:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A12C:	01-23       	and r16, r17          ; Logical AND
A12E:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A130:	0B-FA       	.data 0xfa0b          ; Binary data
A132:	15-E2       	ldi r17, 0x25         ; Load Immediate
A134:	02-2C       	mov r0, r2            ; Copy Register
A136:	5D-D1       	rcall .+698           ; Relative Call to Subroutine
A138:	00-24       	clr r0                ; Clear Register
A13A:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
A13C:	22-05       	cpc r18, r2           ; Compare with Carry
A13E:	01-27       	clr r769              ; Clear Register
A140:	71-4E       	sbci r23, 0xe1        ; Subtract Immediate with Carry SBI
A142:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
A144:	5F-70       	andi r21, 0x0f        ; Logical AND with Immediate
A146:	00-2C       	mov r0, r0            ; Copy Register
A148:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
A14A:	FB-81       	ldd r31, Y+3          ; Load Indirect from Data Space to Register
A14C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
A14E:	63-2C       	mov r6, r3            ; Copy Register
A150:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
A152:	00-22       	and r0, r16           ; Logical AND
A154:	01-22       	and r0, r17           ; Logical AND
A156:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A158:	2F-FA       	.data 0xfa2f          ; Binary data
A15A:	86-FB       	bst r24, 6            ; Bit Store from Bit in Register to T Flag in SREG
A15C:	04-23       	and r16, r20          ; Logical AND
A15E:	E2-17       	cp r30, r18           ; Compare
A160:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
A162:	E3-03       	fmuls r22, r19        ; Fractional Multiply Signed
A164:	03-EB       	ldi r16, 0xb3         ; Load Immediate
A166:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
A168:	03-EB       	ldi r16, 0xb3         ; Load Immediate
A16A:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
A16C:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
A16E:	00-D1       	rcall .+512           ; Relative Call to Subroutine
A170:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A172:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A174:	63-2C       	mov r6, r3            ; Copy Register
A176:	E4-DD       	rcall .+7112          ; Relative Call to Subroutine
A178:	01-25       	clr r257              ; Clear Register
A17A:	00-24       	clr r0                ; Clear Register
A17C:	DF-F8       	.data 0xf8df          ; Binary data
A17E:	A0-81       	ld r26, Z             ; Load Indirect from Data Space to Register
A180:	62-4F       	sbci r22, 0xf2        ; Subtract Immediate with Carry SBI
A182:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
A184:	0E-06       	cpc r0, r30           ; Compare with Carry
A186:	01-E0       	ldi r16, 0x01         ; Load Immediate
A188:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A18A:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A18C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A18E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A190:	31-F9       	bld r19, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
A192:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A194:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A196:	7A-F8       	.data 0xf87a          ; Binary data
A198:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A19A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A19C:	77-F8       	bld r7, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
A19E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A1A0:	43-FB       	bst r20, 3            ; Bit Store from Bit in Register to T Flag in SREG
A1A2:	00-2C       	mov r0, r0            ; Copy Register
A1A4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
A1A6:	D2-81       	ldd r29, Y+2          ; Load Indirect from Data Space to Register
A1A8:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A1AA:	18-2C       	mov r1, r8            ; Copy Register
A1AC:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
A1AE:	00-22       	and r0, r16           ; Logical AND
A1B0:	01-22       	and r0, r17           ; Logical AND
A1B2:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A1B4:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
A1B6:	18-2D       	mov r17, r8           ; Copy Register
A1B8:	E6-DD       	rcall .+7116          ; Relative Call to Subroutine
A1BA:	01-25       	clr r257              ; Clear Register
A1BC:	00-24       	clr r0                ; Clear Register
A1BE:	54-4F       	sbci r21, 0xf4        ; Subtract Immediate with Carry SBI
A1C0:	05-26       	clr r517              ; Clear Register
A1C2:	A8-46       	sbci r26, 0x68        ; Subtract Immediate with Carry SBI
A1C4:	01-E0       	ldi r16, 0x01         ; Load Immediate
A1C6:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A1C8:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A1CA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A1CC:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A1CE:	12-F9       	bld r17, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
A1D0:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A1D2:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A1D4:	5B-F8       	.data 0xf85b          ; Binary data
A1D6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A1D8:	27-FB       	bst r18, 7            ; Bit Store from Bit in Register to T Flag in SREG
A1DA:	00-2C       	mov r0, r0            ; Copy Register
A1DC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
A1DE:	BB-81       	ldd r27, Y+3          ; Load Indirect from Data Space to Register
A1E0:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A1E2:	0E-2C       	mov r0, r14           ; Copy Register
A1E4:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
A1E6:	00-22       	and r0, r16           ; Logical AND
A1E8:	01-22       	and r0, r17           ; Logical AND
A1EA:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A1EC:	E5-F9       	bld r30, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
A1EE:	0E-2D       	mov r16, r14          ; Copy Register
A1F0:	E9-DD       	rcall .+7122          ; Relative Call to Subroutine
A1F2:	B5-E1       	ldi r27, 0x15         ; Load Immediate
A1F4:	03-2C       	mov r0, r3            ; Copy Register
A1F6:	2A-D1       	rcall .+596           ; Relative Call to Subroutine
A1F8:	8A-20       	and r8, r10           ; Logical AND
A1FA:	45-21       	and r20, r5           ; Logical AND
A1FC:	45-4A       	sbci r20, 0xa5        ; Subtract Immediate with Carry SBI
A1FE:	01-23       	and r16, r17          ; Logical AND
A200:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A202:	42-FF       	sbrs r20, 2           ; Skip if Bit in Register is Set
A204:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A206:	F2-70       	andi r31, 0x02        ; Logical AND with Immediate
A208:	45-21       	and r20, r5           ; Logical AND
A20A:	43-4A       	sbci r20, 0xa3        ; Subtract Immediate with Carry SBI
A20C:	01-23       	and r16, r17          ; Logical AND
A20E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A210:	3B-FF       	.data 0xff3b          ; Binary data
A212:	00-24       	clr r0                ; Clear Register
A214:	00-94       	com r0                ; One's Complement
A216:	01-94       	neg r0                ; Two's Complement
A218:	CF-20       	and r12, r15          ; Logical AND
A21A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A21C:	8A-71       	andi r24, 0x1a        ; Logical AND with Immediate
A21E:	00-22       	and r0, r16           ; Logical AND
A220:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
A222:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A224:	C3-FE       	sbrs r12, 3           ; Skip if Bit in Register is Set
A226:	3E-4F       	sbci r19, 0xfe        ; Subtract Immediate with Carry SBI
A228:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
A22A:	01-25       	clr r257              ; Clear Register
A22C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A22E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A230:	E1-F8       	bld r14, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
A232:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A234:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A236:	2A-F8       	.data 0xf82a          ; Binary data
A238:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A23A:	F6-FA       	bst r15, 6            ; Bit Store from Bit in Register to T Flag in SREG
A23C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A23E:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
A240:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
A242:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A244:	81-F9       	bld r24, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
A246:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A248:	0F-2C       	mov r0, r15           ; Copy Register
A24A:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
A24C:	88-E1       	ldi r24, 0x18         ; Load Immediate
A24E:	04-2C       	mov r0, r4            ; Copy Register
A250:	72-D1       	rcall .+740           ; Relative Call to Subroutine
A252:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A254:	AD-70       	andi r26, 0x0d        ; Logical AND with Immediate
A256:	0A-21       	and r16, r10          ; Logical AND
A258:	00-22       	and r0, r16           ; Logical AND
A25A:	01-23       	and r16, r17          ; Logical AND
A25C:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A25E:	74-F9       	bld r23, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
A260:	78-25       	clr r376              ; Clear Register
A262:	00-24       	clr r0                ; Clear Register
A264:	DF-F8       	.data 0xf8df          ; Binary data
A266:	C0-B0       	in r12, 0x00          ; Load an I/O Location to Register
A268:	2E-4F       	sbci r18, 0xfe        ; Subtract Immediate with Carry SBI
A26A:	01-26       	clr r513              ; Clear Register
A26C:	DF-F8       	.data 0xf8df          ; Binary data
A26E:	BC-A0       	ldd r11, Y+36         ; Load Indirect from Data Space to Register
A270:	DF-F8       	.data 0xf8df          ; Binary data
A272:	BC-90       	ld r11, X             ; Load Indirect from Data Space to Register
A274:	DF-F8       	.data 0xf8df          ; Binary data
A276:	BC-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
A278:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A27A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A27C:	BB-F8       	.data 0xf8bb          ; Binary data
A27E:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
A280:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A282:	0C-F9       	.data 0xf90c          ; Binary data
A284:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A286:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A288:	FF-FF       	.data 0xffff          ; Binary data
A28A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A28C:	CD-FA       	.data 0xfacd          ; Binary data
A28E:	29-B2       	in r2, 0x19           ; Load an I/O Location to Register
A290:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
A292:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A294:	91-F9       	bld r25, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
A296:	60-42       	sbci r22, 0x20        ; Subtract Immediate with Carry SBI
A298:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A29A:	AC-F8       	.data 0xf8ac          ; Binary data
A29C:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
A29E:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A2A0:	FD-F8       	.data 0xf8fd          ; Binary data
A2A2:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A2A4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A2A6:	F2-FF       	sbrs r31, 2           ; Skip if Bit in Register is Set
A2A8:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
A2AA:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A2AC:	EF-FF       	.data 0xffef          ; Binary data
A2AE:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A2B0:	BB-FA       	.data 0xfabb          ; Binary data
A2B2:	69-42       	sbci r22, 0x29        ; Subtract Immediate with Carry SBI
A2B4:	09-B2       	in r0, 0x19           ; Load an I/O Location to Register
A2B6:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
A2B8:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A2BA:	7E-F9       	.data 0xf97e          ; Binary data
A2BC:	A4-F5       	brbc 4, .+104         ; Branch if Bit in SREG is Cleared
A2BE:	2D-74       	andi r18, 0x4d        ; Logical AND with Immediate
A2C0:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A2C2:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
A2C4:	44-45       	sbci r20, 0x54        ; Subtract Immediate with Carry SBI
A2C6:	D7-D1       	rcall .+942           ; Relative Call to Subroutine
A2C8:	4A-E1       	ldi r20, 0x1a         ; Load Immediate
A2CA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
A2CC:	C0-01       	movw r24, r0          ; Copy Register Word
A2CE:	00-20       	and r0, r0            ; Logical AND
A2D0:	34-7C       	andi r19, 0xc4        ; Logical AND with Immediate
A2D2:	01-00       	.data 0x0001          ; Binary data
A2D4:	78-92       	.data 0x9278          ; Binary data
A2D6:	FF-1F       	adc r31, r31          ; Add with Carry
A2D8:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
A2DA:	FF-1F       	adc r31, r31          ; Add with Carry
A2DC:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
A2DE:	FF-1F       	adc r31, r31          ; Add with Carry
A2E0:	C4-92       	xch Z, r12            ; Exchange
A2E2:	FF-1F       	adc r31, r31          ; Add with Carry
A2E4:	94-9D       	mul r25, r4           ; Multiply Unsigned
A2E6:	FF-1F       	adc r31, r31          ; Add with Carry
A2E8:	4C-9D       	mul r20, r12          ; Multiply Unsigned
A2EA:	FF-1F       	adc r31, r31          ; Add with Carry
A2EC:	00-00       	nop                   ; No Operation
A2EE:	F0-C1       	rjmp .+992            ; Relative Jump
A2F0:	00-00       	nop                   ; No Operation
A2F2:	20-C2       	rjmp .+1088           ; Relative Jump
A2F4:	00-00       	nop                   ; No Operation
A2F6:	48-C2       	rjmp .+1168           ; Relative Jump
A2F8:	00-00       	nop                   ; No Operation
A2FA:	70-C2       	rjmp .+1248           ; Relative Jump
A2FC:	00-00       	nop                   ; No Operation
A2FE:	8C-C2       	rjmp .+1304           ; Relative Jump
A300:	00-00       	nop                   ; No Operation
A302:	96-C2       	rjmp .+1324           ; Relative Jump
A304:	00-00       	nop                   ; No Operation
A306:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
A308:	1F-85       	std Y+15, r17         ; Store Indirect From Register to Data Space
A30A:	EB-51       	subi r30, 0x1b        ; Subtract Immediate
A30C:	00-00       	nop                   ; No Operation
A30E:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
A310:	9A-99       	sbic 0x13, 2          ; Skip if Bit in I/O Register is Cleared
A312:	CF-42       	sbci r28, 0x2f        ; Subtract Immediate with Carry SBI
A314:	00-00       	nop                   ; No Operation
A316:	C8-41       	sbci r28, 0x18        ; Subtract Immediate with Carry SBI
A318:	00-00       	nop                   ; No Operation
A31A:	C8-C1       	rjmp .+912            ; Relative Jump
A31C:	52-45       	sbci r21, 0x52        ; Subtract Immediate with Carry SBI
A31E:	08-40       	sbci r16, 0x08        ; Subtract Immediate with Carry SBI
A320:	00-00       	nop                   ; No Operation
A322:	AD-43       	sbci r26, 0x3d        ; Subtract Immediate with Carry SBI
A324:	00-00       	nop                   ; No Operation
A326:	5C-43       	sbci r21, 0x3c        ; Subtract Immediate with Carry SBI
A328:	CD-CC       	rjmp .-1638           ; Relative Jump
A32A:	4C-3E       	cpi r20, 0xec         ; Compare with Immediate
A32C:	CD-CC       	rjmp .-1638           ; Relative Jump
A32E:	CC-3E       	cpi r28, 0xec         ; Compare with Immediate
A330:	00-00       	nop                   ; No Operation
A332:	2D-44       	sbci r18, 0x4d        ; Subtract Immediate with Carry SBI
A334:	D0-5D       	subi r29, 0xd0        ; Subtract Immediate
A336:	FF-FF       	.data 0xffff          ; Binary data
A338:	05-2C       	mov r0, r5            ; Copy Register
A33A:	4D-D1       	rcall .+666           ; Relative Call to Subroutine
A33C:	14-25       	clr r276              ; Clear Register
A33E:	00-24       	clr r0                ; Clear Register
A340:	DF-F8       	.data 0xf8df          ; Binary data
A342:	44-A2       	std Y+36, r4          ; Store Indirect From Register to Data Space
A344:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
A346:	7C-59       	subi r23, 0x9c        ; Subtract Immediate
A348:	DF-F8       	.data 0xf8df          ; Binary data
A34A:	40-82       	st Z, r4              ; Store Indirect From Register to Data Space
A34C:	DA-F8       	.data 0xf8da          ; Binary data
A34E:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
A350:	2F-B2       	in r2, 0x1f           ; Load an I/O Location to Register
A352:	85-4B       	sbci r24, 0xb5        ; Subtract Immediate with Carry SBI
A354:	14-EA       	ldi r17, 0xa4         ; Load Immediate
A356:	03-00       	.data 0x0003          ; Binary data
A358:	03-D5       	rcall .+2566          ; Relative Call to Subroutine
A35A:	01-38       	cpi r16, 0x81         ; Compare with Immediate
A35C:	60-F0       	brbs 0, .+24          ; Branch if Bit in SREG is Set
A35E:	03-00       	.data 0x0003          ; Binary data
A360:	01-30       	cpi r16, 0x01         ; Compare with Immediate
A362:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
A364:	02-00       	.data 0x0002          ; Binary data
A366:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A368:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
A36A:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
A36C:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A36E:	96-F8       	bld r9, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
A370:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A372:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A374:	47-F9       	bld r20, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
A376:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
A378:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
A37A:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A37C:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A37E:	42-F9       	bld r20, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
A380:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
A382:	00-22       	and r0, r16           ; Logical AND
A384:	00-92-01-92 	sts 0x9201, r0        ; Store Direct to Data Space
A388:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
A38A:	0A-21       	and r16, r10          ; Logical AND
A38C:	5A-46       	sbci r21, 0x6a        ; Subtract Immediate with Carry SBI
A38E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A390:	0D-FE       	.data 0xfe0d          ; Binary data
A392:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A394:	0A-35       	cpi r16, 0x5a         ; Compare with Immediate
A396:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
A398:	0A-2C       	mov r0, r10           ; Copy Register
A39A:	D7-D1       	rcall .+942           ; Relative Call to Subroutine
A39C:	01-20       	and r0, r1            ; Logical AND
A39E:	73-4B       	sbci r23, 0xb3        ; Subtract Immediate with Carry SBI
A3A0:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
A3A2:	73-4A       	sbci r23, 0xa3        ; Subtract Immediate with Carry SBI
A3A4:	00-21       	and r16, r0           ; Logical AND
A3A6:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
A3A8:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
A3AA:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
A3AC:	04-1B       	sub r16, r20          ; Subtract Without Carry
A3AE:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
A3B0:	04-1B       	sub r16, r20          ; Subtract Without Carry
A3B2:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
A3B4:	04-1B       	sub r16, r20          ; Subtract Without Carry
A3B6:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
A3B8:	04-1B       	sub r16, r20          ; Subtract Without Carry
A3BA:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
A3BC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A3BE:	FB-13       	cpse r31, r27         ; Compare Skip if Equal
A3C0:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
A3C2:	53-60       	ori r21, 0x03         ; Logical OR with Immediate
A3C4:	10-72       	andi r17, 0x20        ; Logical AND with Immediate
A3C6:	0A-23       	and r16, r26          ; Logical AND
A3C8:	53-81       	ldd r21, Y+3          ; Load Indirect from Data Space to Register
A3CA:	10-75       	andi r17, 0x50        ; Logical AND with Immediate
A3CC:	90-20       	and r9, r0            ; Logical AND
A3CE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A3D0:	2D-71       	andi r18, 0x1d        ; Logical AND with Immediate
A3D2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A3D4:	AF-FD       	.data 0xfdaf          ; Binary data
A3D6:	C3-E0       	ldi r28, 0x03         ; Load Immediate
A3D8:	06-2C       	mov r0, r6            ; Copy Register
A3DA:	0C-D1       	rcall .+536           ; Relative Call to Subroutine
A3DC:	01-23       	and r16, r17          ; Logical AND
A3DE:	00-93-00-23 	sts 0x2300, r16       ; Store Direct to Data Space
A3E2:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
A3E4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A3E6:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
A3E8:	C8-21       	and r28, r8           ; Logical AND
A3EA:	00-22       	and r0, r16           ; Logical AND
A3EC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
A3EE:	7E-53       	subi r23, 0x3e        ; Subtract Immediate
A3F0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A3F2:	DC-FD       	.data 0xfddc          ; Binary data
A3F4:	B4-E0       	ldi r27, 0x04         ; Load Immediate
A3F6:	07-2C       	mov r0, r7            ; Copy Register
A3F8:	73-D1       	rcall .+742           ; Relative Call to Subroutine
A3FA:	00-22       	and r0, r16           ; Logical AND
A3FC:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
A3FE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
A400:	14-24       	clr r20               ; Clear Register
A402:	5C-4E       	sbci r21, 0xec        ; Subtract Immediate with Carry SBI
A404:	DF-F8       	.data 0xf8df          ; Binary data
A406:	88-B1       	in r24, 0x08          ; Load an I/O Location to Register
A408:	DF-F8       	.data 0xf8df          ; Binary data
A40A:	7C-A1       	ldd r23, Y+36         ; Load Indirect from Data Space to Register
A40C:	0A-20       	and r0, r10           ; Logical AND
A40E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A410:	55-FB       	bst r21, 5            ; Bit Store from Bit in Register to T Flag in SREG
A412:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
A414:	0A-20       	and r0, r10           ; Logical AND
A416:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A418:	51-FB       	bst r21, 1            ; Bit Store from Bit in Register to T Flag in SREG
A41A:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
A41C:	0A-20       	and r0, r10           ; Logical AND
A41E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A420:	4D-FB       	.data 0xfb4d          ; Binary data
A422:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
A424:	0F-FA       	.data 0xfa0f          ; Binary data
A426:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
A428:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
A42A:	0A-08       	sbc r0, r10           ; Subtract with Carry
A42C:	1F-FA       	.data 0xfa1f          ; Binary data
A42E:	88-F8       	.data 0xf888          ; Binary data
A430:	78-42       	sbci r23, 0x28        ; Subtract Immediate with Carry SBI
A432:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A434:	DB-FF       	.data 0xffdb          ; Binary data
A436:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A438:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A43A:	E4-F8       	bld r14, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
A43C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
A43E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A440:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A442:	D4-FF       	sbrs r29, 4           ; Skip if Bit in Register is Set
A444:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A446:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A448:	DD-F8       	.data 0xf8dd          ; Binary data
A44A:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
A44C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A44E:	1E-FF       	.data 0xff1e          ; Binary data
A450:	DA-F8       	.data 0xf8da          ; Binary data
A452:	00-10       	cpse r0, r0           ; Compare Skip if Equal
A454:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A456:	D6-F8       	bld r13, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
A458:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
A45A:	00-25       	clr r256              ; Clear Register
A45C:	00-95       	com r16               ; One's Complement
A45E:	01-95       	neg r16               ; Two's Complement
A460:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
A462:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A464:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
A466:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A468:	A1-FD       	sbrc r26, 1           ; Skip if Bit in Register is Cleared
A46A:	1E-34       	cpi r17, 0x4e         ; Compare with Immediate
A46C:	A4-B2       	in r10, 0x14          ; Load an I/O Location to Register
A46E:	8C-2C       	mov r8, r12           ; Copy Register
A470:	CC-D1       	rcall .+920           ; Relative Call to Subroutine
A472:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
A474:	DF-F8       	.data 0xf8df          ; Binary data
A476:	1C-A1       	ldd r17, Y+36         ; Load Indirect from Data Space to Register
A478:	DF-F8       	.data 0xf8df          ; Binary data
A47A:	1C-91       	ld r17, X             ; Load Indirect from Data Space to Register
A47C:	DF-F8       	.data 0xf8df          ; Binary data
A47E:	F4-80       	ldd r15, Y+4          ; Load Indirect from Data Space to Register
A480:	14-20       	and r1, r4            ; Logical AND
A482:	28-21       	and r18, r8           ; Logical AND
A484:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A486:	26-FB       	bst r18, 6            ; Bit Store from Bit in Register to T Flag in SREG
A488:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
A48A:	05-20       	and r0, r5            ; Logical AND
A48C:	0F-21       	and r16, r15          ; Logical AND
A48E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A490:	21-FB       	bst r18, 1            ; Bit Store from Bit in Register to T Flag in SREG
A492:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
A494:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A496:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A498:	AD-FF       	.data 0xffad          ; Binary data
A49A:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
A49C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A49E:	FE-FF       	.data 0xfffe          ; Binary data
A4A0:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
A4A2:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A4A4:	F3-FE       	sbrs r15, 3           ; Skip if Bit in Register is Set
A4A6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A4A8:	BF-F9       	.data 0xf9bf          ; Binary data
A4AA:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
A4AC:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
A4AE:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
A4B0:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A4B2:	A0-FF       	sbrs r26, 0           ; Skip if Bit in Register is Set
A4B4:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A4B6:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A4B8:	A5-F8       	bld r10, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
A4BA:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A4BC:	B5-F9       	bld r27, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
A4BE:	02-B2       	in r0, 0x12           ; Load an I/O Location to Register
A4C0:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
A4C2:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
A4C4:	00-23       	and r16, r16          ; Logical AND
A4C6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A4C8:	3F-F8       	.data 0xf83f          ; Binary data
A4CA:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
A4CC:	2D-74       	andi r18, 0x4d        ; Logical AND with Immediate
A4CE:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
A4D0:	70-03       	mulsu r23, r16        ; Multiply Signed with Unsigned
A4D2:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
A4D4:	D4-D1       	rcall .+936           ; Relative Call to Subroutine
A4D6:	90-20       	and r9, r0            ; Logical AND
A4D8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A4DA:	2D-71       	andi r18, 0x1d        ; Logical AND with Immediate
A4DC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A4DE:	2A-FD       	.data 0xfd2a          ; Binary data
A4E0:	3E-E0       	ldi r19, 0x0e         ; Load Immediate
A4E2:	08-2C       	mov r0, r8            ; Copy Register
A4E4:	3C-D1       	rcall .+632           ; Relative Call to Subroutine
A4E6:	50-24       	clr r80               ; Clear Register
A4E8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A4EA:	46-77       	andi r20, 0x76        ; Logical AND with Immediate
A4EC:	00-26       	clr r512              ; Clear Register
A4EE:	01-25       	clr r257              ; Clear Register
A4F0:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
A4F2:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A4F4:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
A4F6:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A4F8:	5F-F8       	.data 0xf85f          ; Binary data
A4FA:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
A4FC:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
A4FE:	00-21       	and r16, r0           ; Logical AND
A500:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
A502:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
A504:	02-22       	and r0, r18           ; Logical AND
A506:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
A508:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
A50A:	01-20       	and r0, r1            ; Logical AND
A50C:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
A50E:	18-80       	ld r1, Y              ; Load Indirect from Data Space to Register
A510:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
A512:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A514:	AD-74       	andi r26, 0x4d        ; Logical AND with Immediate
A516:	1C-80       	ldd r1, Y+4           ; Load Indirect from Data Space to Register
A518:	5C-80       	ldd r5, Y+4           ; Load Indirect from Data Space to Register
A51A:	18-71       	andi r17, 0x18        ; Logical AND with Immediate
A51C:	DA-80       	ldd r13, Y+2          ; Load Indirect from Data Space to Register
A51E:	19-81       	ldd r17, Y+1          ; Load Indirect from Data Space to Register
A520:	03-22       	and r0, r19           ; Logical AND
A522:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
A524:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
A526:	19-75       	andi r17, 0x59        ; Logical AND with Immediate
A528:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A52A:	29-24       	clr r41               ; Clear Register
A52C:	1C-83       	std Y+4, r17          ; Store Indirect From Register to Data Space
A52E:	5C-83       	std Y+4, r21          ; Store Indirect From Register to Data Space
A530:	18-77       	andi r17, 0x78        ; Logical AND with Immediate
A532:	14-20       	and r1, r4            ; Logical AND
A534:	D8-83       	st Y, r29             ; Store Indirect From Register to Data Space
A536:	1A-84       	std Y+10, r1          ; Store Indirect From Register to Data Space
A538:	5A-62       	ori r21, 0x2a         ; Logical OR with Immediate
A53A:	9A-62       	ori r25, 0x2a         ; Logical OR with Immediate
A53C:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
A53E:	2C-10       	cpse r2, r12          ; Compare Skip if Equal
A540:	0E-E0       	ldi r16, 0x0e         ; Load Immediate
A542:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
A544:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
A546:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A548:	37-F8       	bld r3, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
A54A:	11-E6       	ldi r17, 0x61         ; Load Immediate
A54C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A54E:	01-22       	and r0, r17           ; Logical AND
A550:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A552:	32-F8       	bld r3, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
A554:	18-E6       	ldi r17, 0x68         ; Load Immediate
A556:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A558:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
A55A:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
A55C:	2D-F8       	.data 0xf82d          ; Binary data
A55E:	32-E6       	ldi r19, 0x62         ; Load Immediate
A560:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
A562:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
A564:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
A566:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
A568:	03-00       	.data 0x0003          ; Binary data
A56A:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
A56C:	78-92       	.data 0x9278          ; Binary data
A56E:	FF-1F       	adc r31, r31          ; Add with Carry
A570:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
A572:	FF-1F       	adc r31, r31          ; Add with Carry
A574:	00-00       	nop                   ; No Operation
A576:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
A578:	58-FA       	.data 0xfa58          ; Binary data
A57A:	FF-1F       	adc r31, r31          ; Add with Carry
A57C:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
A57E:	FF-1F       	adc r31, r31          ; Add with Carry
A580:	2A-9E       	mul r2, r26           ; Multiply Unsigned
A582:	FF-1F       	adc r31, r31          ; Add with Carry
A584:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
A586:	FF-1F       	adc r31, r31          ; Add with Carry
A588:	68-92       	.data 0x9268          ; Binary data
A58A:	FF-1F       	adc r31, r31          ; Add with Carry
A58C:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
A58E:	66-3F       	cpi r22, 0xf6         ; Compare with Immediate
A590:	CD-CC       	rjmp .-1638           ; Relative Jump
A592:	4C-3F       	cpi r20, 0xfc         ; Compare with Immediate
A594:	CD-CC       	rjmp .-1638           ; Relative Jump
A596:	4C-3D       	cpi r20, 0xdc         ; Compare with Immediate
A598:	9A-99       	sbic 0x13, 2          ; Skip if Bit in I/O Register is Cleared
A59A:	4F-43       	sbci r20, 0x3f        ; Subtract Immediate with Carry SBI
A59C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
A59E:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
A5A0:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
A5A2:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
A5A4:	BD-4B       	sbci r27, 0xbd        ; Subtract Immediate with Carry SBI
A5A6:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
A5A8:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
A5AA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A5AC:	29-FD       	.data 0xfd29          ; Binary data
A5AE:	6E-E2       	ldi r22, 0x2e         ; Load Immediate
A5B0:	01-20       	and r0, r1            ; Logical AND
A5B2:	E1-B2       	in r14, 0x11          ; Load an I/O Location to Register
A5B4:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
A5B6:	72-F9       	bld r23, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
A5B8:	B9-4D       	sbci r27, 0xd9        ; Subtract Immediate with Carry SBI
A5BA:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
A5BC:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
A5BE:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A5C0:	B8-49       	sbci r27, 0x98        ; Subtract Immediate with Carry SBI
A5C2:	0E-22       	and r0, r30           ; Logical AND
A5C4:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
A5C6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A5C8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
A5CA:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A5CC:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
A5CE:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A5D0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A5D2:	C8-F8       	.data 0xf8c8          ; Binary data
A5D4:	00-25       	clr r256              ; Clear Register
A5D6:	B4-4B       	sbci r27, 0xb4        ; Subtract Immediate with Carry SBI
A5D8:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A5DA:	B4-4B       	sbci r27, 0xb4        ; Subtract Immediate with Carry SBI
A5DC:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A5DE:	B4-4B       	sbci r27, 0xb4        ; Subtract Immediate with Carry SBI
A5E0:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A5E2:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A5E4:	6F-FB       	.data 0xfb6f          ; Binary data
A5E6:	B3-4B       	sbci r27, 0xb3        ; Subtract Immediate with Carry SBI
A5E8:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A5EA:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A5EC:	5B-FD       	.data 0xfd5b          ; Binary data
A5EE:	F4-B9       	out 0x04, r31         ; Store Register to I/O Location
A5F0:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
A5F2:	B1-4B       	sbci r27, 0xb1        ; Subtract Immediate with Carry SBI
A5F4:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A5F6:	B1-4B       	sbci r27, 0xb1        ; Subtract Immediate with Carry SBI
A5F8:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
A5FA:	67-20       	and r6, r7            ; Logical AND
A5FC:	0A-21       	and r16, r10          ; Logical AND
A5FE:	01-23       	and r16, r17          ; Logical AND
A600:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A602:	A2-FF       	sbrs r26, 2           ; Skip if Bit in Register is Set
A604:	CF-20       	and r12, r15          ; Logical AND
A606:	0A-21       	and r16, r10          ; Logical AND
A608:	14-22       	and r1, r20           ; Logical AND
A60A:	01-23       	and r16, r17          ; Logical AND
A60C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A60E:	9C-FF       	.data 0xff9c          ; Binary data
A610:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A612:	AD-70       	andi r26, 0x0d        ; Logical AND with Immediate
A614:	14-21       	and r17, r4           ; Logical AND
A616:	28-22       	and r2, r24           ; Logical AND
A618:	01-23       	and r16, r17          ; Logical AND
A61A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A61C:	95-FF       	sbrs r25, 5           ; Skip if Bit in Register is Set
A61E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A620:	F2-70       	andi r31, 0x02        ; Logical AND with Immediate
A622:	0A-21       	and r16, r10          ; Logical AND
A624:	78-22       	and r7, r24           ; Logical AND
A626:	01-23       	and r16, r17          ; Logical AND
A628:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A62A:	8E-FF       	.data 0xff8e          ; Binary data
A62C:	2F-E2       	ldi r18, 0x2f         ; Load Immediate
A62E:	01-2C       	mov r0, r1            ; Copy Register
A630:	3A-D1       	rcall .+628           ; Relative Call to Subroutine
A632:	45-20       	and r4, r5            ; Logical AND
A634:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
A636:	A2-4A       	sbci r26, 0xa2        ; Subtract Immediate with Carry SBI
A638:	01-23       	and r16, r17          ; Logical AND
A63A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A63C:	25-FD       	sbrc r18, 5           ; Skip if Bit in Register is Cleared
A63E:	8A-20       	and r8, r10           ; Logical AND
A640:	22-21       	and r18, r2           ; Logical AND
A642:	A0-4A       	sbci r26, 0xa0        ; Subtract Immediate with Carry SBI
A644:	01-23       	and r16, r17          ; Logical AND
A646:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A648:	1F-FD       	.data 0xfd1f          ; Binary data
A64A:	AD-20       	and r10, r13          ; Logical AND
A64C:	22-21       	and r18, r2           ; Logical AND
A64E:	9E-4A       	sbci r25, 0xae        ; Subtract Immediate with Carry SBI
A650:	01-23       	and r16, r17          ; Logical AND
A652:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A654:	19-FD       	.data 0xfd19          ; Binary data
A656:	CF-20       	and r12, r15          ; Logical AND
A658:	22-21       	and r18, r2           ; Logical AND
A65A:	9C-4A       	sbci r25, 0xac        ; Subtract Immediate with Carry SBI
A65C:	01-23       	and r16, r17          ; Logical AND
A65E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A660:	13-FD       	sbrc r17, 3           ; Skip if Bit in Register is Cleared
A662:	F2-20       	and r15, r2           ; Logical AND
A664:	22-21       	and r18, r2           ; Logical AND
A666:	9A-4A       	sbci r25, 0xaa        ; Subtract Immediate with Carry SBI
A668:	01-23       	and r16, r17          ; Logical AND
A66A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A66C:	0D-FD       	.data 0xfd0d          ; Binary data
A66E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A670:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
A672:	45-21       	and r20, r5           ; Logical AND
A674:	97-4A       	sbci r25, 0xa7        ; Subtract Immediate with Carry SBI
A676:	01-23       	and r16, r17          ; Logical AND
A678:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A67A:	06-FD       	sbrc r16, 6           ; Skip if Bit in Register is Cleared
A67C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A67E:	9F-10       	cpse r9, r15          ; Compare Skip if Equal
A680:	8A-21       	and r24, r10          ; Logical AND
A682:	95-4A       	sbci r25, 0xa5        ; Subtract Immediate with Carry SBI
A684:	01-23       	and r16, r17          ; Logical AND
A686:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A688:	FF-FC       	.data 0xfcff          ; Binary data
A68A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A68C:	29-20       	and r2, r9            ; Logical AND
A68E:	00-21       	and r16, r0           ; Logical AND
A690:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A692:	01-23       	and r16, r17          ; Logical AND
A694:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A696:	58-FF       	.data 0xff58          ; Binary data
A698:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A69A:	2A-20       	and r2, r10           ; Logical AND
A69C:	00-21       	and r16, r0           ; Logical AND
A69E:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
A6A0:	01-23       	and r16, r17          ; Logical AND
A6A2:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A6A4:	51-FF       	sbrs r21, 1           ; Skip if Bit in Register is Set
A6A6:	F2-E1       	ldi r31, 0x12         ; Load Immediate
A6A8:	02-2C       	mov r0, r2            ; Copy Register
A6AA:	5E-D1       	rcall .+700           ; Relative Call to Subroutine
A6AC:	00-24       	clr r0                ; Clear Register
A6AE:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
A6B0:	22-05       	cpc r18, r2           ; Compare with Carry
A6B2:	01-27       	clr r769              ; Clear Register
A6B4:	89-4E       	sbci r24, 0xe9        ; Subtract Immediate with Carry SBI
A6B6:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
A6B8:	5F-70       	andi r21, 0x0f        ; Logical AND with Immediate
A6BA:	00-2C       	mov r0, r0            ; Copy Register
A6BC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
A6BE:	D8-81       	ld r29, Y             ; Load Indirect from Data Space to Register
A6C0:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
A6C2:	63-2C       	mov r6, r3            ; Copy Register
A6C4:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
A6C6:	00-22       	and r0, r16           ; Logical AND
A6C8:	01-22       	and r0, r17           ; Logical AND
A6CA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A6CC:	75-FF       	sbrs r23, 5           ; Skip if Bit in Register is Set
A6CE:	86-FB       	bst r24, 6            ; Bit Store from Bit in Register to T Flag in SREG
A6D0:	04-23       	and r16, r20          ; Logical AND
A6D2:	E2-17       	cp r30, r18           ; Compare
A6D4:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
A6D6:	E3-03       	fmuls r22, r19        ; Fractional Multiply Signed
A6D8:	03-EB       	ldi r16, 0xb3         ; Load Immediate
A6DA:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
A6DC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
A6DE:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
A6E0:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
A6E2:	00-D1       	rcall .+512           ; Relative Call to Subroutine
A6E4:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A6E6:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A6E8:	63-2C       	mov r6, r3            ; Copy Register
A6EA:	E4-DD       	rcall .+7112          ; Relative Call to Subroutine
A6EC:	01-25       	clr r257              ; Clear Register
A6EE:	00-24       	clr r0                ; Clear Register
A6F0:	DF-F8       	.data 0xf8df          ; Binary data
A6F2:	1C-82       	std Y+4, r1           ; Store Indirect From Register to Data Space
A6F4:	7A-4F       	sbci r23, 0xfa        ; Subtract Immediate with Carry SBI
A6F6:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
A6F8:	0E-06       	cpc r0, r30           ; Compare with Carry
A6FA:	01-E0       	ldi r16, 0x01         ; Load Immediate
A6FC:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A6FE:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A700:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A702:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A704:	77-FE       	sbrs r7, 7            ; Skip if Bit in Register is Set
A706:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A708:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A70A:	C0-FD       	sbrc r28, 0           ; Skip if Bit in Register is Cleared
A70C:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A70E:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A710:	BD-FD       	.data 0xfdbd          ; Binary data
A712:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A714:	89-F8       	.data 0xf889          ; Binary data
A716:	00-2C       	mov r0, r0            ; Copy Register
A718:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
A71A:	AF-81       	ldd r26, Y+7          ; Load Indirect from Data Space to Register
A71C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A71E:	18-2C       	mov r1, r8            ; Copy Register
A720:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
A722:	00-22       	and r0, r16           ; Logical AND
A724:	01-22       	and r0, r17           ; Logical AND
A726:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A728:	47-FF       	sbrs r20, 7           ; Skip if Bit in Register is Set
A72A:	18-2D       	mov r17, r8           ; Copy Register
A72C:	E6-DD       	rcall .+7116          ; Relative Call to Subroutine
A72E:	01-25       	clr r257              ; Clear Register
A730:	00-24       	clr r0                ; Clear Register
A732:	6C-4F       	sbci r22, 0xfc        ; Subtract Immediate with Carry SBI
A734:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
A736:	04-06       	cpc r0, r20           ; Compare with Carry
A738:	A8-46       	sbci r26, 0x68        ; Subtract Immediate with Carry SBI
A73A:	01-E0       	ldi r16, 0x01         ; Load Immediate
A73C:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A73E:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A740:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A742:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A744:	57-FE       	sbrs r5, 7            ; Skip if Bit in Register is Set
A746:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A748:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A74A:	A0-FD       	sbrc r26, 0           ; Skip if Bit in Register is Cleared
A74C:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A74E:	6C-F8       	.data 0xf86c          ; Binary data
A750:	00-2C       	mov r0, r0            ; Copy Register
A752:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
A754:	97-81       	ldd r25, Y+7          ; Load Indirect from Data Space to Register
A756:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A758:	0E-2C       	mov r0, r14           ; Copy Register
A75A:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
A75C:	00-22       	and r0, r16           ; Logical AND
A75E:	01-22       	and r0, r17           ; Logical AND
A760:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A762:	2A-FF       	.data 0xff2a          ; Binary data
A764:	0E-2D       	mov r16, r14          ; Copy Register
A766:	E9-DD       	rcall .+7122          ; Relative Call to Subroutine
A768:	91-E1       	ldi r25, 0x11         ; Load Immediate
A76A:	03-2C       	mov r0, r3            ; Copy Register
A76C:	21-D1       	rcall .+578           ; Relative Call to Subroutine
A76E:	AD-20       	and r10, r13          ; Logical AND
A770:	45-21       	and r20, r5           ; Logical AND
A772:	5D-4A       	sbci r21, 0xad        ; Subtract Immediate with Carry SBI
A774:	01-23       	and r16, r17          ; Logical AND
A776:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A778:	87-FC       	sbrc r8, 7            ; Skip if Bit in Register is Cleared
A77A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A77C:	C1-10       	cpse r12, r1          ; Compare Skip if Equal
A77E:	45-21       	and r20, r5           ; Logical AND
A780:	5A-4A       	sbci r21, 0xaa        ; Subtract Immediate with Carry SBI
A782:	01-23       	and r16, r17          ; Logical AND
A784:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A786:	80-FC       	sbrc r8, 0            ; Skip if Bit in Register is Cleared
A788:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
A78A:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
A78C:	59-49       	sbci r21, 0x99        ; Subtract Immediate with Carry SBI
A78E:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A790:	85-FE       	sbrs r8, 5            ; Skip if Bit in Register is Set
A792:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
A794:	58-48       	sbci r21, 0x88        ; Subtract Immediate with Carry SBI
A796:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A798:	35-FF       	sbrs r19, 5           ; Skip if Bit in Register is Set
A79A:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
A79C:	00-24       	clr r0                ; Clear Register
A79E:	00-94       	com r0                ; One's Complement
A7A0:	01-94       	neg r0                ; Two's Complement
A7A2:	F2-20       	and r15, r2           ; Logical AND
A7A4:	CF-21       	and r28, r15          ; Logical AND
A7A6:	55-4A       	sbci r21, 0xa5        ; Subtract Immediate with Carry SBI
A7A8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A7AA:	00-FC       	sbrc r0, 0            ; Skip if Bit in Register is Cleared
A7AC:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
A7AE:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
A7B0:	6D-E1       	ldi r22, 0x1d         ; Load Immediate
A7B2:	04-2C       	mov r0, r4            ; Copy Register
A7B4:	36-D1       	rcall .+620           ; Relative Call to Subroutine
A7B6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A7B8:	AD-70       	andi r26, 0x0d        ; Logical AND with Immediate
A7BA:	0A-21       	and r16, r10          ; Logical AND
A7BC:	00-22       	and r0, r16           ; Logical AND
A7BE:	01-23       	and r16, r17          ; Logical AND
A7C0:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A7C2:	C2-FE       	sbrs r12, 2           ; Skip if Bit in Register is Set
A7C4:	50-25       	clr r336              ; Clear Register
A7C6:	00-24       	clr r0                ; Clear Register
A7C8:	4D-4F       	sbci r20, 0xfd        ; Subtract Immediate with Carry SBI
A7CA:	4E-4E       	sbci r20, 0xee        ; Subtract Immediate with Carry SBI
A7CC:	DF-F8       	.data 0xf8df          ; Binary data
A7CE:	44-81       	ldd r20, Y+4          ; Load Indirect from Data Space to Register
A7D0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A7D2:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A7D4:	0F-FE       	.data 0xfe0f          ; Binary data
A7D6:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A7D8:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A7DA:	60-FE       	sbrs r6, 0            ; Skip if Bit in Register is Set
A7DC:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A7DE:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A7E0:	53-FD       	sbrc r21, 3           ; Skip if Bit in Register is Cleared
A7E2:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A7E4:	21-F8       	bld r2, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
A7E6:	29-B2       	in r2, 0x19           ; Load an I/O Location to Register
A7E8:	01-22       	and r0, r17           ; Logical AND
A7EA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A7EC:	E5-FE       	sbrs r14, 5           ; Skip if Bit in Register is Set
A7EE:	60-42       	sbci r22, 0x20        ; Subtract Immediate with Carry SBI
A7F0:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A7F2:	00-FE       	sbrs r0, 0            ; Skip if Bit in Register is Set
A7F4:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
A7F6:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A7F8:	51-FE       	sbrs r5, 1            ; Skip if Bit in Register is Set
A7FA:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A7FC:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A7FE:	46-FD       	sbrc r20, 6           ; Skip if Bit in Register is Cleared
A800:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A802:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A804:	43-FD       	sbrc r20, 3           ; Skip if Bit in Register is Cleared
A806:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
A808:	0F-F8       	.data 0xf80f          ; Binary data
A80A:	69-42       	sbci r22, 0x29        ; Subtract Immediate with Carry SBI
A80C:	09-B2       	in r0, 0x19           ; Load an I/O Location to Register
A80E:	01-22       	and r0, r17           ; Logical AND
A810:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A812:	D2-FE       	sbrs r13, 2           ; Skip if Bit in Register is Set
A814:	A4-F5       	brbc 4, .+104         ; Branch if Bit in SREG is Cleared
A816:	2D-74       	andi r18, 0x4d        ; Logical AND with Immediate
A818:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A81A:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
A81C:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
A81E:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
A820:	D6-D1       	rcall .+940           ; Relative Call to Subroutine
A822:	34-E1       	ldi r19, 0x14         ; Load Immediate
A824:	05-2C       	mov r0, r5            ; Copy Register
A826:	79-D1       	rcall .+754           ; Relative Call to Subroutine
A828:	14-25       	clr r276              ; Clear Register
A82A:	00-24       	clr r0                ; Clear Register
A82C:	DF-F8       	.data 0xf8df          ; Binary data
A82E:	C0-A0       	ldd r12, Y+32         ; Load Indirect from Data Space to Register
A830:	36-4F       	sbci r19, 0xf6        ; Subtract Immediate with Carry SBI
A832:	DF-F8       	.data 0xf8df          ; Binary data
A834:	E4-90       	lpm r14, Z            ; Load Program Memory
A836:	DA-F8       	.data 0xf8da          ; Binary data
A838:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
A83A:	0F-FA       	.data 0xfa0f          ; Binary data
A83C:	85-F8       	bld r8, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
A83E:	14-EA       	ldi r17, 0xa4         ; Load Immediate
A840:	07-00       	.data 0x0007          ; Binary data
A842:	03-D5       	rcall .+2566          ; Relative Call to Subroutine
A844:	01-38       	cpi r16, 0x81         ; Compare with Immediate
A846:	60-F0       	brbs 0, .+24          ; Branch if Bit in SREG is Set
A848:	03-00       	.data 0x0003          ; Binary data
A84A:	01-30       	cpi r16, 0x01         ; Compare with Immediate
A84C:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
A84E:	02-00       	.data 0x0002          ; Binary data
A850:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A852:	D0-FD       	sbrc r29, 0           ; Skip if Bit in Register is Cleared
A854:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A856:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A858:	D5-FE       	sbrs r13, 5           ; Skip if Bit in Register is Set
A85A:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
A85C:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
A85E:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A860:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A862:	D0-FE       	sbrs r13, 0           ; Skip if Bit in Register is Set
A864:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
A866:	00-22       	and r0, r16           ; Logical AND
A868:	00-92-01-92 	sts 0x9201, r0        ; Store Direct to Data Space
A86C:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
A86E:	0A-21       	and r16, r10          ; Logical AND
A870:	5A-46       	sbci r21, 0x6a        ; Subtract Immediate with Carry SBI
A872:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A874:	9B-FB       	.data 0xfb9b          ; Binary data
A876:	01-34       	cpi r16, 0x41         ; Compare with Immediate
A878:	0A-35       	cpi r16, 0x5a         ; Compare with Immediate
A87A:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
A87C:	0A-2C       	mov r0, r10           ; Copy Register
A87E:	DA-D1       	rcall .+948           ; Relative Call to Subroutine
A880:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A882:	FB-10       	cpse r15, r11         ; Compare Skip if Equal
A884:	0A-21       	and r16, r10          ; Logical AND
A886:	14-22       	and r1, r20           ; Logical AND
A888:	01-23       	and r16, r17          ; Logical AND
A88A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A88C:	5D-FE       	.data 0xfe5d          ; Binary data
A88E:	90-20       	and r9, r0            ; Logical AND
A890:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
A892:	2D-71       	andi r18, 0x1d        ; Logical AND with Immediate
A894:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A896:	4E-FB       	.data 0xfb4e          ; Binary data
A898:	F9-E0       	ldi r31, 0x09         ; Load Immediate
A89A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
A89C:	2C-DF       	rcall .+7768          ; Relative Call to Subroutine
A89E:	FF-1F       	adc r31, r31          ; Add with Carry
A8A0:	C0-01       	movw r24, r0          ; Copy Register Word
A8A2:	00-20       	and r0, r0            ; Logical AND
A8A4:	48-7C       	andi r20, 0xc8        ; Logical AND with Immediate
A8A6:	01-00       	.data 0x0001          ; Binary data
A8A8:	78-92       	.data 0x9278          ; Binary data
A8AA:	FF-1F       	adc r31, r31          ; Add with Carry
A8AC:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
A8AE:	FF-1F       	adc r31, r31          ; Add with Carry
A8B0:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
A8B2:	FF-1F       	adc r31, r31          ; Add with Carry
A8B4:	C4-92       	xch Z, r12            ; Exchange
A8B6:	FF-1F       	adc r31, r31          ; Add with Carry
A8B8:	94-9D       	mul r25, r4           ; Multiply Unsigned
A8BA:	FF-1F       	adc r31, r31          ; Add with Carry
A8BC:	4C-9D       	mul r20, r12          ; Multiply Unsigned
A8BE:	FF-1F       	adc r31, r31          ; Add with Carry
A8C0:	00-00       	nop                   ; No Operation
A8C2:	F0-C1       	rjmp .+992            ; Relative Jump
A8C4:	00-00       	nop                   ; No Operation
A8C6:	20-C2       	rjmp .+1088           ; Relative Jump
A8C8:	00-00       	nop                   ; No Operation
A8CA:	48-C2       	rjmp .+1168           ; Relative Jump
A8CC:	00-00       	nop                   ; No Operation
A8CE:	70-C2       	rjmp .+1248           ; Relative Jump
A8D0:	00-00       	nop                   ; No Operation
A8D2:	8C-C2       	rjmp .+1304           ; Relative Jump
A8D4:	00-00       	nop                   ; No Operation
A8D6:	96-C2       	rjmp .+1324           ; Relative Jump
A8D8:	00-00       	nop                   ; No Operation
A8DA:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
A8DC:	1F-85       	std Y+15, r17         ; Store Indirect From Register to Data Space
A8DE:	EB-51       	subi r30, 0x1b        ; Subtract Immediate
A8E0:	00-00       	nop                   ; No Operation
A8E2:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
A8E4:	00-00       	nop                   ; No Operation
A8E6:	2D-43       	sbci r18, 0x3d        ; Subtract Immediate with Carry SBI
A8E8:	00-00       	nop                   ; No Operation
A8EA:	C8-41       	sbci r28, 0x18        ; Subtract Immediate with Carry SBI
A8EC:	00-00       	nop                   ; No Operation
A8EE:	C8-C1       	rjmp .+912            ; Relative Jump
A8F0:	68-92       	.data 0x9268          ; Binary data
A8F2:	FF-1F       	adc r31, r31          ; Add with Carry
A8F4:	00-00       	nop                   ; No Operation
A8F6:	96-43       	sbci r25, 0x36        ; Subtract Immediate with Carry SBI
A8F8:	67-66       	ori r22, 0x67         ; Logical OR with Immediate
A8FA:	8A-43       	sbci r24, 0x3a        ; Subtract Immediate with Carry SBI
A8FC:	00-00       	nop                   ; No Operation
A8FE:	48-43       	sbci r20, 0x38        ; Subtract Immediate with Carry SBI
A900:	CD-CC       	rjmp .-1638           ; Relative Jump
A902:	CC-3E       	cpi r28, 0xec         ; Compare with Immediate
A904:	00-00       	nop                   ; No Operation
A906:	D2-43       	sbci r29, 0x32        ; Subtract Immediate with Carry SBI
A908:	F0-C9       	rjmp .-3104           ; Relative Jump
A90A:	FF-FF       	.data 0xffff          ; Binary data
A90C:	03-00       	.data 0x0003          ; Binary data
A90E:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
A910:	00-00       	nop                   ; No Operation
A912:	AD-43       	sbci r26, 0x3d        ; Subtract Immediate with Carry SBI
A914:	00-00       	nop                   ; No Operation
A916:	2D-44       	sbci r18, 0x4d        ; Subtract Immediate with Carry SBI
A918:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
A91A:	E6-3F       	cpi r30, 0xf6         ; Compare with Immediate
A91C:	06-2C       	mov r0, r6            ; Copy Register
A91E:	19-D1       	rcall .+562           ; Relative Call to Subroutine
A920:	AD-20       	and r10, r13          ; Logical AND
A922:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
A924:	6E-21       	and r22, r14          ; Logical AND
A926:	5B-4A       	sbci r21, 0xab        ; Subtract Immediate with Carry SBI
A928:	01-23       	and r16, r17          ; Logical AND
A92A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
A92C:	AD-FB       	.data 0xfbad          ; Binary data
A92E:	1E-24       	clr r30               ; Clear Register
A930:	E6-25       	clr r486              ; Clear Register
A932:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
A934:	0A-08       	sbc r0, r10           ; Subtract with Carry
A936:	00-27       	clr r768              ; Clear Register
A938:	01-26       	clr r513              ; Clear Register
A93A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A93C:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A93E:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
A940:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
A942:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
A944:	01-FE       	sbrs r0, 1            ; Skip if Bit in Register is Set
A946:	01-2C       	mov r0, r1            ; Copy Register
A948:	AC-BF       	out 0x3c, r26         ; Store Register to I/O Location
A94A:	2D-19       	sub r18, r13          ; Subtract Without Carry
A94C:	01-35       	cpi r16, 0x51         ; Compare with Immediate
A94E:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
A950:	F3-D1       	rcall .+998           ; Relative Call to Subroutine
A952:	9C-E0       	ldi r25, 0x0c         ; Load Immediate
A954:	07-2C       	mov r0, r7            ; Copy Register
A956:	67-D1       	rcall .+718           ; Relative Call to Subroutine
A958:	00-22       	and r0, r16           ; Logical AND
A95A:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
A95C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
A95E:	14-24       	clr r20               ; Clear Register
A960:	4E-4E       	sbci r20, 0xee        ; Subtract Immediate with Carry SBI
A962:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
A964:	7F-5B       	subi r23, 0xbf        ; Subtract Immediate
A966:	DF-F8       	.data 0xf8df          ; Binary data
A968:	48-A1       	ldd r20, Y+32         ; Load Indirect from Data Space to Register
A96A:	0A-20       	and r0, r10           ; Logical AND
A96C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A96E:	A6-F8       	bld r10, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
A970:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
A972:	0A-20       	and r0, r10           ; Logical AND
A974:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A976:	A2-F8       	bld r10, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
A978:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
A97A:	0A-20       	and r0, r10           ; Logical AND
A97C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A97E:	9E-F8       	.data 0xf89e          ; Binary data
A980:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
A982:	0F-FA       	.data 0xfa0f          ; Binary data
A984:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
A986:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
A988:	0A-08       	sbc r0, r10           ; Subtract with Carry
A98A:	1F-FA       	.data 0xfa1f          ; Binary data
A98C:	88-F8       	.data 0xf888          ; Binary data
A98E:	78-42       	sbci r23, 0x28        ; Subtract Immediate with Carry SBI
A990:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A992:	2C-FD       	.data 0xfd2c          ; Binary data
A994:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A996:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A998:	35-FE       	sbrs r3, 5            ; Skip if Bit in Register is Set
A99A:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
A99C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A99E:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A9A0:	25-FD       	sbrc r18, 5           ; Skip if Bit in Register is Cleared
A9A2:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
A9A4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A9A6:	2E-FE       	.data 0xfe2e          ; Binary data
A9A8:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
A9AA:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A9AC:	6F-FC       	.data 0xfc6f          ; Binary data
A9AE:	DA-F8       	.data 0xf8da          ; Binary data
A9B0:	00-10       	cpse r0, r0           ; Compare Skip if Equal
A9B2:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A9B4:	27-FE       	sbrs r2, 7            ; Skip if Bit in Register is Set
A9B6:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
A9B8:	00-25       	clr r256              ; Clear Register
A9BA:	00-95       	com r16               ; One's Complement
A9BC:	01-95       	neg r16               ; Two's Complement
A9BE:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
A9C0:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A9C2:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
A9C4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
A9C6:	F2-FA       	bst r15, 2            ; Bit Store from Bit in Register to T Flag in SREG
A9C8:	1E-34       	cpi r17, 0x4e         ; Compare with Immediate
A9CA:	A4-B2       	in r10, 0x14          ; Load an I/O Location to Register
A9CC:	8C-2C       	mov r8, r12           ; Copy Register
A9CE:	CC-D1       	rcall .+920           ; Relative Call to Subroutine
A9D0:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
A9D2:	14-25       	clr r276              ; Clear Register
A9D4:	DF-F8       	.data 0xf8df          ; Binary data
A9D6:	DC-90       	ld r13, X             ; Load Indirect from Data Space to Register
A9D8:	DF-F8       	.data 0xf8df          ; Binary data
A9DA:	DC-80       	ldd r13, Y+4          ; Load Indirect from Data Space to Register
A9DC:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
A9DE:	28-21       	and r18, r8           ; Logical AND
A9E0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A9E2:	78-F8       	.data 0xf878          ; Binary data
A9E4:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
A9E6:	0A-20       	and r0, r10           ; Logical AND
A9E8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
A9EA:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
A9EC:	73-F8       	bld r7, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
A9EE:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
A9F0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
A9F2:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A9F4:	FF-FC       	.data 0xfcff          ; Binary data
A9F6:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
A9F8:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
A9FA:	50-FD       	sbrc r21, 0           ; Skip if Bit in Register is Cleared
A9FC:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
A9FE:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AA00:	45-FC       	sbrc r4, 5            ; Skip if Bit in Register is Cleared
AA02:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AA04:	11-FF       	sbrs r17, 1           ; Skip if Bit in Register is Set
AA06:	B9-B2       	in r11, 0x19          ; Load an I/O Location to Register
AA08:	32-B2       	in r3, 0x12           ; Load an I/O Location to Register
AA0A:	00-23       	and r16, r16          ; Logical AND
AA0C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
AA0E:	9C-FD       	.data 0xfd9c          ; Binary data
AA10:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
AA12:	2D-74       	andi r18, 0x4d        ; Logical AND with Immediate
AA14:	41-F2       	brbs 1, .-112         ; Branch if Bit in SREG is Set
AA16:	38-03       	fmul r19, r16         ; Fractional Multiply Unsigned
AA18:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
AA1A:	DF-D1       	rcall .+958           ; Relative Call to Subroutine
AA1C:	90-20       	and r9, r0            ; Logical AND
AA1E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
AA20:	2D-71       	andi r18, 0x1d        ; Logical AND with Immediate
AA22:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
AA24:	87-FA       	bst r8, 7             ; Bit Store from Bit in Register to T Flag in SREG
AA26:	32-E0       	ldi r19, 0x02         ; Load Immediate
AA28:	08-2C       	mov r0, r8            ; Copy Register
AA2A:	30-D1       	rcall .+608           ; Relative Call to Subroutine
AA2C:	50-24       	clr r80               ; Clear Register
AA2E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
AA30:	46-77       	andi r20, 0x76        ; Logical AND with Immediate
AA32:	00-26       	clr r512              ; Clear Register
AA34:	01-25       	clr r257              ; Clear Register
AA36:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
AA38:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
AA3A:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
AA3C:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
AA3E:	BC-FD       	.data 0xfdbc          ; Binary data
AA40:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
AA42:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
AA44:	00-22       	and r0, r16           ; Logical AND
AA46:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
AA48:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
AA4A:	01-21       	and r16, r1           ; Logical AND
AA4C:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
AA4E:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
AA50:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
AA52:	19-80       	ldd r1, Y+1           ; Load Indirect from Data Space to Register
AA54:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
AA56:	41-F6       	brbc 1, .-112         ; Branch if Bit in SREG is Cleared
AA58:	F3-10       	cpse r15, r3          ; Compare Skip if Equal
AA5A:	18-80       	ld r1, Y              ; Load Indirect from Data Space to Register
AA5C:	58-80       	ld r5, Y              ; Load Indirect from Data Space to Register
AA5E:	19-71       	andi r17, 0x19        ; Logical AND with Immediate
AA60:	02-21       	and r16, r2           ; Logical AND
AA62:	D9-80       	ldd r13, Y+1          ; Load Indirect from Data Space to Register
AA64:	1A-81       	ldd r17, Y+2          ; Load Indirect from Data Space to Register
AA66:	03-21       	and r16, r3           ; Logical AND
AA68:	D9-60       	ori r29, 0x09         ; Logical OR with Immediate
AA6A:	19-61       	ori r17, 0x19         ; Logical OR with Immediate
AA6C:	1A-75       	andi r17, 0x5a        ; Logical AND with Immediate
AA6E:	0E-E0       	ldi r16, 0x0e         ; Load Immediate
AA70:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
AA72:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
AA74:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
AA76:	A0-FD       	sbrc r26, 0           ; Skip if Bit in Register is Cleared
AA78:	34-E6       	ldi r19, 0x64         ; Load Immediate
AA7A:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
AA7C:	01-22       	and r0, r17           ; Logical AND
AA7E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
AA80:	9B-FD       	.data 0xfd9b          ; Binary data
AA82:	3B-E6       	ldi r19, 0x6b         ; Load Immediate
AA84:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
AA86:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
AA88:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
AA8A:	96-FD       	sbrc r25, 6           ; Skip if Bit in Register is Cleared
AA8C:	56-E6       	ldi r21, 0x66         ; Load Immediate
AA8E:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
AA90:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
AA92:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
AA94:	00-00       	nop                   ; No Operation
AA96:	70-42       	sbci r23, 0x20        ; Subtract Immediate with Carry SBI
AA98:	78-92       	.data 0x9278          ; Binary data
AA9A:	FF-1F       	adc r31, r31          ; Add with Carry
AA9C:	00-00       	nop                   ; No Operation
AA9E:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
AAA0:	58-FA       	.data 0xfa58          ; Binary data
AAA2:	FF-1F       	adc r31, r31          ; Add with Carry
AAA4:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
AAA6:	FF-1F       	adc r31, r31          ; Add with Carry
AAA8:	2A-9E       	mul r2, r26           ; Multiply Unsigned
AAAA:	FF-1F       	adc r31, r31          ; Add with Carry
AAAC:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
AAAE:	FF-1F       	adc r31, r31          ; Add with Carry
AAB0:	68-92       	.data 0x9268          ; Binary data
AAB2:	FF-1F       	adc r31, r31          ; Add with Carry
AAB4:	CD-CC       	rjmp .-1638           ; Relative Jump
AAB6:	CC-3D       	cpi r28, 0xdc         ; Compare with Immediate
AAB8:	9A-99       	sbic 0x13, 2          ; Skip if Bit in I/O Register is Cleared
AABA:	4F-43       	sbci r20, 0x3f        ; Subtract Immediate with Carry SBI
AABC:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
AABE:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
AAC0:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
AAC2:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
AAC4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
AAC6:	00-2B       	or r16, r16           ; Logical OR
AAC8:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
AACA:	96-80       	ldd r9, Y+6           ; Load Indirect from Data Space to Register
AACC:	4D-4B       	sbci r20, 0xbd        ; Subtract Immediate with Carry SBI
AACE:	1D-1D       	adc r17, r13          ; Add with Carry
AAD0:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
AAD2:	08-0A       	sbc r0, r24           ; Subtract with Carry
AAD4:	00-22       	and r0, r16           ; Logical AND
AAD6:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
AAD8:	DF-F8       	.data 0xf8df          ; Binary data
AADA:	30-91-DF-F8 	lds r19, 0xf8df       ; Load Direct from Data Space (32-bit)
AADE:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
AAE0:	DF-F8       	.data 0xf8df          ; Binary data
AAE2:	30-81       	ld r19, Z             ; Load Indirect from Data Space to Register
AAE4:	56-46       	sbci r21, 0x66        ; Subtract Immediate with Carry SBI
AAE6:	3A-F9       	.data 0xf93a          ; Binary data
AAE8:	04-2C       	mov r0, r4            ; Copy Register
AAEA:	D9-F8       	.data 0xf8d9          ; Binary data
AAEC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
AAEE:	13-44       	sbci r17, 0x43        ; Subtract Immediate with Carry SBI
AAF0:	3A-F8       	.data 0xf83a          ; Binary data
AAF2:	02-2C       	mov r0, r2            ; Copy Register
AAF4:	B3-FB       	bst r27, 3            ; Bit Store from Bit in Register to T Flag in SREG
AAF6:	F2-F3       	brbs 2, .-4           ; Branch if Bit in SREG is Set
AAF8:	43-4A       	sbci r20, 0xa3        ; Subtract Immediate with Carry SBI
AAFA:	A2-FB       	bst r26, 2            ; Bit Store from Bit in Register to T Flag in SREG
AAFC:	03-27       	clr r771              ; Clear Register
AAFE:	7F-08       	sbc r7, r15           ; Subtract with Carry
AB00:	07-EB       	ldi r16, 0xb7         ; Load Immediate
AB02:	47-07       	cpc r20, r23          ; Compare with Carry
AB04:	DF-1B       	sub r29, r31          ; Subtract Without Carry
AB06:	3A-F8       	.data 0xf83a          ; Binary data
AB08:	06-3C       	cpi r16, 0xc6         ; Compare with Immediate
AB0A:	00-2B       	or r16, r16           ; Logical OR
AB0C:	69-D0       	rcall .+210           ; Relative Call to Subroutine
AB0E:	00-24       	clr r0                ; Clear Register
AB10:	36-F8       	bld r3, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
AB12:	08-1C       	adc r0, r8            ; Add with Carry
AB14:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
AB16:	EB-88       	std Y+19, r14         ; Store Indirect From Register to Data Space
AB18:	0B-B9       	out 0x0b, r16         ; Store Register to I/O Location
AB1A:	09-B2       	in r0, 0x19           ; Load an I/O Location to Register
AB1C:	09-E0       	ldi r16, 0x09         ; Load Immediate
AB1E:	1B-B2       	in r1, 0x1b           ; Load an I/O Location to Register
AB20:	D9-F8       	.data 0xf8d9          ; Binary data
AB22:	00-00       	nop                   ; No Operation
AB24:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
AB26:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
AB28:	AB-FB       	.data 0xfbab          ; Binary data
AB2A:	00-30       	cpi r16, 0x00         ; Compare with Immediate
AB2C:	09-B2       	in r0, 0x19           ; Load an I/O Location to Register
AB2E:	01-EB       	ldi r16, 0xb1         ; Load Immediate
AB30:	90-11       	cpse r25, r0          ; Compare Skip if Equal
AB32:	12-79       	andi r17, 0x92        ; Logical AND with Immediate
AB34:	0A-B9       	out 0x0a, r16         ; Store Register to I/O Location
AB36:	02-2F       	mov r16, r18          ; Copy Register
AB38:	21-D1       	rcall .+578           ; Relative Call to Subroutine
AB3A:	B8-F8       	.data 0xf8b8          ; Binary data
AB3C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
AB3E:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AB40:	43-22       	and r4, r19           ; Logical AND
AB42:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AB44:	82-02       	muls r24, r18         ; Multiply Signed
AB46:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
AB48:	58-52       	subi r21, 0x28        ; Subtract Immediate
AB4A:	19-32       	cpi r17, 0x29         ; Compare with Immediate
AB4C:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
AB4E:	A8-F8       	.data 0xf8a8          ; Binary data
AB50:	00-20       	and r0, r0            ; Logical AND
AB52:	02-EB       	ldi r16, 0xb2         ; Load Immediate
AB54:	22-22       	and r2, r18           ; Logical AND
AB56:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
AB58:	02-EB       	ldi r16, 0xb2         ; Load Immediate
AB5A:	82-02       	muls r24, r18         ; Multiply Signed
AB5C:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
AB5E:	42-12       	cpse r4, r18          ; Compare Skip if Equal
AB60:	12-12       	cpse r1, r18          ; Compare Skip if Equal
AB62:	28-32       	cpi r18, 0x28         ; Compare with Immediate
AB64:	8D-F8       	.data 0xf88d          ; Binary data
AB66:	08-20       	and r0, r8            ; Logical AND
AB68:	28-23       	and r18, r24          ; Logical AND
AB6A:	8D-F8       	.data 0xf88d          ; Binary data
AB6C:	09-30       	cpi r16, 0x09         ; Compare with Immediate
AB6E:	02-23       	and r16, r18          ; Logical AND
AB70:	8D-F8       	.data 0xf88d          ; Binary data
AB72:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
AB74:	08-19       	sub r16, r8           ; Subtract Without Carry
AB76:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
AB78:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
AB7A:	00-FD       	sbrc r16, 0           ; Skip if Bit in Register is Cleared
AB7C:	2C-E0       	ldi r18, 0x0c         ; Load Immediate
AB7E:	01-2F       	mov r16, r17          ; Copy Register
AB80:	2A-D1       	rcall .+596           ; Relative Call to Subroutine
AB82:	B8-F8       	.data 0xf8b8          ; Binary data
AB84:	00-30       	cpi r16, 0x00         ; Compare with Immediate
AB86:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AB88:	43-22       	and r4, r19           ; Logical AND
AB8A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AB8C:	82-03       	fmuls r16, r18        ; Fractional Multiply Signed
AB8E:	43-F2       	brbs 3, .-112         ; Branch if Bit in SREG is Set
AB90:	19-62       	ori r17, 0x29         ; Logical OR with Immediate
AB92:	13-44       	sbci r17, 0x43        ; Subtract Immediate with Carry SBI
AB94:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
AB96:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AB98:	43-20       	and r4, r3            ; Logical AND
AB9A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AB9C:	80-00       	.data 0x0080          ; Binary data
AB9E:	02-44       	sbci r16, 0x42        ; Subtract Immediate with Carry SBI
ABA0:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
ABA2:	A8-F8       	.data 0xf8a8          ; Binary data
ABA4:	00-20       	and r0, r0            ; Logical AND
ABA6:	03-EB       	ldi r16, 0xb3         ; Load Immediate
ABA8:	23-23       	and r18, r19          ; Logical AND
ABAA:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
ABAC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
ABAE:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
ABB0:	DB-09       	sbc r29, r11          ; Subtract with Carry
ABB2:	8D-F8       	.data 0xf88d          ; Binary data
ABB4:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
ABB6:	02-EB       	ldi r16, 0xb2         ; Load Immediate
ABB8:	22-22       	and r2, r18           ; Logical AND
ABBA:	D3-B2       	in r13, 0x13          ; Load an I/O Location to Register
ABBC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
ABBE:	43-02       	muls r20, r19         ; Multiply Signed
ABC0:	03-EB       	ldi r16, 0xb3         ; Load Immediate
ABC2:	82-03       	fmuls r16, r18        ; Fractional Multiply Signed
ABC4:	1B-12       	cpse r1, r27          ; Compare Skip if Equal
ABC6:	8D-F8       	.data 0xf88d          ; Binary data
ABC8:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
ABCA:	02-23       	and r16, r18          ; Logical AND
ABCC:	8D-F8       	.data 0xf88d          ; Binary data
ABCE:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
ABD0:	08-19       	sub r16, r8           ; Subtract Without Carry
ABD2:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
ABD4:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
ABD6:	D2-FC       	sbrc r13, 2           ; Skip if Bit in Register is Cleared
ABD8:	01-34       	cpi r16, 0x41         ; Compare with Immediate
ABDA:	36-F8       	bld r3, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
ABDC:	06-3C       	cpi r16, 0xc6         ; Compare with Immediate
ABDE:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
ABE0:	96-DC       	rcall .+6444          ; Relative Call to Subroutine
ABE2:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
ABE4:	01-32       	cpi r16, 0x21         ; Compare with Immediate
ABE6:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
ABE8:	0C-35       	cpi r16, 0x5c         ; Compare with Immediate
ABEA:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
ABEC:	0C-0A       	sbc r0, r28           ; Subtract with Carry
ABEE:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
ABF0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
ABF2:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
ABF4:	3F-F7       	brbc 7, .-50          ; Branch if Bit in SREG is Cleared
ABF6:	76-AF       	std Y+62, r23         ; Store Indirect From Register to Data Space
ABF8:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
ABFA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
ABFC:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
ABFE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
AC00:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
AC02:	FF-1F       	adc r31, r31          ; Add with Carry
AC04:	A0-F9       	bld r26, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
AC06:	FF-1F       	adc r31, r31          ; Add with Carry
AC08:	AB-AA       	std Y+51, r10         ; Store Indirect From Register to Data Space
AC0A:	AA-AA       	std Y+50, r10         ; Store Indirect From Register to Data Space
AC0C:	5C-FA       	.data 0xfa5c          ; Binary data
AC0E:	FF-1F       	adc r31, r31          ; Add with Carry
AC10:	D3-4D       	sbci r29, 0xd3        ; Subtract Immediate with Carry SBI
AC12:	62-10       	cpse r6, r2           ; Compare Skip if Equal
AC14:	F2-92       	st -Z, r15            ; Store Indirect From Register to Data Space
AC16:	FF-1F       	adc r31, r31          ; Add with Carry
AC18:	F0-B4       	in r15, 0x20          ; Load an I/O Location to Register
AC1A:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
AC1C:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
AC1E:	63-1C       	adc r6, r3            ; Add with Carry
AC20:	1C-48       	sbci r17, 0x8c        ; Subtract Immediate with Carry SBI
AC22:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
AC24:	03-10       	cpse r0, r3           ; Compare Skip if Equal
AC26:	DA-17       	cp r29, r26           ; Compare
AC28:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
AC2A:	E0-10       	cpse r14, r0          ; Compare Skip if Equal
AC2C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
AC2E:	C8-72       	andi r28, 0x28        ; Logical AND with Immediate
AC30:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
AC32:	10-30       	cpi r17, 0x00         ; Compare with Immediate
AC34:	00-EB       	ldi r16, 0xb0         ; Load Immediate
AC36:	40-02       	muls r20, r16         ; Multiply Signed
AC38:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
AC3A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
AC3C:	C2-03       	fmuls r20, r18        ; Fractional Multiply Signed
AC3E:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
AC40:	00-2B       	or r16, r16           ; Logical OR
AC42:	1B-DD       	rcall .+6710          ; Relative Call to Subroutine
AC44:	01-23       	and r16, r17          ; Logical AND
AC46:	13-4F       	sbci r17, 0xf3        ; Subtract Immediate with Carry SBI
AC48:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
AC4A:	C8-76       	andi r28, 0x68        ; Logical AND with Immediate
AC4C:	12-4D       	sbci r17, 0xd2        ; Subtract Immediate with Carry SBI
AC4E:	01-33       	cpi r16, 0x31         ; Compare with Immediate
AC50:	E2-18       	sub r14, r2           ; Subtract Without Carry
AC52:	87-FB       	bst r24, 7            ; Bit Store from Bit in Register to T Flag in SREG
AC54:	02-10       	cpse r0, r2           ; Compare Skip if Equal
AC56:	D1-17       	cp r29, r17           ; Compare
AC58:	C1-EB       	ldi r28, 0xb1         ; Load Immediate
AC5A:	E0-10       	cpse r14, r0          ; Compare Skip if Equal
AC5C:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
AC5E:	10-20       	and r1, r0            ; Logical AND
AC60:	00-EB       	ldi r16, 0xb0         ; Load Immediate
AC62:	40-02       	muls r20, r16         ; Multiply Signed
AC64:	05-EB       	ldi r16, 0xb5         ; Load Immediate
AC66:	C2-02       	muls r28, r18         ; Multiply Signed
AC68:	D2-68       	ori r29, 0x82         ; Logical OR with Immediate
AC6A:	00-2A       	or r0, r16            ; Logical OR
AC6C:	03-DD       	rcall .+6662          ; Relative Call to Subroutine
AC6E:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
AC70:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
AC72:	EC-D1       	rcall .+984           ; Relative Call to Subroutine
AC74:	05-E0       	ldi r16, 0x05         ; Load Immediate
AC76:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
AC78:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
AC7A:	05-D0       	rcall .+10            ; Relative Call to Subroutine
AC7C:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
AC7E:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
AC80:	04-E0       	ldi r16, 0x04         ; Load Immediate
AC82:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
AC84:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
AC86:	01-E0       	ldi r16, 0x01         ; Load Immediate
AC88:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
AC8A:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
AC8C:	F0-BC       	out 0x20, r15         ; Store Register to I/O Location
AC8E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
AC90:	DC-92       	st X, r13             ; Store Indirect From Register to Data Space
AC92:	FF-1F       	adc r31, r31          ; Add with Carry
AC94:	1F-85       	std Y+15, r17         ; Store Indirect From Register to Data Space
AC96:	EB-51       	subi r30, 0x1b        ; Subtract Immediate
AC98:	8C-B9       	out 0x0c, r24         ; Store Register to I/O Location
AC9A:	FF-1F       	adc r31, r31          ; Add with Carry
AC9C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
AC9E:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
ACA0:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
ACA2:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
ACA4:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
ACA6:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
ACA8:	07-9C       	mul r0, r7            ; Multiply Unsigned
ACAA:	B4-F1       	brbs 4, .+108         ; Branch if Bit in SREG is Set
ACAC:	FF-3F       	cpi r31, 0xff         ; Compare with Immediate
ACAE:	05-D1       	rcall .+522           ; Relative Call to Subroutine
ACB0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
ACB2:	B2-FF       	sbrs r27, 2           ; Skip if Bit in Register is Set
ACB4:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
ACB6:	B0-F1       	brbs 0, .+108         ; Branch if Bit in SREG is Set
ACB8:	FF-3F       	cpi r31, 0xff         ; Compare with Immediate
ACBA:	16-D0       	rcall .+44            ; Relative Call to Subroutine
ACBC:	0C-48       	sbci r16, 0x8c        ; Subtract Immediate with Carry SBI
ACBE:	04-EB       	ldi r16, 0xb4         ; Load Immediate
ACC0:	44-04       	cpc r4, r4            ; Compare with Carry
ACC2:	E1-00       	.data 0x00e1          ; Binary data
ACC4:	44-18       	sub r4, r4            ; Subtract Without Carry
ACC6:	95-F8       	bld r9, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
ACC8:	00-C0       	rjmp .+0              ; Relative Jump
ACCA:	6A-78       	andi r22, 0x8a        ; Logical AND with Immediate
ACCC:	AB-78       	andi r26, 0x8b        ; Logical AND with Immediate
ACCE:	46-52       	subi r20, 0x26        ; Subtract Immediate
ACD0:	66-80       	ldd r6, Y+6           ; Load Indirect from Data Space to Register
ACD2:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
ACD4:	04-C0       	rjmp .+8              ; Relative Jump
ACD6:	62-71       	andi r22, 0x12        ; Logical AND with Immediate
ACD8:	A3-71       	andi r26, 0x13        ; Logical AND with Immediate
ACDA:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
ACDC:	08-80       	ld r0, Y              ; Load Indirect from Data Space to Register
ACDE:	E7-60       	ori r30, 0x07         ; Logical OR with Immediate
ACE0:	00-23       	and r16, r16          ; Logical AND
ACE2:	23-61       	ori r18, 0x13         ; Logical OR with Immediate
ACE4:	9D-F8       	.data 0xf89d          ; Binary data
ACE6:	18-30       	cpi r17, 0x08         ; Compare with Immediate
ACE8:	23-75       	andi r18, 0x53        ; Logical AND with Immediate
ACEA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
ACEC:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
ACEE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
ACF0:	8C-B9       	out 0x0c, r24         ; Store Register to I/O Location
ACF2:	FF-1F       	adc r31, r31          ; Add with Carry
ACF4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
ACF6:	84-B0       	in r8, 0x04           ; Load an I/O Location to Register
ACF8:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
ACFA:	FF-24       	clr r255              ; Clear Register
ACFC:	8D-F8       	.data 0xf88d          ; Binary data
ACFE:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
AD00:	8D-F8       	.data 0xf88d          ; Binary data
AD02:	0D-40       	sbci r16, 0x0d        ; Subtract Immediate with Carry SBI
AD04:	8D-F8       	.data 0xf88d          ; Binary data
AD06:	0E-40       	sbci r16, 0x0e        ; Subtract Immediate with Carry SBI
AD08:	00-21       	and r16, r0           ; Logical AND
AD0A:	00-91-4F-F0 	lds r16, 0xf04f       ; Load Direct from Data Space (32-bit)
AD0E:	FF-31       	cpi r31, 0x1f         ; Compare with Immediate
AD10:	01-91       	ld r16, Z+            ; Load Indirect from Data Space to Register
AD12:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
AD14:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
AD16:	C2-FF       	sbrs r28, 2           ; Skip if Bit in Register is Set
AD18:	04-B0       	in r0, 0x04           ; Load an I/O Location to Register
AD1A:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
AD1C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
AD1E:	F0-43       	sbci r31, 0x30        ; Subtract Immediate with Carry SBI
AD20:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
AD22:	82-4C       	sbci r24, 0xc2        ; Subtract Immediate with Carry SBI
AD24:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
AD26:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD28:	7F-FD       	.data 0xfd7f          ; Binary data
AD2A:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
AD2C:	5B-FC       	.data 0xfc5b          ; Binary data
AD2E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
AD30:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
AD32:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
AD34:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
AD36:	7F-4D       	sbci r23, 0xdf        ; Subtract Immediate with Carry SBI
AD38:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
AD3A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
AD3C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AD3E:	7E-49       	sbci r23, 0x9e        ; Subtract Immediate with Carry SBI
AD40:	0E-22       	and r0, r30           ; Logical AND
AD42:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
AD44:	7D-4B       	sbci r23, 0xbd        ; Subtract Immediate with Carry SBI
AD46:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
AD48:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
AD4A:	14-FF       	sbrs r17, 4           ; Skip if Bit in Register is Set
AD4C:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
AD4E:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
AD50:	02-27       	clr r770              ; Clear Register
AD52:	00-97       	sbiw r24, 0x00        ; Subtract Immediate from Word
AD54:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AD56:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AD58:	5B-FD       	.data 0xfd5b          ; Binary data
AD5A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AD5C:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AD5E:	02-FD       	sbrc r16, 2           ; Skip if Bit in Register is Cleared
AD60:	E0-69       	ori r30, 0x90         ; Logical OR with Immediate
AD62:	77-49       	sbci r23, 0x97        ; Subtract Immediate with Carry SBI
AD64:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD66:	9A-FB       	.data 0xfb9a          ; Binary data
AD68:	E0-61       	ori r30, 0x10         ; Logical OR with Immediate
AD6A:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
AD6C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD6E:	82-FD       	sbrc r24, 2           ; Skip if Bit in Register is Cleared
AD70:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
AD72:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
AD74:	00-22       	and r0, r16           ; Logical AND
AD76:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
AD78:	BD-FF       	.data 0xffbd          ; Binary data
AD7A:	72-4B       	sbci r23, 0xb2        ; Subtract Immediate with Carry SBI
AD7C:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
AD7E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AD80:	E1-69       	ori r30, 0x91         ; Logical OR with Immediate
AD82:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD84:	8B-FB       	.data 0xfb8b          ; Binary data
AD86:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
AD88:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD8A:	80-FA       	bst r8, 0             ; Bit Store from Bit in Register to T Flag in SREG
AD8C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
AD8E:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
AD90:	6D-4B       	sbci r22, 0xbd        ; Subtract Immediate with Carry SBI
AD92:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
AD94:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD96:	2E-FB       	.data 0xfb2e          ; Binary data
AD98:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
AD9A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
AD9C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AD9E:	1C-FD       	.data 0xfd1c          ; Binary data
ADA0:	B8-B1       	in r27, 0x08          ; Load an I/O Location to Register
ADA2:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
ADA4:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
ADA6:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADA8:	25-FB       	bst r18, 5            ; Bit Store from Bit in Register to T Flag in SREG
ADAA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
ADAC:	6A-51       	subi r22, 0x1a        ; Subtract Immediate
ADAE:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADB0:	75-FB       	bst r23, 5            ; Bit Store from Bit in Register to T Flag in SREG
ADB2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
ADB4:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
ADB6:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADB8:	71-FB       	bst r23, 1            ; Bit Store from Bit in Register to T Flag in SREG
ADBA:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
ADBC:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
ADBE:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
ADC0:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADC2:	6C-FB       	.data 0xfb6c          ; Binary data
ADC4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
ADC6:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
ADC8:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADCA:	60-FA       	bst r6, 0             ; Bit Store from Bit in Register to T Flag in SREG
ADCC:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
ADCE:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
ADD0:	1C-90       	ld r1, X              ; Load Indirect from Data Space to Register
ADD2:	56-4B       	sbci r21, 0xb6        ; Subtract Immediate with Carry SBI
ADD4:	DC-69       	ori r29, 0x9c         ; Logical OR with Immediate
ADD6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
ADD8:	00-21       	and r16, r0           ; Logical AND
ADDA:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADDC:	1B-FD       	.data 0xfd1b          ; Binary data
ADDE:	A8-B1       	in r26, 0x08          ; Load an I/O Location to Register
ADE0:	53-4B       	sbci r21, 0xb3        ; Subtract Immediate with Carry SBI
ADE2:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
ADE4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADE6:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
ADE8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
ADEA:	6A-51       	subi r22, 0x1a        ; Subtract Immediate
ADEC:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADEE:	56-FB       	bst r21, 6            ; Bit Store from Bit in Register to T Flag in SREG
ADF0:	56-49       	sbci r21, 0x96        ; Subtract Immediate with Carry SBI
ADF2:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
ADF4:	0F-FD       	.data 0xfd0f          ; Binary data
ADF6:	88-B1       	in r24, 0x08          ; Load an I/O Location to Register
ADF8:	55-4B       	sbci r21, 0xb5        ; Subtract Immediate with Carry SBI
ADFA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
ADFC:	8B-B9       	out 0x0b, r24         ; Store Register to I/O Location
ADFE:	01-22       	and r0, r17           ; Logical AND
AE00:	53-4B       	sbci r21, 0xb3        ; Subtract Immediate with Carry SBI
AE02:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
AE04:	53-4A       	sbci r21, 0xa3        ; Subtract Immediate with Carry SBI
AE06:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
AE08:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
AE0A:	07-E0       	ldi r16, 0x07         ; Load Immediate
AE0C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
AE0E:	00-21       	and r16, r0           ; Logical AND
AE10:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE12:	E2-FC       	sbrc r14, 2           ; Skip if Bit in Register is Cleared
AE14:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
AE16:	01-22       	and r0, r17           ; Logical AND
AE18:	50-4B       	sbci r21, 0xb0        ; Subtract Immediate with Carry SBI
AE1A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
AE1C:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
AE1E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
AE20:	13-B3       	in r17, 0x13          ; Load an I/O Location to Register
AE22:	4D-4F       	sbci r20, 0xfd        ; Subtract Immediate with Carry SBI
AE24:	38-68       	ori r19, 0x88         ; Logical OR with Immediate
AE26:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
AE28:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE2A:	2E-FA       	.data 0xfa2e          ; Binary data
AE2C:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
AE2E:	38-60       	ori r19, 0x08         ; Logical OR with Immediate
AE30:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
AE32:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
AE34:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE36:	DE-FA       	.data 0xfade          ; Binary data
AE38:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
AE3A:	6A-51       	subi r22, 0x1a        ; Subtract Immediate
AE3C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE3E:	2E-FB       	.data 0xfb2e          ; Binary data
AE40:	47-49       	sbci r20, 0x97        ; Subtract Immediate with Carry SBI
AE42:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE44:	C9-FC       	.data 0xfcc9          ; Binary data
AE46:	20-B9       	out 0x00, r18         ; Store Register to I/O Location
AE48:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
AE4A:	00-21       	and r16, r0           ; Logical AND
AE4C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE4E:	C4-FC       	sbrc r12, 4           ; Skip if Bit in Register is Cleared
AE50:	50-B1       	in r21, 0x00          ; Load an I/O Location to Register
AE52:	00-22       	and r0, r16           ; Logical AND
AE54:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
AE56:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
AE58:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
AE5A:	00-21       	and r16, r0           ; Logical AND
AE5C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE5E:	BC-FC       	.data 0xfcbc          ; Binary data
AE60:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
AE62:	01-22       	and r0, r17           ; Logical AND
AE64:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
AE66:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
AE68:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
AE6A:	00-21       	and r16, r0           ; Logical AND
AE6C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE6E:	C8-FC       	.data 0xfcc8          ; Binary data
AE70:	40-B3       	in r20, 0x10          ; Load an I/O Location to Register
AE72:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
AE74:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE76:	BE-FA       	.data 0xfabe          ; Binary data
AE78:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
AE7A:	6A-51       	subi r22, 0x1a        ; Subtract Immediate
AE7C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE7E:	0E-FB       	.data 0xfb0e          ; Binary data
AE80:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
AE82:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
AE84:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE86:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
AE88:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
AE8A:	00-21       	and r16, r0           ; Logical AND
AE8C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE8E:	C2-FC       	sbrc r12, 2           ; Skip if Bit in Register is Cleared
AE90:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
AE92:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
AE94:	00-47       	sbci r16, 0x70        ; Subtract Immediate with Carry SBI
AE96:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
AE98:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
AE9A:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AE9C:	FF-FA       	.data 0xfaff          ; Binary data
AE9E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
AEA0:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
AEA2:	30-49       	sbci r19, 0x90        ; Subtract Immediate with Carry SBI
AEA4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEA6:	AE-FB       	.data 0xfbae          ; Binary data
AEA8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
AEAA:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
AEAC:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEAE:	EE-F9       	.data 0xf9ee          ; Binary data
AEB0:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
AEB2:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
AEB4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEB6:	A6-FB       	bst r26, 6            ; Bit Store from Bit in Register to T Flag in SREG
AEB8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
AEBA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
AEBC:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEBE:	E6-F9       	bld r30, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
AEC0:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
AEC2:	D8-61       	ori r29, 0x18         ; Logical OR with Immediate
AEC4:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
AEC6:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
AEC8:	CB-B9       	out 0x0b, r28         ; Store Register to I/O Location
AECA:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
AECC:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
AECE:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
AED0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
AED2:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
AED4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AED6:	D8-F9       	.data 0xf9d8          ; Binary data
AED8:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
AEDA:	00-21       	and r16, r0           ; Logical AND
AEDC:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEDE:	9A-FC       	.data 0xfc9a          ; Binary data
AEE0:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
AEE2:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
AEE4:	00-47       	sbci r16, 0x70        ; Subtract Immediate with Carry SBI
AEE6:	11-4E       	sbci r17, 0xe1        ; Subtract Immediate with Carry SBI
AEE8:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
AEEA:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
AEEC:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEEE:	D6-FA       	bst r13, 6            ; Bit Store from Bit in Register to T Flag in SREG
AEF0:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
AEF2:	F0-69       	ori r31, 0x90         ; Logical OR with Immediate
AEF4:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AEF6:	CA-F9       	.data 0xf9ca          ; Binary data
AEF8:	F0-61       	ori r31, 0x10         ; Logical OR with Immediate
AEFA:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
AEFC:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
AEFE:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
AF00:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
AF02:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
AF04:	00-21       	and r16, r0           ; Logical AND
AF06:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AF08:	67-FC       	sbrc r6, 7            ; Skip if Bit in Register is Cleared
AF0A:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
AF0C:	00-22       	and r0, r16           ; Logical AND
AF0E:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
AF10:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
AF12:	07-E0       	ldi r16, 0x07         ; Load Immediate
AF14:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
AF16:	15-49       	sbci r17, 0x95        ; Subtract Immediate with Carry SBI
AF18:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
AF1A:	7C-FC       	.data 0xfc7c          ; Binary data
AF1C:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
AF1E:	13-4A       	sbci r17, 0xa3        ; Subtract Immediate with Carry SBI
AF20:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
AF22:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
AF24:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
AF26:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
AF28:	F0-83       	st Z, r31             ; Store Indirect From Register to Data Space
AF2A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
AF2C:	64-F8       	bld r6, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
AF2E:	FF-1F       	adc r31, r31          ; Add with Carry
AF30:	98-9D       	mul r25, r8           ; Multiply Unsigned
AF32:	FF-1F       	adc r31, r31          ; Add with Carry
AF34:	C0-01       	movw r24, r0          ; Copy Register Word
AF36:	00-20       	and r0, r0            ; Logical AND
AF38:	58-7C       	andi r21, 0xc8        ; Logical AND with Immediate
AF3A:	01-00       	.data 0x0001          ; Binary data
AF3C:	DC-FB       	.data 0xfbdc          ; Binary data
AF3E:	FF-1F       	adc r31, r31          ; Add with Carry
AF40:	A4-70       	andi r26, 0x04        ; Logical AND with Immediate
AF42:	7D-3F       	cpi r23, 0xfd         ; Compare with Immediate
AF44:	7C-B9       	out 0x0c, r23         ; Store Register to I/O Location
AF46:	FF-1F       	adc r31, r31          ; Add with Carry
AF48:	98-EF       	ldi r25, 0xf8         ; Load Immediate
AF4A:	FF-1F       	adc r31, r31          ; Add with Carry
AF4C:	00-00       	nop                   ; No Operation
AF4E:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
AF50:	79-B9       	out 0x09, r23         ; Store Register to I/O Location
AF52:	FF-1F       	adc r31, r31          ; Add with Carry
AF54:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
AF56:	3B-45       	sbci r19, 0x5b        ; Subtract Immediate with Carry SBI
AF58:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
AF5A:	FF-1F       	adc r31, r31          ; Add with Carry
AF5C:	C4-FA       	bst r12, 4            ; Bit Store from Bit in Register to T Flag in SREG
AF5E:	FF-1F       	adc r31, r31          ; Add with Carry
AF60:	00-00       	nop                   ; No Operation
AF62:	A0-41       	sbci r26, 0x10        ; Subtract Immediate with Carry SBI
AF64:	00-00       	nop                   ; No Operation
AF66:	C8-42       	sbci r28, 0x28        ; Subtract Immediate with Carry SBI
AF68:	D4-FB       	bst r29, 4            ; Bit Store from Bit in Register to T Flag in SREG
AF6A:	FF-1F       	adc r31, r31          ; Add with Carry
AF6C:	00-00       	nop                   ; No Operation
AF6E:	2D-44       	sbci r18, 0x4d        ; Subtract Immediate with Carry SBI
AF70:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
AF72:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
AF74:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
AF76:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
AF78:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
AF7A:	93-46       	sbci r25, 0x63        ; Subtract Immediate with Carry SBI
AF7C:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AF7E:	68-FD       	.data 0xfd68          ; Binary data
AF80:	B9-F5       	brbc 1, .+110         ; Branch if Bit in SREG is Cleared
AF82:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
AF84:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
AF86:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
AF88:	C8-79       	andi r28, 0x98        ; Logical AND with Immediate
AF8A:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
AF8C:	00-0F       	add r16, r16          ; Add without Carry
AF8E:	35-DD       	rcall .+6762          ; Relative Call to Subroutine
AF90:	00-26       	clr r512              ; Clear Register
AF92:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
AF94:	FF-24       	clr r255              ; Clear Register
AF96:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AF98:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
AF9A:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AF9C:	9B-FD       	.data 0xfd9b          ; Binary data
AF9E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AFA0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
AFA2:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AFA4:	97-FD       	sbrc r25, 7           ; Skip if Bit in Register is Cleared
AFA6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AFA8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
AFAA:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AFAC:	93-FD       	sbrc r25, 3           ; Skip if Bit in Register is Cleared
AFAE:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
AFB0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
AFB2:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AFB4:	8F-FD       	.data 0xfd8f          ; Binary data
AFB6:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
AFB8:	05-20       	and r0, r5            ; Logical AND
AFBA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
AFBC:	96-71       	andi r25, 0x16        ; Logical AND with Immediate
AFBE:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AFC0:	89-FD       	.data 0xfd89          ; Binary data
AFC2:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
AFC4:	02-20       	and r0, r2            ; Logical AND
AFC6:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
AFC8:	79-FD       	.data 0xfd79          ; Binary data
AFCA:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
AFCC:	7F-42       	sbci r23, 0x2f        ; Subtract Immediate with Carry SBI
AFCE:	8D-F8       	.data 0xf88d          ; Binary data
AFD0:	0C-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
AFD2:	8D-F8       	.data 0xf88d          ; Binary data
AFD4:	0D-40       	sbci r16, 0x0d        ; Subtract Immediate with Carry SBI
AFD6:	8D-F8       	.data 0xf88d          ; Binary data
AFD8:	0E-B0       	in r0, 0x0e           ; Load an I/O Location to Register
AFDA:	03-A8       	std Y+51, r0          ; Store Indirect From Register to Data Space
AFDC:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
AFDE:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
AFE0:	25-FE       	sbrs r2, 5            ; Skip if Bit in Register is Set
AFE2:	01-23       	and r16, r17          ; Logical AND
AFE4:	00-93-01-96 	sts 0x9601, r16       ; Store Direct to Data Space
AFE8:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
AFEA:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
AFEC:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
AFEE:	40-F6       	brbc 0, .-112         ; Branch if Bit in SREG is Cleared
AFF0:	B8-33       	cpi r27, 0x38         ; Compare with Immediate
AFF2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
AFF4:	53-FE       	sbrs r5, 3            ; Skip if Bit in Register is Set
AFF6:	01-36       	cpi r16, 0x61         ; Compare with Immediate
AFF8:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
AFFA:	CC-D1       	rcall .+920           ; Relative Call to Subroutine
AFFC:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
AFFE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B000:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
B002:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
B004:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
B006:	89-B0       	in r8, 0x09           ; Load an I/O Location to Register
B008:	01-22       	and r0, r17           ; Logical AND
B00A:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
B00C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
B00E:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
B010:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
B012:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
B014:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B016:	65-48       	sbci r22, 0x85        ; Subtract Immediate with Carry SBI
B018:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
B01A:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
B01C:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B01E:	F2-FA       	bst r15, 2            ; Bit Store from Bit in Register to T Flag in SREG
B020:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B022:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
B024:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
B026:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
B028:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
B02A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B02C:	64-2B       	or r22, r20           ; Logical OR
B02E:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
B030:	8D-80       	ldd r8, Y+5           ; Load Indirect from Data Space to Register
B032:	64-22       	and r6, r20           ; Logical AND
B034:	5F-4B       	sbci r21, 0xbf        ; Subtract Immediate with Carry SBI
B036:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B038:	60-4B       	sbci r22, 0xb0        ; Subtract Immediate with Carry SBI
B03A:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
B03C:	1E-23       	and r17, r30          ; Logical AND
B03E:	8D-F8       	.data 0xf88d          ; Binary data
B040:	00-30       	cpi r16, 0x00         ; Compare with Immediate
B042:	8D-F8       	.data 0xf88d          ; Binary data
B044:	01-30       	cpi r16, 0x01         ; Compare with Immediate
B046:	8D-F8       	.data 0xf88d          ; Binary data
B048:	02-30       	cpi r16, 0x02         ; Compare with Immediate
B04A:	32-20       	and r3, r2            ; Logical AND
B04C:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
B04E:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B050:	95-FA       	bst r9, 5             ; Bit Store from Bit in Register to T Flag in SREG
B052:	00-23       	and r16, r16          ; Logical AND
B054:	8D-F8       	.data 0xf88d          ; Binary data
B056:	04-30       	cpi r16, 0x04         ; Compare with Immediate
B058:	8D-F8       	.data 0xf88d          ; Binary data
B05A:	05-30       	cpi r16, 0x05         ; Compare with Immediate
B05C:	8D-F8       	.data 0xf88d          ; Binary data
B05E:	06-30       	cpi r16, 0x06         ; Compare with Immediate
B060:	33-20       	and r3, r3            ; Logical AND
B062:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
B064:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B066:	8A-FA       	.data 0xfa8a          ; Binary data
B068:	00-2C       	mov r0, r0            ; Copy Register
B06A:	29-DD       	rcall .+6738          ; Relative Call to Subroutine
B06C:	34-25       	clr r308              ; Clear Register
B06E:	54-4E       	sbci r21, 0xe4        ; Subtract Immediate with Carry SBI
B070:	0A-27       	clr r778              ; Clear Register
B072:	14-EA       	ldi r17, 0xa4         ; Load Immediate
B074:	06-03       	mulsu r16, r22        ; Multiply Signed with Unsigned
B076:	03-D5       	rcall .+2566          ; Relative Call to Subroutine
B078:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
B07A:	63-F0       	brbs 3, .+24          ; Branch if Bit in SREG is Set
B07C:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
B07E:	01-33       	cpi r16, 0x31         ; Compare with Immediate
B080:	04-EB       	ldi r16, 0xb4         ; Load Immediate
B082:	D4-74       	andi r29, 0x44        ; Logical AND with Immediate
B084:	64-10       	cpse r6, r4           ; Compare Skip if Equal
B086:	00-2B       	or r16, r16           ; Logical OR
B088:	0C-DD       	rcall .+6680          ; Relative Call to Subroutine
B08A:	32-23       	and r19, r18          ; Logical AND
B08C:	8D-F8       	.data 0xf88d          ; Binary data
B08E:	08-30       	cpi r16, 0x08         ; Compare with Immediate
B090:	00-23       	and r16, r16          ; Logical AND
B092:	8D-F8       	.data 0xf88d          ; Binary data
B094:	09-30       	cpi r16, 0x09         ; Compare with Immediate
B096:	8D-F8       	.data 0xf88d          ; Binary data
B098:	0A-30       	cpi r16, 0x0a         ; Compare with Immediate
B09A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
B09C:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
B09E:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B0A0:	6D-FA       	.data 0xfa6d          ; Binary data
B0A2:	09-E0       	ldi r16, 0x09         ; Load Immediate
B0A4:	8D-F8       	.data 0xf88d          ; Binary data
B0A6:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
B0A8:	8D-F8       	.data 0xf88d          ; Binary data
B0AA:	0D-70       	andi r16, 0x0d        ; Logical AND with Immediate
B0AC:	8D-F8       	.data 0xf88d          ; Binary data
B0AE:	0E-70       	andi r16, 0x0e        ; Logical AND with Immediate
B0B0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
B0B2:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
B0B4:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B0B6:	62-FA       	bst r6, 2             ; Bit Store from Bit in Register to T Flag in SREG
B0B8:	01-35       	cpi r16, 0x51         ; Compare with Immediate
B0BA:	00-2C       	mov r0, r0            ; Copy Register
B0BC:	D9-DC       	rcall .+6578          ; Relative Call to Subroutine
B0BE:	00-E0       	ldi r16, 0x00         ; Load Immediate
B0C0:	34-25       	clr r308              ; Clear Register
B0C2:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
B0C4:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
B0C6:	1E-23       	and r17, r30          ; Logical AND
B0C8:	8D-F8       	.data 0xf88d          ; Binary data
B0CA:	10-30       	cpi r17, 0x00         ; Compare with Immediate
B0CC:	8D-F8       	.data 0xf88d          ; Binary data
B0CE:	11-30       	cpi r17, 0x01         ; Compare with Immediate
B0D0:	8D-F8       	.data 0xf88d          ; Binary data
B0D2:	12-30       	cpi r17, 0x02         ; Compare with Immediate
B0D4:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
B0D6:	0A-00       	.data 0x000a          ; Binary data
B0D8:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
B0DA:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B0DC:	4F-FA       	.data 0xfa4f          ; Binary data
B0DE:	00-23       	and r16, r16          ; Logical AND
B0E0:	8D-F8       	.data 0xf88d          ; Binary data
B0E2:	14-30       	cpi r17, 0x04         ; Compare with Immediate
B0E4:	8D-F8       	.data 0xf88d          ; Binary data
B0E6:	15-30       	cpi r17, 0x05         ; Compare with Immediate
B0E8:	8D-F8       	.data 0xf88d          ; Binary data
B0EA:	16-30       	cpi r17, 0x06         ; Compare with Immediate
B0EC:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
B0EE:	0B-00       	.data 0x000b          ; Binary data
B0F0:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
B0F2:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B0F4:	43-FA       	bst r4, 3             ; Bit Store from Bit in Register to T Flag in SREG
B0F6:	0C-35       	cpi r16, 0x5c         ; Compare with Immediate
B0F8:	00-2C       	mov r0, r0            ; Copy Register
B0FA:	27-DD       	rcall .+6734          ; Relative Call to Subroutine
B0FC:	30-4E       	sbci r19, 0xe0        ; Subtract Immediate with Carry SBI
B0FE:	0A-27       	clr r778              ; Clear Register
B100:	14-EA       	ldi r17, 0xa4         ; Load Immediate
B102:	06-03       	mulsu r16, r22        ; Multiply Signed with Unsigned
B104:	03-D5       	rcall .+2566          ; Relative Call to Subroutine
B106:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
B108:	63-F0       	brbs 3, .+24          ; Branch if Bit in SREG is Set
B10A:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
B10C:	01-33       	cpi r16, 0x31         ; Compare with Immediate
B10E:	04-EB       	ldi r16, 0xb4         ; Load Immediate
B110:	D4-74       	andi r29, 0x44        ; Logical AND with Immediate
B112:	64-10       	cpse r6, r4           ; Compare Skip if Equal
B114:	00-2B       	or r16, r16           ; Logical OR
B116:	0C-DD       	rcall .+6680          ; Relative Call to Subroutine
B118:	00-23       	and r16, r16          ; Logical AND
B11A:	8D-F8       	.data 0xf88d          ; Binary data
B11C:	18-30       	cpi r17, 0x08         ; Compare with Immediate
B11E:	8D-F8       	.data 0xf88d          ; Binary data
B120:	19-30       	cpi r17, 0x09         ; Compare with Immediate
B122:	32-23       	and r19, r18          ; Logical AND
B124:	8D-F8       	.data 0xf88d          ; Binary data
B126:	1A-30       	cpi r17, 0x0a         ; Compare with Immediate
B128:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
B12A:	06-A9       	std Y+54, r16         ; Store Indirect From Register to Data Space
B12C:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B12E:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
B130:	09-E0       	ldi r16, 0x09         ; Load Immediate
B132:	8D-F8       	.data 0xf88d          ; Binary data
B134:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
B136:	8D-F8       	.data 0xf88d          ; Binary data
B138:	1D-70       	andi r17, 0x0d        ; Logical AND with Immediate
B13A:	8D-F8       	.data 0xf88d          ; Binary data
B13C:	1E-70       	andi r17, 0x0e        ; Logical AND with Immediate
B13E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
B140:	07-A9       	std Y+55, r16         ; Store Indirect From Register to Data Space
B142:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B144:	1B-FA       	.data 0xfa1b          ; Binary data
B146:	01-35       	cpi r16, 0x51         ; Compare with Immediate
B148:	00-2C       	mov r0, r0            ; Copy Register
B14A:	D9-DC       	rcall .+6578          ; Relative Call to Subroutine
B14C:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
B14E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
B150:	73-B1       	in r23, 0x03          ; Load an I/O Location to Register
B152:	1E-4A       	sbci r17, 0xae        ; Subtract Immediate with Carry SBI
B154:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
B156:	01-33       	cpi r16, 0x31         ; Compare with Immediate
B158:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
B15A:	03-2B       	or r16, r19           ; Logical OR
B15C:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
B15E:	00-20       	and r0, r0            ; Logical AND
B160:	09-21       	and r16, r9           ; Logical AND
B162:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B164:	B7-FC       	sbrc r11, 7           ; Skip if Bit in Register is Cleared
B166:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
B168:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
B16A:	00-22       	and r0, r16           ; Logical AND
B16C:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
B16E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B170:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
B172:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
B174:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
B176:	00-22       	and r0, r16           ; Logical AND
B178:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
B17A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
B17C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B17E:	FA-72       	andi r31, 0x2a        ; Logical AND with Immediate
B180:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
B182:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B184:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
B186:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B188:	01-2B       	or r16, r17           ; Logical OR
B18A:	06-DC       	rcall .+6156          ; Relative Call to Subroutine
B18C:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
B18E:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
B190:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B192:	96-71       	andi r25, 0x16        ; Logical AND with Immediate
B194:	FF-22       	and r15, r31          ; Logical AND
B196:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B198:	EB-FE       	.data 0xfeeb          ; Binary data
B19A:	09-B0       	in r0, 0x09           ; Load an I/O Location to Register
B19C:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
B19E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
B1A0:	64-FA       	bst r6, 4             ; Bit Store from Bit in Register to T Flag in SREG
B1A2:	FF-1F       	adc r31, r31          ; Add with Carry
B1A4:	5C-FA       	.data 0xfa5c          ; Binary data
B1A6:	FF-1F       	adc r31, r31          ; Add with Carry
B1A8:	94-F9       	bld r25, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
B1AA:	FF-1F       	adc r31, r31          ; Add with Carry
B1AC:	00-00       	nop                   ; No Operation
B1AE:	E1-44       	sbci r30, 0x41        ; Subtract Immediate with Carry SBI
B1B0:	68-92       	.data 0x9268          ; Binary data
B1B2:	FF-1F       	adc r31, r31          ; Add with Carry
B1B4:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
B1B6:	FF-1F       	adc r31, r31          ; Add with Carry
B1B8:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
B1BA:	FF-1F       	adc r31, r31          ; Add with Carry
B1BC:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
B1BE:	FF-1F       	adc r31, r31          ; Add with Carry
B1C0:	01-00       	.data 0x0001          ; Binary data
B1C2:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
B1C4:	70-9D       	mul r23, r0           ; Multiply Unsigned
B1C6:	FF-1F       	adc r31, r31          ; Add with Carry
B1C8:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
B1CA:	FF-1F       	adc r31, r31          ; Add with Carry
B1CC:	9C-9D       	mul r25, r12          ; Multiply Unsigned
B1CE:	FF-1F       	adc r31, r31          ; Add with Carry
B1D0:	48-F9       	.data 0xf948          ; Binary data
B1D2:	FF-1F       	adc r31, r31          ; Add with Carry
B1D4:	70-FB       	bst r23, 0            ; Bit Store from Bit in Register to T Flag in SREG
B1D6:	FF-1F       	adc r31, r31          ; Add with Carry
B1D8:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
B1DA:	FF-1F       	adc r31, r31          ; Add with Carry
B1DC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
B1DE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B1E0:	11-FF       	sbrs r17, 1           ; Skip if Bit in Register is Set
B1E2:	00-23       	and r16, r16          ; Logical AND
B1E4:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
B1E6:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
B1E8:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
B1EA:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
B1EC:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
B1EE:	16-FF       	sbrs r17, 6           ; Skip if Bit in Register is Set
B1F0:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
B1F2:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
B1F4:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
B1F6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
B1F8:	D8-F7       	brbc 0, .-10          ; Branch if Bit in SREG is Cleared
B1FA:	FF-1F       	adc r31, r31          ; Add with Carry
B1FC:	48-F9       	.data 0xf948          ; Binary data
B1FE:	FF-1F       	adc r31, r31          ; Add with Carry
B200:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
B202:	FF-1F       	adc r31, r31          ; Add with Carry
B204:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
B206:	07-22       	and r0, r23           ; Logical AND
B208:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
B20A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B20C:	01-22       	and r0, r17           ; Logical AND
B20E:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
B210:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
B212:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B214:	E3-FF       	sbrs r30, 3           ; Skip if Bit in Register is Set
B216:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
B218:	48-F9       	.data 0xf948          ; Binary data
B21A:	FF-1F       	adc r31, r31          ; Add with Carry
B21C:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
B21E:	FF-1F       	adc r31, r31          ; Add with Carry
B220:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
B222:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
B224:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
B226:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
B228:	00-2E       	mov r0, r16           ; Copy Register
B22A:	40-DD       	rcall .+6784          ; Relative Call to Subroutine
B22C:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
B22E:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
B230:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
B232:	B3-F8       	bld r11, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
B234:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
B236:	22-4C       	sbci r18, 0xc2        ; Subtract Immediate with Carry SBI
B238:	00-25       	clr r256              ; Clear Register
B23A:	DF-F8       	.data 0xf8df          ; Binary data
B23C:	88-A0       	ldd r8, Y+32          ; Load Indirect from Data Space to Register
B23E:	DF-F8       	.data 0xf8df          ; Binary data
B240:	88-90       	.data 0x9088          ; Binary data
B242:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
B244:	34-F8       	bld r3, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
B246:	06-CC       	rjmp .-2036           ; Relative Jump
B248:	34-F8       	bld r3, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
B24A:	04-0C       	add r0, r4            ; Add without Carry
B24C:	34-F8       	bld r3, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
B24E:	0A-1C       	adc r0, r10           ; Add with Carry
B250:	23-88       	std Y+19, r2          ; Store Indirect From Register to Data Space
B252:	0B-B9       	out 0x0b, r16         ; Store Register to I/O Location
B254:	0B-B2       	in r0, 0x1b           ; Load an I/O Location to Register
B256:	07-E0       	ldi r16, 0x07         ; Load Immediate
B258:	1B-B2       	in r1, 0x1b           ; Load an I/O Location to Register
B25A:	07-FB       	bst r16, 7            ; Bit Store from Bit in Register to T Flag in SREG
B25C:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
B25E:	AA-FB       	.data 0xfbaa          ; Binary data
B260:	03-B3       	in r16, 0x13          ; Load an I/O Location to Register
B262:	09-B2       	in r0, 0x19           ; Load an I/O Location to Register
B264:	01-EB       	ldi r16, 0xb1         ; Load Immediate
B266:	93-13       	cpse r25, r19         ; Compare Skip if Equal
B268:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
B26A:	02-1C       	adc r0, r2            ; Add with Carry
B26C:	59-B9       	out 0x09, r21         ; Store Register to I/O Location
B26E:	07-FA       	bst r0, 7             ; Bit Store from Bit in Register to T Flag in SREG
B270:	8C-FC       	.data 0xfc8c          ; Binary data
B272:	BC-FB       	.data 0xfbbc          ; Binary data
B274:	F0-F0       	brbs 0, .+60          ; Branch if Bit in SREG is Set
B276:	A9-FB       	.data 0xfba9          ; Binary data
B278:	00-C1       	rjmp .+512            ; Relative Jump
B27A:	49-08       	sbc r4, r9            ; Subtract with Carry
B27C:	01-EB       	ldi r16, 0xb1         ; Load Immediate
B27E:	41-01       	movw r8, r2           ; Copy Register Word
B280:	40-1A       	sub r4, r16           ; Subtract Without Carry
B282:	02-28       	or r0, r2             ; Logical OR
B284:	0F-D1       	rcall .+542           ; Relative Call to Subroutine
B286:	B8-EB       	ldi r27, 0xb8         ; Load Immediate
B288:	03-1F       	adc r16, r19          ; Add with Carry
B28A:	0C-DD       	rcall .+6680          ; Relative Call to Subroutine
B28C:	32-F8       	bld r3, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
B28E:	08-1C       	adc r0, r8            ; Add with Carry
B290:	0B-44       	sbci r16, 0x4b        ; Subtract Immediate with Carry SBI
B292:	B8-EB       	ldi r27, 0xb8         ; Load Immediate
B294:	03-1F       	adc r16, r19          ; Add with Carry
B296:	06-DA       	rcall .+5132          ; Relative Call to Subroutine
B298:	F8-F7       	brbc 0, .-2           ; Branch if Bit in SREG is Cleared
B29A:	20-FD       	sbrc r18, 0           ; Skip if Bit in Register is Cleared
B29C:	18-B9       	out 0x08, r17         ; Store Register to I/O Location
B29E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B2A0:	B1-FE       	sbrs r11, 1           ; Skip if Bit in Register is Set
B2A2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B2A4:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
B2A6:	01-35       	cpi r16, 0x51         ; Compare with Immediate
B2A8:	0C-34       	cpi r16, 0x4c         ; Compare with Immediate
B2AA:	B5-42       	sbci r27, 0x25        ; Subtract Immediate with Carry SBI
B2AC:	C9-D1       	rcall .+914           ; Relative Call to Subroutine
B2AE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B2B0:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
B2B2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
B2B4:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
B2B6:	FF-1F       	adc r31, r31          ; Add with Carry
B2B8:	5C-FA       	.data 0xfa5c          ; Binary data
B2BA:	FF-1F       	adc r31, r31          ; Add with Carry
B2BC:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
B2BE:	FF-1F       	adc r31, r31          ; Add with Carry
B2C0:	AA-F9       	.data 0xf9aa          ; Binary data
B2C2:	FF-1F       	adc r31, r31          ; Add with Carry
B2C4:	D3-4D       	sbci r29, 0xd3        ; Subtract Immediate with Carry SBI
B2C6:	62-10       	cpse r6, r2           ; Compare Skip if Equal
B2C8:	AB-AA       	std Y+51, r10         ; Store Indirect From Register to Data Space
B2CA:	AA-AA       	std Y+50, r10         ; Store Indirect From Register to Data Space
B2CC:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
B2CE:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
B2D0:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
B2D2:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
B2D4:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
B2D6:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
B2D8:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
B2DA:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
B2DC:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
B2DE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B2E0:	C8-76       	andi r28, 0x68        ; Logical AND with Immediate
B2E2:	00-2E       	mov r0, r16           ; Copy Register
B2E4:	32-DD       	rcall .+6756          ; Relative Call to Subroutine
B2E6:	1B-48       	sbci r17, 0x8b        ; Subtract Immediate with Carry SBI
B2E8:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
B2EA:	00-01       	movw r0, r0           ; Copy Register Word
B2EC:	02-EB       	ldi r16, 0xb2         ; Load Immediate
B2EE:	01-0B       	sbc r16, r17          ; Subtract with Carry
B2F0:	D3-17       	cp r29, r19           ; Compare
B2F2:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
B2F4:	EB-1B       	sub r30, r27          ; Subtract Without Carry
B2F6:	93-44       	sbci r25, 0x43        ; Subtract Immediate with Carry SBI
B2F8:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B2FA:	FF-0B       	sbc r31, r31          ; Subtract with Carry
B2FC:	00-24       	clr r0                ; Clear Register
B2FE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B300:	05-0A       	sbc r0, r21           ; Subtract with Carry
B302:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B304:	C8-79       	andi r28, 0x98        ; Logical AND with Immediate
B306:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
B308:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
B30A:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B30C:	E3-FB       	bst r30, 3            ; Bit Store from Bit in Register to T Flag in SREG
B30E:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
B310:	02-20       	and r0, r2            ; Logical AND
B312:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B314:	D3-FB       	bst r29, 3            ; Bit Store from Bit in Register to T Flag in SREG
B316:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
B318:	6D-42       	sbci r22, 0x2d        ; Subtract Immediate with Carry SBI
B31A:	8D-F8       	.data 0xf88d          ; Binary data
B31C:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
B31E:	FF-23       	and r31, r31          ; Logical AND
B320:	8D-F8       	.data 0xf88d          ; Binary data
B322:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
B324:	8D-F8       	.data 0xf88d          ; Binary data
B326:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
B328:	03-A8       	std Y+51, r0          ; Store Indirect From Register to Data Space
B32A:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
B32C:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
B32E:	7E-FC       	.data 0xfc7e          ; Binary data
B330:	00-23       	and r16, r16          ; Logical AND
B332:	00-93-4F-F0 	sts 0xf04f, r16       ; Store Direct to Data Space
B336:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
B338:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
B33A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
B33C:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
B33E:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
B340:	43-46       	sbci r20, 0x63        ; Subtract Immediate with Carry SBI
B342:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B344:	AB-FC       	.data 0xfcab          ; Binary data
B346:	01-34       	cpi r16, 0x41         ; Compare with Immediate
B348:	B4-42       	sbci r27, 0x24        ; Subtract Immediate with Carry SBI
B34A:	DC-D1       	rcall .+952           ; Relative Call to Subroutine
B34C:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
B34E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B350:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
B352:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
B354:	81-80       	ldd r8, Y+1           ; Load Indirect from Data Space to Register
B356:	80-80       	ld r8, Z              ; Load Indirect from Data Space to Register
B358:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
B35A:	F0-43       	sbci r31, 0x30        ; Subtract Immediate with Carry SBI
B35C:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
B35E:	99-4B       	sbci r25, 0xb9        ; Subtract Immediate with Carry SBI
B360:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
B362:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
B364:	98-49       	sbci r25, 0x98        ; Subtract Immediate with Carry SBI
B366:	0C-68       	ori r16, 0x8c         ; Logical OR with Immediate
B368:	1C-44       	sbci r17, 0x4c        ; Subtract Immediate with Carry SBI
B36A:	24-EA       	ldi r18, 0xa4         ; Load Immediate
B36C:	E4-74       	andi r30, 0x44        ; Logical AND with Immediate
B36E:	97-49       	sbci r25, 0x97        ; Subtract Immediate with Carry SBI
B370:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
B372:	A1-42       	sbci r26, 0x21        ; Subtract Immediate with Carry SBI
B374:	D8-BF       	out 0x38, r29         ; Store Register to I/O Location
B376:	A1-F1       	brbs 1, .+104         ; Branch if Bit in SREG is Set
B378:	10-04       	cpc r1, r0            ; Compare with Carry
B37A:	95-49       	sbci r25, 0x95        ; Subtract Immediate with Carry SBI
B37C:	09-88       	std Y+17, r0          ; Store Indirect From Register to Data Space
B37E:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
B380:	53-D0       	rcall .+166           ; Relative Call to Subroutine
B382:	94-48       	sbci r25, 0x84        ; Subtract Immediate with Carry SBI
B384:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
B386:	00-28       	or r0, r0             ; Logical OR
B388:	4F-D1       	rcall .+670           ; Relative Call to Subroutine
B38A:	5B-1A       	sub r5, r27           ; Subtract Without Carry
B38C:	83-EA       	ldi r24, 0xa3         ; Load Immediate
B38E:	E3-71       	andi r30, 0x13        ; Logical AND with Immediate
B390:	A1-EB       	ldi r26, 0xb1         ; Load Immediate
B392:	E3-71       	andi r30, 0x13        ; Logical AND with Immediate
B394:	00-29       	or r16, r0            ; Logical OR
B396:	3A-DB       	rcall .+5748          ; Relative Call to Subroutine
B398:	00-24       	clr r0                ; Clear Register
B39A:	8C-4E       	sbci r24, 0xec        ; Subtract Immediate with Carry SBI
B39C:	DF-F8       	.data 0xf8df          ; Binary data
B39E:	6C-82       	std Y+4, r6           ; Store Indirect From Register to Data Space
B3A0:	8D-4F       	sbci r24, 0xfd        ; Subtract Immediate with Carry SBI
B3A2:	00-2B       	or r16, r16           ; Logical OR
B3A4:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
B3A6:	1D-1C       	adc r1, r13           ; Add with Carry
B3A8:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
B3AA:	01-25       	clr r257              ; Clear Register
B3AC:	00-E0       	ldi r16, 0x00         ; Load Immediate
B3AE:	FF-25       	clr r511              ; Clear Register
B3B0:	6D-B2       	in r6, 0x1d           ; Load an I/O Location to Register
B3B2:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
B3B4:	05-25       	clr r261              ; Clear Register
B3B6:	00-2D       	mov r16, r0           ; Copy Register
B3B8:	1D-DB       	rcall .+5690          ; Relative Call to Subroutine
B3BA:	33-68       	ori r19, 0x83         ; Logical OR with Immediate
B3BC:	9D-42       	sbci r25, 0x2d        ; Subtract Immediate with Carry SBI
B3BE:	1A-DA       	rcall .+5172          ; Relative Call to Subroutine
B3C0:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
B3C2:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
B3C4:	00-0A       	sbc r0, r16           ; Subtract with Carry
B3C6:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B3C8:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
B3CA:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B3CC:	8D-F8       	.data 0xf88d          ; Binary data
B3CE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B3D0:	00-09       	sbc r16, r0           ; Subtract with Carry
B3D2:	8D-F8       	.data 0xf88d          ; Binary data
B3D4:	00-90-41-46 	lds r0, 0x4641        ; Load Direct from Data Space (32-bit)
B3D8:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B3DA:	60-F8       	bld r6, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
B3DC:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
B3DE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B3E0:	55-FF       	sbrs r21, 5           ; Skip if Bit in Register is Set
B3E2:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B3E4:	47-FA       	bst r4, 7             ; Bit Store from Bit in Register to T Flag in SREG
B3E6:	8D-F8       	.data 0xf88d          ; Binary data
B3E8:	01-00       	.data 0x0001          ; Binary data
B3EA:	8D-F8       	.data 0xf88d          ; Binary data
B3EC:	02-90       	ld r0, -Z             ; Load Indirect from Data Space to Register
B3EE:	A8-B2       	in r10, 0x18          ; Load an I/O Location to Register
B3F0:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
B3F2:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B3F4:	95-F9       	bld r25, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
B3F6:	10-34       	cpi r17, 0x40         ; Compare with Immediate
B3F8:	72-4B       	sbci r23, 0xb2        ; Subtract Immediate with Carry SBI
B3FA:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
B3FC:	74-4B       	sbci r23, 0xb4        ; Subtract Immediate with Carry SBI
B3FE:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
B400:	D3-1A       	sub r13, r19          ; Subtract Without Carry
B402:	83-EA       	ldi r24, 0xa3         ; Load Immediate
B404:	E3-70       	andi r30, 0x03        ; Logical AND with Immediate
B406:	A0-EB       	ldi r26, 0xb0         ; Load Immediate
B408:	E3-70       	andi r30, 0x03        ; Logical AND with Immediate
B40A:	A0-42       	sbci r26, 0x20        ; Subtract Immediate with Carry SBI
B40C:	C9-DA       	rcall .+5522          ; Relative Call to Subroutine
B40E:	64-22       	and r6, r20           ; Logical AND
B410:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
B412:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
B414:	00-2B       	or r16, r16           ; Logical OR
B416:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
B418:	00-33       	cpi r16, 0x30         ; Compare with Immediate
B41A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
B41C:	01-23       	and r16, r17          ; Logical AND
B41E:	00-E0       	ldi r16, 0x00         ; Load Immediate
B420:	FF-23       	and r31, r31          ; Logical AND
B422:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
B424:	6E-4A       	sbci r22, 0xae        ; Subtract Immediate with Carry SBI
B426:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
B428:	3E-E0       	ldi r19, 0x0e         ; Load Immediate
B42A:	6E-4A       	sbci r22, 0xae        ; Subtract Immediate with Carry SBI
B42C:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
B42E:	00-2A       	or r0, r16            ; Logical OR
B430:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
B432:	52-42       	sbci r21, 0x22        ; Subtract Immediate with Carry SBI
B434:	B2-F5       	brbc 2, .+108         ; Branch if Bit in SREG is Cleared
B436:	7A-7F       	andi r23, 0xfa        ; Logical AND with Immediate
B438:	14-DA       	rcall .+5160          ; Relative Call to Subroutine
B43A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
B43C:	0F-02       	muls r16, r31         ; Multiply Signed
B43E:	01-2A       	or r0, r17            ; Logical OR
B440:	0C-DD       	rcall .+6680          ; Relative Call to Subroutine
B442:	69-4B       	sbci r22, 0xb9        ; Subtract Immediate with Carry SBI
B444:	69-4A       	sbci r22, 0xa9        ; Subtract Immediate with Carry SBI
B446:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
B448:	65-49       	sbci r22, 0x95        ; Subtract Immediate with Carry SBI
B44A:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
B44C:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
B44E:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
B450:	02-EB       	ldi r16, 0xb2         ; Load Immediate
B452:	82-02       	muls r24, r18         ; Multiply Signed
B454:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
B456:	11-44       	sbci r17, 0x41        ; Subtract Immediate with Carry SBI
B458:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
B45A:	03-E0       	ldi r16, 0x03         ; Load Immediate
B45C:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
B45E:	0F-03       	fmul r16, r23         ; Fractional Multiply Unsigned
B460:	58-4A       	sbci r21, 0xa8        ; Subtract Immediate with Carry SBI
B462:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
B464:	5D-4B       	sbci r21, 0xbd        ; Subtract Immediate with Carry SBI
B466:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
B468:	80-09       	sbc r24, r0           ; Subtract with Carry
B46A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B46C:	BF-FF       	.data 0xffbf          ; Binary data
B46E:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B470:	3B-F8       	.data 0xf83b          ; Binary data
B472:	5F-49       	sbci r21, 0x9f        ; Subtract Immediate with Carry SBI
B474:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B476:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
B478:	5E-49       	sbci r21, 0x9e        ; Subtract Immediate with Carry SBI
B47A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B47C:	07-FF       	sbrs r16, 7           ; Skip if Bit in Register is Set
B47E:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B480:	F9-F9       	.data 0xf9f9          ; Binary data
B482:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
B484:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
B486:	00-22       	and r0, r16           ; Logical AND
B488:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
B48A:	58-70       	andi r21, 0x08        ; Logical AND with Immediate
B48C:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
B48E:	51-4B       	sbci r21, 0xb1        ; Subtract Immediate with Carry SBI
B490:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
B492:	4B-B9       	out 0x0b, r20         ; Store Register to I/O Location
B494:	8D-F8       	.data 0xf88d          ; Binary data
B496:	04-20       	and r0, r4            ; Logical AND
B498:	8D-F8       	.data 0xf88d          ; Binary data
B49A:	05-00       	.data 0x0005          ; Binary data
B49C:	8D-F8       	.data 0xf88d          ; Binary data
B49E:	06-20       	and r0, r6            ; Logical AND
B4A0:	A0-B2       	in r10, 0x10          ; Load an I/O Location to Register
B4A2:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
B4A4:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B4A6:	3C-F9       	.data 0xf93c          ; Binary data
B4A8:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
B4AA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
B4AC:	43-B1       	in r20, 0x03          ; Load an I/O Location to Register
B4AE:	45-4B       	sbci r20, 0xb5        ; Subtract Immediate with Carry SBI
B4B0:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
B4B2:	02-21       	and r16, r2           ; Logical AND
B4B4:	52-4B       	sbci r21, 0xb2        ; Subtract Immediate with Carry SBI
B4B6:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
B4B8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B4BA:	FA-73       	andi r31, 0x3a        ; Logical AND with Immediate
B4BC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B4BE:	06-FF       	sbrs r16, 6           ; Skip if Bit in Register is Set
B4C0:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
B4C2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B4C4:	27-2B       	or r18, r23           ; Logical OR
B4C6:	01-DC       	rcall .+6146          ; Relative Call to Subroutine
B4C8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
B4CA:	46-FE       	sbrs r4, 6            ; Skip if Bit in Register is Set
B4CC:	41-4B       	sbci r20, 0xb1        ; Subtract Immediate with Carry SBI
B4CE:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
B4D0:	00-2B       	or r16, r16           ; Logical OR
B4D2:	6E-D0       	rcall .+220           ; Relative Call to Subroutine
B4D4:	48-49       	sbci r20, 0x98        ; Subtract Immediate with Carry SBI
B4D6:	FF-23       	and r31, r31          ; Logical AND
B4D8:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
B4DA:	4B-70       	andi r20, 0x0b        ; Logical AND with Immediate
B4DC:	14-22       	and r1, r20           ; Logical AND
B4DE:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
B4E0:	48-49       	sbci r20, 0x98        ; Subtract Immediate with Carry SBI
B4E2:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
B4E4:	4B-70       	andi r20, 0x0b        ; Logical AND with Immediate
B4E6:	8A-70       	andi r24, 0x0a        ; Logical AND with Immediate
B4E8:	36-4D       	sbci r19, 0xd6        ; Subtract Immediate with Carry SBI
B4EA:	28-88       	std Y+16, r2          ; Store Indirect From Register to Data Space
B4EC:	46-4C       	sbci r20, 0xc6        ; Subtract Immediate with Carry SBI
B4EE:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
B4F0:	08-44       	sbci r16, 0x48        ; Subtract Immediate with Carry SBI
B4F2:	8D-F8       	.data 0xf88d          ; Binary data
B4F4:	08-30       	cpi r16, 0x08         ; Compare with Immediate
B4F6:	8D-F8       	.data 0xf88d          ; Binary data
B4F8:	09-30       	cpi r16, 0x09         ; Compare with Immediate
B4FA:	8D-F8       	.data 0xf88d          ; Binary data
B4FC:	0A-20       	and r0, r10           ; Logical AND
B4FE:	00-11       	cpse r16, r0          ; Compare Skip if Equal
B500:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
B502:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B504:	3B-F8       	.data 0xf83b          ; Binary data
B506:	28-88       	std Y+16, r2          ; Store Indirect From Register to Data Space
B508:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
B50A:	C0-1A       	sub r12, r16          ; Subtract Without Carry
B50C:	20-EA       	ldi r18, 0xa0         ; Load Immediate
B50E:	E0-70       	andi r30, 0x00        ; Logical AND with Immediate
B510:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
B512:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B514:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
B516:	D8-BF       	out 0x38, r29         ; Store Register to I/O Location
B518:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
B51A:	10-00       	.data 0x0010          ; Binary data
B51C:	36-4B       	sbci r19, 0xb6        ; Subtract Immediate with Carry SBI
B51E:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
B520:	8D-F8       	.data 0xf88d          ; Binary data
B522:	0C-20       	and r0, r12           ; Logical AND
B524:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
B526:	8D-F8       	.data 0xf88d          ; Binary data
B528:	0D-20       	and r0, r13           ; Logical AND
B52A:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
B52C:	8D-F8       	.data 0xf88d          ; Binary data
B52E:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
B530:	00-11       	cpse r16, r0          ; Compare Skip if Equal
B532:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
B534:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B536:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
B538:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
B53A:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
B53C:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
B53E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B540:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B542:	D3-73       	andi r29, 0x33        ; Logical AND with Immediate
B544:	A0-EB       	ldi r26, 0xb0         ; Load Immediate
B546:	63-00       	.data 0x0063          ; Binary data
B548:	20-EA       	ldi r18, 0xa0         ; Load Immediate
B54A:	E0-70       	andi r30, 0x00        ; Logical AND with Immediate
B54C:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
B54E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B550:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
B552:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
B554:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
B556:	10-00       	.data 0x0010          ; Binary data
B558:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
B55A:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
B55C:	8D-F8       	.data 0xf88d          ; Binary data
B55E:	10-20       	and r1, r0            ; Logical AND
B560:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
B562:	8D-F8       	.data 0xf88d          ; Binary data
B564:	11-20       	and r1, r1            ; Logical AND
B566:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
B568:	8D-F8       	.data 0xf88d          ; Binary data
B56A:	12-30       	cpi r17, 0x02         ; Compare with Immediate
B56C:	00-11       	cpse r16, r0          ; Compare Skip if Equal
B56E:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
B570:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B572:	04-F8       	bld r0, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
B574:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
B576:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
B578:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
B57A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B57C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B57E:	D3-73       	andi r29, 0x33        ; Logical AND with Immediate
B580:	02-EB       	ldi r16, 0xb2         ; Load Immediate
B582:	63-00       	.data 0x0063          ; Binary data
B584:	20-EA       	ldi r18, 0xa0         ; Load Immediate
B586:	E0-70       	andi r30, 0x00        ; Logical AND with Immediate
B588:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
B58A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
B58C:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
B58E:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
B590:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
B592:	10-00       	.data 0x0010          ; Binary data
B594:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
B596:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
B598:	8D-F8       	.data 0xf88d          ; Binary data
B59A:	14-20       	and r1, r4            ; Logical AND
B59C:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
B59E:	8D-F8       	.data 0xf88d          ; Binary data
B5A0:	15-20       	and r1, r5            ; Logical AND
B5A2:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
B5A4:	8D-F8       	.data 0xf88d          ; Binary data
B5A6:	16-30       	cpi r17, 0x06         ; Compare with Immediate
B5A8:	00-11       	cpse r16, r0          ; Compare Skip if Equal
B5AA:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
B5AC:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
B5AE:	E6-FF       	sbrs r30, 6           ; Skip if Bit in Register is Set
B5B0:	04-E0       	ldi r16, 0x04         ; Load Immediate
B5B2:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
B5B4:	FF-22       	and r15, r31          ; Logical AND
B5B6:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
B5B8:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
B5BA:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
B5BC:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
B5BE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B5C0:	F0-83       	st Z, r31             ; Store Indirect From Register to Data Space
B5C2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
B5C4:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
B5C6:	FF-1F       	adc r31, r31          ; Add with Carry
B5C8:	48-FC       	.data 0xfc48          ; Binary data
B5CA:	FF-1F       	adc r31, r31          ; Add with Carry
B5CC:	48-92       	.data 0x9248          ; Binary data
B5CE:	FF-1F       	adc r31, r31          ; Add with Carry
B5D0:	24-DF       	rcall .+7752          ; Relative Call to Subroutine
B5D2:	FF-1F       	adc r31, r31          ; Add with Carry
B5D4:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
B5D6:	FF-1F       	adc r31, r31          ; Add with Carry
B5D8:	00-00       	nop                   ; No Operation
B5DA:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
B5DC:	5C-FA       	.data 0xfa5c          ; Binary data
B5DE:	FF-1F       	adc r31, r31          ; Add with Carry
B5E0:	60-FA       	bst r6, 0             ; Bit Store from Bit in Register to T Flag in SREG
B5E2:	FF-1F       	adc r31, r31          ; Add with Carry
B5E4:	98-9D       	mul r25, r8           ; Multiply Unsigned
B5E6:	FF-1F       	adc r31, r31          ; Add with Carry
B5E8:	D8-FA       	.data 0xfad8          ; Binary data
B5EA:	FF-1F       	adc r31, r31          ; Add with Carry
B5EC:	5C-F9       	.data 0xf95c          ; Binary data
B5EE:	FF-1F       	adc r31, r31          ; Add with Carry
B5F0:	00-00       	nop                   ; No Operation
B5F2:	96-42       	sbci r25, 0x26        ; Subtract Immediate with Carry SBI
B5F4:	00-00       	nop                   ; No Operation
B5F6:	34-43       	sbci r19, 0x34        ; Subtract Immediate with Carry SBI
B5F8:	60-F8       	bld r6, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
B5FA:	FF-1F       	adc r31, r31          ; Add with Carry
B5FC:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
B5FE:	FF-1F       	adc r31, r31          ; Add with Carry
B600:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
B602:	FF-1F       	adc r31, r31          ; Add with Carry
B604:	98-F8       	.data 0xf898          ; Binary data
B606:	FF-1F       	adc r31, r31          ; Add with Carry
B608:	68-FA       	.data 0xfa68          ; Binary data
B60A:	FF-1F       	adc r31, r31          ; Add with Carry
B60C:	00-00       	nop                   ; No Operation
B60E:	D2-42       	sbci r29, 0x22        ; Subtract Immediate with Carry SBI
B610:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
B612:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
B614:	87-B0       	in r8, 0x07           ; Load an I/O Location to Register
B616:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
B618:	99-46       	sbci r25, 0x69        ; Subtract Immediate with Carry SBI
B61A:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
B61C:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
B61E:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
B620:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
B622:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B624:	C8-77       	andi r28, 0x78        ; Logical AND with Immediate
B626:	00-2F       	mov r16, r16          ; Copy Register
B628:	3F-DD       	rcall .+6782          ; Relative Call to Subroutine
B62A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
B62C:	FF-02       	muls r31, r31         ; Multiply Signed
B62E:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
B630:	00-23       	and r16, r16          ; Logical AND
B632:	01-23       	and r16, r17          ; Logical AND
B634:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
B636:	03-92       	.data 0x9203          ; Binary data
B638:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B63A:	64-0B       	sbc r22, r20          ; Subtract with Carry
B63C:	0B-FB       	.data 0xfb0b          ; Binary data
B63E:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
B640:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B642:	22-2B       	or r18, r18           ; Logical OR
B644:	00-24       	clr r0                ; Clear Register
B646:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B648:	96-0A       	sbc r9, r22           ; Subtract with Carry
B64A:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
B64C:	FF-21       	and r31, r15          ; Logical AND
B64E:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B650:	41-FA       	bst r4, 1             ; Bit Store from Bit in Register to T Flag in SREG
B652:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
B654:	05-20       	and r0, r5            ; Logical AND
B656:	64-21       	and r22, r4           ; Logical AND
B658:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B65A:	3C-FA       	.data 0xfa3c          ; Binary data
B65C:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
B65E:	02-20       	and r0, r2            ; Logical AND
B660:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B662:	2C-FA       	.data 0xfa2c          ; Binary data
B664:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
B666:	6D-42       	sbci r22, 0x2d        ; Subtract Immediate with Carry SBI
B668:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
B66A:	FF-0F       	add r31, r31          ; Add without Carry
B66C:	08-D0       	rcall .+16            ; Relative Call to Subroutine
B66E:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
B670:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
B672:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
B674:	06-F6       	brbc 6, .-128         ; Branch if Bit in SREG is Cleared
B676:	02-9B       	sbis 0x00, 2          ; Skip if Bit in I/O Register is Set
B678:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B67A:	26-26       	clr r550              ; Clear Register
B67C:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
B67E:	00-E0       	ldi r16, 0x00         ; Load Immediate
B680:	00-26       	clr r512              ; Clear Register
B682:	8D-F8       	.data 0xf88d          ; Binary data
B684:	14-60       	ori r17, 0x04         ; Logical OR with Immediate
B686:	00-23       	and r16, r16          ; Logical AND
B688:	8D-F8       	.data 0xf88d          ; Binary data
B68A:	15-30       	cpi r17, 0x05         ; Compare with Immediate
B68C:	8D-F8       	.data 0xf88d          ; Binary data
B68E:	16-B0       	in r1, 0x06           ; Load an I/O Location to Register
B690:	00-93-4F-F0 	sts 0xf04f, r16       ; Store Direct to Data Space
B694:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
B696:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
B698:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
B69A:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
B69C:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
B69E:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
B6A0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B6A2:	FC-FA       	.data 0xfafc          ; Binary data
B6A4:	01-34       	cpi r16, 0x41         ; Compare with Immediate
B6A6:	BC-42       	sbci r27, 0x2c        ; Subtract Immediate with Carry SBI
B6A8:	CF-D1       	rcall .+926           ; Relative Call to Subroutine
B6AA:	07-B0       	in r0, 0x07           ; Load an I/O Location to Register
B6AC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B6AE:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
B6B0:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
B6B2:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
B6B4:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
B6B6:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
B6B8:	93-46       	sbci r25, 0x63        ; Subtract Immediate with Carry SBI
B6BA:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
B6BC:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
B6BE:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
B6C0:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
B6C2:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
B6C4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B6C6:	C8-79       	andi r28, 0x98        ; Logical AND with Immediate
B6C8:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
B6CA:	00-0F       	add r16, r16          ; Add without Carry
B6CC:	37-DD       	rcall .+6766          ; Relative Call to Subroutine
B6CE:	00-26       	clr r512              ; Clear Register
B6D0:	34-46       	sbci r19, 0x64        ; Subtract Immediate with Carry SBI
B6D2:	FF-25       	clr r511              ; Clear Register
B6D4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B6D6:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
B6D8:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B6DA:	FC-F9       	.data 0xf9fc          ; Binary data
B6DC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B6DE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
B6E0:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B6E2:	F8-F9       	.data 0xf9f8          ; Binary data
B6E4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B6E6:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
B6E8:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B6EA:	F4-F9       	bld r31, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
B6EC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B6EE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
B6F0:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B6F2:	F0-F9       	bld r31, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
B6F4:	05-20       	and r0, r5            ; Logical AND
B6F6:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
B6F8:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B6FA:	EC-F9       	.data 0xf9ec          ; Binary data
B6FC:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
B6FE:	80-28       	or r8, r0             ; Logical OR
B700:	02-20       	and r0, r2            ; Logical AND
B702:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B704:	DB-F9       	.data 0xf9db          ; Binary data
B706:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
B708:	C8-F1       	brbs 0, .+114         ; Branch if Bit in SREG is Set
B70A:	00-08       	sbc r0, r0            ; Subtract with Carry
B70C:	3B-78       	andi r19, 0x8b        ; Logical AND with Immediate
B70E:	8D-F8       	.data 0xf88d          ; Binary data
B710:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
B712:	7B-78       	andi r23, 0x8b        ; Logical AND with Immediate
B714:	8D-F8       	.data 0xf88d          ; Binary data
B716:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
B718:	BB-78       	andi r27, 0x8b        ; Logical AND with Immediate
B71A:	8D-F8       	.data 0xf88d          ; Binary data
B71C:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
B71E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B720:	C8-21       	and r28, r8           ; Logical AND
B722:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
B724:	D7-F9       	bld r29, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
B726:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
B728:	2F-73       	andi r18, 0x3f        ; Logical AND with Immediate
B72A:	00-94       	com r0                ; One's Complement
B72C:	01-96       	adiw r24, 0x01        ; Add Immediate to Word
B72E:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
B730:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
B732:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
B734:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B736:	B2-FA       	bst r11, 2            ; Bit Store from Bit in Register to T Flag in SREG
B738:	01-36       	cpi r16, 0x61         ; Compare with Immediate
B73A:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
B73C:	CA-D1       	rcall .+916           ; Relative Call to Subroutine
B73E:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
B740:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
B742:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
B744:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
B746:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
B748:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
B74A:	1E-4C       	sbci r17, 0xce        ; Subtract Immediate with Carry SBI
B74C:	86-01       	movw r16, r12         ; Copy Register Word
B74E:	A0-59       	subi r26, 0x90        ; Subtract Immediate
B750:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B752:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
B754:	20-36       	cpi r18, 0x60         ; Compare with Immediate
B756:	A3-19       	sub r26, r3           ; Subtract Without Carry
B758:	A2-5D       	subi r26, 0xd2        ; Subtract Immediate
B75A:	8D-F8       	.data 0xf88d          ; Binary data
B75C:	04-20       	and r0, r4            ; Logical AND
B75E:	5A-78       	andi r21, 0x8a        ; Logical AND with Immediate
B760:	8D-F8       	.data 0xf88d          ; Binary data
B762:	05-20       	and r0, r5            ; Logical AND
B764:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
B766:	8D-F8       	.data 0xf88d          ; Binary data
B768:	06-30       	cpi r16, 0x06         ; Compare with Immediate
B76A:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
B76C:	64-21       	and r22, r4           ; Logical AND
B76E:	37-22       	and r3, r23           ; Logical AND
B770:	01-AB       	std Y+49, r16         ; Store Indirect From Register to Data Space
B772:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B774:	9D-FF       	.data 0xff9d          ; Binary data
B776:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
B778:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
B77A:	C5-F1       	brbs 5, .+112         ; Branch if Bit in SREG is Set
B77C:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
B77E:	9B-01       	movw r18, r22         ; Copy Register Word
B780:	E4-58       	subi r30, 0x84        ; Subtract Immediate
B782:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
B784:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B786:	36-FE       	sbrs r3, 6            ; Skip if Bit in Register is Set
B788:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
B78A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B78C:	7D-FD       	.data 0xfd7d          ; Binary data
B78E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
B790:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B792:	0B-F0       	brbs 3, .+2           ; Branch if Bit in SREG is Set
B794:	21-F8       	bld r2, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
B796:	00-28       	or r0, r0             ; Logical OR
B798:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
B79A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
B79C:	01-20       	and r0, r1            ; Logical AND
B79E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B7A0:	29-FE       	.data 0xfe29          ; Binary data
B7A2:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
B7A4:	AD-01       	movw r20, r26         ; Copy Register Word
B7A6:	53-19       	sub r21, r3           ; Subtract Without Carry
B7A8:	50-51       	subi r21, 0x10        ; Subtract Immediate
B7AA:	58-60       	ori r21, 0x08         ; Logical OR with Immediate
B7AC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B7AE:	7E-52       	subi r23, 0x2e        ; Subtract Immediate
B7B0:	DA-63       	ori r29, 0x3a         ; Logical OR with Immediate
B7B2:	00-22       	and r0, r16           ; Logical AND
B7B4:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
B7B6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B7B8:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
B7BA:	FA-62       	ori r31, 0x2a         ; Logical OR with Immediate
B7BC:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
B7BE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
B7C0:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
B7C2:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
B7C4:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
B7C6:	FF-1F       	adc r31, r31          ; Add with Carry
B7C8:	2C-FC       	.data 0xfc2c          ; Binary data
B7CA:	FF-1F       	adc r31, r31          ; Add with Carry
B7CC:	BC-FB       	.data 0xfbbc          ; Binary data
B7CE:	FF-1F       	adc r31, r31          ; Add with Carry
B7D0:	6C-92       	st X, r6              ; Store Indirect From Register to Data Space
B7D2:	FF-1F       	adc r31, r31          ; Add with Carry
B7D4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
B7D6:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
B7D8:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
B7DA:	A0-4B       	sbci r26, 0xb0        ; Subtract Immediate with Carry SBI
B7DC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B7DE:	80-13       	cpse r24, r16         ; Compare Skip if Equal
B7E0:	18-7D       	andi r17, 0xd8        ; Logical AND with Immediate
B7E2:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
B7E4:	5D-F9       	.data 0xf95d          ; Binary data
B7E6:	E8-B9       	out 0x08, r30         ; Store Register to I/O Location
B7E8:	9C-4B       	sbci r25, 0xbc        ; Subtract Immediate with Carry SBI
B7EA:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B7EC:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B7EE:	DA-68       	ori r29, 0x8a         ; Logical OR with Immediate
B7F0:	01-32       	cpi r16, 0x21         ; Compare with Immediate
B7F2:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
B7F4:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
B7F6:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
B7F8:	27-30       	cpi r18, 0x07         ; Compare with Immediate
B7FA:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
B7FC:	97-4B       	sbci r25, 0xb7        ; Subtract Immediate with Carry SBI
B7FE:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B800:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B802:	97-49       	sbci r25, 0x97        ; Subtract Immediate with Carry SBI
B804:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
B806:	8A-1A       	sub r8, r26           ; Subtract Without Carry
B808:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
B80A:	94-4B       	sbci r25, 0xb4        ; Subtract Immediate with Carry SBI
B80C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B80E:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B810:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
B812:	01-2B       	or r16, r17           ; Logical OR
B814:	0B-D1       	rcall .+534           ; Relative Call to Subroutine
B816:	91-4B       	sbci r25, 0xb1        ; Subtract Immediate with Carry SBI
B818:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B81A:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B81C:	01-22       	and r0, r17           ; Logical AND
B81E:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
B820:	38-20       	and r3, r8            ; Logical AND
B822:	04-E0       	ldi r16, 0x04         ; Load Immediate
B824:	8D-4B       	sbci r24, 0xbd        ; Subtract Immediate with Carry SBI
B826:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B828:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B82A:	00-22       	and r0, r16           ; Logical AND
B82C:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
B82E:	8B-4E       	sbci r24, 0xeb        ; Subtract Immediate with Carry SBI
B830:	BD-01       	movw r22, r26         ; Copy Register Word
B832:	74-19       	sub r23, r4           ; Subtract Without Carry
B834:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
B836:	05-80       	ldd r0, Y+5           ; Load Indirect from Data Space to Register
B838:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
B83A:	04-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
B83C:	89-4B       	sbci r24, 0xb9        ; Subtract Immediate with Carry SBI
B83E:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
B840:	00-90-48-46 	lds r0, 0x4648        ; Load Direct from Data Space (32-bit)
B844:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
B846:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B848:	29-FE       	.data 0xfe29          ; Binary data
B84A:	21-6B       	ori r18, 0xb1         ; Logical OR with Immediate
B84C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B84E:	26-FE       	sbrs r2, 6            ; Skip if Bit in Register is Set
B850:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
B852:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
B854:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B856:	1A-FD       	.data 0xfd1a          ; Binary data
B858:	70-51       	subi r23, 0x10        ; Subtract Immediate
B85A:	24-6B       	ori r18, 0xb4         ; Logical OR with Immediate
B85C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B85E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B860:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
B862:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B864:	D7-FF       	sbrs r29, 7           ; Skip if Bit in Register is Set
B866:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
B868:	06-EB       	ldi r16, 0xb6         ; Load Immediate
B86A:	87-15       	cp r24, r7            ; Compare
B86C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B86E:	7E-49       	sbci r23, 0x9e        ; Subtract Immediate with Carry SBI
B870:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B872:	14-FE       	sbrs r1, 4            ; Skip if Bit in Register is Set
B874:	28-63       	ori r18, 0x38         ; Logical OR with Immediate
B876:	79-4A       	sbci r23, 0xa9        ; Subtract Immediate with Carry SBI
B878:	BB-01       	movw r22, r22         ; Copy Register Word
B87A:	D1-18       	sub r13, r1           ; Subtract Without Carry
B87C:	00-20       	and r0, r0            ; Logical AND
B87E:	08-61       	ori r16, 0x18         ; Logical OR with Immediate
B880:	D4-58       	subi r29, 0x84        ; Subtract Immediate
B882:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B884:	00-21       	and r16, r0           ; Logical AND
B886:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B888:	A7-FF       	sbrs r26, 7           ; Skip if Bit in Register is Set
B88A:	90-B1       	in r25, 0x00          ; Load an I/O Location to Register
B88C:	73-4A       	sbci r23, 0xa3        ; Subtract Immediate with Carry SBI
B88E:	BB-01       	movw r22, r22         ; Copy Register Word
B890:	D1-18       	sub r13, r1           ; Subtract Without Carry
B892:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
B894:	7E-50       	subi r23, 0x0e        ; Subtract Immediate
B896:	D0-50       	subi r29, 0x00        ; Subtract Immediate
B898:	8C-68       	ori r24, 0x8c         ; Logical OR with Immediate
B89A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B89C:	00-21       	and r16, r0           ; Logical AND
B89E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B8A0:	B9-FF       	.data 0xffb9          ; Binary data
B8A2:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
B8A4:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
B8A6:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
B8A8:	6C-4B       	sbci r22, 0xbc        ; Subtract Immediate with Carry SBI
B8AA:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B8AC:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B8AE:	9C-60       	ori r25, 0x0c         ; Logical OR with Immediate
B8B0:	20-E0       	ldi r18, 0x00         ; Load Immediate
B8B2:	6E-4B       	sbci r22, 0xbe        ; Subtract Immediate with Carry SBI
B8B4:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
B8B6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
B8B8:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B8BA:	9C-FD       	.data 0xfd9c          ; Binary data
B8BC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
B8BE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B8C0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B8C2:	9E-FF       	.data 0xff9e          ; Binary data
B8C4:	B0-B1       	in r27, 0x00          ; Load an I/O Location to Register
B8C6:	65-4E       	sbci r22, 0xe5        ; Subtract Immediate with Carry SBI
B8C8:	BC-01       	movw r22, r24         ; Copy Register Word
B8CA:	06-EB       	ldi r16, 0xb6         ; Load Immediate
B8CC:	04-08       	sbc r0, r4            ; Subtract with Carry
B8CE:	68-1E       	adc r6, r24           ; Add with Carry
B8D0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B8D2:	90-FD       	sbrc r25, 0           ; Skip if Bit in Register is Cleared
B8D4:	30-51       	subi r19, 0x10        ; Subtract Immediate
B8D6:	D8-F8       	.data 0xf8d8          ; Binary data
B8D8:	08-40       	sbci r16, 0x08        ; Subtract Immediate with Carry SBI
B8DA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B8DC:	00-21       	and r16, r0           ; Logical AND
B8DE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B8E0:	99-FF       	.data 0xff99          ; Binary data
B8E2:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
B8E4:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
B8E6:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
B8E8:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
B8EA:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B8EC:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B8EE:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
B8F0:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
B8F2:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
B8F4:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
B8F6:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B8F8:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B8FA:	DC-6B       	ori r29, 0xbc         ; Logical OR with Immediate
B8FC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B8FE:	00-21       	and r16, r0           ; Logical AND
B900:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B902:	88-FF       	.data 0xff88          ; Binary data
B904:	00-28       	or r0, r0             ; Logical OR
B906:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
B908:	BF-81       	ldd r27, Y+7          ; Load Indirect from Data Space to Register
B90A:	54-4D       	sbci r21, 0xd4        ; Subtract Immediate with Carry SBI
B90C:	05-EB       	ldi r16, 0xb5         ; Load Immediate
B90E:	87-15       	cp r24, r7            ; Compare
B910:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B912:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
B914:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B916:	B8-FC       	.data 0xfcb8          ; Binary data
B918:	E8-63       	ori r30, 0x38         ; Logical OR with Immediate
B91A:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
B91C:	87-FE       	sbrs r8, 7            ; Skip if Bit in Register is Set
B91E:	B3-E1       	ldi r27, 0x13         ; Load Immediate
B920:	E3-7D       	andi r30, 0xd3        ; Logical AND with Immediate
B922:	6B-B1       	in r22, 0x0b          ; Load an I/O Location to Register
B924:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
B926:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
B928:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
B92A:	B6-FE       	sbrs r11, 6           ; Skip if Bit in Register is Set
B92C:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
B92E:	98-F8       	.data 0xf898          ; Binary data
B930:	27-30       	cpi r18, 0x07         ; Compare with Immediate
B932:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
B934:	00-23       	and r16, r16          ; Logical AND
B936:	E3-75       	andi r30, 0x53        ; Logical AND with Immediate
B938:	02-E0       	ldi r16, 0x02         ; Load Immediate
B93A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
B93C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
B93E:	02-FF       	sbrs r16, 2           ; Skip if Bit in Register is Set
B940:	01-35       	cpi r16, 0x51         ; Compare with Immediate
B942:	18-34       	cpi r17, 0x48         ; Compare with Immediate
B944:	32-2D       	mov r19, r2           ; Copy Register
B946:	EB-D1       	rcall .+982           ; Relative Call to Subroutine
B948:	44-4B       	sbci r20, 0xb4        ; Subtract Immediate with Carry SBI
B94A:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B94C:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B94E:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
B950:	38-30       	cpi r19, 0x08         ; Compare with Immediate
B952:	00-2B       	or r16, r16           ; Logical OR
B954:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
B956:	82-81       	ldd r24, Y+2          ; Load Indirect from Data Space to Register
B958:	40-4C       	sbci r20, 0xc0        ; Subtract Immediate with Carry SBI
B95A:	04-EB       	ldi r16, 0xb4         ; Load Immediate
B95C:	87-14       	cp r8, r7             ; Compare
B95E:	E0-6A       	ori r30, 0xa0         ; Logical OR with Immediate
B960:	01-30       	cpi r16, 0x01         ; Compare with Immediate
B962:	E0-62       	ori r30, 0x20         ; Logical OR with Immediate
B964:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B966:	46-FD       	sbrc r20, 6           ; Skip if Bit in Register is Cleared
B968:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
B96A:	60-6B       	ori r22, 0xb0         ; Logical OR with Immediate
B96C:	40-49       	sbci r20, 0x90        ; Subtract Immediate with Carry SBI
B96E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B970:	95-FD       	sbrc r25, 5           ; Skip if Bit in Register is Cleared
B972:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
B974:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
B976:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B978:	4D-FF       	.data 0xff4d          ; Binary data
B97A:	28-B3       	in r18, 0x18          ; Load an I/O Location to Register
B97C:	A4-68       	ori r26, 0x84         ; Logical OR with Immediate
B97E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B980:	00-21       	and r16, r0           ; Logical AND
B982:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B984:	47-FF       	sbrs r20, 7           ; Skip if Bit in Register is Set
B986:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
B988:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
B98A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
B98C:	00-E0       	ldi r16, 0x00         ; Load Immediate
B98E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B990:	38-49       	sbci r19, 0x98        ; Subtract Immediate with Carry SBI
B992:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B994:	21-FF       	sbrs r18, 1           ; Skip if Bit in Register is Set
B996:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
B998:	30-4D       	sbci r19, 0xd0        ; Subtract Immediate with Carry SBI
B99A:	05-EB       	ldi r16, 0xb5         ; Load Immediate
B99C:	87-15       	cp r24, r7            ; Compare
B99E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
B9A0:	35-49       	sbci r19, 0x95        ; Subtract Immediate with Carry SBI
B9A2:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B9A4:	7B-FD       	.data 0xfd7b          ; Binary data
B9A6:	A8-60       	ori r26, 0x08         ; Logical OR with Immediate
B9A8:	05-E0       	ldi r16, 0x05         ; Load Immediate
B9AA:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
B9AC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B9AE:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B9B0:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
B9B2:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
B9B4:	9C-60       	ori r25, 0x0c         ; Logical OR with Immediate
B9B6:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
B9B8:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B9BA:	87-13       	cpse r24, r23         ; Compare Skip if Equal
B9BC:	00-22       	and r0, r16           ; Logical AND
B9BE:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
B9C0:	38-20       	and r3, r8            ; Logical AND
B9C2:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
B9C4:	00-22       	and r0, r16           ; Logical AND
B9C6:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
B9C8:	C7-F1       	brbs 7, .+112         ; Branch if Bit in SREG is Set
B9CA:	01-04       	cpc r0, r1            ; Compare with Carry
B9CC:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
B9CE:	03-EB       	ldi r16, 0xb3         ; Load Immediate
B9D0:	84-13       	cpse r24, r20         ; Compare Skip if Equal
B9D2:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
B9D4:	38-30       	cpi r19, 0x08         ; Compare with Immediate
B9D6:	00-2B       	or r16, r16           ; Logical OR
B9D8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
B9DA:	76-81       	ldd r23, Y+6          ; Load Indirect from Data Space to Register
B9DC:	1F-4A       	sbci r17, 0xaf        ; Subtract Immediate with Carry SBI
B9DE:	A3-01       	movw r20, r6          ; Copy Register Word
B9E0:	D6-18       	sub r13, r6           ; Subtract Without Carry
B9E2:	D5-58       	subi r29, 0x85        ; Subtract Immediate
B9E4:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
B9E6:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
B9E8:	00-90-F0-6A 	lds r0, 0x6af0        ; Load Direct from Data Space (32-bit)
B9EC:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B9EE:	02-FD       	sbrc r16, 2           ; Skip if Bit in Register is Cleared
B9F0:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
B9F2:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B9F4:	53-FD       	sbrc r21, 3           ; Skip if Bit in Register is Cleared
B9F6:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
B9F8:	B0-68       	ori r27, 0x80         ; Logical OR with Immediate
B9FA:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
B9FC:	15-FF       	sbrs r17, 5           ; Skip if Bit in Register is Set
B9FE:	B0-F1       	brbs 0, .+108         ; Branch if Bit in SREG is Set
BA00:	00-08       	sbc r0, r0            ; Subtract with Carry
BA02:	04-DB       	rcall .+5640          ; Relative Call to Subroutine
BA04:	18-F1       	brbs 0, .+70          ; Branch if Bit in SREG is Set
BA06:	00-00       	nop                   ; No Operation
BA08:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BA0A:	01-20       	and r0, r1            ; Logical AND
BA0C:	00-E0       	ldi r16, 0x00         ; Load Immediate
BA0E:	FF-20       	and r15, r15          ; Logical AND
BA10:	BB-01       	movw r22, r22         ; Copy Register Word
BA12:	12-4A       	sbci r17, 0xa2        ; Subtract Immediate with Carry SBI
BA14:	D6-58       	subi r29, 0x86        ; Subtract Immediate
BA16:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
BA18:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA1A:	EC-FC       	.data 0xfcec          ; Binary data
BA1C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BA1E:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
BA20:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA22:	3C-FD       	.data 0xfd3c          ; Binary data
BA24:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BA26:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BA28:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA2A:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
BA2C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
BA2E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA30:	2B-FC       	.data 0xfc2b          ; Binary data
BA32:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA34:	F9-FE       	.data 0xfef9          ; Binary data
BA36:	00-28       	or r0, r0             ; Logical OR
BA38:	05-DB       	rcall .+5642          ; Relative Call to Subroutine
BA3A:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
BA3C:	00-0A       	sbc r0, r16           ; Subtract with Carry
BA3E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BA40:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BA42:	01-0A       	sbc r0, r17           ; Subtract with Carry
BA44:	01-E0       	ldi r16, 0x01         ; Load Immediate
BA46:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BA48:	FF-0A       	sbc r15, r31          ; Subtract with Carry
BA4A:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
BA4C:	00-0F       	add r16, r16          ; Add without Carry
BA4E:	17-DB       	rcall .+5678          ; Relative Call to Subroutine
BA50:	18-F1       	brbs 0, .+70          ; Branch if Bit in SREG is Set
BA52:	00-00       	nop                   ; No Operation
BA54:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BA56:	01-20       	and r0, r1            ; Logical AND
BA58:	13-E0       	ldi r17, 0x03         ; Load Immediate
BA5A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
BA5C:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
BA5E:	FF-1F       	adc r31, r31          ; Add with Carry
BA60:	BC-92       	st X, r11             ; Store Indirect From Register to Data Space
BA62:	FF-1F       	adc r31, r31          ; Add with Carry
BA64:	50-9D       	mul r21, r0           ; Multiply Unsigned
BA66:	FF-1F       	adc r31, r31          ; Add with Carry
BA68:	EC-51       	subi r30, 0x1c        ; Subtract Immediate
BA6A:	78-3F       	cpi r23, 0xf8         ; Compare with Immediate
BA6C:	2C-FC       	.data 0xfc2c          ; Binary data
BA6E:	FF-1F       	adc r31, r31          ; Add with Carry
BA70:	00-00       	nop                   ; No Operation
BA72:	70-41       	sbci r23, 0x10        ; Subtract Immediate with Carry SBI
BA74:	00-00       	nop                   ; No Operation
BA76:	C8-42       	sbci r28, 0x28        ; Subtract Immediate with Carry SBI
BA78:	CD-CC       	rjmp .-1638           ; Relative Jump
BA7A:	8C-BF       	out 0x3c, r24         ; Store Register to I/O Location
BA7C:	D4-92       	xch Z, r13            ; Exchange
BA7E:	FF-1F       	adc r31, r31          ; Add with Carry
BA80:	FF-20       	and r15, r15          ; Logical AND
BA82:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
BA84:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA86:	B6-FC       	sbrc r11, 6           ; Skip if Bit in Register is Cleared
BA88:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BA8A:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
BA8C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA8E:	06-FD       	sbrc r16, 6           ; Skip if Bit in Register is Cleared
BA90:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BA92:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BA94:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BA96:	FA-FB       	.data 0xfbfa          ; Binary data
BA98:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
BA9A:	94-4B       	sbci r25, 0xb4        ; Subtract Immediate with Carry SBI
BA9C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
BA9E:	87-18       	sub r8, r7            ; Subtract Without Carry
BAA0:	D8-F8       	.data 0xf8d8          ; Binary data
BAA2:	2C-00       	.data 0x002c          ; Binary data
BAA4:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAA6:	A6-FC       	sbrc r10, 6           ; Skip if Bit in Register is Cleared
BAA8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BAAA:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BAAC:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAAE:	F6-FC       	sbrc r15, 6           ; Skip if Bit in Register is Cleared
BAB0:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
BAB2:	D8-F8       	.data 0xf8d8          ; Binary data
BAB4:	08-00       	.data 0x0008          ; Binary data
BAB6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAB8:	B7-FE       	sbrs r11, 7           ; Skip if Bit in Register is Set
BABA:	B0-F1       	brbs 0, .+108         ; Branch if Bit in SREG is Set
BABC:	00-08       	sbc r0, r0            ; Subtract with Carry
BABE:	04-DB       	rcall .+5640          ; Relative Call to Subroutine
BAC0:	18-F1       	brbs 0, .+70          ; Branch if Bit in SREG is Set
BAC2:	00-00       	nop                   ; No Operation
BAC4:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BAC6:	01-20       	and r0, r1            ; Logical AND
BAC8:	00-E0       	ldi r16, 0x00         ; Load Immediate
BACA:	FF-20       	and r15, r15          ; Logical AND
BACC:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
BACE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAD0:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
BAD2:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BAD4:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BAD6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAD8:	E1-FC       	sbrc r14, 1           ; Skip if Bit in Register is Cleared
BADA:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BADC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
BADE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAE0:	D5-FB       	bst r29, 5            ; Bit Store from Bit in Register to T Flag in SREG
BAE2:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BAE4:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
BAE6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAE8:	CF-FB       	.data 0xfbcf          ; Binary data
BAEA:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BAEC:	9D-FE       	.data 0xfe9d          ; Binary data
BAEE:	00-28       	or r0, r0             ; Logical OR
BAF0:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
BAF2:	03-1C       	adc r0, r3            ; Add with Carry
BAF4:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BAF6:	01-23       	and r16, r17          ; Logical AND
BAF8:	00-E0       	ldi r16, 0x00         ; Load Immediate
BAFA:	FF-23       	and r31, r31          ; Logical AND
BAFC:	4F-FA       	.data 0xfa4f          ; Binary data
BAFE:	8A-FA       	.data 0xfa8a          ; Binary data
BB00:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
BB02:	9A-45       	sbci r25, 0x5a        ; Subtract Immediate with Carry SBI
BB04:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
BB06:	C6-80       	ldd r12, Y+6          ; Load Indirect from Data Space to Register
BB08:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BB0A:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
BB0C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB0E:	BC-FB       	.data 0xfbbc          ; Binary data
BB10:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB12:	8A-FE       	.data 0xfe8a          ; Binary data
BB14:	00-28       	or r0, r0             ; Logical OR
BB16:	05-DB       	rcall .+5642          ; Relative Call to Subroutine
BB18:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
BB1A:	00-0A       	sbc r0, r16           ; Subtract with Carry
BB1C:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BB1E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BB20:	01-0A       	sbc r0, r17           ; Subtract with Carry
BB22:	01-E0       	ldi r16, 0x01         ; Load Immediate
BB24:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BB26:	FF-0A       	sbc r15, r31          ; Subtract with Carry
BB28:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
BB2A:	00-0F       	add r16, r16          ; Add without Carry
BB2C:	04-DB       	rcall .+5640          ; Relative Call to Subroutine
BB2E:	18-F1       	brbs 0, .+70          ; Branch if Bit in SREG is Set
BB30:	00-00       	nop                   ; No Operation
BB32:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BB34:	01-20       	and r0, r1            ; Logical AND
BB36:	00-E0       	ldi r16, 0x00         ; Load Immediate
BB38:	FF-20       	and r15, r15          ; Logical AND
BB3A:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
BB3C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB3E:	5A-FC       	.data 0xfc5a          ; Binary data
BB40:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BB42:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BB44:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB46:	AA-FC       	.data 0xfcaa          ; Binary data
BB48:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BB4A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
BB4C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB4E:	9E-FB       	.data 0xfb9e          ; Binary data
BB50:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BB52:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BB54:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB56:	98-FB       	.data 0xfb98          ; Binary data
BB58:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB5A:	66-FE       	sbrs r6, 6            ; Skip if Bit in Register is Set
BB5C:	00-28       	or r0, r0             ; Logical OR
BB5E:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
BB60:	03-1C       	adc r0, r3            ; Add with Carry
BB62:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BB64:	01-23       	and r16, r17          ; Logical AND
BB66:	00-E0       	ldi r16, 0x00         ; Load Immediate
BB68:	FF-23       	and r31, r31          ; Logical AND
BB6A:	4F-FA       	.data 0xfa4f          ; Binary data
BB6C:	8A-FA       	.data 0xfa8a          ; Binary data
BB6E:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
BB70:	9A-45       	sbci r25, 0x5a        ; Subtract Immediate with Carry SBI
BB72:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
BB74:	8F-80       	ldd r8, Y+7           ; Load Indirect from Data Space to Register
BB76:	A7-E0       	ldi r26, 0x07         ; Load Immediate
BB78:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
BB7A:	00-4A       	sbci r16, 0xa0        ; Subtract Immediate with Carry SBI
BB7C:	00-E0       	ldi r16, 0x00         ; Load Immediate
BB7E:	AA-46       	sbci r26, 0x6a        ; Subtract Immediate with Carry SBI
BB80:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BB82:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB84:	37-FC       	sbrc r3, 7            ; Skip if Bit in Register is Cleared
BB86:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
BB88:	58-4D       	sbci r21, 0xd8        ; Subtract Immediate with Carry SBI
BB8A:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
BB8C:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
BB8E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB90:	85-FC       	sbrc r8, 5            ; Skip if Bit in Register is Cleared
BB92:	A8-60       	ori r26, 0x08         ; Logical OR with Immediate
BB94:	AD-6C       	ori r26, 0xcd         ; Logical OR with Immediate
BB96:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BB98:	00-21       	and r16, r0           ; Logical AND
BB9A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BB9C:	3B-FE       	.data 0xfe3b          ; Binary data
BB9E:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
BBA0:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
BBA2:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
BBA4:	00-E0       	ldi r16, 0x00         ; Load Immediate
BBA6:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
BBA8:	50-4D       	sbci r21, 0xd0        ; Subtract Immediate with Carry SBI
BBAA:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
BBAC:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
BBAE:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BBB0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BBB2:	74-FC       	sbrc r7, 4            ; Skip if Bit in Register is Cleared
BBB4:	A8-64       	ori r26, 0x48         ; Logical OR with Immediate
BBB6:	2E-60       	ori r18, 0x0e         ; Logical OR with Immediate
BBB8:	C5-F8       	bld r12, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
BBBA:	40-80       	ld r4, Z              ; Load Indirect from Data Space to Register
BBBC:	08-22       	and r0, r24           ; Logical AND
BBBE:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
BBC0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BBC2:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
BBC4:	2B-63       	ori r18, 0x3b         ; Logical OR with Immediate
BBC6:	2B-67       	ori r18, 0x7b         ; Logical OR with Immediate
BBC8:	05-EB       	ldi r16, 0xb5         ; Load Immediate
BBCA:	87-17       	cp r24, r23           ; Compare
BBCC:	00-23       	and r16, r16          ; Logical AND
BBCE:	87-F8       	bld r8, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
BBD0:	38-30       	cpi r19, 0x08         ; Compare with Immediate
BBD2:	05-EB       	ldi r16, 0xb5         ; Load Immediate
BBD4:	84-14       	cp r8, r4             ; Compare
BBD6:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
BBD8:	38-30       	cpi r19, 0x08         ; Compare with Immediate
BBDA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
BBDC:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
BBDE:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
BBE0:	00-08       	sbc r0, r0            ; Subtract with Carry
BBE2:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BBE4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BBE6:	01-08       	sbc r0, r1            ; Subtract with Carry
BBE8:	01-E0       	ldi r16, 0x01         ; Load Immediate
BBEA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BBEC:	FF-08       	sbc r15, r15          ; Subtract with Carry
BBEE:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
BBF0:	03-EB       	ldi r16, 0xb3         ; Load Immediate
BBF2:	87-17       	cp r24, r23           ; Compare
BBF4:	F8-6A       	ori r31, 0xa8         ; Logical OR with Immediate
BBF6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BBF8:	FD-FB       	.data 0xfbfd          ; Binary data
BBFA:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
BBFC:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
BBFE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC00:	4D-FC       	.data 0xfc4d          ; Binary data
BC02:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
BC04:	B8-68       	ori r27, 0x88         ; Logical OR with Immediate
BC06:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC08:	0F-FE       	.data 0xfe0f          ; Binary data
BC0A:	00-28       	or r0, r0             ; Logical OR
BC0C:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
BC0E:	00-30       	cpi r16, 0x00         ; Compare with Immediate
BC10:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BC12:	01-20       	and r0, r1            ; Logical AND
BC14:	00-E0       	ldi r16, 0x00         ; Load Immediate
BC16:	FF-20       	and r15, r15          ; Logical AND
BC18:	40-B2       	in r4, 0x10           ; Load an I/O Location to Register
BC1A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC1C:	EB-FB       	.data 0xfbeb          ; Binary data
BC1E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BC20:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BC22:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC24:	3B-FC       	.data 0xfc3b          ; Binary data
BC26:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BC28:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
BC2A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC2C:	2F-FB       	.data 0xfb2f          ; Binary data
BC2E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BC30:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BC32:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC34:	29-FB       	.data 0xfb29          ; Binary data
BC36:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC38:	F7-FD       	sbrc r31, 7           ; Skip if Bit in Register is Cleared
BC3A:	00-28       	or r0, r0             ; Logical OR
BC3C:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
BC3E:	03-1C       	adc r0, r3            ; Add with Carry
BC40:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BC42:	01-23       	and r16, r17          ; Logical AND
BC44:	00-E0       	ldi r16, 0x00         ; Load Immediate
BC46:	FF-23       	and r31, r31          ; Logical AND
BC48:	4F-FA       	.data 0xfa4f          ; Binary data
BC4A:	88-F8       	.data 0xf888          ; Binary data
BC4C:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
BC4E:	98-45       	sbci r25, 0x58        ; Subtract Immediate with Carry SBI
BC50:	49-D0       	rcall .+146           ; Relative Call to Subroutine
BC52:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
BC54:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
BC56:	76-FD       	sbrc r23, 6           ; Skip if Bit in Register is Cleared
BC58:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
BC5A:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
BC5C:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
BC5E:	03-EB       	ldi r16, 0xb3         ; Load Immediate
BC60:	87-13       	cpse r24, r23         ; Compare Skip if Equal
BC62:	5C-6B       	ori r21, 0xbc         ; Logical OR with Immediate
BC64:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
BC66:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BC68:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
BC6A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC6C:	B5-FD       	sbrc r27, 5           ; Skip if Bit in Register is Cleared
BC6E:	00-28       	or r0, r0             ; Logical OR
BC70:	39-D0       	rcall .+114           ; Relative Call to Subroutine
BC72:	1E-4D       	sbci r17, 0xde        ; Subtract Immediate with Carry SBI
BC74:	05-EB       	ldi r16, 0xb5         ; Load Immediate
BC76:	87-15       	cp r24, r7            ; Compare
BC78:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
BC7A:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
BC7C:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
BC7E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BC80:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
BC82:	68-63       	ori r22, 0x38         ; Logical OR with Immediate
BC84:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
BC86:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
BC88:	1D-4C       	sbci r17, 0xcd        ; Subtract Immediate with Carry SBI
BC8A:	00-25       	clr r256              ; Clear Register
BC8C:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
BC8E:	03-EB       	ldi r16, 0xb3         ; Load Immediate
BC90:	87-18       	sub r8, r7            ; Subtract Without Carry
BC92:	45-E6       	ldi r20, 0x65         ; Load Immediate
BC94:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
BC96:	5E-68       	ori r21, 0x8e         ; Logical OR with Immediate
BC98:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
BC9A:	44-80       	ldd r4, Y+4           ; Load Indirect from Data Space to Register
BC9C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
BC9E:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
BCA0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BCA2:	F2-FA       	bst r15, 2            ; Bit Store from Bit in Register to T Flag in SREG
BCA4:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BCA6:	C0-FD       	sbrc r28, 0           ; Skip if Bit in Register is Cleared
BCA8:	03-1E       	adc r0, r19           ; Add with Carry
BCAA:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
BCAC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BCAE:	FF-39       	cpi r31, 0x9f         ; Compare with Immediate
BCB0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BCB2:	01-09       	sbc r16, r1           ; Subtract with Carry
BCB4:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
BCB6:	9D-68       	ori r25, 0x8d         ; Logical OR with Immediate
BCB8:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BCBA:	00-21       	and r16, r0           ; Logical AND
BCBC:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BCBE:	AA-FD       	.data 0xfdaa          ; Binary data
BCC0:	00-28       	or r0, r0             ; Logical OR
BCC2:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
BCC4:	5C-AF       	std Y+60, r21         ; Store Indirect From Register to Data Space
BCC6:	57-E7       	ldi r21, 0x77         ; Load Immediate
BCC8:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
BCCA:	A2-01       	movw r20, r4          ; Copy Register Word
BCCC:	9D-58       	subi r25, 0x8d        ; Subtract Immediate
BCCE:	BA-01       	movw r22, r20         ; Copy Register Word
BCD0:	9E-58       	subi r25, 0x8e        ; Subtract Immediate
BCD2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BCD4:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
BCD6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BCD8:	D7-FA       	bst r13, 7            ; Bit Store from Bit in Register to T Flag in SREG
BCDA:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BCDC:	A5-FD       	sbrc r26, 5           ; Skip if Bit in Register is Cleared
BCDE:	00-28       	or r0, r0             ; Logical OR
BCE0:	BF-F6       	brbc 7, .-82          ; Branch if Bit in SREG is Cleared
BCE2:	7D-AF       	std Y+61, r23         ; Store Indirect From Register to Data Space
BCE4:	81-E7       	ldi r24, 0x71         ; Load Immediate
BCE6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
BCE8:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
BCEA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
BCEC:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
BCEE:	FF-1F       	adc r31, r31          ; Add with Carry
BCF0:	98-FB       	.data 0xfb98          ; Binary data
BCF2:	FF-1F       	adc r31, r31          ; Add with Carry
BCF4:	00-00       	nop                   ; No Operation
BCF6:	A0-40       	sbci r26, 0x00        ; Subtract Immediate with Carry SBI
BCF8:	D4-92       	xch Z, r13            ; Exchange
BCFA:	FF-1F       	adc r31, r31          ; Add with Carry
BCFC:	50-9D       	mul r21, r0           ; Multiply Unsigned
BCFE:	FF-1F       	adc r31, r31          ; Add with Carry
BD00:	D0-F2       	brbs 0, .-76          ; Branch if Bit in SREG is Set
BD02:	FF-1F       	adc r31, r31          ; Add with Carry
BD04:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
BD06:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
BD08:	69-4B       	sbci r22, 0xb9        ; Subtract Immediate with Carry SBI
BD0A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
BD0C:	00-2B       	or r16, r16           ; Logical OR
BD0E:	04-DD       	rcall .+6664          ; Relative Call to Subroutine
BD10:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
BD12:	67-4A       	sbci r22, 0xa7        ; Subtract Immediate with Carry SBI
BD14:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
BD16:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
BD18:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
BD1A:	66-4C       	sbci r22, 0xc6        ; Subtract Immediate with Carry SBI
BD1C:	D4-F8       	bld r13, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
BD1E:	00-90-20-69 	lds r0, 0x6920        ; Load Direct from Data Space (32-bit)
BD22:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD24:	67-FB       	bst r22, 7            ; Bit Store from Bit in Register to T Flag in SREG
BD26:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
BD28:	D4-F8       	bld r13, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
BD2A:	40-80       	ld r4, Z              ; Load Indirect from Data Space to Register
BD2C:	20-6D       	ori r18, 0xd0         ; Logical OR with Immediate
BD2E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD30:	61-FB       	bst r22, 1            ; Bit Store from Bit in Register to T Flag in SREG
BD32:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
BD34:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BD36:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
BD38:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD3A:	A8-FA       	.data 0xfaa8          ; Binary data
BD3C:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
BD3E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
BD40:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
BD42:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD44:	A1-FA       	bst r10, 1            ; Bit Store from Bit in Register to T Flag in SREG
BD46:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BD48:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
BD4A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD4C:	9D-FA       	.data 0xfa9d          ; Binary data
BD4E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD50:	6B-FD       	.data 0xfd6b          ; Binary data
BD52:	00-28       	or r0, r0             ; Logical OR
BD54:	05-DB       	rcall .+5642          ; Relative Call to Subroutine
BD56:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
BD58:	00-0A       	sbc r0, r16           ; Subtract with Carry
BD5A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BD5C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BD5E:	01-0A       	sbc r0, r17           ; Subtract with Carry
BD60:	01-E0       	ldi r16, 0x01         ; Load Immediate
BD62:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BD64:	FF-0A       	sbc r15, r31          ; Subtract with Carry
BD66:	53-4B       	sbci r21, 0xb3        ; Subtract Immediate with Carry SBI
BD68:	5F-68       	ori r21, 0x8f         ; Logical OR with Immediate
BD6A:	5E-6C       	ori r21, 0xce         ; Logical OR with Immediate
BD6C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BD6E:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
BD70:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD72:	8C-FA       	.data 0xfa8c          ; Binary data
BD74:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
BD76:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
BD78:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
BD7A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD7C:	85-FA       	bst r8, 5             ; Bit Store from Bit in Register to T Flag in SREG
BD7E:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BD80:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
BD82:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD84:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
BD86:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BD88:	4F-FD       	.data 0xfd4f          ; Binary data
BD8A:	00-28       	or r0, r0             ; Logical OR
BD8C:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
BD8E:	03-1C       	adc r0, r3            ; Add with Carry
BD90:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BD92:	01-23       	and r16, r17          ; Logical AND
BD94:	00-E0       	ldi r16, 0x00         ; Load Immediate
BD96:	FF-23       	and r31, r31          ; Logical AND
BD98:	4F-FA       	.data 0xfa4f          ; Binary data
BD9A:	8A-FA       	.data 0xfa8a          ; Binary data
BD9C:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
BD9E:	9A-45       	sbci r25, 0x5a        ; Subtract Immediate with Carry SBI
BDA0:	33-D1       	rcall .+614           ; Relative Call to Subroutine
BDA2:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BDA4:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
BDA6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDA8:	6F-FA       	.data 0xfa6f          ; Binary data
BDAA:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
BDAC:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
BDAE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
BDB0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDB2:	6C-FA       	.data 0xfa6c          ; Binary data
BDB4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BDB6:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
BDB8:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDBA:	66-FA       	bst r6, 6             ; Bit Store from Bit in Register to T Flag in SREG
BDBC:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDBE:	34-FD       	sbrc r19, 4           ; Skip if Bit in Register is Cleared
BDC0:	00-28       	or r0, r0             ; Logical OR
BDC2:	05-DB       	rcall .+5642          ; Relative Call to Subroutine
BDC4:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
BDC6:	00-08       	sbc r0, r0            ; Subtract with Carry
BDC8:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BDCA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BDCC:	01-08       	sbc r0, r1            ; Subtract with Carry
BDCE:	01-E0       	ldi r16, 0x01         ; Load Immediate
BDD0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BDD2:	FF-08       	sbc r15, r15          ; Subtract with Carry
BDD4:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
BDD6:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
BDD8:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDDA:	56-FA       	bst r5, 6             ; Bit Store from Bit in Register to T Flag in SREG
BDDC:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
BDDE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
BDE0:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
BDE2:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDE4:	53-FA       	bst r5, 3             ; Bit Store from Bit in Register to T Flag in SREG
BDE6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
BDE8:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BDEA:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDEC:	4D-FA       	.data 0xfa4d          ; Binary data
BDEE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BDF0:	1B-FD       	.data 0xfd1b          ; Binary data
BDF2:	00-28       	or r0, r0             ; Logical OR
BDF4:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
BDF6:	03-1C       	adc r0, r3            ; Add with Carry
BDF8:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
BDFA:	01-23       	and r16, r17          ; Logical AND
BDFC:	00-E0       	ldi r16, 0x00         ; Load Immediate
BDFE:	FF-23       	and r31, r31          ; Logical AND
BE00:	4F-FA       	.data 0xfa4f          ; Binary data
BE02:	88-F2       	brbs 0, .-94          ; Branch if Bit in SREG is Set
BE04:	5B-B2       	in r5, 0x1b           ; Load an I/O Location to Register
BE06:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
BE08:	50-D0       	rcall .+160           ; Relative Call to Subroutine
BE0A:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
BE0C:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
BE0E:	27-30       	cpi r18, 0x07         ; Compare with Immediate
BE10:	3B-B1       	in r19, 0x0b          ; Load an I/O Location to Register
BE12:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
BE14:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
BE16:	68-30       	cpi r22, 0x08         ; Compare with Immediate
BE18:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
BE1A:	01-20       	and r0, r1            ; Logical AND
BE1C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
BE1E:	92-FC       	sbrc r9, 2            ; Skip if Bit in Register is Cleared
BE20:	41-E0       	ldi r20, 0x01         ; Load Immediate
BE22:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
BE24:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
BE26:	67-30       	cpi r22, 0x07         ; Compare with Immediate
BE28:	3B-B1       	in r19, 0x0b          ; Load an I/O Location to Register
BE2A:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
BE2C:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
BE2E:	28-30       	cpi r18, 0x08         ; Compare with Immediate
BE30:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
BE32:	00-20       	and r0, r0            ; Logical AND
BE34:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
BE36:	86-FC       	sbrc r8, 6            ; Skip if Bit in Register is Cleared
BE38:	35-E0       	ldi r19, 0x05         ; Load Immediate
BE3A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
BE3C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
BE3E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE40:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
BE42:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE44:	F1-FC       	sbrc r15, 1           ; Skip if Bit in Register is Cleared
BE46:	03-1E       	adc r0, r19           ; Add with Carry
BE48:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
BE4A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BE4C:	FF-35       	cpi r31, 0x5f         ; Compare with Immediate
BE4E:	01-25       	clr r257              ; Clear Register
BE50:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
BE52:	9C-68       	ori r25, 0x8c         ; Logical OR with Immediate
BE54:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
BE56:	00-21       	and r16, r0           ; Logical AND
BE58:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE5A:	DC-FC       	.data 0xfcdc          ; Binary data
BE5C:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
BE5E:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
BE60:	00-48       	sbci r16, 0x80        ; Subtract Immediate with Carry SBI
BE62:	00-E0       	ldi r16, 0x00         ; Load Immediate
BE64:	A0-46       	sbci r26, 0x60        ; Subtract Immediate with Carry SBI
BE66:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BE68:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE6A:	C4-FA       	bst r12, 4            ; Bit Store from Bit in Register to T Flag in SREG
BE6C:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
BE6E:	11-4C       	sbci r17, 0xc1        ; Subtract Immediate with Carry SBI
BE70:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
BE72:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
BE74:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE76:	12-FB       	bst r17, 2            ; Bit Store from Bit in Register to T Flag in SREG
BE78:	A0-60       	ori r26, 0x00         ; Logical OR with Immediate
BE7A:	A4-6C       	ori r26, 0xc4         ; Logical OR with Immediate
BE7C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
BE7E:	00-21       	and r16, r0           ; Logical AND
BE80:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE82:	C8-FC       	.data 0xfcc8          ; Binary data
BE84:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
BE86:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
BE88:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
BE8A:	00-E0       	ldi r16, 0x00         ; Load Immediate
BE8C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
BE8E:	09-4C       	sbci r16, 0xc9        ; Subtract Immediate with Carry SBI
BE90:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
BE92:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
BE94:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
BE96:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BE98:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
BE9A:	A0-64       	ori r26, 0x40         ; Logical OR with Immediate
BE9C:	27-60       	ori r18, 0x07         ; Logical OR with Immediate
BE9E:	26-64       	ori r18, 0x46         ; Logical OR with Immediate
BEA0:	05-22       	and r0, r21           ; Logical AND
BEA2:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
BEA4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BEA6:	05-22       	and r0, r21           ; Logical AND
BEA8:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
BEAA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BEAC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
BEAE:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
BEB0:	48-9D       	mul r20, r8           ; Multiply Unsigned
BEB2:	FF-1F       	adc r31, r31          ; Add with Carry
BEB4:	E0-F7       	brbc 0, .-8           ; Branch if Bit in SREG is Cleared
BEB6:	FF-1F       	adc r31, r31          ; Add with Carry
BEB8:	98-FB       	.data 0xfb98          ; Binary data
BEBA:	FF-1F       	adc r31, r31          ; Add with Carry
BEBC:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
BEBE:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
BEC0:	16-51       	subi r17, 0x16        ; Subtract Immediate
BEC2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BEC4:	FF-32       	cpi r31, 0x2f         ; Compare with Immediate
BEC6:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
BEC8:	18-33       	cpi r17, 0x38         ; Compare with Immediate
BECA:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
BECC:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
BECE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
BED0:	8C-B9       	out 0x0c, r24         ; Store Register to I/O Location
BED2:	FF-1F       	adc r31, r31          ; Add with Carry
BED4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
BED6:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
BED8:	00-24       	clr r0                ; Clear Register
BEDA:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
BEDC:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
BEDE:	01-22       	and r0, r17           ; Logical AND
BEE0:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BEE2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
BEE4:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BEE6:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
BEE8:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BEEA:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
BEEC:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BEEE:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
BEF0:	F0-23       	and r31, r16          ; Logical AND
BEF2:	1F-4A       	sbci r17, 0xaf        ; Subtract Immediate with Carry SBI
BEF4:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
BEF6:	1F-4A       	sbci r17, 0xaf        ; Subtract Immediate with Carry SBI
BEF8:	14-60       	ori r17, 0x04         ; Logical OR with Immediate
BEFA:	1F-4A       	sbci r17, 0xaf        ; Subtract Immediate with Carry SBI
BEFC:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
BEFE:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BF00:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
BF02:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BF04:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
BF06:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BF08:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
BF0A:	14-22       	and r1, r20           ; Logical AND
BF0C:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
BF0E:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
BF10:	1E-4A       	sbci r17, 0xae        ; Subtract Immediate with Carry SBI
BF12:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
BF14:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BF16:	78-22       	and r7, r24           ; Logical AND
BF18:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
BF1A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
BF1C:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
BF1E:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
BF20:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
BF22:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
BF24:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
BF26:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
BF28:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
BF2A:	C8-FF       	.data 0xffc8          ; Binary data
BF2C:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
BF2E:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
BF30:	00-92-00-99 	sts 0x9900, r0        ; Store Direct to Data Space
BF34:	1C-4A       	sbci r17, 0xac        ; Subtract Immediate with Carry SBI
BF36:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
BF38:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
BF3A:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
BF3C:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
BF3E:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
BF40:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BF42:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
BF44:	7B-FE       	.data 0xfe7b          ; Binary data
BF46:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
BF48:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
BF4A:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
BF4C:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
BF4E:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
BF50:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
BF52:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
BF54:	23-FB       	bst r18, 3            ; Bit Store from Bit in Register to T Flag in SREG
BF56:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
BF58:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
BF5A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
BF5C:	D4-FA       	bst r13, 4            ; Bit Store from Bit in Register to T Flag in SREG
BF5E:	FF-1F       	adc r31, r31          ; Add with Carry
BF60:	28-FC       	.data 0xfc28          ; Binary data
BF62:	FF-1F       	adc r31, r31          ; Add with Carry
BF64:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
BF66:	FF-1F       	adc r31, r31          ; Add with Carry
BF68:	BA-FB       	.data 0xfbba          ; Binary data
BF6A:	FF-1F       	adc r31, r31          ; Add with Carry
BF6C:	64-FA       	bst r6, 4             ; Bit Store from Bit in Register to T Flag in SREG
BF6E:	FF-1F       	adc r31, r31          ; Add with Carry
BF70:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
BF72:	FF-1F       	adc r31, r31          ; Add with Carry
BF74:	D8-FA       	.data 0xfad8          ; Binary data
BF76:	FF-1F       	adc r31, r31          ; Add with Carry
BF78:	24-DF       	rcall .+7752          ; Relative Call to Subroutine
BF7A:	FF-1F       	adc r31, r31          ; Add with Carry
BF7C:	48-FC       	.data 0xfc48          ; Binary data
BF7E:	FF-1F       	adc r31, r31          ; Add with Carry
BF80:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
BF82:	FF-1F       	adc r31, r31          ; Add with Carry
BF84:	98-9D       	mul r25, r8           ; Multiply Unsigned
BF86:	FF-1F       	adc r31, r31          ; Add with Carry
BF88:	F0-92-FF-1F 	sts 0x1fff, r15       ; Store Direct to Data Space
BF8C:	00-00       	nop                   ; No Operation
BF8E:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
BF90:	58-92       	.data 0x9258          ; Binary data
BF92:	FF-1F       	adc r31, r31          ; Add with Carry
BF94:	DC-FA       	.data 0xfadc          ; Binary data
BF96:	FF-1F       	adc r31, r31          ; Add with Carry
BF98:	2C-9E       	mul r2, r28           ; Multiply Unsigned
BF9A:	FF-1F       	adc r31, r31          ; Add with Carry
BF9C:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
BF9E:	FF-1F       	adc r31, r31          ; Add with Carry
BFA0:	74-B9       	out 0x04, r23         ; Store Register to I/O Location
BFA2:	FF-1F       	adc r31, r31          ; Add with Carry
BFA4:	0C-00       	.data 0x000c          ; Binary data
BFA6:	00-20       	and r0, r0            ; Logical AND
BFA8:	90-FB       	bst r25, 0            ; Bit Store from Bit in Register to T Flag in SREG
BFAA:	FF-1F       	adc r31, r31          ; Add with Carry
BFAC:	AC-FB       	.data 0xfbac          ; Binary data
BFAE:	FF-1F       	adc r31, r31          ; Add with Carry
BFB0:	60-F9       	bld r22, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
BFB2:	FF-1F       	adc r31, r31          ; Add with Carry
BFB4:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
BFB6:	FF-1F       	adc r31, r31          ; Add with Carry
BFB8:	48-F9       	.data 0xf948          ; Binary data
BFBA:	FF-1F       	adc r31, r31          ; Add with Carry
BFBC:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
BFBE:	00-22       	and r0, r16           ; Logical AND
BFC0:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
BFC2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BFC4:	09-20       	and r0, r9            ; Logical AND
BFC6:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
BFC8:	53-FC       	sbrc r5, 3            ; Skip if Bit in Register is Cleared
BFCA:	00-28       	or r0, r0             ; Logical OR
BFCC:	03-DD       	rcall .+6662          ; Relative Call to Subroutine
BFCE:	09-28       	or r0, r9             ; Logical OR
BFD0:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
BFD2:	09-20       	and r0, r9            ; Logical AND
BFD4:	00-E0       	ldi r16, 0x00         ; Load Immediate
BFD6:	01-20       	and r0, r1            ; Logical AND
BFD8:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
BFDA:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
BFDC:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
BFDE:	0A-00       	.data 0x000a          ; Binary data
BFE0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BFE2:	08-FA       	.data 0xfa08          ; Binary data
BFE4:	25-49       	sbci r18, 0x95        ; Subtract Immediate with Carry SBI
BFE6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BFE8:	0D-FB       	.data 0xfb0d          ; Binary data
BFEA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
BFEC:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
BFEE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
BFF0:	4D-F9       	.data 0xf94d          ; Binary data
BFF2:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
BFF4:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
BFF6:	00-22       	and r0, r16           ; Logical AND
BFF8:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
BFFA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
BFFC:	04-20       	and r0, r4            ; Logical AND
BFFE:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C000:	17-FE       	sbrs r1, 7            ; Skip if Bit in Register is Set
C002:	21-4D       	sbci r18, 0xd1        ; Subtract Immediate with Carry SBI
C004:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
C006:	21-4C       	sbci r18, 0xc1        ; Subtract Immediate with Carry SBI
C008:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C00A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C00C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C00E:	20-49       	sbci r18, 0x90        ; Subtract Immediate with Carry SBI
C010:	10-22       	and r1, r16           ; Logical AND
C012:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C014:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C016:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
C018:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C01A:	F0-FB       	bst r31, 0            ; Bit Store from Bit in Register to T Flag in SREG
C01C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C01E:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C020:	A1-FB       	bst r26, 1            ; Bit Store from Bit in Register to T Flag in SREG
C022:	0A-22       	and r0, r26           ; Logical AND
C024:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
C026:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C028:	01-22       	and r0, r17           ; Logical AND
C02A:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
C02C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
C02E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C030:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C032:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C034:	19-49       	sbci r17, 0x99        ; Subtract Immediate with Carry SBI
C036:	10-22       	and r1, r16           ; Logical AND
C038:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C03A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C03C:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
C03E:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
C040:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C042:	DC-FB       	.data 0xfbdc          ; Binary data
C044:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C046:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C048:	8D-FB       	.data 0xfb8d          ; Binary data
C04A:	0F-20       	and r0, r15           ; Logical AND
C04C:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C04E:	F0-FD       	sbrc r31, 0           ; Skip if Bit in Register is Cleared
C050:	14-4D       	sbci r17, 0xd4        ; Subtract Immediate with Carry SBI
C052:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
C054:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C056:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C058:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C05A:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
C05C:	0E-22       	and r0, r30           ; Logical AND
C05E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C060:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C062:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
C064:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C066:	CA-FB       	.data 0xfbca          ; Binary data
C068:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C06A:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C06C:	7B-FB       	.data 0xfb7b          ; Binary data
C06E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
C070:	31-FF       	sbrs r19, 1           ; Skip if Bit in Register is Set
C072:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
C074:	94-9D       	mul r25, r4           ; Multiply Unsigned
C076:	FF-1F       	adc r31, r31          ; Add with Carry
C078:	C8-92       	.data 0x92c8          ; Binary data
C07A:	FF-1F       	adc r31, r31          ; Add with Carry
C07C:	00-00       	nop                   ; No Operation
C07E:	A0-41       	sbci r26, 0x10        ; Subtract Immediate with Carry SBI
C080:	68-92       	.data 0x9268          ; Binary data
C082:	FF-1F       	adc r31, r31          ; Add with Carry
C084:	48-F9       	.data 0xf948          ; Binary data
C086:	FF-1F       	adc r31, r31          ; Add with Carry
C088:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
C08A:	FF-1F       	adc r31, r31          ; Add with Carry
C08C:	C0-01       	movw r24, r0          ; Copy Register Word
C08E:	00-20       	and r0, r0            ; Logical AND
C090:	68-7C       	andi r22, 0xc8        ; Logical AND with Immediate
C092:	01-00       	.data 0x0001          ; Binary data
C094:	CC-92       	st X, r12             ; Store Indirect From Register to Data Space
C096:	FF-1F       	adc r31, r31          ; Add with Carry
C098:	28-9E       	mul r2, r24           ; Multiply Unsigned
C09A:	FF-1F       	adc r31, r31          ; Add with Carry
C09C:	7C-7C       	andi r23, 0xcc        ; Logical AND with Immediate
C09E:	01-00       	.data 0x0001          ; Binary data
C0A0:	60-92-FF-1F 	sts 0x1fff, r6        ; Store Direct to Data Space
C0A4:	70-9D       	mul r23, r0           ; Multiply Unsigned
C0A6:	FF-1F       	adc r31, r31          ; Add with Carry
C0A8:	90-7C       	andi r25, 0xc0        ; Logical AND with Immediate
C0AA:	01-00       	.data 0x0001          ; Binary data
C0AC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
C0AE:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
C0B0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C0B2:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
C0B4:	11-D0       	rcall .+34            ; Relative Call to Subroutine
C0B6:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
C0B8:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C0BA:	01-28       	or r0, r1             ; Logical OR
C0BC:	01-D1       	rcall .+514           ; Relative Call to Subroutine
C0BE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
C0C0:	7D-FF       	.data 0xff7d          ; Binary data
C0C2:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
C0C4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C0C6:	05-2B       	or r16, r21           ; Logical OR
C0C8:	01-D1       	rcall .+514           ; Relative Call to Subroutine
C0CA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
C0CC:	EB-F9       	.data 0xf9eb          ; Binary data
C0CE:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
C0D0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C0D2:	06-2B       	or r16, r22           ; Logical OR
C0D4:	01-D1       	rcall .+514           ; Relative Call to Subroutine
C0D6:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
C0D8:	F9-FD       	.data 0xfdf9          ; Binary data
C0DA:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
C0DC:	D8-92       	.data 0x92d8          ; Binary data
C0DE:	FF-1F       	adc r31, r31          ; Add with Carry
C0E0:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
C0E2:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
C0E4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
C0E6:	FA-70       	andi r31, 0x0a        ; Logical AND with Immediate
C0E8:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C0EA:	CC-FD       	.data 0xfdcc          ; Binary data
C0EC:	19-20       	and r1, r9            ; Logical AND
C0EE:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C0F0:	BF-FB       	.data 0xfbbf          ; Binary data
C0F2:	01-28       	or r0, r1             ; Logical OR
C0F4:	02-DC       	rcall .+6148          ; Relative Call to Subroutine
C0F6:	9C-4B       	sbci r25, 0xbc        ; Subtract Immediate with Carry SBI
C0F8:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C0FA:	02-E0       	ldi r16, 0x02         ; Load Immediate
C0FC:	01-22       	and r0, r17           ; Logical AND
C0FE:	9A-4B       	sbci r25, 0xba        ; Subtract Immediate with Carry SBI
C100:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C102:	9A-4C       	sbci r25, 0xca        ; Subtract Immediate with Carry SBI
C104:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C106:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C108:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C10A:	99-49       	sbci r25, 0x99        ; Subtract Immediate with Carry SBI
C10C:	19-22       	and r1, r25           ; Logical AND
C10E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C110:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C112:	95-4B       	sbci r25, 0xb5        ; Subtract Immediate with Carry SBI
C114:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
C116:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C118:	71-FB       	bst r23, 1            ; Bit Store from Bit in Register to T Flag in SREG
C11A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C11C:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C11E:	22-FB       	bst r18, 2            ; Bit Store from Bit in Register to T Flag in SREG
C120:	48-20       	and r4, r8            ; Logical AND
C122:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C124:	21-FE       	sbrs r2, 1            ; Skip if Bit in Register is Set
C126:	0C-20       	and r0, r12           ; Logical AND
C128:	01-21       	and r16, r1           ; Logical AND
C12A:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C12C:	C7-FC       	sbrc r12, 7           ; Skip if Bit in Register is Cleared
C12E:	0C-20       	and r0, r12           ; Logical AND
C130:	01-21       	and r16, r1           ; Logical AND
C132:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C134:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
C136:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
C138:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
C13A:	D2-FE       	sbrs r13, 2           ; Skip if Bit in Register is Set
C13C:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
C13E:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
C140:	DF-FE       	.data 0xfedf          ; Binary data
C142:	8C-4D       	sbci r24, 0xdc        ; Subtract Immediate with Carry SBI
C144:	8C-4B       	sbci r24, 0xbc        ; Subtract Immediate with Carry SBI
C146:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
C148:	D9-78       	andi r29, 0x89        ; Logical AND with Immediate
C14A:	02-EB       	ldi r16, 0xb2         ; Load Immediate
C14C:	01-22       	and r0, r17           ; Logical AND
C14E:	19-79       	andi r17, 0x99        ; Logical AND with Immediate
C150:	02-EB       	ldi r16, 0xb2         ; Load Immediate
C152:	01-42       	sbci r16, 0x21        ; Subtract Immediate with Carry SBI
C154:	5B-79       	andi r21, 0x9b        ; Logical AND with Immediate
C156:	02-EB       	ldi r16, 0xb2         ; Load Immediate
C158:	03-63       	ori r16, 0x33         ; Logical OR with Immediate
C15A:	2B-60       	ori r18, 0x0b         ; Logical OR with Immediate
C15C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C15E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C160:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C162:	86-49       	sbci r24, 0x96        ; Subtract Immediate with Carry SBI
C164:	08-22       	and r0, r24           ; Logical AND
C166:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C168:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C16A:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
C16C:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C16E:	46-FB       	bst r20, 6            ; Bit Store from Bit in Register to T Flag in SREG
C170:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C172:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C174:	F7-FA       	bst r15, 7            ; Bit Store from Bit in Register to T Flag in SREG
C176:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
C178:	00-2B       	or r16, r16           ; Logical OR
C17A:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
C17C:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
C17E:	80-49       	sbci r24, 0x90        ; Subtract Immediate with Carry SBI
C180:	81-FB       	bst r24, 1            ; Bit Store from Bit in Register to T Flag in SREG
C182:	03-21       	and r16, r3           ; Logical AND
C184:	DA-17       	cp r29, r26           ; Compare
C186:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
C188:	A1-01       	movw r20, r2          ; Copy Register Word
C18A:	01-EB       	ldi r16, 0xb1         ; Load Immediate
C18C:	81-01       	movw r16, r2          ; Copy Register Word
C18E:	A3-EB       	ldi r26, 0xb3         ; Load Immediate
C190:	41-01       	movw r8, r2           ; Copy Register Word
C192:	11-F1       	brbs 1, .+68          ; Branch if Bit in SREG is Set
C194:	FF-31       	cpi r31, 0x1f         ; Compare with Immediate
C196:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
C198:	01-21       	and r16, r1           ; Logical AND
C19A:	7A-4B       	sbci r23, 0xba        ; Subtract Immediate with Carry SBI
C19C:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
C19E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C1A0:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C1A2:	2C-FB       	.data 0xfb2c          ; Binary data
C1A4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C1A6:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C1A8:	DD-FA       	.data 0xfadd          ; Binary data
C1AA:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C1AC:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C1AE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C1B0:	75-49       	sbci r23, 0x95        ; Subtract Immediate with Carry SBI
C1B2:	09-22       	and r0, r25           ; Logical AND
C1B4:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C1B6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C1B8:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C1BA:	D4-FA       	bst r13, 4            ; Bit Store from Bit in Register to T Flag in SREG
C1BC:	0D-20       	and r0, r13           ; Logical AND
C1BE:	01-21       	and r16, r1           ; Logical AND
C1C0:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1C2:	7C-FC       	.data 0xfc7c          ; Binary data
C1C4:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
C1C6:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
C1C8:	02-21       	and r16, r2           ; Logical AND
C1CA:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1CC:	77-FC       	sbrc r7, 7            ; Skip if Bit in Register is Cleared
C1CE:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C1D0:	29-F9       	.data 0xf929          ; Binary data
C1D2:	0D-20       	and r0, r13           ; Logical AND
C1D4:	01-21       	and r16, r1           ; Logical AND
C1D6:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1D8:	3F-FC       	.data 0xfc3f          ; Binary data
C1DA:	64-20       	and r6, r4            ; Logical AND
C1DC:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1DE:	52-FD       	sbrc r21, 2           ; Skip if Bit in Register is Cleared
C1E0:	0D-20       	and r0, r13           ; Logical AND
C1E2:	00-21       	and r16, r0           ; Logical AND
C1E4:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1E6:	38-FC       	.data 0xfc38          ; Binary data
C1E8:	64-20       	and r6, r4            ; Logical AND
C1EA:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1EC:	4B-FD       	.data 0xfd4b          ; Binary data
C1EE:	68-4B       	sbci r22, 0xb8        ; Subtract Immediate with Carry SBI
C1F0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C1F2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
C1F4:	01-0F       	add r16, r17          ; Add without Carry
C1F6:	26-D1       	rcall .+588           ; Relative Call to Subroutine
C1F8:	65-48       	sbci r22, 0x85        ; Subtract Immediate with Carry SBI
C1FA:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C1FC:	A7-FB       	bst r26, 7            ; Bit Store from Bit in Register to T Flag in SREG
C1FE:	10-B3       	in r17, 0x10          ; Load an I/O Location to Register
C200:	64-4B       	sbci r22, 0xb4        ; Subtract Immediate with Carry SBI
C202:	00-21       	and r16, r0           ; Logical AND
C204:	59-60       	ori r21, 0x09         ; Logical OR with Immediate
C206:	FF-22       	and r15, r31          ; Logical AND
C208:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
C20A:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
C20C:	9A-73       	andi r25, 0x3a        ; Logical AND with Immediate
C20E:	DA-73       	andi r29, 0x3a        ; Logical AND with Immediate
C210:	1A-74       	andi r17, 0x4a        ; Logical AND with Immediate
C212:	5A-74       	andi r21, 0x4a        ; Logical AND with Immediate
C214:	01-22       	and r0, r17           ; Logical AND
C216:	9A-74       	andi r25, 0x4a        ; Logical AND with Immediate
C218:	59-61       	ori r21, 0x19         ; Logical OR with Immediate
C21A:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
C21C:	5E-4B       	sbci r21, 0xbe        ; Subtract Immediate with Carry SBI
C21E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C220:	13-B9       	out 0x03, r17         ; Store Register to I/O Location
C222:	5C-4A       	sbci r21, 0xac        ; Subtract Immediate with Carry SBI
C224:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
C226:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C228:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
C22A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C22C:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
C22E:	59-4A       	sbci r21, 0xa9        ; Subtract Immediate with Carry SBI
C230:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
C232:	58-4B       	sbci r21, 0xb8        ; Subtract Immediate with Carry SBI
C234:	59-4A       	sbci r21, 0xa9        ; Subtract Immediate with Carry SBI
C236:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
C238:	59-4A       	sbci r21, 0xa9        ; Subtract Immediate with Carry SBI
C23A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C23C:	00-22       	and r0, r16           ; Logical AND
C23E:	9A-61       	ori r25, 0x1a         ; Logical OR with Immediate
C240:	53-48       	sbci r21, 0x83        ; Subtract Immediate with Carry SBI
C242:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C244:	89-FB       	.data 0xfb89          ; Binary data
C246:	53-48       	sbci r21, 0x83        ; Subtract Immediate with Carry SBI
C248:	56-49       	sbci r21, 0x96        ; Subtract Immediate with Carry SBI
C24A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
C24C:	2D-72       	andi r18, 0x2d        ; Logical AND with Immediate
C24E:	00-23       	and r16, r16          ; Logical AND
C250:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
C252:	C4-FC       	sbrc r12, 4           ; Skip if Bit in Register is Cleared
C254:	0D-20       	and r0, r13           ; Logical AND
C256:	01-21       	and r16, r1           ; Logical AND
C258:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C25A:	FE-FB       	.data 0xfbfe          ; Binary data
C25C:	52-4B       	sbci r21, 0xb2        ; Subtract Immediate with Carry SBI
C25E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C260:	00-93-00-9A 	sts 0x9a00, r16       ; Store Direct to Data Space
C264:	51-4B       	sbci r21, 0xb1        ; Subtract Immediate with Carry SBI
C266:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C268:	51-48       	sbci r21, 0x81        ; Subtract Immediate with Carry SBI
C26A:	06-21       	and r16, r6           ; Logical AND
C26C:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
C26E:	78-FF       	.data 0xff78          ; Binary data
C270:	50-48       	sbci r21, 0x80        ; Subtract Immediate with Carry SBI
C272:	64-21       	and r22, r4           ; Logical AND
C274:	00-22       	and r0, r16           ; Logical AND
C276:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C278:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
C27A:	4F-48       	sbci r20, 0x8f        ; Subtract Immediate with Carry SBI
C27C:	02-21       	and r16, r2           ; Logical AND
C27E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
C280:	D3-FF       	sbrs r29, 3           ; Skip if Bit in Register is Set
C282:	4E-48       	sbci r20, 0x8e        ; Subtract Immediate with Carry SBI
C284:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
C286:	96-71       	andi r25, 0x16        ; Logical AND with Immediate
C288:	02-22       	and r0, r18           ; Logical AND
C28A:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C28C:	07-F8       	bld r0, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
C28E:	02-20       	and r0, r2            ; Logical AND
C290:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C292:	EE-FA       	.data 0xfaee          ; Binary data
C294:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C296:	AA-F8       	.data 0xf8aa          ; Binary data
C298:	49-49       	sbci r20, 0x99        ; Subtract Immediate with Carry SBI
C29A:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C29C:	B3-F9       	bld r27, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
C29E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
C2A0:	00-21       	and r16, r0           ; Logical AND
C2A2:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C2A4:	99-FA       	.data 0xfa99          ; Binary data
C2A6:	30-B9       	out 0x00, r19         ; Store Register to I/O Location
C2A8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C2AA:	46-49       	sbci r20, 0x96        ; Subtract Immediate with Carry SBI
C2AC:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C2AE:	B2-FA       	bst r11, 2            ; Bit Store from Bit in Register to T Flag in SREG
C2B0:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
C2B2:	44-4C       	sbci r20, 0xc4        ; Subtract Immediate with Carry SBI
C2B4:	00-E0       	ldi r16, 0x00         ; Load Immediate
C2B6:	00-24       	clr r0                ; Clear Register
C2B8:	43-4B       	sbci r20, 0xb3        ; Subtract Immediate with Carry SBI
C2BA:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
C2BC:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C2BE:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
C2C0:	42-4C       	sbci r20, 0xc2        ; Subtract Immediate with Carry SBI
C2C2:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
C2C4:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C2C6:	48-FF       	.data 0xff48          ; Binary data
C2C8:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C2CA:	2C-21       	and r18, r12          ; Logical AND
C2CC:	40-4A       	sbci r20, 0xa0        ; Subtract Immediate with Carry SBI
C2CE:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
C2D0:	03-23       	and r16, r19          ; Logical AND
C2D2:	58-69       	ori r21, 0x98         ; Logical OR with Immediate
C2D4:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C2D6:	8E-F8       	.data 0xf88e          ; Binary data
C2D8:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
C2DA:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C2DC:	0D-20       	and r0, r13           ; Logical AND
C2DE:	00-21       	and r16, r0           ; Logical AND
C2E0:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C2E2:	BA-FB       	.data 0xfbba          ; Binary data
C2E4:	14-20       	and r1, r4            ; Logical AND
C2E6:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C2E8:	CD-FC       	.data 0xfccd          ; Binary data
C2EA:	0D-20       	and r0, r13           ; Logical AND
C2EC:	00-21       	and r16, r0           ; Logical AND
C2EE:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C2F0:	B3-FB       	bst r27, 3            ; Bit Store from Bit in Register to T Flag in SREG
C2F2:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
C2F4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C2F6:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
C2F8:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
C2FA:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
C2FC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C2FE:	00-20       	and r0, r0            ; Logical AND
C300:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C302:	B6-FA       	bst r11, 6            ; Bit Store from Bit in Register to T Flag in SREG
C304:	2F-28       	or r2, r15            ; Logical OR
C306:	01-D0       	rcall .+2             ; Relative Call to Subroutine
C308:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C30A:	06-F9       	bld r16, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
C30C:	01-20       	and r0, r1            ; Logical AND
C30E:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
C310:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
C312:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
C314:	CB-FE       	.data 0xfecb          ; Binary data
C316:	03-20       	and r0, r3            ; Logical AND
C318:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C31A:	AA-FA       	.data 0xfaaa          ; Binary data
C31C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C31E:	66-F8       	bld r6, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
C320:	27-49       	sbci r18, 0x97        ; Subtract Immediate with Carry SBI
C322:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C324:	6F-F9       	.data 0xf96f          ; Binary data
C326:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C328:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C32A:	B0-FF       	sbrs r27, 0           ; Skip if Bit in Register is Set
C32C:	2C-49       	sbci r18, 0x9c        ; Subtract Immediate with Carry SBI
C32E:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C330:	B5-F8       	bld r11, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
C332:	2B-49       	sbci r18, 0x9b        ; Subtract Immediate with Carry SBI
C334:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C336:	A8-FF       	.data 0xffa8          ; Binary data
C338:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
C33A:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
C33C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C33E:	03-20       	and r0, r3            ; Logical AND
C340:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
C342:	96-FA       	bst r9, 6             ; Bit Store from Bit in Register to T Flag in SREG
C344:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
C346:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
C348:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C34A:	28-49       	sbci r18, 0x98        ; Subtract Immediate with Carry SBI
C34C:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C34E:	44-FA       	bst r4, 4             ; Bit Store from Bit in Register to T Flag in SREG
C350:	38-B9       	out 0x08, r19         ; Store Register to I/O Location
C352:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C354:	22-49       	sbci r18, 0x92        ; Subtract Immediate with Carry SBI
C356:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C358:	5D-FA       	.data 0xfa5d          ; Binary data
C35A:	00-28       	or r0, r0             ; Logical OR
C35C:	48-D0       	rcall .+144           ; Relative Call to Subroutine
C35E:	20-48       	sbci r18, 0x80        ; Subtract Immediate with Carry SBI
C360:	47-E0       	ldi r20, 0x07         ; Load Immediate
C362:	22-48       	sbci r18, 0x82        ; Subtract Immediate with Carry SBI
C364:	45-E0       	ldi r20, 0x05         ; Load Immediate
C366:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
C368:	EC-FB       	.data 0xfbec          ; Binary data
C36A:	FF-1F       	adc r31, r31          ; Add with Carry
C36C:	C0-01       	movw r24, r0          ; Copy Register Word
C36E:	00-20       	and r0, r0            ; Logical AND
C370:	A0-7C       	andi r26, 0xc0        ; Logical AND with Immediate
C372:	01-00       	.data 0x0001          ; Binary data
C374:	38-F9       	.data 0xf938          ; Binary data
C376:	FF-1F       	adc r31, r31          ; Add with Carry
C378:	94-FF       	sbrs r25, 4           ; Skip if Bit in Register is Set
C37A:	FF-1F       	adc r31, r31          ; Add with Carry
C37C:	BC-7C       	andi r27, 0xcc        ; Logical AND with Immediate
C37E:	01-00       	.data 0x0001          ; Binary data
C380:	67-66       	ori r22, 0x67         ; Logical OR with Immediate
C382:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
C384:	80-B9       	out 0x00, r24         ; Store Register to I/O Location
C386:	FF-1F       	adc r31, r31          ; Add with Carry
C388:	C8-7C       	andi r28, 0xc8        ; Logical AND with Immediate
C38A:	01-00       	.data 0x0001          ; Binary data
C38C:	7C-92       	st X, r7              ; Store Indirect From Register to Data Space
C38E:	FF-1F       	adc r31, r31          ; Add with Carry
C390:	30-9D       	mul r19, r0           ; Multiply Unsigned
C392:	FF-1F       	adc r31, r31          ; Add with Carry
C394:	FC-9C       	mul r15, r12          ; Multiply Unsigned
C396:	FF-1F       	adc r31, r31          ; Add with Carry
C398:	E0-FC       	sbrc r14, 0           ; Skip if Bit in Register is Cleared
C39A:	FF-1F       	adc r31, r31          ; Add with Carry
C39C:	F0-FC       	sbrc r15, 0           ; Skip if Bit in Register is Cleared
C39E:	FF-1F       	adc r31, r31          ; Add with Carry
C3A0:	A8-77       	andi r26, 0x78        ; Logical AND with Immediate
C3A2:	01-00       	.data 0x0001          ; Binary data
C3A4:	F8-B0       	in r15, 0x08          ; Load an I/O Location to Register
C3A6:	FF-1F       	adc r31, r31          ; Add with Carry
C3A8:	0C-00       	.data 0x000c          ; Binary data
C3AA:	00-20       	and r0, r0            ; Logical AND
C3AC:	44-9D       	mul r20, r4           ; Multiply Unsigned
C3AE:	FF-1F       	adc r31, r31          ; Add with Carry
C3B0:	00-82       	st Z, r0              ; Store Indirect From Register to Data Space
C3B2:	FF-1F       	adc r31, r31          ; Add with Carry
C3B4:	5C-8F       	std Y+28, r21         ; Store Indirect From Register to Data Space
C3B6:	C2-3D       	cpi r28, 0xd2         ; Compare with Immediate
C3B8:	A4-FA       	bst r10, 4            ; Bit Store from Bit in Register to T Flag in SREG
C3BA:	FF-1F       	adc r31, r31          ; Add with Carry
C3BC:	8F-C2       	rjmp .+1310           ; Relative Jump
C3BE:	F5-3C       	cpi r31, 0xc5         ; Compare with Immediate
C3C0:	00-00       	nop                   ; No Operation
C3C2:	7F-43       	sbci r23, 0x3f        ; Subtract Immediate with Carry SBI
C3C4:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
C3C6:	66-3F       	cpi r22, 0xf6         ; Compare with Immediate
C3C8:	E4-92       	xch Z, r14            ; Exchange
C3CA:	FF-1F       	adc r31, r31          ; Add with Carry
C3CC:	78-FB       	.data 0xfb78          ; Binary data
C3CE:	FF-1F       	adc r31, r31          ; Add with Carry
C3D0:	80-F7       	brbc 0, .-32          ; Branch if Bit in SREG is Cleared
C3D2:	FF-1F       	adc r31, r31          ; Add with Carry
C3D4:	D0-92-FF-1F 	sts 0x1fff, r13       ; Store Direct to Data Space
C3D8:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
C3DA:	FF-1F       	adc r31, r31          ; Add with Carry
C3DC:	40-92-FF-1F 	sts 0x1fff, r4        ; Store Direct to Data Space
C3E0:	DB-0F       	add r29, r27          ; Add without Carry
C3E2:	49-40       	sbci r20, 0x09        ; Subtract Immediate with Carry SBI
C3E4:	34-9D       	mul r19, r4           ; Multiply Unsigned
C3E6:	FF-1F       	adc r31, r31          ; Add with Carry
C3E8:	70-B9       	out 0x00, r23         ; Store Register to I/O Location
C3EA:	FF-1F       	adc r31, r31          ; Add with Carry
C3EC:	DB-0F       	add r29, r27          ; Add without Carry
C3EE:	49-C0       	rjmp .+146            ; Relative Jump
C3F0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C3F2:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
C3F4:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C3F6:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C3F8:	BD-FB       	.data 0xfbbd          ; Binary data
C3FA:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
C3FC:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
C3FE:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
C400:	43-FC       	sbrc r4, 3            ; Skip if Bit in Register is Cleared
C402:	00-22       	and r0, r16           ; Logical AND
C404:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
C406:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C408:	09-FC       	.data 0xfc09          ; Binary data
C40A:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C40C:	A1-FE       	sbrs r10, 1           ; Skip if Bit in Register is Set
C40E:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
C410:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C412:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C414:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
C416:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
C418:	45-FB       	bst r20, 5            ; Bit Store from Bit in Register to T Flag in SREG
C41A:	00-22       	and r0, r16           ; Logical AND
C41C:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
C41E:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C420:	FD-FB       	.data 0xfbfd          ; Binary data
C422:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C424:	95-FE       	sbrs r9, 5            ; Skip if Bit in Register is Set
C426:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
C428:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
C42A:	0E-4C       	sbci r16, 0xce        ; Subtract Immediate with Carry SBI
C42C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
C42E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
C430:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C432:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
C434:	0E-22       	and r0, r30           ; Logical AND
C436:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
C438:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C43A:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C43C:	93-F9       	bld r25, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
C43E:	FF-23       	and r31, r31          ; Logical AND
C440:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
C442:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
C444:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
C446:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
C448:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C44A:	10-FB       	bst r17, 0            ; Bit Store from Bit in Register to T Flag in SREG
C44C:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C44E:	EC-FA       	.data 0xfaec          ; Binary data
C450:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
C452:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
C454:	34-9D       	mul r19, r4           ; Multiply Unsigned
C456:	FF-1F       	adc r31, r31          ; Add with Carry
C458:	00-00       	nop                   ; No Operation
C45A:	90-40       	sbci r25, 0x00        ; Subtract Immediate with Carry SBI
C45C:	7C-9D       	mul r23, r12          ; Multiply Unsigned
C45E:	FF-1F       	adc r31, r31          ; Add with Carry
C460:	80-9D       	mul r24, r0           ; Multiply Unsigned
C462:	FF-1F       	adc r31, r31          ; Add with Carry
C464:	C0-01       	movw r24, r0          ; Copy Register Word
C466:	00-20       	and r0, r0            ; Logical AND
C468:	D4-7C       	andi r29, 0xc4        ; Logical AND with Immediate
C46A:	01-00       	.data 0x0001          ; Binary data
C46C:	54-92       	xch Z, r5             ; Exchange
C46E:	FF-1F       	adc r31, r31          ; Add with Carry
C470:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
C472:	FF-1F       	adc r31, r31          ; Add with Carry
C474:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
C476:	86-B0       	in r8, 0x06           ; Load an I/O Location to Register
C478:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
C47A:	DA-FD       	.data 0xfdda          ; Binary data
C47C:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
C47E:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
C480:	04-EB       	ldi r16, 0xb4         ; Load Immediate
C482:	24-24       	clr r36               ; Clear Register
C484:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
C486:	00-74       	andi r16, 0x40        ; Logical AND with Immediate
C488:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
C48A:	B4-F5       	brbc 4, .+108         ; Branch if Bit in SREG is Cleared
C48C:	2D-2F       	mov r18, r29          ; Copy Register
C48E:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
C490:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
C492:	20-FD       	sbrc r18, 0           ; Skip if Bit in Register is Cleared
C494:	64-22       	and r6, r20           ; Logical AND
C496:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
C498:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C49A:	00-22       	and r0, r16           ; Logical AND
C49C:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
C49E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C4A0:	6A-E0       	ldi r22, 0x0a         ; Load Immediate
C4A2:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
C4A4:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
C4A6:	01-EB       	ldi r16, 0xb1         ; Load Immediate
C4A8:	64-31       	cpi r22, 0x14         ; Compare with Immediate
C4AA:	38-4A       	sbci r19, 0xa8        ; Subtract Immediate with Carry SBI
C4AC:	81-FB       	bst r24, 1            ; Bit Store from Bit in Register to T Flag in SREG
C4AE:	02-23       	and r16, r18          ; Logical AND
C4B0:	CA-18       	sub r12, r10          ; Subtract Without Carry
C4B2:	CB-17       	cp r28, r27           ; Compare
C4B4:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
C4B6:	E2-13       	cpse r30, r18         ; Compare Skip if Equal
C4B8:	19-44       	sbci r17, 0x49        ; Subtract Immediate with Carry SBI
C4BA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
C4BC:	FF-00       	.data 0x00ff          ; Binary data
C4BE:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
C4C0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C4C2:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
C4C4:	02-9B       	sbis 0x00, 2          ; Skip if Bit in I/O Register is Set
C4C6:	33-4A       	sbci r19, 0xa3        ; Subtract Immediate with Carry SBI
C4C8:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
C4CA:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
C4CC:	12-0C       	add r1, r2            ; Add without Carry
C4CE:	91-B2       	in r9, 0x11           ; Load an I/O Location to Register
C4D0:	C1-F3       	brbs 1, .-16          ; Branch if Bit in SREG is Set
C4D2:	CA-03       	fmulsu r20, r18       ; Fractional Multiply Signed with Unsigned
C4D4:	01-F4       	brbc 1, .+0           ; Branch if Bit in SREG is Cleared
C4D6:	80-41       	sbci r24, 0x10        ; Subtract Immediate with Carry SBI
C4D8:	89-B2       	in r8, 0x19           ; Load an I/O Location to Register
C4DA:	19-B1       	in r17, 0x09          ; Load an I/O Location to Register
C4DC:	C3-F5       	brbc 3, .+112         ; Branch if Bit in SREG is Cleared
C4DE:	FF-63       	ori r31, 0x3f         ; Logical OR with Immediate
C4E0:	07-33       	cpi r16, 0x37         ; Compare with Immediate
C4E2:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
C4E4:	19-0A       	sbc r1, r25           ; Subtract with Carry
C4E6:	2C-4D       	sbci r18, 0xdc        ; Subtract Immediate with Carry SBI
C4E8:	6D-5C       	subi r22, 0xcd        ; Subtract Immediate
C4EA:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
C4EC:	46-03       	mulsu r20, r22        ; Multiply Signed with Unsigned
C4EE:	2B-4E       	sbci r18, 0xeb        ; Subtract Immediate with Carry SBI
C4F0:	36-F8       	bld r3, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
C4F2:	11-10       	cpse r1, r1           ; Compare Skip if Equal
C4F4:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
C4F6:	03-13       	cpse r16, r19         ; Compare Skip if Equal
C4F8:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
C4FA:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
C4FC:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
C4FE:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
C500:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
C502:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
C504:	8D-F8       	.data 0xf88d          ; Binary data
C506:	0C-00       	.data 0x000c          ; Binary data
C508:	C8-22       	and r12, r24          ; Logical AND
C50A:	8D-F8       	.data 0xf88d          ; Binary data
C50C:	0D-20       	and r0, r13           ; Logical AND
C50E:	83-F4       	brbc 3, .+32          ; Branch if Bit in SREG is Cleared
C510:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
C512:	1B-0A       	sbc r1, r27           ; Subtract with Carry
C514:	8D-F8       	.data 0xf88d          ; Binary data
C516:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
C518:	03-A8       	std Y+51, r0          ; Store Indirect From Register to Data Space
C51A:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
C51C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
C51E:	86-FB       	bst r24, 6            ; Bit Store from Bit in Register to T Flag in SREG
C520:	9D-F8       	.data 0xf89d          ; Binary data
C522:	04-00       	.data 0x0004          ; Binary data
C524:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
C526:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
C528:	9D-F8       	.data 0xf89d          ; Binary data
C52A:	05-10       	cpse r0, r5           ; Compare Skip if Equal
C52C:	59-70       	andi r21, 0x09        ; Logical AND with Immediate
C52E:	9D-F8       	.data 0xf89d          ; Binary data
C530:	06-20       	and r0, r6            ; Logical AND
C532:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
C534:	8D-F8       	.data 0xf88d          ; Binary data
C536:	10-00       	.data 0x0010          ; Binary data
C538:	8D-F8       	.data 0xf88d          ; Binary data
C53A:	11-10       	cpse r1, r1           ; Compare Skip if Equal
C53C:	8D-F8       	.data 0xf88d          ; Binary data
C53E:	12-20       	and r1, r2            ; Logical AND
C540:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
C542:	B3-20       	and r11, r3           ; Logical AND
C544:	04-A9       	std Y+52, r16         ; Store Indirect From Register to Data Space
C546:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C548:	19-F8       	.data 0xf819          ; Binary data
C54A:	A4-13       	cpse r26, r20         ; Compare Skip if Equal
C54C:	65-1C       	adc r6, r5            ; Add with Carry
C54E:	00-24       	clr r0                ; Clear Register
C550:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
C552:	B3-26       	clr r691              ; Clear Register
C554:	05-A8       	std Y+53, r0          ; Store Indirect From Register to Data Space
C556:	B5-42       	sbci r27, 0x25        ; Subtract Immediate with Carry SBI
C558:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
C55A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
C55C:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
C55E:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C560:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
C562:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C564:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
C566:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C568:	09-F8       	.data 0xf809          ; Binary data
C56A:	01-34       	cpi r16, 0x41         ; Compare with Immediate
C56C:	01-35       	cpi r16, 0x51         ; Compare with Immediate
C56E:	B4-F5       	brbc 4, .+108         ; Branch if Bit in SREG is Cleared
C570:	2D-7F       	andi r18, 0xfd        ; Logical AND with Immediate
C572:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
C574:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C576:	EA-F9       	.data 0xf9ea          ; Binary data
C578:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
C57A:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
C57C:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
C57E:	FF-1F       	adc r31, r31          ; Add with Carry
C580:	64-92       	xch Z, r6             ; Exchange
C582:	FF-1F       	adc r31, r31          ; Add with Carry
C584:	84-9D       	mul r24, r4           ; Multiply Unsigned
C586:	FF-1F       	adc r31, r31          ; Add with Carry
C588:	D8-FB       	.data 0xfbd8          ; Binary data
C58A:	FF-1F       	adc r31, r31          ; Add with Carry
C58C:	81-80       	ldd r8, Y+1           ; Load Indirect from Data Space to Register
C58E:	80-80       	ld r8, Z              ; Load Indirect from Data Space to Register
C590:	0C-00       	.data 0x000c          ; Binary data
C592:	00-20       	and r0, r0            ; Logical AND
C594:	00-C0       	rjmp .+0              ; Relative Jump
C596:	DA-00       	.data 0x00da          ; Binary data
C598:	FC-7D       	andi r31, 0xdc        ; Logical AND with Immediate
C59A:	01-00       	.data 0x0001          ; Binary data
C59C:	04-7E       	andi r16, 0xe4        ; Logical AND with Immediate
C59E:	01-00       	.data 0x0001          ; Binary data
C5A0:	60-F8       	bld r6, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
C5A2:	FF-1F       	adc r31, r31          ; Add with Carry
C5A4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
C5A6:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
C5A8:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
C5AA:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
C5AC:	52-4B       	sbci r21, 0xb2        ; Subtract Immediate with Carry SBI
C5AE:	1E-1D       	adc r17, r14          ; Add with Carry
C5B0:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
C5B2:	14-05       	cpc r17, r4           ; Compare with Carry
C5B4:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
C5B6:	16-5A       	subi r17, 0xa6        ; Subtract Immediate
C5B8:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
C5BA:	14-0A       	sbc r1, r20           ; Subtract with Carry
C5BC:	DF-F8       	.data 0xf8df          ; Binary data
C5BE:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
C5C0:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
C5C2:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C5C4:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
C5C6:	00-2B       	or r16, r16           ; Logical OR
C5C8:	C0-F2       	brbs 0, .-80          ; Branch if Bit in SREG is Set
C5CA:	8E-80       	ldd r8, Y+6           ; Load Indirect from Data Space to Register
C5CC:	B0-46       	sbci r27, 0x60        ; Subtract Immediate with Carry SBI
C5CE:	F3-68       	ori r31, 0x83         ; Logical OR with Immediate
C5D0:	4B-44       	sbci r20, 0x4b        ; Subtract Immediate with Carry SBI
C5D2:	F3-60       	ori r31, 0x03         ; Logical OR with Immediate
C5D4:	32-7C       	andi r19, 0xc2        ; Logical AND with Immediate
C5D6:	72-B1       	in r23, 0x02          ; Load an I/O Location to Register
C5D8:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C5DA:	0C-2C       	mov r0, r12           ; Copy Register
C5DC:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
C5DE:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
C5E0:	35-F8       	bld r3, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C5E2:	12-1C       	adc r1, r2            ; Add with Carry
C5E4:	01-EB       	ldi r16, 0xb1         ; Load Immediate
C5E6:	12-12       	cpse r1, r18          ; Compare Skip if Equal
C5E8:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
C5EA:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
C5EC:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
C5EE:	13-23       	and r17, r19          ; Logical AND
C5F0:	25-F8       	bld r2, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C5F2:	14-3C       	cpi r17, 0xc4         ; Compare with Immediate
C5F4:	09-E0       	ldi r16, 0x09         ; Load Immediate
C5F6:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C5F8:	0C-2C       	mov r0, r12           ; Copy Register
C5FA:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
C5FC:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
C5FE:	35-F8       	bld r3, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C600:	12-1C       	adc r1, r2            ; Add with Carry
C602:	01-EB       	ldi r16, 0xb1         ; Load Immediate
C604:	D3-13       	cpse r29, r19         ; Compare Skip if Equal
C606:	25-F8       	bld r2, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
C608:	14-3C       	cpi r17, 0xc4         ; Compare with Immediate
C60A:	34-F8       	bld r3, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C60C:	14-7C       	andi r17, 0xc4        ; Logical AND with Immediate
C60E:	DB-F8       	.data 0xf8db          ; Binary data
C610:	00-30       	cpi r16, 0x00         ; Compare with Immediate
C612:	10-3B       	cpi r17, 0xb0         ; Compare with Immediate
C614:	9F-42       	sbci r25, 0x2f        ; Subtract Immediate with Carry SBI
C616:	04-DD       	rcall .+6664          ; Relative Call to Subroutine
C618:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C61A:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
C61C:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C61E:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
C620:	62-E0       	ldi r22, 0x02         ; Load Immediate
C622:	98-F8       	.data 0xf898          ; Binary data
C624:	10-30       	cpi r17, 0x00         ; Compare with Immediate
C626:	F3-B1       	in r31, 0x03          ; Load an I/O Location to Register
C628:	00-20       	and r0, r0            ; Logical AND
C62A:	64-21       	and r22, r4           ; Logical AND
C62C:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
C62E:	52-FA       	bst r5, 2             ; Bit Store from Bit in Register to T Flag in SREG
C630:	60-28       	or r6, r0             ; Logical OR
C632:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
C634:	00-20       	and r0, r0            ; Logical AND
C636:	32-20       	and r3, r2            ; Logical AND
C638:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C63A:	10-1C       	adc r1, r0            ; Add with Carry
C63C:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
C63E:	50-F1       	brbs 0, .+84          ; Branch if Bit in SREG is Set
C640:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C642:	0F-2C       	mov r0, r15           ; Copy Register
C644:	82-FA       	bst r8, 2             ; Bit Store from Bit in Register to T Flag in SREG
C646:	50-F2       	brbs 0, .-108         ; Branch if Bit in SREG is Set
C648:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C64A:	0E-3C       	cpi r16, 0xce         ; Compare with Immediate
C64C:	83-FA       	bst r8, 3             ; Bit Store from Bit in Register to T Flag in SREG
C64E:	50-F3       	brbs 0, .-44          ; Branch if Bit in SREG is Set
C650:	8D-F8       	.data 0xf88d          ; Binary data
C652:	00-10       	cpse r0, r0           ; Compare Skip if Equal
C654:	8D-F8       	.data 0xf88d          ; Binary data
C656:	01-20       	and r0, r1            ; Logical AND
C658:	8D-F8       	.data 0xf88d          ; Binary data
C65A:	02-30       	cpi r16, 0x02         ; Compare with Immediate
C65C:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
C65E:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
C660:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
C662:	5E-F8       	.data 0xf85e          ; Binary data
C664:	0F-E0       	ldi r16, 0x0f         ; Load Immediate
C666:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C668:	10-3C       	cpi r17, 0xc0         ; Compare with Immediate
C66A:	8D-F8       	.data 0xf88d          ; Binary data
C66C:	04-30       	cpi r16, 0x04         ; Compare with Immediate
C66E:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C670:	0F-3C       	cpi r16, 0xcf         ; Compare with Immediate
C672:	8D-F8       	.data 0xf88d          ; Binary data
C674:	05-30       	cpi r16, 0x05         ; Compare with Immediate
C676:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C678:	0E-3C       	cpi r16, 0xce         ; Compare with Immediate
C67A:	8D-F8       	.data 0xf88d          ; Binary data
C67C:	06-30       	cpi r16, 0x06         ; Compare with Immediate
C67E:	38-11       	cpse r19, r8          ; Compare Skip if Equal
C680:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
C682:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C684:	7B-FF       	.data 0xff7b          ; Binary data
C686:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C688:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
C68A:	C9-EB       	ldi r28, 0xb9         ; Load Immediate
C68C:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
C68E:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C690:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
C692:	1A-4A       	sbci r17, 0xaa        ; Subtract Immediate with Carry SBI
C694:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
C696:	00-2B       	or r16, r16           ; Logical OR
C698:	26-DC       	rcall .+6220          ; Relative Call to Subroutine
C69A:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C69C:	10-3C       	cpi r17, 0xc0         ; Compare with Immediate
C69E:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
C6A0:	FA-22       	and r15, r26          ; Logical AND
C6A2:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
C6A4:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
C6A6:	1B-12       	cpse r1, r27          ; Compare Skip if Equal
C6A8:	01-33       	cpi r16, 0x31         ; Compare with Immediate
C6AA:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
C6AC:	00-E0       	ldi r16, 0x00         ; Load Immediate
C6AE:	00-23       	and r16, r16          ; Logical AND
C6B0:	04-F8       	bld r0, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C6B2:	10-3C       	cpi r17, 0xc0         ; Compare with Immediate
C6B4:	98-F8       	.data 0xf898          ; Binary data
C6B6:	01-30       	cpi r16, 0x01         ; Compare with Immediate
C6B8:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
C6BA:	FA-22       	and r15, r26          ; Logical AND
C6BC:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
C6BE:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
C6C0:	1B-12       	cpse r1, r27          ; Compare Skip if Equal
C6C2:	01-33       	cpi r16, 0x31         ; Compare with Immediate
C6C4:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
C6C6:	00-E0       	ldi r16, 0x00         ; Load Immediate
C6C8:	00-23       	and r16, r16          ; Logical AND
C6CA:	88-F8       	.data 0xf888          ; Binary data
C6CC:	01-30       	cpi r16, 0x01         ; Compare with Immediate
C6CE:	98-F8       	.data 0xf898          ; Binary data
C6D0:	02-30       	cpi r16, 0x02         ; Compare with Immediate
C6D2:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
C6D4:	FA-22       	and r15, r26          ; Logical AND
C6D6:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
C6D8:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
C6DA:	1B-12       	cpse r1, r27          ; Compare Skip if Equal
C6DC:	01-33       	cpi r16, 0x31         ; Compare with Immediate
C6DE:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
C6E0:	00-E0       	ldi r16, 0x00         ; Load Immediate
C6E2:	00-23       	and r16, r16          ; Logical AND
C6E4:	88-F8       	.data 0xf888          ; Binary data
C6E6:	02-30       	cpi r16, 0x02         ; Compare with Immediate
C6E8:	18-36       	cpi r17, 0x68         ; Compare with Immediate
C6EA:	18-35       	cpi r17, 0x58         ; Compare with Immediate
C6EC:	55-45       	sbci r21, 0x55        ; Subtract Immediate with Carry SBI
C6EE:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
C6F0:	67-AF       	std Y+63, r22         ; Store Indirect From Register to Data Space
C6F2:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
C6F4:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
C6F6:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
C6F8:	8C-B9       	out 0x0c, r24         ; Store Register to I/O Location
C6FA:	FF-1F       	adc r31, r31          ; Add with Carry
C6FC:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
C6FE:	FF-1F       	adc r31, r31          ; Add with Carry
C700:	48-92       	.data 0x9248          ; Binary data
C702:	FF-1F       	adc r31, r31          ; Add with Carry
C704:	FF-FF       	.data 0xffff          ; Binary data
C706:	FF-FF       	.data 0xffff          ; Binary data
C708:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
C70A:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
C70C:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
C70E:	B0-4B       	sbci r27, 0xb0        ; Subtract Immediate with Carry SBI
C710:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
C712:	01-32       	cpi r16, 0x21         ; Compare with Immediate
C714:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
C716:	AF-4B       	sbci r26, 0xbf        ; Subtract Immediate with Carry SBI
C718:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C71A:	00-2B       	or r16, r16           ; Logical OR
C71C:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
C71E:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
C720:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
C722:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
C724:	04-DC       	rcall .+6152          ; Relative Call to Subroutine
C726:	AC-4B       	sbci r26, 0xbc        ; Subtract Immediate with Carry SBI
C728:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
C72A:	00-2B       	or r16, r16           ; Logical OR
C72C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
C72E:	96-80       	ldd r9, Y+6           ; Load Indirect from Data Space to Register
C730:	AA-4B       	sbci r26, 0xba        ; Subtract Immediate with Carry SBI
C732:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
C734:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
C736:	AA-4B       	sbci r26, 0xba        ; Subtract Immediate with Carry SBI
C738:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
C73A:	AA-49       	sbci r26, 0x9a        ; Subtract Immediate with Carry SBI
C73C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C73E:	62-FF       	sbrs r22, 2           ; Skip if Bit in Register is Set
C740:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
C742:	A9-4B       	sbci r26, 0xb9        ; Subtract Immediate with Carry SBI
C744:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
C746:	A7-49       	sbci r26, 0x97        ; Subtract Immediate with Carry SBI
C748:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C74A:	5C-FF       	.data 0xff5c          ; Binary data
C74C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C74E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C750:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C752:	9C-FD       	.data 0xfd9c          ; Binary data
C754:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
C756:	00-21       	and r16, r0           ; Logical AND
C758:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C75A:	5C-F8       	.data 0xf85c          ; Binary data
C75C:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
C75E:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
C760:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
C762:	00-E0       	ldi r16, 0x00         ; Load Immediate
C764:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C766:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C768:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
C76A:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C76C:	8F-FD       	.data 0xfd8f          ; Binary data
C76E:	9F-49       	sbci r25, 0x9f        ; Subtract Immediate with Carry SBI
C770:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C772:	48-FF       	.data 0xff48          ; Binary data
C774:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
C776:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
C778:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
C77A:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
C77C:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
C77E:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
C780:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
C782:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
C784:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
C786:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
C788:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C78A:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
C78C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C78E:	86-FE       	sbrs r8, 6            ; Skip if Bit in Register is Set
C790:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
C792:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
C794:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C796:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
C798:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C79A:	80-FE       	sbrs r8, 0            ; Skip if Bit in Register is Set
C79C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C79E:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
C7A0:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7A2:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
C7A4:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
C7A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C7A8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C7AA:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
C7AC:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7AE:	76-FE       	sbrs r7, 6            ; Skip if Bit in Register is Set
C7B0:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C7B2:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
C7B4:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7B6:	68-FD       	.data 0xfd68          ; Binary data
C7B8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C7BA:	89-41       	sbci r24, 0x19        ; Subtract Immediate with Carry SBI
C7BC:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7BE:	66-FD       	sbrc r22, 6           ; Skip if Bit in Register is Cleared
C7C0:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
C7C2:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
C7C4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C7C6:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
C7C8:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7CA:	68-FE       	.data 0xfe68          ; Binary data
C7CC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C7CE:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
C7D0:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7D2:	5A-FD       	.data 0xfd5a          ; Binary data
C7D4:	8A-49       	sbci r24, 0x9a        ; Subtract Immediate with Carry SBI
C7D6:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C7D8:	59-FD       	.data 0xfd59          ; Binary data
C7DA:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
C7DC:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
C7DE:	00-21       	and r16, r0           ; Logical AND
C7E0:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C7E2:	18-F8       	.data 0xf818          ; Binary data
C7E4:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
C7E6:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
C7E8:	00-47       	sbci r16, 0x70        ; Subtract Immediate with Carry SBI
C7EA:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
C7EC:	00-21       	and r16, r0           ; Logical AND
C7EE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C7F0:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
C7F2:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
C7F4:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
C7F6:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
C7F8:	00-E0       	ldi r16, 0x00         ; Load Immediate
C7FA:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
C7FC:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
C7FE:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C800:	45-FD       	sbrc r20, 5           ; Skip if Bit in Register is Cleared
C802:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
C804:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
C806:	00-21       	and r16, r0           ; Logical AND
C808:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
C80A:	04-F8       	bld r0, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
C80C:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
C80E:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
C810:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
C812:	00-E0       	ldi r16, 0x00         ; Load Immediate
C814:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
C816:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
C818:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C81A:	38-FD       	.data 0xfd38          ; Binary data
C81C:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
C81E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C820:	00-21       	and r16, r0           ; Logical AND
C822:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C824:	F7-FF       	sbrs r31, 7           ; Skip if Bit in Register is Set
C826:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
C828:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
C82A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
C82C:	00-E0       	ldi r16, 0x00         ; Load Immediate
C82E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C830:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
C832:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C834:	2B-FD       	.data 0xfd2b          ; Binary data
C836:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C838:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
C83A:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C83C:	2F-FE       	.data 0xfe2f          ; Binary data
C83E:	71-49       	sbci r23, 0x91        ; Subtract Immediate with Carry SBI
C840:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C842:	E0-FE       	sbrs r14, 0           ; Skip if Bit in Register is Set
C844:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C846:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
C848:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C84A:	20-FD       	sbrc r18, 0           ; Skip if Bit in Register is Cleared
C84C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C84E:	EC-FF       	.data 0xffec          ; Binary data
C850:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C852:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
C854:	02-22       	and r0, r18           ; Logical AND
C856:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C858:	21-FD       	sbrc r18, 1           ; Skip if Bit in Register is Cleared
C85A:	04-E0       	ldi r16, 0x04         ; Load Immediate
C85C:	00-20       	and r0, r0            ; Logical AND
C85E:	00-21       	and r16, r0           ; Logical AND
C860:	03-22       	and r0, r19           ; Logical AND
C862:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C864:	1B-FD       	.data 0xfd1b          ; Binary data
C866:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
C868:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
C86A:	00-2B       	or r16, r16           ; Logical OR
C86C:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
C86E:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
C870:	FF-13       	cpse r31, r31         ; Compare Skip if Equal
C872:	5B-12       	cpse r5, r27          ; Compare Skip if Equal
C874:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
C876:	AD-70       	andi r26, 0x0d        ; Logical AND with Immediate
C878:	55-4C       	sbci r21, 0xc5        ; Subtract Immediate with Carry SBI
C87A:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
C87C:	03-21       	and r16, r3           ; Logical AND
C87E:	22-68       	ori r18, 0x82         ; Logical OR with Immediate
C880:	01-23       	and r16, r17          ; Logical AND
C882:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
C884:	23-FD       	sbrc r18, 3           ; Skip if Bit in Register is Cleared
C886:	22-68       	ori r18, 0x82         ; Logical OR with Immediate
C888:	5F-4B       	sbci r21, 0xbf        ; Subtract Immediate with Carry SBI
C88A:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
C88C:	02-13       	cpse r16, r18         ; Compare Skip if Equal
C88E:	D2-17       	cp r29, r18           ; Compare
C890:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
C892:	53-13       	cpse r21, r19         ; Compare Skip if Equal
C894:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
C896:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
C898:	00-2B       	or r16, r16           ; Logical OR
C89A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
C89C:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
C89E:	8D-F8       	.data 0xf88d          ; Binary data
C8A0:	00-30       	cpi r16, 0x00         ; Compare with Immediate
C8A2:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
C8A4:	80-22       	and r8, r16           ; Logical AND
C8A6:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
C8A8:	8D-F8       	.data 0xf88d          ; Binary data
C8AA:	01-20       	and r0, r1            ; Logical AND
C8AC:	8D-F8       	.data 0xf88d          ; Binary data
C8AE:	02-30       	cpi r16, 0x02         ; Compare with Immediate
C8B0:	0F-20       	and r0, r15           ; Logical AND
C8B2:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
C8B4:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C8B6:	76-FE       	sbrs r7, 6            ; Skip if Bit in Register is Set
C8B8:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
C8BA:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
C8BC:	83-FB       	bst r24, 3            ; Bit Store from Bit in Register to T Flag in SREG
C8BE:	00-23       	and r16, r16          ; Logical AND
C8C0:	C2-17       	cp r28, r18           ; Compare
C8C2:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
C8C4:	63-13       	cpse r22, r19         ; Compare Skip if Equal
C8C6:	52-4A       	sbci r21, 0xa2        ; Subtract Immediate with Carry SBI
C8C8:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
C8CA:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
C8CC:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
C8CE:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
C8D0:	00-2B       	or r16, r16           ; Logical OR
C8D2:	6C-DD       	rcall .+6872          ; Relative Call to Subroutine
C8D4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
C8D6:	96-77       	andi r25, 0x76        ; Logical AND with Immediate
C8D8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
C8DA:	82-25       	clr r386              ; Clear Register
C8DC:	00-26       	clr r512              ; Clear Register
C8DE:	DF-F8       	.data 0xf8df          ; Binary data
C8E0:	3C-B1       	in r19, 0x0c          ; Load an I/O Location to Register
C8E2:	DF-F8       	.data 0xf8df          ; Binary data
C8E4:	3C-A1       	ldd r19, Y+36         ; Load Indirect from Data Space to Register
C8E6:	A1-46       	sbci r26, 0x61        ; Subtract Immediate with Carry SBI
C8E8:	DF-F8       	.data 0xf8df          ; Binary data
C8EA:	20-81       	ld r18, Z             ; Load Indirect from Data Space to Register
C8EC:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C8EE:	82-FD       	sbrc r24, 2           ; Skip if Bit in Register is Cleared
C8F0:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
C8F2:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C8F4:	87-FE       	sbrs r8, 7            ; Skip if Bit in Register is Set
C8F6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
C8F8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
C8FA:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C8FC:	7B-FD       	.data 0xfd7b          ; Binary data
C8FE:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
C900:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C902:	80-FE       	sbrs r8, 0            ; Skip if Bit in Register is Set
C904:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
C906:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
C908:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C90A:	C0-FC       	sbrc r12, 0           ; Skip if Bit in Register is Cleared
C90C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C90E:	32-F9       	bld r19, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
C910:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
C912:	BA-F9       	.data 0xf9ba          ; Binary data
C914:	00-22       	and r0, r16           ; Logical AND
C916:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
C918:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C91A:	80-F9       	bld r24, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
C91C:	2A-A3       	std Y+34, r18         ; Store Indirect From Register to Data Space
C91E:	D3-E9       	ldi r29, 0x93         ; Load Immediate
C920:	00-23       	and r16, r16          ; Logical AND
C922:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
C924:	C9-FF       	.data 0xffc9          ; Binary data
C926:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
C928:	13-FC       	sbrc r1, 3            ; Skip if Bit in Register is Cleared
C92A:	C4-B2       	in r12, 0x14          ; Load an I/O Location to Register
C92C:	8D-F8       	.data 0xf88d          ; Binary data
C92E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
C930:	8D-F8       	.data 0xf88d          ; Binary data
C932:	05-40       	sbci r16, 0x05        ; Subtract Immediate with Carry SBI
C934:	8D-F8       	.data 0xf88d          ; Binary data
C936:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
C938:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
C93A:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
C93C:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C93E:	32-FE       	sbrs r3, 2            ; Skip if Bit in Register is Set
C940:	8D-F8       	.data 0xf88d          ; Binary data
C942:	08-40       	sbci r16, 0x08        ; Subtract Immediate with Carry SBI
C944:	8D-F8       	.data 0xf88d          ; Binary data
C946:	09-40       	sbci r16, 0x09        ; Subtract Immediate with Carry SBI
C948:	8D-F8       	.data 0xf88d          ; Binary data
C94A:	0A-40       	sbci r16, 0x0a        ; Subtract Immediate with Carry SBI
C94C:	68-1C       	adc r6, r8            ; Add with Carry
C94E:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
C950:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C952:	28-FE       	.data 0xfe28          ; Binary data
C954:	8D-F8       	.data 0xf88d          ; Binary data
C956:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
C958:	8D-F8       	.data 0xf88d          ; Binary data
C95A:	0D-40       	sbci r16, 0x0d        ; Subtract Immediate with Carry SBI
C95C:	8D-F8       	.data 0xf88d          ; Binary data
C95E:	0E-40       	sbci r16, 0x0e        ; Subtract Immediate with Carry SBI
C960:	A8-1C       	adc r10, r8           ; Add with Carry
C962:	03-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
C964:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C966:	1E-FE       	.data 0xfe1e          ; Binary data
C968:	D9-F8       	.data 0xf8d9          ; Binary data
C96A:	00-30       	cpi r16, 0x00         ; Compare with Immediate
C96C:	88-FB       	.data 0xfb88          ; Binary data
C96E:	03-12       	cpse r0, r19          ; Compare Skip if Equal
C970:	DB-17       	cp r29, r27           ; Compare
C972:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
C974:	62-13       	cpse r22, r18         ; Compare Skip if Equal
C976:	26-4A       	sbci r18, 0xa6        ; Subtract Immediate with Carry SBI
C978:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
C97A:	01-32       	cpi r16, 0x21         ; Compare with Immediate
C97C:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
C97E:	05-DA       	rcall .+5130          ; Relative Call to Subroutine
C980:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
C982:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
C984:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
C986:	00-22       	and r0, r16           ; Logical AND
C988:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C98A:	88-FC       	.data 0xfc88          ; Binary data
C98C:	01-36       	cpi r16, 0x61         ; Compare with Immediate
C98E:	D9-F8       	.data 0xf8d9          ; Binary data
C990:	00-00       	nop                   ; No Operation
C992:	0C-3D       	cpi r16, 0xdc         ; Compare with Immediate
C994:	32-37       	cpi r19, 0x72         ; Compare with Immediate
C996:	88-FB       	.data 0xfb88          ; Binary data
C998:	00-32       	cpi r16, 0x20         ; Compare with Immediate
C99A:	C3-17       	cp r28, r19           ; Compare
C99C:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
C99E:	62-13       	cpse r22, r18         ; Compare Skip if Equal
C9A0:	1B-4A       	sbci r17, 0xab        ; Subtract Immediate with Carry SBI
C9A2:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
C9A4:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
C9A6:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
C9A8:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
C9AA:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
C9AC:	9E-DB       	rcall .+5948          ; Relative Call to Subroutine
C9AE:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
C9B0:	B7-F9       	bld r27, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
C9B2:	05-20       	and r0, r5            ; Logical AND
C9B4:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
C9B6:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
C9B8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
C9BA:	F4-FD       	sbrc r31, 4           ; Skip if Bit in Register is Cleared
C9BC:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
C9BE:	C6-FF       	sbrs r28, 6           ; Skip if Bit in Register is Set
C9C0:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
C9C2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
C9C4:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
C9C6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
C9C8:	00-00       	nop                   ; No Operation
C9CA:	00-00       	nop                   ; No Operation
C9CC:	00-C0       	rjmp .+0              ; Relative Jump
C9CE:	62-40       	sbci r22, 0x02        ; Subtract Immediate with Carry SBI
C9D0:	50-F9       	bld r21, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
C9D2:	FF-1F       	adc r31, r31          ; Add with Carry
C9D4:	98-9D       	mul r25, r8           ; Multiply Unsigned
C9D6:	FF-1F       	adc r31, r31          ; Add with Carry
C9D8:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
C9DA:	FF-1F       	adc r31, r31          ; Add with Carry
C9DC:	E4-92       	xch Z, r14            ; Exchange
C9DE:	FF-1F       	adc r31, r31          ; Add with Carry
C9E0:	9C-F8       	.data 0xf89c          ; Binary data
C9E2:	FF-1F       	adc r31, r31          ; Add with Carry
C9E4:	00-00       	nop                   ; No Operation
C9E6:	40-40       	sbci r20, 0x00        ; Subtract Immediate with Carry SBI
C9E8:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
C9EA:	FF-1F       	adc r31, r31          ; Add with Carry
C9EC:	00-00       	nop                   ; No Operation
C9EE:	70-41       	sbci r23, 0x10        ; Subtract Immediate with Carry SBI
C9F0:	1C-DF       	rcall .+7736          ; Relative Call to Subroutine
C9F2:	FF-1F       	adc r31, r31          ; Add with Carry
C9F4:	20-DF       	rcall .+7744          ; Relative Call to Subroutine
C9F6:	FF-1F       	adc r31, r31          ; Add with Carry
C9F8:	88-9D       	mul r24, r8           ; Multiply Unsigned
C9FA:	FF-1F       	adc r31, r31          ; Add with Carry
C9FC:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
C9FE:	FF-1F       	adc r31, r31          ; Add with Carry
CA00:	00-00       	nop                   ; No Operation
CA02:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
CA04:	00-00       	nop                   ; No Operation
CA06:	FA-43       	sbci r31, 0x3a        ; Subtract Immediate with Carry SBI
CA08:	67-66       	ori r22, 0x67         ; Logical OR with Immediate
CA0A:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
CA0C:	1F-85       	std Y+15, r17         ; Store Indirect From Register to Data Space
CA0E:	EB-51       	subi r30, 0x1b        ; Subtract Immediate
CA10:	84-B9       	out 0x04, r24         ; Store Register to I/O Location
CA12:	FF-1F       	adc r31, r31          ; Add with Carry
CA14:	00-00       	nop                   ; No Operation
CA16:	59-40       	sbci r21, 0x09        ; Subtract Immediate with Carry SBI
CA18:	5C-FA       	.data 0xfa5c          ; Binary data
CA1A:	FF-1F       	adc r31, r31          ; Add with Carry
CA1C:	00-00       	nop                   ; No Operation
CA1E:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
CA20:	00-00       	nop                   ; No Operation
CA22:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
CA24:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
CA26:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
CA28:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
CA2A:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CA2C:	6F-F9       	.data 0xf96f          ; Binary data
CA2E:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
CA30:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
CA32:	19-49       	sbci r17, 0x99        ; Subtract Immediate with Carry SBI
CA34:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
CA36:	5B-1A       	sub r5, r27           ; Subtract Without Carry
CA38:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CA3A:	00-2B       	or r16, r16           ; Logical OR
CA3C:	06-DA       	rcall .+5132          ; Relative Call to Subroutine
CA3E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
CA40:	FA-62       	ori r31, 0x2a         ; Logical OR with Immediate
CA42:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
CA44:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CA46:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
CA48:	45-FA       	bst r4, 5             ; Bit Store from Bit in Register to T Flag in SREG
CA4A:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
CA4C:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CA4E:	EE-FD       	.data 0xfdee          ; Binary data
CA50:	13-4A       	sbci r17, 0xa3        ; Subtract Immediate with Carry SBI
CA52:	FF-21       	and r31, r15          ; Logical AND
CA54:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
CA56:	00-23       	and r16, r16          ; Logical AND
CA58:	53-70       	andi r21, 0x03        ; Logical AND with Immediate
CA5A:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
CA5C:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
CA5E:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
CA60:	53-70       	andi r21, 0x03        ; Logical AND with Immediate
CA62:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
CA64:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
CA66:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
CA68:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
CA6A:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
CA6C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CA6E:	C2-FC       	sbrc r12, 2           ; Skip if Bit in Register is Cleared
CA70:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
CA72:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CA74:	13-FD       	sbrc r17, 3           ; Skip if Bit in Register is Cleared
CA76:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
CA78:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CA7A:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CA7C:	0F-FD       	.data 0xfd0f          ; Binary data
CA7E:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CA80:	F9-FE       	.data 0xfef9          ; Binary data
CA82:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
CA84:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
CA86:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
CA88:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
CA8A:	8C-FD       	.data 0xfd8c          ; Binary data
CA8C:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
CA8E:	5E-FF       	.data 0xff5e          ; Binary data
CA90:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
CA92:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
CA94:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
CA96:	FF-1F       	adc r31, r31          ; Add with Carry
CA98:	5C-F9       	.data 0xf95c          ; Binary data
CA9A:	FF-1F       	adc r31, r31          ; Add with Carry
CA9C:	6C-92       	st X, r6              ; Store Indirect From Register to Data Space
CA9E:	FF-1F       	adc r31, r31          ; Add with Carry
CAA0:	60-F8       	bld r6, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
CAA2:	FF-1F       	adc r31, r31          ; Add with Carry
CAA4:	98-F8       	.data 0xf898          ; Binary data
CAA6:	FF-1F       	adc r31, r31          ; Add with Carry
CAA8:	68-92       	.data 0x9268          ; Binary data
CAAA:	FF-1F       	adc r31, r31          ; Add with Carry
CAAC:	5C-FA       	.data 0xfa5c          ; Binary data
CAAE:	FF-1F       	adc r31, r31          ; Add with Carry
CAB0:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
CAB2:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
CAB4:	8D-B0       	in r8, 0x0d           ; Load an I/O Location to Register
CAB6:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CAB8:	B1-FA       	bst r11, 1            ; Bit Store from Bit in Register to T Flag in SREG
CABA:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
CABC:	93-4B       	sbci r25, 0xb3        ; Subtract Immediate with Carry SBI
CABE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CAC0:	C3-1A       	sub r12, r19          ; Subtract Without Carry
CAC2:	14-2B       	or r17, r20           ; Logical OR
CAC4:	02-DC       	rcall .+6148          ; Relative Call to Subroutine
CAC6:	92-4A       	sbci r25, 0xa2        ; Subtract Immediate with Carry SBI
CAC8:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CACA:	02-E0       	ldi r16, 0x02         ; Load Immediate
CACC:	14-22       	and r1, r20           ; Logical AND
CACE:	90-4B       	sbci r25, 0xb0        ; Subtract Immediate with Carry SBI
CAD0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CAD2:	8F-4D       	sbci r24, 0xdf        ; Subtract Immediate with Carry SBI
CAD4:	28-68       	ori r18, 0x88         ; Logical OR with Immediate
CAD6:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CAD8:	8D-FC       	.data 0xfc8d          ; Binary data
CADA:	8E-4B       	sbci r24, 0xbe        ; Subtract Immediate with Carry SBI
CADC:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
CADE:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CAE0:	91-FD       	sbrc r25, 1           ; Skip if Bit in Register is Cleared
CAE2:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CAE4:	A1-FE       	sbrs r10, 1           ; Skip if Bit in Register is Set
CAE6:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
CAE8:	88-4B       	sbci r24, 0xb8        ; Subtract Immediate with Carry SBI
CAEA:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
CAEC:	8A-4B       	sbci r24, 0xba        ; Subtract Immediate with Carry SBI
CAEE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CAF0:	04-93       	xch Z, r16            ; Exchange
CAF2:	04-9A       	sbi 0x00, 4           ; Set Bit in I/O Register
CAF4:	89-4B       	sbci r24, 0xb9        ; Subtract Immediate with Carry SBI
CAF6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CAF8:	D2-1A       	sub r13, r18          ; Subtract Without Carry
CAFA:	89-4B       	sbci r24, 0xb9        ; Subtract Immediate with Carry SBI
CAFC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CAFE:	89-4B       	sbci r24, 0xb9        ; Subtract Immediate with Carry SBI
CB00:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CB02:	4B-B1       	in r20, 0x0b          ; Load an I/O Location to Register
CB04:	88-4B       	sbci r24, 0xb8        ; Subtract Immediate with Carry SBI
CB06:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CB08:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
CB0A:	88-4B       	sbci r24, 0xb8        ; Subtract Immediate with Carry SBI
CB0C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CB0E:	1B-B9       	out 0x0b, r17         ; Store Register to I/O Location
CB10:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
CB12:	FA-FD       	.data 0xfdfa          ; Binary data
CB14:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CB16:	0A-BD       	out 0x2a, r16         ; Store Register to I/O Location
CB18:	85-4B       	sbci r24, 0xb5        ; Subtract Immediate with Carry SBI
CB1A:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
CB1C:	01-32       	cpi r16, 0x21         ; Compare with Immediate
CB1E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CB20:	82-4B       	sbci r24, 0xb2        ; Subtract Immediate with Carry SBI
CB22:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
CB24:	01-32       	cpi r16, 0x21         ; Compare with Immediate
CB26:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CB28:	82-4B       	sbci r24, 0xb2        ; Subtract Immediate with Carry SBI
CB2A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CB2C:	9B-B9       	out 0x0b, r25         ; Store Register to I/O Location
CB2E:	82-4B       	sbci r24, 0xb2        ; Subtract Immediate with Carry SBI
CB30:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CB32:	83-B1       	in r24, 0x03          ; Load an I/O Location to Register
CB34:	01-25       	clr r257              ; Clear Register
CB36:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
CB38:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
CB3A:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CB3C:	6F-FA       	.data 0xfa6f          ; Binary data
CB3E:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
CB40:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
CB42:	7F-4C       	sbci r23, 0xcf        ; Subtract Immediate with Carry SBI
CB44:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
CB46:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
CB48:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CB4A:	7E-49       	sbci r23, 0x9e        ; Subtract Immediate with Carry SBI
CB4C:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
CB4E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
CB50:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CB52:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
CB54:	07-FE       	sbrs r0, 7            ; Skip if Bit in Register is Set
CB56:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CB58:	61-FA       	bst r6, 1             ; Bit Store from Bit in Register to T Flag in SREG
CB5A:	7B-4B       	sbci r23, 0xbb        ; Subtract Immediate with Carry SBI
CB5C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CB5E:	C0-1A       	sub r12, r16          ; Subtract Without Carry
CB60:	44-F6       	brbc 4, .-112         ; Branch if Bit in SREG is Cleared
CB62:	20-62       	ori r18, 0x20         ; Logical OR with Immediate
CB64:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
CB66:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
CB68:	BA-84       	std Y+10, r11         ; Store Indirect From Register to Data Space
CB6A:	78-4B       	sbci r23, 0xb8        ; Subtract Immediate with Carry SBI
CB6C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CB6E:	00-2B       	or r16, r16           ; Logical OR
CB70:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
CB72:	B5-84       	std Y+13, r11         ; Store Indirect From Register to Data Space
CB74:	76-4B       	sbci r23, 0xb6        ; Subtract Immediate with Carry SBI
CB76:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CB78:	00-2B       	or r16, r16           ; Logical OR
CB7A:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
CB7C:	B0-84       	std Y+8, r11          ; Store Indirect From Register to Data Space
CB7E:	69-4B       	sbci r22, 0xb9        ; Subtract Immediate with Carry SBI
CB80:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CB82:	00-2B       	or r16, r16           ; Logical OR
CB84:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
CB86:	AB-84       	std Y+11, r10         ; Store Indirect From Register to Data Space
CB88:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CB8A:	A6-BC       	out 0x26, r10         ; Store Register to I/O Location
CB8C:	70-4B       	sbci r23, 0xb0        ; Subtract Immediate with Carry SBI
CB8E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CB90:	F3-B9       	out 0x03, r31         ; Store Register to I/O Location
CB92:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CB94:	B0-BC       	out 0x20, r11         ; Store Register to I/O Location
CB96:	6F-4C       	sbci r22, 0xcf        ; Subtract Immediate with Carry SBI
CB98:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
CB9A:	01-33       	cpi r16, 0x31         ; Compare with Immediate
CB9C:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
CB9E:	68-4D       	sbci r22, 0xd8        ; Subtract Immediate with Carry SBI
CBA0:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
CBA2:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
CBA4:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
CBA6:	6C-49       	sbci r22, 0x9c        ; Subtract Immediate with Carry SBI
CBA8:	10-22       	and r1, r16           ; Logical AND
CBAA:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
CBAC:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
CBAE:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
CBB0:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
CBB2:	24-FE       	sbrs r2, 4            ; Skip if Bit in Register is Set
CBB4:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
CBB6:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
CBB8:	D5-FD       	sbrc r29, 5           ; Skip if Bit in Register is Cleared
CBBA:	04-20       	and r0, r4            ; Logical AND
CBBC:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
CBBE:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CBC0:	21-F8       	bld r2, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
CBC2:	66-4C       	sbci r22, 0xc6        ; Subtract Immediate with Carry SBI
CBC4:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
CBC6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
CBC8:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
CBCA:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CBCC:	5D-FB       	.data 0xfb5d          ; Binary data
CBCE:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
CBD0:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
CBD2:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
CBD4:	4E-49       	sbci r20, 0x9e        ; Subtract Immediate with Carry SBI
CBD6:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
CBD8:	52-1A       	sub r5, r18           ; Subtract Without Carry
CBDA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CBDC:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
CBDE:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CBE0:	C3-B1       	in r28, 0x03          ; Load an I/O Location to Register
CBE2:	55-4B       	sbci r21, 0xb5        ; Subtract Immediate with Carry SBI
CBE4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CBE6:	53-B9       	out 0x03, r21         ; Store Register to I/O Location
CBE8:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CBEA:	18-FA       	.data 0xfa18          ; Binary data
CBEC:	56-4B       	sbci r21, 0xb6        ; Subtract Immediate with Carry SBI
CBEE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CBF0:	C0-1A       	sub r12, r16          ; Subtract Without Carry
CBF2:	5C-4A       	sbci r21, 0xac        ; Subtract Immediate with Carry SBI
CBF4:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
CBF6:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
CBF8:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
CBFA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CBFC:	2B-B9       	out 0x0b, r18         ; Store Register to I/O Location
CBFE:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
CC00:	7D-FB       	.data 0xfb7d          ; Binary data
CC02:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
CC04:	EB-FA       	.data 0xfaeb          ; Binary data
CC06:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CC08:	91-BC       	out 0x21, r9          ; Store Register to I/O Location
CC0A:	41-4B       	sbci r20, 0xb1        ; Subtract Immediate with Carry SBI
CC0C:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
CC0E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
CC10:	DF-FB       	.data 0xfbdf          ; Binary data
CC12:	21-E0       	ldi r18, 0x01         ; Load Immediate
CC14:	48-4B       	sbci r20, 0xb8        ; Subtract Immediate with Carry SBI
CC16:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CC18:	73-B1       	in r23, 0x03          ; Load an I/O Location to Register
CC1A:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CC1C:	FF-F9       	.data 0xf9ff          ; Binary data
CC1E:	4A-4B       	sbci r20, 0xba        ; Subtract Immediate with Carry SBI
CC20:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CC22:	C0-1A       	sub r12, r16          ; Subtract Without Carry
CC24:	4F-4A       	sbci r20, 0xaf        ; Subtract Immediate with Carry SBI
CC26:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
CC28:	06-DD       	rcall .+6668          ; Relative Call to Subroutine
CC2A:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
CC2C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CC2E:	1B-B9       	out 0x0b, r17         ; Store Register to I/O Location
CC30:	4E-4B       	sbci r20, 0xbe        ; Subtract Immediate with Carry SBI
CC32:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
CC34:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
CC36:	90-FA       	bst r9, 0             ; Bit Store from Bit in Register to T Flag in SREG
CC38:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
CC3A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CC3C:	63-B9       	out 0x03, r22         ; Store Register to I/O Location
CC3E:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CC40:	ED-F9       	.data 0xf9ed          ; Binary data
CC42:	41-4B       	sbci r20, 0xb1        ; Subtract Immediate with Carry SBI
CC44:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CC46:	C0-1A       	sub r12, r16          ; Subtract Without Carry
CC48:	49-4A       	sbci r20, 0xa9        ; Subtract Immediate with Carry SBI
CC4A:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
CC4C:	04-DD       	rcall .+6664          ; Relative Call to Subroutine
CC4E:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
CC50:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CC52:	0B-B9       	out 0x0b, r16         ; Store Register to I/O Location
CC54:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
CC56:	D6-FA       	bst r13, 6            ; Bit Store from Bit in Register to T Flag in SREG
CC58:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
CC5A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CC5C:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
CC5E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
CC60:	E3-FE       	sbrs r14, 3           ; Skip if Bit in Register is Set
CC62:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CC64:	63-BC       	out 0x23, r6          ; Store Register to I/O Location
CC66:	44-4B       	sbci r20, 0xb4        ; Subtract Immediate with Carry SBI
CC68:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CC6A:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
CC6C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
CC6E:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
CC70:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CC72:	5C-BC       	out 0x2c, r5          ; Store Register to I/O Location
CC74:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
CC76:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
CC78:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
CC7A:	47-02       	muls r20, r23         ; Multiply Signed
CC7C:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
CC7E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
CC80:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
CC82:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CC84:	93-B9       	out 0x03, r25         ; Store Register to I/O Location
CC86:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
CC88:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CC8A:	00-2B       	or r16, r16           ; Logical OR
CC8C:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
CC8E:	00-24       	clr r0                ; Clear Register
CC90:	3C-4D       	sbci r19, 0xdc        ; Subtract Immediate with Carry SBI
CC92:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CC94:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CC96:	72-FE       	sbrs r7, 2            ; Skip if Bit in Register is Set
CC98:	01-34       	cpi r16, 0x41         ; Compare with Immediate
CC9A:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
CC9C:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
CC9E:	F8-DC       	rcall .+6640          ; Relative Call to Subroutine
CCA0:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CCA2:	22-FF       	sbrs r18, 2           ; Skip if Bit in Register is Set
CCA4:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
CCA6:	BC-FA       	.data 0xfabc          ; Binary data
CCA8:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
CCAA:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
CCAC:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
CCAE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CCB0:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
CCB2:	83-72       	andi r24, 0x23        ; Logical AND with Immediate
CCB4:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
CCB6:	82-03       	fmuls r16, r18        ; Fractional Multiply Signed
CCB8:	33-4A       	sbci r19, 0xa3        ; Subtract Immediate with Carry SBI
CCBA:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
CCBC:	0B-44       	sbci r16, 0x4b        ; Subtract Immediate with Carry SBI
CCBE:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CCC0:	32-4A       	sbci r19, 0xa2        ; Subtract Immediate with Carry SBI
CCC2:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
CCC4:	00-2A       	or r0, r16            ; Logical OR
CCC6:	67-D1       	rcall .+718           ; Relative Call to Subroutine
CCC8:	00-23       	and r16, r16          ; Logical AND
CCCA:	2F-4A       	sbci r18, 0xaf        ; Subtract Immediate with Carry SBI
CCCC:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CCCE:	30-4A       	sbci r19, 0xa0        ; Subtract Immediate with Carry SBI
CCD0:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CCD2:	30-4A       	sbci r19, 0xa0        ; Subtract Immediate with Carry SBI
CCD4:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CCD6:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
CCD8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CCDA:	00-2B       	or r16, r16           ; Logical OR
CCDC:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
CCDE:	F5-81       	ldd r31, Y+5          ; Load Indirect from Data Space to Register
CCE0:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
CCE2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CCE4:	00-2B       	or r16, r16           ; Logical OR
CCE6:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
CCE8:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
CCEA:	00-24       	clr r0                ; Clear Register
CCEC:	10-25       	clr r272              ; Clear Register
CCEE:	25-4E       	sbci r18, 0xe5        ; Subtract Immediate with Carry SBI
CCF0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CCF2:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
CCF4:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CCF6:	FE-FC       	.data 0xfcfe          ; Binary data
CCF8:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
CCFA:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
CCFC:	83-F9       	bld r24, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
CCFE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
CD00:	15-BC       	out 0x25, r1          ; Store Register to I/O Location
CD02:	01-34       	cpi r16, 0x41         ; Compare with Immediate
CD04:	33-68       	ori r19, 0x83         ; Logical OR with Immediate
CD06:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
CD08:	F2-DC       	rcall .+6628          ; Relative Call to Subroutine
CD0A:	DE-E1       	ldi r29, 0x1e         ; Load Immediate
CD0C:	34-9E       	mul r3, r20           ; Multiply Unsigned
CD0E:	FF-1F       	adc r31, r31          ; Add with Carry
CD10:	5C-F9       	.data 0xf95c          ; Binary data
CD12:	FF-1F       	adc r31, r31          ; Add with Carry
CD14:	68-92       	.data 0x9268          ; Binary data
CD16:	FF-1F       	adc r31, r31          ; Add with Carry
CD18:	0C-00       	.data 0x000c          ; Binary data
CD1A:	00-20       	and r0, r0            ; Logical AND
CD1C:	90-FB       	bst r25, 0            ; Bit Store from Bit in Register to T Flag in SREG
CD1E:	FF-1F       	adc r31, r31          ; Add with Carry
CD20:	5C-FA       	.data 0xfa5c          ; Binary data
CD22:	FF-1F       	adc r31, r31          ; Add with Carry
CD24:	38-9D       	mul r19, r8           ; Multiply Unsigned
CD26:	FF-1F       	adc r31, r31          ; Add with Carry
CD28:	54-F9       	bld r21, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
CD2A:	FF-1F       	adc r31, r31          ; Add with Carry
CD2C:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
CD2E:	FF-1F       	adc r31, r31          ; Add with Carry
CD30:	F0-FB       	bst r31, 0            ; Bit Store from Bit in Register to T Flag in SREG
CD32:	FF-1F       	adc r31, r31          ; Add with Carry
CD34:	4C-9D       	mul r20, r12          ; Multiply Unsigned
CD36:	FF-1F       	adc r31, r31          ; Add with Carry
CD38:	98-9D       	mul r25, r8           ; Multiply Unsigned
CD3A:	FF-1F       	adc r31, r31          ; Add with Carry
CD3C:	44-FC       	sbrc r4, 4            ; Skip if Bit in Register is Cleared
CD3E:	FF-1F       	adc r31, r31          ; Add with Carry
CD40:	C0-01       	movw r24, r0          ; Copy Register Word
CD42:	00-20       	and r0, r0            ; Logical AND
CD44:	6C-7D       	andi r22, 0xdc        ; Logical AND with Immediate
CD46:	01-00       	.data 0x0001          ; Binary data
CD48:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
CD4A:	FF-1F       	adc r31, r31          ; Add with Carry
CD4C:	48-F9       	.data 0xf948          ; Binary data
CD4E:	FF-1F       	adc r31, r31          ; Add with Carry
CD50:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
CD52:	FF-1F       	adc r31, r31          ; Add with Carry
CD54:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
CD56:	FF-1F       	adc r31, r31          ; Add with Carry
CD58:	68-7C       	andi r22, 0xc8        ; Logical AND with Immediate
CD5A:	01-00       	.data 0x0001          ; Binary data
CD5C:	6C-9D       	mul r22, r12          ; Multiply Unsigned
CD5E:	FF-1F       	adc r31, r31          ; Add with Carry
CD60:	DC-F7       	brbc 4, .-10          ; Branch if Bit in SREG is Cleared
CD62:	FF-1F       	adc r31, r31          ; Add with Carry
CD64:	C0-D4       	rcall .+2432          ; Relative Call to Subroutine
CD66:	01-00       	.data 0x0001          ; Binary data
CD68:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
CD6A:	FF-1F       	adc r31, r31          ; Add with Carry
CD6C:	78-FB       	.data 0xfb78          ; Binary data
CD6E:	FF-1F       	adc r31, r31          ; Add with Carry
CD70:	20-BF       	out 0x30, r18         ; Store Register to I/O Location
CD72:	02-00       	.data 0x0002          ; Binary data
CD74:	64-FA       	bst r6, 4             ; Bit Store from Bit in Register to T Flag in SREG
CD76:	FF-1F       	adc r31, r31          ; Add with Carry
CD78:	BA-FB       	.data 0xfbba          ; Binary data
CD7A:	FF-1F       	adc r31, r31          ; Add with Carry
CD7C:	D8-FB       	.data 0xfbd8          ; Binary data
CD7E:	FF-1F       	adc r31, r31          ; Add with Carry
CD80:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
CD82:	FF-1F       	adc r31, r31          ; Add with Carry
CD84:	78-92       	.data 0x9278          ; Binary data
CD86:	FF-1F       	adc r31, r31          ; Add with Carry
CD88:	D4-FA       	bst r13, 4            ; Bit Store from Bit in Register to T Flag in SREG
CD8A:	FF-1F       	adc r31, r31          ; Add with Carry
CD8C:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
CD8E:	FF-1F       	adc r31, r31          ; Add with Carry
CD90:	48-FC       	.data 0xfc48          ; Binary data
CD92:	FF-1F       	adc r31, r31          ; Add with Carry
CD94:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
CD96:	FF-1F       	adc r31, r31          ; Add with Carry
CD98:	00-22       	and r0, r16           ; Logical AND
CD9A:	7D-49       	sbci r23, 0x9d        ; Subtract Immediate with Carry SBI
CD9C:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
CD9E:	7D-49       	sbci r23, 0x9d        ; Subtract Immediate with Carry SBI
CDA0:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
CDA2:	7D-4A       	sbci r23, 0xad        ; Subtract Immediate with Carry SBI
CDA4:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
CDA6:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
CDA8:	14-02       	muls r17, r20         ; Multiply Signed
CDAA:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
CDAC:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
CDAE:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
CDB0:	00-2B       	or r16, r16           ; Logical OR
CDB2:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
CDB4:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
CDB6:	FF-12       	cpse r15, r31         ; Compare Skip if Equal
CDB8:	52-12       	cpse r5, r18          ; Compare Skip if Equal
CDBA:	78-49       	sbci r23, 0x98        ; Subtract Immediate with Carry SBI
CDBC:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
CDBE:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
CDC0:	00-2B       	or r16, r16           ; Logical OR
CDC2:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
CDC4:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
CDC6:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
CDC8:	80-12       	cpse r8, r16          ; Compare Skip if Equal
CDCA:	11-1A       	sub r1, r17           ; Subtract Without Carry
CDCC:	74-4B       	sbci r23, 0xb4        ; Subtract Immediate with Carry SBI
CDCE:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
CDD0:	74-4B       	sbci r23, 0xb4        ; Subtract Immediate with Carry SBI
CDD2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CDD4:	06-93       	lac Z, r16            ; Load and Clear
CDD6:	06-9B       	sbis 0x00, 6          ; Skip if Bit in I/O Register is Set
CDD8:	73-4C       	sbci r23, 0xc3        ; Subtract Immediate with Carry SBI
CDDA:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
CDDC:	03-F4       	brbc 3, .+0           ; Branch if Bit in SREG is Cleared
CDDE:	24-0C       	add r2, r4            ; Add without Carry
CDE0:	A5-B2       	in r10, 0x15          ; Load an I/O Location to Register
CDE2:	C5-F3       	brbs 5, .-16          ; Branch if Bit in SREG is Set
CDE4:	CA-03       	fmulsu r20, r18       ; Fractional Multiply Signed with Unsigned
CDE6:	05-F4       	brbc 5, .+0           ; Branch if Bit in SREG is Cleared
CDE8:	80-45       	sbci r24, 0x50        ; Subtract Immediate with Carry SBI
CDEA:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
CDEC:	1D-B1       	in r17, 0x0d          ; Load an I/O Location to Register
CDEE:	C3-F5       	brbc 3, .+112         ; Branch if Bit in SREG is Cleared
CDF0:	FF-63       	ori r31, 0x3f         ; Logical OR with Immediate
CDF2:	07-33       	cpi r16, 0x37         ; Compare with Immediate
CDF4:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
CDF6:	1D-0A       	sbc r1, r29           ; Subtract with Carry
CDF8:	6C-4E       	sbci r22, 0xec        ; Subtract Immediate with Carry SBI
CDFA:	76-5D       	subi r23, 0xd6        ; Subtract Immediate
CDFC:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
CDFE:	46-03       	mulsu r20, r22        ; Multiply Signed with Unsigned
CE00:	6B-4F       	sbci r22, 0xfb        ; Subtract Immediate with Carry SBI
CE02:	37-F8       	bld r3, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
CE04:	15-50       	subi r17, 0x05        ; Subtract Immediate
CE06:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
CE08:	03-53       	subi r16, 0x33        ; Subtract Immediate
CE0A:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
CE0C:	14-F4       	brbc 4, .+4           ; Branch if Bit in SREG is Cleared
CE0E:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
CE10:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
CE12:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
CE14:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
CE16:	83-F4       	brbc 3, .+32          ; Branch if Bit in SREG is Cleared
CE18:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
CE1A:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
CE1C:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
CE1E:	03-33       	cpi r16, 0x33         ; Compare with Immediate
CE20:	C0-EB       	ldi r28, 0xb0         ; Load Immediate
CE22:	13-40       	sbci r17, 0x03        ; Subtract Immediate with Carry SBI
CE24:	63-4A       	sbci r22, 0xa3        ; Subtract Immediate with Carry SBI
CE26:	10-60       	ori r17, 0x00         ; Logical OR with Immediate
CE28:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
CE2A:	7A-7F       	andi r23, 0xfa        ; Logical AND with Immediate
CE2C:	04-DD       	rcall .+6664          ; Relative Call to Subroutine
CE2E:	96-23       	and r25, r22          ; Logical AND
CE30:	5B-4A       	sbci r21, 0xab        ; Subtract Immediate with Carry SBI
CE32:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CE34:	5F-4A       	sbci r21, 0xaf        ; Subtract Immediate with Carry SBI
CE36:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
CE38:	5F-4B       	sbci r21, 0xbf        ; Subtract Immediate with Carry SBI
CE3A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CE3C:	00-2B       	or r16, r16           ; Logical OR
CE3E:	2D-DD       	rcall .+6746          ; Relative Call to Subroutine
CE40:	5E-4D       	sbci r21, 0xde        ; Subtract Immediate with Carry SBI
CE42:	00-24       	clr r0                ; Clear Register
CE44:	DF-F8       	.data 0xf8df          ; Binary data
CE46:	90-81       	ld r25, Z             ; Load Indirect from Data Space to Register
CE48:	5D-4F       	sbci r21, 0xfd        ; Subtract Immediate with Carry SBI
CE4A:	DF-F8       	.data 0xf8df          ; Binary data
CE4C:	9C-91       	ld r25, X             ; Load Indirect from Data Space to Register
CE4E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CE50:	24-21       	and r18, r4           ; Logical AND
CE52:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CE54:	4F-FC       	.data 0xfc4f          ; Binary data
CE56:	D8-B1       	in r29, 0x08          ; Load an I/O Location to Register
CE58:	00-23       	and r16, r16          ; Logical AND
CE5A:	2B-72       	andi r18, 0x2b        ; Logical AND with Immediate
CE5C:	C8-23       	and r28, r24          ; Logical AND
CE5E:	C8-F8       	.data 0xf8c8          ; Binary data
CE60:	00-30       	cpi r16, 0x00         ; Compare with Immediate
CE62:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
CE64:	FA-70       	andi r31, 0x0a        ; Logical AND with Immediate
CE66:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
CE68:	DC-51       	subi r29, 0x1c        ; Subtract Immediate
CE6A:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
CE6C:	33-FE       	sbrs r3, 3            ; Skip if Bit in Register is Set
CE6E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
CE70:	38-60       	ori r19, 0x08         ; Logical OR with Immediate
CE72:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
CE74:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CE76:	43-B9       	out 0x03, r20         ; Store Register to I/O Location
CE78:	53-4B       	sbci r21, 0xb3        ; Subtract Immediate with Carry SBI
CE7A:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
CE7C:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
CE7E:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CE80:	0D-FB       	.data 0xfb0d          ; Binary data
CE82:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
CE84:	00-22       	and r0, r16           ; Logical AND
CE86:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
CE88:	09-FA       	.data 0xfa09          ; Binary data
CE8A:	01-22       	and r0, r17           ; Logical AND
CE8C:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
CE8E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
CE90:	01-34       	cpi r16, 0x41         ; Compare with Immediate
CE92:	1C-35       	cpi r17, 0x5c         ; Compare with Immediate
CE94:	48-4B       	sbci r20, 0xb8        ; Subtract Immediate with Carry SBI
CE96:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CE98:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
CE9A:	D8-DC       	rcall .+6576          ; Relative Call to Subroutine
CE9C:	4C-4B       	sbci r20, 0xbc        ; Subtract Immediate with Carry SBI
CE9E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
CEA0:	00-2B       	or r16, r16           ; Logical OR
CEA2:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
CEA4:	12-81       	ldd r17, Y+2          ; Load Indirect from Data Space to Register
CEA6:	4B-4E       	sbci r20, 0xeb        ; Subtract Immediate with Carry SBI
CEA8:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
CEAA:	14-05       	cpc r17, r4           ; Compare with Carry
CEAC:	00-24       	clr r0                ; Clear Register
CEAE:	DF-F8       	.data 0xf8df          ; Binary data
CEB0:	3C-81       	ldd r19, Y+4          ; Load Indirect from Data Space to Register
CEB2:	DF-F8       	.data 0xf8df          ; Binary data
CEB4:	3C-A1       	ldd r19, Y+36         ; Load Indirect from Data Space to Register
CEB6:	DF-F8       	.data 0xf8df          ; Binary data
CEB8:	30-91-20-46 	lds r19, 0x4620       ; Load Direct from Data Space (32-bit)
CEBC:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
CEBE:	64-FC       	sbrc r6, 4            ; Skip if Bit in Register is Cleared
CEC0:	00-28       	or r0, r0             ; Logical OR
CEC2:	4F-D0       	rcall .+158           ; Relative Call to Subroutine
CEC4:	2F-46       	sbci r18, 0x6f        ; Subtract Immediate with Carry SBI
CEC6:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
CEC8:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
CECA:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
CECC:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
CECE:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
CED0:	01-22       	and r0, r17           ; Logical AND
CED2:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
CED4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
CED6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
CED8:	C8-72       	andi r28, 0x28        ; Logical AND with Immediate
CEDA:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
CEDC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
CEDE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
CEE0:	96-70       	andi r25, 0x06        ; Logical AND with Immediate
CEE2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
CEE4:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
CEE6:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
CEE8:	F5-FD       	sbrc r31, 5           ; Skip if Bit in Register is Cleared
CEEA:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
CEEC:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
CEEE:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
CEF0:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
CEF2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CEF4:	43-B9       	out 0x03, r20         ; Store Register to I/O Location
CEF6:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
CEF8:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
CEFA:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
CEFC:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CEFE:	CE-FA       	.data 0xface          ; Binary data
CF00:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
CF02:	00-22       	and r0, r16           ; Logical AND
CF04:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
CF06:	CA-F9       	.data 0xf9ca          ; Binary data
CF08:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
CF0A:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
CF0C:	00-2B       	or r16, r16           ; Logical OR
CF0E:	DC-BF       	out 0x3c, r29         ; Store Register to I/O Location
CF10:	00-23       	and r16, r16          ; Logical AND
CF12:	07-F8       	bld r0, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
CF14:	10-3C       	cpi r17, 0xc0         ; Compare with Immediate
CF16:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
CF18:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
CF1A:	32-21       	and r19, r2           ; Logical AND
CF1C:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
CF1E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
CF20:	FA-73       	andi r31, 0x3a        ; Logical AND with Immediate
CF22:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
CF24:	75-FB       	bst r23, 5            ; Bit Store from Bit in Register to T Flag in SREG
CF26:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
CF28:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
CF2A:	02-2B       	or r16, r18           ; Logical OR
CF2C:	0D-D1       	rcall .+538           ; Relative Call to Subroutine
CF2E:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
CF30:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
CF32:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CF34:	5F-FA       	.data 0xfa5f          ; Binary data
CF36:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
CF38:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CF3A:	B0-FA       	bst r11, 0            ; Bit Store from Bit in Register to T Flag in SREG
CF3C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CF3E:	74-FC       	sbrc r7, 4            ; Skip if Bit in Register is Cleared
CF40:	27-F8       	bld r2, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
CF42:	14-0C       	add r1, r4            ; Add without Carry
CF44:	01-23       	and r16, r17          ; Logical AND
CF46:	33-75       	andi r19, 0x53        ; Logical AND with Immediate
CF48:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
CF4A:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
CF4C:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
CF4E:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CF50:	51-FA       	bst r5, 1             ; Bit Store from Bit in Register to T Flag in SREG
CF52:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
CF54:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CF56:	A2-FA       	bst r10, 2            ; Bit Store from Bit in Register to T Flag in SREG
CF58:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
CF5A:	66-FC       	sbrc r6, 6            ; Skip if Bit in Register is Cleared
CF5C:	27-F8       	bld r2, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
CF5E:	14-0C       	add r1, r4            ; Add without Carry
CF60:	01-23       	and r16, r17          ; Logical AND
CF62:	33-75       	andi r19, 0x53        ; Logical AND with Immediate
CF64:	01-34       	cpi r16, 0x41         ; Compare with Immediate
CF66:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
CF68:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
CF6A:	18-36       	cpi r17, 0x68         ; Compare with Immediate
CF6C:	18-35       	cpi r17, 0x58         ; Compare with Immediate
CF6E:	A7-42       	sbci r26, 0x27        ; Subtract Immediate with Carry SBI
CF70:	A3-DC       	rcall .+6470          ; Relative Call to Subroutine
CF72:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
CF74:	D7-F8       	bld r13, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
CF76:	00-28       	or r0, r0             ; Logical OR
CF78:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
CF7A:	A7-80       	ldd r10, Y+7          ; Load Indirect from Data Space to Register
CF7C:	00-2F       	mov r16, r16          ; Copy Register
CF7E:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
CF80:	A4-80       	ldd r10, Y+4          ; Load Indirect from Data Space to Register
CF82:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
CF84:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
CF86:	00-2B       	or r16, r16           ; Logical OR
CF88:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
CF8A:	9F-80       	ldd r9, Y+7           ; Load Indirect from Data Space to Register
CF8C:	C8-E2       	ldi r28, 0x28         ; Load Immediate
CF8E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
CF90:	98-9D       	mul r25, r8           ; Multiply Unsigned
CF92:	FF-1F       	adc r31, r31          ; Add with Carry
CF94:	10-DF       	rcall .+7712          ; Relative Call to Subroutine
CF96:	FF-1F       	adc r31, r31          ; Add with Carry
CF98:	C8-92       	.data 0x92c8          ; Binary data
CF9A:	FF-1F       	adc r31, r31          ; Add with Carry
CF9C:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
CF9E:	FF-1F       	adc r31, r31          ; Add with Carry
CFA0:	48-FC       	.data 0xfc48          ; Binary data
CFA2:	FF-1F       	adc r31, r31          ; Add with Carry
CFA4:	0C-00       	.data 0x000c          ; Binary data
CFA6:	00-20       	and r0, r0            ; Logical AND
CFA8:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
CFAA:	F0-00       	.data 0x00f0          ; Binary data
CFAC:	FC-7D       	andi r31, 0xdc        ; Logical AND with Immediate
CFAE:	01-00       	.data 0x0001          ; Binary data
CFB0:	04-7E       	andi r16, 0xe4        ; Logical AND with Immediate
CFB2:	01-00       	.data 0x0001          ; Binary data
CFB4:	68-FA       	.data 0xfa68          ; Binary data
CFB6:	FF-1F       	adc r31, r31          ; Add with Carry
CFB8:	78-92       	.data 0x9278          ; Binary data
CFBA:	FF-1F       	adc r31, r31          ; Add with Carry
CFBC:	30-DF       	rcall .+7776          ; Relative Call to Subroutine
CFBE:	FF-1F       	adc r31, r31          ; Add with Carry
CFC0:	B0-92-FF-1F 	sts 0x1fff, r11       ; Store Direct to Data Space
CFC4:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
CFC6:	FF-1F       	adc r31, r31          ; Add with Carry
CFC8:	E4-92       	xch Z, r14            ; Exchange
CFCA:	FF-1F       	adc r31, r31          ; Add with Carry
CFCC:	2C-9E       	mul r2, r28           ; Multiply Unsigned
CFCE:	FF-1F       	adc r31, r31          ; Add with Carry
CFD0:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
CFD2:	FF-1F       	adc r31, r31          ; Add with Carry
CFD4:	70-FA       	bst r7, 0             ; Bit Store from Bit in Register to T Flag in SREG
CFD6:	FF-1F       	adc r31, r31          ; Add with Carry
CFD8:	DC-F7       	brbc 4, .-10          ; Branch if Bit in SREG is Cleared
CFDA:	FF-1F       	adc r31, r31          ; Add with Carry
CFDC:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
CFDE:	FF-1F       	adc r31, r31          ; Add with Carry
CFE0:	48-92       	.data 0x9248          ; Binary data
CFE2:	FF-1F       	adc r31, r31          ; Add with Carry
CFE4:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
CFE6:	FF-1F       	adc r31, r31          ; Add with Carry
CFE8:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
CFEA:	A6-3F       	cpi r26, 0xf6         ; Compare with Immediate
CFEC:	33-33       	cpi r19, 0x33         ; Compare with Immediate
CFEE:	33-3F       	cpi r19, 0xf3         ; Compare with Immediate
CFF0:	EC-51       	subi r30, 0x1c        ; Subtract Immediate
CFF2:	38-3E       	cpi r19, 0xe8         ; Compare with Immediate
CFF4:	8D-4C       	sbci r24, 0xcd        ; Subtract Immediate with Carry SBI
CFF6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
CFF8:	8D-49       	sbci r24, 0x9d        ; Subtract Immediate with Carry SBI
CFFA:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
CFFC:	B1-FC       	sbrc r11, 1           ; Skip if Bit in Register is Cleared
CFFE:	02-22       	and r0, r18           ; Logical AND
D000:	8C-4B       	sbci r24, 0xbc        ; Subtract Immediate with Carry SBI
D002:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D004:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D006:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D008:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D00A:	8B-49       	sbci r24, 0x9b        ; Subtract Immediate with Carry SBI
D00C:	15-22       	and r1, r21           ; Logical AND
D00E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D010:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D012:	04-F8       	bld r0, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
D014:	89-4B       	sbci r24, 0xb9        ; Subtract Immediate with Carry SBI
D016:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
D018:	45-1B       	sub r20, r21          ; Subtract Without Carry
D01A:	89-4A       	sbci r24, 0xa9        ; Subtract Immediate with Carry SBI
D01C:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
D01E:	05-12       	cpse r0, r21          ; Compare Skip if Equal
D020:	EB-17       	cp r30, r27           ; Compare
D022:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
D024:	A2-13       	cpse r26, r18         ; Compare Skip if Equal
D026:	87-49       	sbci r24, 0x97        ; Subtract Immediate with Carry SBI
D028:	81-FB       	bst r24, 1            ; Bit Store from Bit in Register to T Flag in SREG
D02A:	03-21       	and r16, r3           ; Logical AND
D02C:	19-44       	sbci r17, 0x49        ; Subtract Immediate with Carry SBI
D02E:	DA-17       	cp r29, r26           ; Compare
D030:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
D032:	61-11       	cpse r22, r1          ; Compare Skip if Equal
D034:	A1-EB       	ldi r26, 0xb1         ; Load Immediate
D036:	01-16       	cp r0, r17            ; Compare
D038:	03-EB       	ldi r16, 0xb3         ; Load Immediate
D03A:	86-06       	cpc r8, r22           ; Compare with Carry
D03C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D03E:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D040:	DD-FB       	.data 0xfbdd          ; Binary data
D042:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D044:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D046:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D048:	7F-49       	sbci r23, 0x9f        ; Subtract Immediate with Carry SBI
D04A:	05-22       	and r0, r21           ; Logical AND
D04C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D04E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D050:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
D052:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D054:	D3-FB       	bst r29, 3            ; Bit Store from Bit in Register to T Flag in SREG
D056:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D058:	7C-49       	sbci r23, 0x9c        ; Subtract Immediate with Carry SBI
D05A:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D05C:	81-FC       	sbrc r8, 1            ; Skip if Bit in Register is Cleared
D05E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D060:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D062:	D2-FB       	bst r29, 2            ; Bit Store from Bit in Register to T Flag in SREG
D064:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
D066:	7A-4B       	sbci r23, 0xba        ; Subtract Immediate with Carry SBI
D068:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D06A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D06C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
D06E:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D070:	C5-FB       	bst r28, 5            ; Bit Store from Bit in Register to T Flag in SREG
D072:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D074:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D076:	76-FB       	bst r23, 6            ; Bit Store from Bit in Register to T Flag in SREG
D078:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D07A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D07C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D07E:	75-49       	sbci r23, 0x95        ; Subtract Immediate with Carry SBI
D080:	0B-22       	and r0, r27           ; Logical AND
D082:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D084:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D086:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
D088:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D08A:	7C-FC       	.data 0xfc7c          ; Binary data
D08C:	72-4B       	sbci r23, 0xb2        ; Subtract Immediate with Carry SBI
D08E:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
D090:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
D092:	AF-71       	andi r26, 0x1f        ; Logical AND with Immediate
D094:	FF-22       	and r15, r31          ; Logical AND
D096:	41-F2       	brbs 1, .-112         ; Branch if Bit in SREG is Set
D098:	70-73       	andi r23, 0x30        ; Logical AND with Immediate
D09A:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
D09C:	B9-FA       	.data 0xfab9          ; Binary data
D09E:	01-22       	and r0, r17           ; Logical AND
D0A0:	6E-4B       	sbci r22, 0xbe        ; Subtract Immediate with Carry SBI
D0A2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
D0A4:	6E-4B       	sbci r22, 0xbe        ; Subtract Immediate with Carry SBI
D0A6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D0A8:	05-93       	las Z, r16            ; Load and Set
D0AA:	05-9A       	sbi 0x00, 5           ; Set Bit in I/O Register
D0AC:	6D-4B       	sbci r22, 0xbd        ; Subtract Immediate with Carry SBI
D0AE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D0B0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
D0B2:	AF-62       	ori r26, 0x2f         ; Logical OR with Immediate
D0B4:	6C-4B       	sbci r22, 0xbc        ; Subtract Immediate with Carry SBI
D0B6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D0B8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
D0BA:	14-50       	subi r17, 0x04        ; Subtract Immediate
D0BC:	42-F6       	brbc 2, .-112         ; Branch if Bit in SREG is Cleared
D0BE:	F8-21       	and r31, r8           ; Logical AND
D0C0:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D0C2:	08-FD       	.data 0xfd08          ; Binary data
D0C4:	69-4B       	sbci r22, 0xb9        ; Subtract Immediate with Carry SBI
D0C6:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D0C8:	30-E2       	ldi r19, 0x20         ; Load Immediate
D0CA:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
D0CC:	E3-F8       	bld r14, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
D0CE:	62-4B       	sbci r22, 0xb2        ; Subtract Immediate with Carry SBI
D0D0:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
D0D2:	67-4A       	sbci r22, 0xa7        ; Subtract Immediate with Carry SBI
D0D4:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
D0D6:	67-4A       	sbci r22, 0xa7        ; Subtract Immediate with Carry SBI
D0D8:	15-78       	andi r17, 0x85        ; Logical AND with Immediate
D0DA:	35-B1       	in r19, 0x05          ; Load an I/O Location to Register
D0DC:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
D0DE:	56-F9       	bld r21, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
D0E0:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D0E2:	C8-FB       	.data 0xfbc8          ; Binary data
D0E4:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
D0E6:	18-80       	ld r1, Y              ; Load Indirect from Data Space to Register
D0E8:	52-E0       	ldi r21, 0x02         ; Load Immediate
D0EA:	63-4A       	sbci r22, 0xa3        ; Subtract Immediate with Carry SBI
D0EC:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
D0EE:	2A-B3       	in r18, 0x1a          ; Load an I/O Location to Register
D0F0:	62-4C       	sbci r22, 0xc2        ; Subtract Immediate with Carry SBI
D0F2:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
D0F4:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D0F6:	7E-F9       	.data 0xf97e          ; Binary data
D0F8:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
D0FA:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
D0FC:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D0FE:	61-4A       	sbci r22, 0xa1        ; Subtract Immediate with Carry SBI
D100:	10-68       	ori r17, 0x80         ; Logical OR with Immediate
D102:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
D104:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
D106:	80-12       	cpse r8, r16          ; Compare Skip if Equal
D108:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D10A:	74-F9       	bld r23, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
D10C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
D10E:	5E-4B       	sbci r21, 0xbe        ; Subtract Immediate with Carry SBI
D110:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D112:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D114:	6F-F9       	.data 0xf96f          ; Binary data
D116:	5D-49       	sbci r21, 0x9d        ; Subtract Immediate with Carry SBI
D118:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D11A:	74-FA       	bst r7, 4             ; Bit Store from Bit in Register to T Flag in SREG
D11C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D11E:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
D120:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D122:	B4-F8       	bld r11, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
D124:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D126:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
D128:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D12A:	B8-F9       	.data 0xf9b8          ; Binary data
D12C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D12E:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D130:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D132:	AC-F8       	.data 0xf8ac          ; Binary data
D134:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D136:	78-FB       	.data 0xfb78          ; Binary data
D138:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
D13A:	29-E0       	ldi r18, 0x09         ; Load Immediate
D13C:	54-4A       	sbci r21, 0xa4        ; Subtract Immediate with Carry SBI
D13E:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
D140:	50-49       	sbci r21, 0x90        ; Subtract Immediate with Carry SBI
D142:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
D144:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
D146:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
D148:	92-12       	cpse r9, r18          ; Compare Skip if Equal
D14A:	52-49       	sbci r21, 0x92        ; Subtract Immediate with Carry SBI
D14C:	0C-68       	ori r16, 0x8c         ; Logical OR with Immediate
D14E:	4B-49       	sbci r20, 0x9b        ; Subtract Immediate with Carry SBI
D150:	08-68       	ori r16, 0x88         ; Logical OR with Immediate
D152:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
D154:	02-02       	muls r16, r18         ; Multiply Signed
D156:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
D158:	82-EA       	ldi r24, 0xa2         ; Load Immediate
D15A:	E2-71       	andi r30, 0x12        ; Logical AND with Immediate
D15C:	A1-EB       	ldi r26, 0xb1         ; Load Immediate
D15E:	E2-71       	andi r30, 0x12        ; Logical AND with Immediate
D160:	40-29       	or r20, r0            ; Logical OR
D162:	15-DD       	rcall .+6698          ; Relative Call to Subroutine
D164:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
D166:	00-2A       	or r0, r16            ; Logical OR
D168:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
D16A:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
D16C:	3F-01       	movw r6, r30          ; Copy Register Word
D16E:	89-11       	cpse r24, r9          ; Compare Skip if Equal
D170:	58-18       	sub r5, r8            ; Subtract Without Carry
D172:	00-28       	or r0, r0             ; Logical OR
D174:	07-DD       	rcall .+6670          ; Relative Call to Subroutine
D176:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
D178:	37-48       	sbci r19, 0x87        ; Subtract Immediate with Carry SBI
D17A:	03-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
D17C:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
D17E:	81-12       	cpse r8, r17          ; Compare Skip if Equal
D180:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
D182:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D184:	04-E0       	ldi r16, 0x04         ; Load Immediate
D186:	00-23       	and r16, r16          ; Logical AND
D188:	33-4A       	sbci r19, 0xa3        ; Subtract Immediate with Carry SBI
D18A:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
D18C:	3B-4A       	sbci r19, 0xab        ; Subtract Immediate with Carry SBI
D18E:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
D190:	41-4B       	sbci r20, 0xb1        ; Subtract Immediate with Carry SBI
D192:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
D194:	30-4B       	sbci r19, 0xb0        ; Subtract Immediate with Carry SBI
D196:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
D198:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
D19A:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
D19C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
D19E:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
D1A0:	91-80       	ldd r9, Y+1           ; Load Indirect from Data Space to Register
D1A2:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D1A4:	BF-FF       	.data 0xffbf          ; Binary data
D1A6:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
D1A8:	10-3C       	cpi r17, 0xc0         ; Compare with Immediate
D1AA:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
D1AC:	1C-80       	ldd r1, Y+4           ; Load Indirect from Data Space to Register
D1AE:	00-22       	and r0, r16           ; Logical AND
D1B0:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
D1B2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D1B4:	86-E0       	ldi r24, 0x06         ; Load Immediate
D1B6:	39-4A       	sbci r19, 0xa9        ; Subtract Immediate with Carry SBI
D1B8:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
D1BA:	01-33       	cpi r16, 0x31         ; Compare with Immediate
D1BC:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
D1BE:	01-21       	and r16, r1           ; Logical AND
D1C0:	37-4A       	sbci r19, 0xa7        ; Subtract Immediate with Carry SBI
D1C2:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
D1C4:	00-21       	and r16, r0           ; Logical AND
D1C6:	37-4A       	sbci r19, 0xa7        ; Subtract Immediate with Carry SBI
D1C8:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
D1CA:	37-4A       	sbci r19, 0xa7        ; Subtract Immediate with Carry SBI
D1CC:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
D1CE:	37-4A       	sbci r19, 0xa7        ; Subtract Immediate with Carry SBI
D1D0:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
D1D2:	01-2B       	or r16, r17           ; Logical OR
D1D4:	10-D1       	rcall .+544           ; Relative Call to Subroutine
D1D6:	7D-B9       	out 0x0d, r23         ; Store Register to I/O Location
D1D8:	35-4C       	sbci r19, 0xc5        ; Subtract Immediate with Carry SBI
D1DA:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
D1DC:	01-31       	cpi r16, 0x11         ; Compare with Immediate
D1DE:	21-60       	ori r18, 0x01         ; Logical OR with Immediate
D1E0:	0F-20       	and r0, r15           ; Logical AND
D1E2:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D1E4:	0F-FD       	.data 0xfd0f          ; Binary data
D1E6:	11-4D       	sbci r17, 0xd1        ; Subtract Immediate with Carry SBI
D1E8:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D1EA:	32-49       	sbci r19, 0x92        ; Subtract Immediate with Carry SBI
D1EC:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D1EE:	AA-FB       	.data 0xfbaa          ; Binary data
D1F0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D1F2:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
D1F4:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D1F6:	C6-FB       	bst r28, 6            ; Bit Store from Bit in Register to T Flag in SREG
D1F8:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
D1FA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
D1FC:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
D1FE:	00-21       	and r16, r0           ; Logical AND
D200:	2D-4A       	sbci r18, 0xad        ; Subtract Immediate with Carry SBI
D202:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
D204:	25-4A       	sbci r18, 0xa5        ; Subtract Immediate with Carry SBI
D206:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
D208:	09-2A       	or r0, r25            ; Logical OR
D20A:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
D20C:	8F-81       	ldd r24, Y+7          ; Load Indirect from Data Space to Register
D20E:	00-22       	and r0, r16           ; Logical AND
D210:	2A-49       	sbci r18, 0x9a        ; Subtract Immediate with Carry SBI
D212:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
D214:	21-49       	sbci r18, 0x91        ; Subtract Immediate with Carry SBI
D216:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
D218:	00-2B       	or r16, r16           ; Logical OR
D21A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
D21C:	87-81       	ldd r24, Y+7          ; Load Indirect from Data Space to Register
D21E:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
D220:	6D-F8       	.data 0xf86d          ; Binary data
D222:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D224:	FB-FE       	.data 0xfefb          ; Binary data
D226:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
D228:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D22A:	7F-E1       	ldi r23, 0x1f         ; Load Immediate
D22C:	C0-01       	movw r24, r0          ; Copy Register Word
D22E:	00-20       	and r0, r0            ; Logical AND
D230:	70-7D       	andi r23, 0xd0        ; Logical AND with Immediate
D232:	01-00       	.data 0x0001          ; Binary data
D234:	4C-9D       	mul r20, r12          ; Multiply Unsigned
D236:	FF-1F       	adc r31, r31          ; Add with Carry
D238:	74-7D       	andi r23, 0xd4        ; Logical AND with Immediate
D23A:	01-00       	.data 0x0001          ; Binary data
D23C:	44-FC       	sbrc r4, 4            ; Skip if Bit in Register is Cleared
D23E:	FF-1F       	adc r31, r31          ; Add with Carry
D240:	D3-4D       	sbci r29, 0xd3        ; Subtract Immediate with Carry SBI
D242:	62-10       	cpse r6, r2           ; Compare Skip if Equal
D244:	89-88       	std Y+17, r8          ; Store Indirect From Register to Data Space
D246:	88-88       	std Y+16, r8          ; Store Indirect From Register to Data Space
D248:	8C-7D       	andi r24, 0xdc        ; Logical AND with Immediate
D24A:	01-00       	.data 0x0001          ; Binary data
D24C:	94-7D       	andi r25, 0xd4        ; Logical AND with Immediate
D24E:	01-00       	.data 0x0001          ; Binary data
D250:	D0-FA       	bst r13, 0            ; Bit Store from Bit in Register to T Flag in SREG
D252:	FF-1F       	adc r31, r31          ; Add with Carry
D254:	A0-7D       	andi r26, 0xd0        ; Logical AND with Immediate
D256:	01-00       	.data 0x0001          ; Binary data
D258:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
D25A:	FF-1F       	adc r31, r31          ; Add with Carry
D25C:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
D25E:	FF-1F       	adc r31, r31          ; Add with Carry
D260:	0C-00       	.data 0x000c          ; Binary data
D262:	00-20       	and r0, r0            ; Logical AND
D264:	6C-FA       	.data 0xfa6c          ; Binary data
D266:	FF-1F       	adc r31, r31          ; Add with Carry
D268:	DC-F7       	brbc 4, .-10          ; Branch if Bit in SREG is Cleared
D26A:	FF-1F       	adc r31, r31          ; Add with Carry
D26C:	B0-92-FF-1F 	sts 0x1fff, r11       ; Store Direct to Data Space
D270:	24-DF       	rcall .+7752          ; Relative Call to Subroutine
D272:	FF-1F       	adc r31, r31          ; Add with Carry
D274:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
D276:	FF-1F       	adc r31, r31          ; Add with Carry
D278:	38-9D       	mul r19, r8           ; Multiply Unsigned
D27A:	FF-1F       	adc r31, r31          ; Add with Carry
D27C:	D8-FA       	.data 0xfad8          ; Binary data
D27E:	FF-1F       	adc r31, r31          ; Add with Carry
D280:	98-9D       	mul r25, r8           ; Multiply Unsigned
D282:	FF-1F       	adc r31, r31          ; Add with Carry
D284:	5C-F9       	.data 0xf95c          ; Binary data
D286:	FF-1F       	adc r31, r31          ; Add with Carry
D288:	84-B9       	out 0x04, r24         ; Store Register to I/O Location
D28A:	FF-1F       	adc r31, r31          ; Add with Carry
D28C:	00-00       	nop                   ; No Operation
D28E:	A0-41       	sbci r26, 0x10        ; Subtract Immediate with Carry SBI
D290:	10-DF       	rcall .+7712          ; Relative Call to Subroutine
D292:	FF-1F       	adc r31, r31          ; Add with Carry
D294:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
D296:	FF-1F       	adc r31, r31          ; Add with Carry
D298:	48-92       	.data 0x9248          ; Binary data
D29A:	FF-1F       	adc r31, r31          ; Add with Carry
D29C:	48-F9       	.data 0xf948          ; Binary data
D29E:	FF-1F       	adc r31, r31          ; Add with Carry
D2A0:	BA-FB       	.data 0xfbba          ; Binary data
D2A2:	FF-1F       	adc r31, r31          ; Add with Carry
D2A4:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
D2A6:	FF-1F       	adc r31, r31          ; Add with Carry
D2A8:	5C-FA       	.data 0xfa5c          ; Binary data
D2AA:	FF-1F       	adc r31, r31          ; Add with Carry
D2AC:	30-9E       	mul r3, r16           ; Multiply Unsigned
D2AE:	FF-1F       	adc r31, r31          ; Add with Carry
D2B0:	70-9D       	mul r23, r0           ; Multiply Unsigned
D2B2:	FF-1F       	adc r31, r31          ; Add with Carry
D2B4:	AC-7D       	andi r26, 0xdc        ; Logical AND with Immediate
D2B6:	01-00       	.data 0x0001          ; Binary data
D2B8:	9C-9D       	mul r25, r12          ; Multiply Unsigned
D2BA:	FF-1F       	adc r31, r31          ; Add with Carry
D2BC:	D8-F7       	brbc 0, .-10          ; Branch if Bit in SREG is Cleared
D2BE:	FF-1F       	adc r31, r31          ; Add with Carry
D2C0:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
D2C2:	FF-1F       	adc r31, r31          ; Add with Carry
D2C4:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D2C6:	2C-FD       	.data 0xfd2c          ; Binary data
D2C8:	9A-4B       	sbci r25, 0xba        ; Subtract Immediate with Carry SBI
D2CA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
D2CC:	53-B9       	out 0x03, r21         ; Store Register to I/O Location
D2CE:	00-20       	and r0, r0            ; Logical AND
D2D0:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D2D2:	3E-FF       	.data 0xff3e          ; Binary data
D2D4:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
D2D6:	F2-FB       	bst r31, 2            ; Bit Store from Bit in Register to T Flag in SREG
D2D8:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D2DA:	C8-FD       	.data 0xfdc8          ; Binary data
D2DC:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D2DE:	98-FF       	.data 0xff98          ; Binary data
D2E0:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D2E2:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
D2E4:	94-4B       	sbci r25, 0xb4        ; Subtract Immediate with Carry SBI
D2E6:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
D2E8:	94-4B       	sbci r25, 0xb4        ; Subtract Immediate with Carry SBI
D2EA:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
D2EC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
D2EE:	5A-F9       	.data 0xf95a          ; Binary data
D2F0:	93-4B       	sbci r25, 0xb3        ; Subtract Immediate with Carry SBI
D2F2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D2F4:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
D2F6:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D2F8:	15-FF       	sbrs r17, 5           ; Skip if Bit in Register is Set
D2FA:	00-28       	or r0, r0             ; Logical OR
D2FC:	61-D1       	rcall .+706           ; Relative Call to Subroutine
D2FE:	91-4B       	sbci r25, 0xb1        ; Subtract Immediate with Carry SBI
D300:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
D302:	8D-F8       	.data 0xf88d          ; Binary data
D304:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
D306:	FF-23       	and r31, r31          ; Logical AND
D308:	8D-F8       	.data 0xf88d          ; Binary data
D30A:	0D-30       	cpi r16, 0x0d         ; Compare with Immediate
D30C:	8D-F8       	.data 0xf88d          ; Binary data
D30E:	0E-30       	cpi r16, 0x0e         ; Compare with Immediate
D310:	03-A8       	std Y+51, r0          ; Store Indirect From Register to Data Space
D312:	05-A9       	std Y+53, r16         ; Store Indirect From Register to Data Space
D314:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
D316:	8A-FC       	.data 0xfc8a          ; Binary data
D318:	9D-F8       	.data 0xf89d          ; Binary data
D31A:	14-30       	cpi r17, 0x04         ; Compare with Immediate
D31C:	8D-F8       	.data 0xf88d          ; Binary data
D31E:	1C-30       	cpi r17, 0x0c         ; Compare with Immediate
D320:	9D-F8       	.data 0xf89d          ; Binary data
D322:	15-30       	cpi r17, 0x05         ; Compare with Immediate
D324:	8D-F8       	.data 0xf88d          ; Binary data
D326:	1D-30       	cpi r17, 0x0d         ; Compare with Immediate
D328:	9D-F8       	.data 0xf89d          ; Binary data
D32A:	16-30       	cpi r17, 0x06         ; Compare with Immediate
D32C:	8D-F8       	.data 0xf88d          ; Binary data
D32E:	1E-30       	cpi r17, 0x0e         ; Compare with Immediate
D330:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
D332:	B3-20       	and r11, r3           ; Logical AND
D334:	07-A9       	std Y+55, r16         ; Store Indirect From Register to Data Space
D336:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D338:	21-F9       	bld r18, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
D33A:	9D-F8       	.data 0xf89d          ; Binary data
D33C:	14-30       	cpi r17, 0x04         ; Compare with Immediate
D33E:	8D-F8       	.data 0xf88d          ; Binary data
D340:	20-30       	cpi r18, 0x00         ; Compare with Immediate
D342:	9D-F8       	.data 0xf89d          ; Binary data
D344:	15-30       	cpi r17, 0x05         ; Compare with Immediate
D346:	8D-F8       	.data 0xf88d          ; Binary data
D348:	21-30       	cpi r18, 0x01         ; Compare with Immediate
D34A:	9D-F8       	.data 0xf89d          ; Binary data
D34C:	16-30       	cpi r17, 0x06         ; Compare with Immediate
D34E:	8D-F8       	.data 0xf88d          ; Binary data
D350:	22-30       	cpi r18, 0x02         ; Compare with Immediate
D352:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
D354:	B2-20       	and r11, r2           ; Logical AND
D356:	08-A9       	std Y+48, r16         ; Store Indirect From Register to Data Space
D358:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D35A:	10-F9       	bld r17, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
D35C:	9D-F8       	.data 0xf89d          ; Binary data
D35E:	14-30       	cpi r17, 0x04         ; Compare with Immediate
D360:	8D-F8       	.data 0xf88d          ; Binary data
D362:	24-30       	cpi r18, 0x04         ; Compare with Immediate
D364:	9D-F8       	.data 0xf89d          ; Binary data
D366:	15-30       	cpi r17, 0x05         ; Compare with Immediate
D368:	8D-F8       	.data 0xf88d          ; Binary data
D36A:	25-30       	cpi r18, 0x05         ; Compare with Immediate
D36C:	9D-F8       	.data 0xf89d          ; Binary data
D36E:	16-30       	cpi r17, 0x06         ; Compare with Immediate
D370:	8D-F8       	.data 0xf88d          ; Binary data
D372:	26-30       	cpi r18, 0x06         ; Compare with Immediate
D374:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
D376:	B1-20       	and r11, r1           ; Logical AND
D378:	09-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
D37A:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D37C:	FF-F8       	.data 0xf8ff          ; Binary data
D37E:	9D-F8       	.data 0xf89d          ; Binary data
D380:	14-30       	cpi r17, 0x04         ; Compare with Immediate
D382:	8D-F8       	.data 0xf88d          ; Binary data
D384:	28-30       	cpi r18, 0x08         ; Compare with Immediate
D386:	9D-F8       	.data 0xf89d          ; Binary data
D388:	15-30       	cpi r17, 0x05         ; Compare with Immediate
D38A:	8D-F8       	.data 0xf88d          ; Binary data
D38C:	29-30       	cpi r18, 0x09         ; Compare with Immediate
D38E:	9D-F8       	.data 0xf89d          ; Binary data
D390:	16-30       	cpi r17, 0x06         ; Compare with Immediate
D392:	8D-F8       	.data 0xf88d          ; Binary data
D394:	2A-30       	cpi r18, 0x0a         ; Compare with Immediate
D396:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
D398:	2C-70       	andi r18, 0x0c        ; Logical AND with Immediate
D39A:	0A-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
D39C:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D39E:	EE-F8       	.data 0xf8ee          ; Binary data
D3A0:	9D-F8       	.data 0xf89d          ; Binary data
D3A2:	14-30       	cpi r17, 0x04         ; Compare with Immediate
D3A4:	8D-F8       	.data 0xf88d          ; Binary data
D3A6:	2C-30       	cpi r18, 0x0c         ; Compare with Immediate
D3A8:	9D-F8       	.data 0xf89d          ; Binary data
D3AA:	15-30       	cpi r17, 0x05         ; Compare with Immediate
D3AC:	8D-F8       	.data 0xf88d          ; Binary data
D3AE:	2D-30       	cpi r18, 0x0d         ; Compare with Immediate
D3B0:	9D-F8       	.data 0xf89d          ; Binary data
D3B2:	16-30       	cpi r17, 0x06         ; Compare with Immediate
D3B4:	8D-F8       	.data 0xf88d          ; Binary data
D3B6:	2E-30       	cpi r18, 0x0e         ; Compare with Immediate
D3B8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
D3BA:	AF-20       	and r10, r15          ; Logical AND
D3BC:	0B-A9       	std Y+51, r16         ; Store Indirect From Register to Data Space
D3BE:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D3C0:	DD-F8       	.data 0xf8dd          ; Binary data
D3C2:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
D3C4:	C9-FF       	.data 0xffc9          ; Binary data
D3C6:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
D3C8:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D3CA:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D3CC:	13-F8       	bld r1, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
D3CE:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D3D0:	5D-48       	sbci r21, 0x8d        ; Subtract Immediate with Carry SBI
D3D2:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D3D4:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
D3D6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
D3D8:	5C-4D       	sbci r21, 0xdc        ; Subtract Immediate with Carry SBI
D3DA:	28-68       	ori r18, 0x88         ; Logical OR with Immediate
D3DC:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
D3DE:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D3E0:	55-FF       	sbrs r21, 5           ; Skip if Bit in Register is Set
D3E2:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
D3E4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D3E6:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
D3E8:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
D3EA:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D3EC:	F5-F9       	bld r31, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
D3EE:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
D3F0:	57-4B       	sbci r21, 0xb7        ; Subtract Immediate with Carry SBI
D3F2:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
D3F4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D3F6:	57-4B       	sbci r21, 0xb7        ; Subtract Immediate with Carry SBI
D3F8:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
D3FA:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D3FC:	0B-FA       	.data 0xfa0b          ; Binary data
D3FE:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
D400:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
D402:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
D404:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
D406:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D408:	54-4A       	sbci r21, 0xa4        ; Subtract Immediate with Carry SBI
D40A:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
D40C:	03-12       	cpse r0, r19          ; Compare Skip if Equal
D40E:	D9-17       	cp r29, r25           ; Compare
D410:	C1-EB       	ldi r28, 0xb1         ; Load Immediate
D412:	62-12       	cpse r6, r18          ; Compare Skip if Equal
D414:	64-21       	and r22, r4           ; Logical AND
D416:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
D418:	12-33       	cpi r17, 0x32         ; Compare with Immediate
D41A:	01-2B       	or r16, r17           ; Logical OR
D41C:	59-D1       	rcall .+690           ; Relative Call to Subroutine
D41E:	50-4C       	sbci r21, 0xc0        ; Subtract Immediate with Carry SBI
D420:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D422:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D424:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D426:	4F-49       	sbci r20, 0x9f        ; Subtract Immediate with Carry SBI
D428:	05-22       	and r0, r21           ; Logical AND
D42A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D42C:	47-4E       	sbci r20, 0xe7        ; Subtract Immediate with Carry SBI
D42E:	30-68       	ori r19, 0x80         ; Logical OR with Immediate
D430:	4D-49       	sbci r20, 0x9d        ; Subtract Immediate with Carry SBI
D432:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D434:	E7-F8       	bld r14, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
D436:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D438:	9D-FB       	.data 0xfb9d          ; Binary data
D43A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
D43C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
D43E:	02-25       	clr r258              ; Clear Register
D440:	00-95       	com r16               ; One's Complement
D442:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D444:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D446:	E4-F9       	bld r30, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
D448:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D44A:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D44C:	8B-F9       	.data 0xf98b          ; Binary data
D44E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D450:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D452:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D454:	45-49       	sbci r20, 0x95        ; Subtract Immediate with Carry SBI
D456:	09-22       	and r0, r25           ; Logical AND
D458:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D45A:	30-68       	ori r19, 0x80         ; Logical OR with Immediate
D45C:	42-49       	sbci r20, 0x92        ; Subtract Immediate with Carry SBI
D45E:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D460:	D1-F8       	bld r13, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
D462:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D464:	87-FB       	bst r24, 7            ; Bit Store from Bit in Register to T Flag in SREG
D466:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
D468:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
D46A:	00-95       	com r16               ; One's Complement
D46C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D46E:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D470:	CF-F9       	.data 0xf9cf          ; Binary data
D472:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D474:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D476:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D478:	3D-49       	sbci r19, 0x9d        ; Subtract Immediate with Carry SBI
D47A:	0B-22       	and r0, r27           ; Logical AND
D47C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D47E:	34-4F       	sbci r19, 0xf4        ; Subtract Immediate with Carry SBI
D480:	38-68       	ori r19, 0x88         ; Logical OR with Immediate
D482:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D484:	77-FB       	bst r23, 7            ; Bit Store from Bit in Register to T Flag in SREG
D486:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
D488:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
D48A:	00-95       	com r16               ; One's Complement
D48C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D48E:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D490:	BF-F9       	.data 0xf9bf          ; Binary data
D492:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D494:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D496:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D498:	36-49       	sbci r19, 0x96        ; Subtract Immediate with Carry SBI
D49A:	0B-22       	and r0, r27           ; Logical AND
D49C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D49E:	DF-F8       	.data 0xf8df          ; Binary data
D4A0:	B4-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
D4A2:	D8-F8       	.data 0xf8d8          ; Binary data
D4A4:	00-00       	nop                   ; No Operation
D4A6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D4A8:	65-FB       	bst r22, 5            ; Bit Store from Bit in Register to T Flag in SREG
D4AA:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
D4AC:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
D4AE:	00-95       	com r16               ; One's Complement
D4B0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D4B2:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D4B4:	AD-F9       	.data 0xf9ad          ; Binary data
D4B6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D4B8:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D4BA:	54-F9       	bld r21, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
D4BC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D4BE:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
D4C0:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
D4C2:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D4C4:	5F-FA       	.data 0xfa5f          ; Binary data
D4C6:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
D4C8:	3B-60       	ori r19, 0x0b         ; Logical OR with Immediate
D4CA:	00-23       	and r16, r16          ; Logical AND
D4CC:	C8-F8       	.data 0xf8c8          ; Binary data
D4CE:	00-30       	cpi r16, 0x00         ; Compare with Immediate
D4D0:	33-60       	ori r19, 0x03         ; Logical OR with Immediate
D4D2:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D4D4:	3B-FA       	.data 0xfa3b          ; Binary data
D4D6:	29-E0       	ldi r18, 0x09         ; Load Immediate
D4D8:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
D4DA:	80-FE       	sbrs r8, 0            ; Skip if Bit in Register is Set
D4DC:	26-E0       	ldi r18, 0x06         ; Load Immediate
D4DE:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D4E0:	9D-FD       	.data 0xfd9d          ; Binary data
D4E2:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
D4E4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D4E6:	C0-1A       	sub r12, r16          ; Subtract Without Carry
D4E8:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
D4EA:	0F-72       	andi r16, 0x2f        ; Logical AND with Immediate
D4EC:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
D4EE:	7F-F7       	brbc 7, .-34          ; Branch if Bit in SREG is Cleared
D4F0:	4D-AB       	std Y+53, r20         ; Store Indirect From Register to Data Space
D4F2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
D4F4:	6D-BB       	out 0x1d, r22         ; Store Register to I/O Location
D4F6:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
D4F8:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D4FA:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D4FC:	7B-FF       	.data 0xff7b          ; Binary data
D4FE:	20-49       	sbci r18, 0x90        ; Subtract Immediate with Carry SBI
D500:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D502:	80-F8       	bld r8, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
D504:	1F-4C       	sbci r17, 0xcf        ; Subtract Immediate with Carry SBI
D506:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
D508:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D50A:	C0-FE       	sbrs r12, 0           ; Skip if Bit in Register is Set
D50C:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
D50E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D510:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
D512:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D514:	75-F9       	bld r23, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
D516:	00-28       	or r0, r0             ; Logical OR
D518:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
D51A:	3D-AB       	std Y+53, r19         ; Store Indirect From Register to Data Space
D51C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
D51E:	58-BB       	out 0x18, r21         ; Store Register to I/O Location
D520:	19-4B       	sbci r17, 0xb9        ; Subtract Immediate with Carry SBI
D522:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
D524:	00-2B       	or r16, r16           ; Logical OR
D526:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
D528:	B1-AD       	std Y+57, r27         ; Store Indirect From Register to Data Space
D52A:	63-E5       	ldi r22, 0x53         ; Load Immediate
D52C:	0D-B0       	in r0, 0x0d           ; Load an I/O Location to Register
D52E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
D530:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
D532:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
D534:	78-B9       	out 0x08, r23         ; Store Register to I/O Location
D536:	FF-1F       	adc r31, r31          ; Add with Carry
D538:	5C-F9       	.data 0xf95c          ; Binary data
D53A:	FF-1F       	adc r31, r31          ; Add with Carry
D53C:	5C-FA       	.data 0xfa5c          ; Binary data
D53E:	FF-1F       	adc r31, r31          ; Add with Carry
D540:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
D542:	FF-1F       	adc r31, r31          ; Add with Carry
D544:	D8-FB       	.data 0xfbd8          ; Binary data
D546:	FF-1F       	adc r31, r31          ; Add with Carry
D548:	00-00       	nop                   ; No Operation
D54A:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
D54C:	9C-FB       	.data 0xfb9c          ; Binary data
D54E:	FF-1F       	adc r31, r31          ; Add with Carry
D550:	90-9D       	mul r25, r0           ; Multiply Unsigned
D552:	FF-1F       	adc r31, r31          ; Add with Carry
D554:	C8-FA       	.data 0xfac8          ; Binary data
D556:	FF-1F       	adc r31, r31          ; Add with Carry
D558:	94-9D       	mul r25, r4           ; Multiply Unsigned
D55A:	FF-1F       	adc r31, r31          ; Add with Carry
D55C:	1F-85       	std Y+15, r17         ; Store Indirect From Register to Data Space
D55E:	EB-51       	subi r30, 0x1b        ; Subtract Immediate
D560:	C0-01       	movw r24, r0          ; Copy Register Word
D562:	00-20       	and r0, r0            ; Logical AND
D564:	D0-7D       	andi r29, 0xd0        ; Logical AND with Immediate
D566:	01-00       	.data 0x0001          ; Binary data
D568:	00-00       	nop                   ; No Operation
D56A:	C8-42       	sbci r28, 0x28        ; Subtract Immediate with Carry SBI
D56C:	CC-7D       	andi r28, 0xdc        ; Logical AND with Immediate
D56E:	01-00       	.data 0x0001          ; Binary data
D570:	D8-7D       	andi r29, 0xd8        ; Logical AND with Immediate
D572:	01-00       	.data 0x0001          ; Binary data
D574:	E4-7D       	andi r30, 0xd4        ; Logical AND with Immediate
D576:	01-00       	.data 0x0001          ; Binary data
D578:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
D57A:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
D57C:	34-FC       	sbrc r3, 4            ; Skip if Bit in Register is Cleared
D57E:	FF-1F       	adc r31, r31          ; Add with Carry
D580:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
D582:	6A-47       	sbci r22, 0x7a        ; Subtract Immediate with Carry SBI
D584:	6C-9D       	mul r22, r12          ; Multiply Unsigned
D586:	FF-1F       	adc r31, r31          ; Add with Carry
D588:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
D58A:	FF-1F       	adc r31, r31          ; Add with Carry
D58C:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
D58E:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
D590:	00-20       	and r0, r0            ; Logical AND
D592:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
D594:	C8-71       	andi r28, 0x18        ; Logical AND with Immediate
D596:	02-22       	and r0, r18           ; Logical AND
D598:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D59A:	80-FE       	sbrs r8, 0            ; Skip if Bit in Register is Set
D59C:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
D59E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D5A0:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
D5A2:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
D5A4:	22-4A       	sbci r18, 0xa2        ; Subtract Immediate with Carry SBI
D5A6:	10-68       	ori r17, 0x80         ; Logical OR with Immediate
D5A8:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
D5AA:	18-1A       	sub r1, r24           ; Subtract Without Carry
D5AC:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D5AE:	1E-FF       	.data 0xff1e          ; Binary data
D5B0:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
D5B2:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
D5B4:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D5B6:	20-49       	sbci r18, 0x90        ; Subtract Immediate with Carry SBI
D5B8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D5BA:	70-FF       	sbrs r23, 0           ; Skip if Bit in Register is Set
D5BC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D5BE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D5C0:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D5C2:	20-F8       	bld r2, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
D5C4:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
D5C6:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D5C8:	00-20       	and r0, r0            ; Logical AND
D5CA:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
D5CC:	03-F9       	bld r16, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
D5CE:	01-20       	and r0, r1            ; Logical AND
D5D0:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
D5D2:	00-F9       	bld r16, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
D5D4:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
D5D6:	96-FB       	bst r25, 6            ; Bit Store from Bit in Register to T Flag in SREG
D5D8:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D5DA:	B4-FA       	bst r11, 4            ; Bit Store from Bit in Register to T Flag in SREG
D5DC:	18-4D       	sbci r17, 0xd8        ; Subtract Immediate with Carry SBI
D5DE:	00-24       	clr r0                ; Clear Register
D5E0:	EB-7D       	andi r30, 0xdb        ; Logical AND with Immediate
D5E2:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
D5E4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D5E6:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D5E8:	7D-FA       	.data 0xfa7d          ; Binary data
D5EA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D5EC:	F5-F7       	brbc 5, .-4           ; Branch if Bit in SREG is Cleared
D5EE:	C8-FF       	.data 0xffc8          ; Binary data
D5F0:	01-34       	cpi r16, 0x41         ; Compare with Immediate
D5F2:	18-35       	cpi r17, 0x58         ; Compare with Immediate
D5F4:	32-2C       	mov r3, r2            ; Copy Register
D5F6:	F3-D1       	rcall .+998           ; Relative Call to Subroutine
D5F8:	00-20       	and r0, r0            ; Logical AND
D5FA:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D5FC:	19-F9       	.data 0xf919          ; Binary data
D5FE:	01-20       	and r0, r1            ; Logical AND
D600:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D602:	16-F9       	bld r17, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
D604:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
D606:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
D608:	01-32       	cpi r16, 0x21         ; Compare with Immediate
D60A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D60C:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
D60E:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D610:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D612:	30-F9       	bld r19, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
D614:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
D616:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
D618:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
D61A:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
D61C:	C3-FF       	sbrs r28, 3           ; Skip if Bit in Register is Set
D61E:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
D620:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
D622:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
D624:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
D626:	5E-FA       	.data 0xfa5e          ; Binary data
D628:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
D62A:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
D62C:	0C-00       	.data 0x000c          ; Binary data
D62E:	00-20       	and r0, r0            ; Logical AND
D630:	34-9E       	mul r3, r20           ; Multiply Unsigned
D632:	FF-1F       	adc r31, r31          ; Add with Carry
D634:	68-92       	.data 0x9268          ; Binary data
D636:	FF-1F       	adc r31, r31          ; Add with Carry
D638:	00-00       	nop                   ; No Operation
D63A:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
D63C:	50-9D       	mul r21, r0           ; Multiply Unsigned
D63E:	FF-1F       	adc r31, r31          ; Add with Carry
D640:	D0-F2       	brbs 0, .-76          ; Branch if Bit in SREG is Set
D642:	FF-1F       	adc r31, r31          ; Add with Carry
D644:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
D646:	FF-1F       	adc r31, r31          ; Add with Carry
D648:	5C-FA       	.data 0xfa5c          ; Binary data
D64A:	FF-1F       	adc r31, r31          ; Add with Carry
D64C:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
D64E:	FF-1F       	adc r31, r31          ; Add with Carry
D650:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
D652:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
D654:	00-20       	and r0, r0            ; Logical AND
D656:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
D658:	C8-71       	andi r28, 0x18        ; Logical AND with Immediate
D65A:	02-22       	and r0, r18           ; Logical AND
D65C:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D65E:	1E-FE       	.data 0xfe1e          ; Binary data
D660:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
D662:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D664:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
D666:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
D668:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
D66A:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
D66C:	14-1B       	sub r17, r20          ; Subtract Without Carry
D66E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D670:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D672:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D674:	BB-FE       	.data 0xfebb          ; Binary data
D676:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
D678:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
D67A:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D67C:	12-49       	sbci r17, 0x92        ; Subtract Immediate with Carry SBI
D67E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D680:	0D-FF       	.data 0xff0d          ; Binary data
D682:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D684:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D686:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D688:	BD-FF       	.data 0xffbd          ; Binary data
D68A:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
D68C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D68E:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
D690:	4F-FB       	.data 0xfb4f          ; Binary data
D692:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
D694:	43-FB       	bst r20, 3            ; Bit Store from Bit in Register to T Flag in SREG
D696:	F6-F7       	brbc 6, .-4           ; Branch if Bit in SREG is Cleared
D698:	DF-FF       	.data 0xffdf          ; Binary data
D69A:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
D69C:	D3-FB       	bst r29, 3            ; Bit Store from Bit in Register to T Flag in SREG
D69E:	A0-B2       	in r10, 0x10          ; Load an I/O Location to Register
D6A0:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
D6A2:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
D6A4:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
D6A6:	7E-FF       	.data 0xff7e          ; Binary data
D6A8:	FC-F7       	brbc 4, .-2           ; Branch if Bit in SREG is Cleared
D6AA:	FC-F9       	.data 0xf9fc          ; Binary data
D6AC:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
D6AE:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
D6B0:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
D6B2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
D6B4:	17-FA       	bst r1, 7             ; Bit Store from Bit in Register to T Flag in SREG
D6B6:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
D6B8:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
D6BA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
D6BC:	0C-00       	.data 0x000c          ; Binary data
D6BE:	00-20       	and r0, r0            ; Logical AND
D6C0:	34-9E       	mul r3, r20           ; Multiply Unsigned
D6C2:	FF-1F       	adc r31, r31          ; Add with Carry
D6C4:	68-92       	.data 0x9268          ; Binary data
D6C6:	FF-1F       	adc r31, r31          ; Add with Carry
D6C8:	00-00       	nop                   ; No Operation
D6CA:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
D6CC:	7C-B9       	out 0x0c, r23         ; Store Register to I/O Location
D6CE:	FF-1F       	adc r31, r31          ; Add with Carry
D6D0:	5C-FA       	.data 0xfa5c          ; Binary data
D6D2:	FF-1F       	adc r31, r31          ; Add with Carry
D6D4:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
D6D6:	FF-1F       	adc r31, r31          ; Add with Carry
D6D8:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
D6DA:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
D6DC:	84-B0       	in r8, 0x04           ; Load an I/O Location to Register
D6DE:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D6E0:	A3-F9       	bld r26, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
D6E2:	95-4B       	sbci r25, 0xb5        ; Subtract Immediate with Carry SBI
D6E4:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
D6E6:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
D6E8:	DB-F9       	.data 0xf9db          ; Binary data
D6EA:	00-28       	or r0, r0             ; Logical OR
D6EC:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
D6EE:	50-83       	st Z, r21             ; Store Indirect From Register to Data Space
D6F0:	92-4B       	sbci r25, 0xb2        ; Subtract Immediate with Carry SBI
D6F2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D6F4:	01-2B       	or r16, r17           ; Logical OR
D6F6:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
D6F8:	4B-83       	std Y+3, r20          ; Store Indirect From Register to Data Space
D6FA:	4F-E3       	ldi r20, 0x3f         ; Load Immediate
D6FC:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
D6FE:	6E-FD       	.data 0xfd6e          ; Binary data
D700:	2C-E0       	ldi r18, 0x0c         ; Load Immediate
D702:	01-22       	and r0, r17           ; Logical AND
D704:	8E-4B       	sbci r24, 0xbe        ; Subtract Immediate with Carry SBI
D706:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
D708:	28-E0       	ldi r18, 0x08         ; Load Immediate
D70A:	8E-4B       	sbci r24, 0xbe        ; Subtract Immediate with Carry SBI
D70C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D70E:	02-93       	st -Z, r16            ; Store Indirect From Register to Data Space
D710:	02-9A       	sbi 0x00, 2           ; Set Bit in I/O Register
D712:	8D-4B       	sbci r24, 0xbd        ; Subtract Immediate with Carry SBI
D714:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D716:	D3-1A       	sub r13, r19          ; Subtract Without Carry
D718:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
D71A:	7A-7F       	andi r23, 0xfa        ; Logical AND with Immediate
D71C:	12-D2       	rcall .+1060          ; Relative Call to Subroutine
D71E:	8B-4D       	sbci r24, 0xdb        ; Subtract Immediate with Carry SBI
D720:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
D722:	01-33       	cpi r16, 0x31         ; Compare with Immediate
D724:	2B-60       	ori r18, 0x0b         ; Logical OR with Immediate
D726:	8A-4C       	sbci r24, 0xca        ; Subtract Immediate with Carry SBI
D728:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
D72A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
D72C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D72E:	89-49       	sbci r24, 0x99        ; Subtract Immediate with Carry SBI
D730:	0B-22       	and r0, r27           ; Logical AND
D732:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
D734:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D736:	29-68       	ori r18, 0x89         ; Logical OR with Immediate
D738:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D73A:	60-F8       	bld r6, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
D73C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D73E:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
D740:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
D742:	02-E0       	ldi r16, 0x02         ; Load Immediate
D744:	00-22       	and r0, r16           ; Logical AND
D746:	81-4B       	sbci r24, 0xb1        ; Subtract Immediate with Carry SBI
D748:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D74A:	7E-4B       	sbci r23, 0xbe        ; Subtract Immediate with Carry SBI
D74C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D74E:	03-93       	.data 0x9303          ; Binary data
D750:	03-9A       	sbi 0x00, 3           ; Set Bit in I/O Register
D752:	7D-4B       	sbci r23, 0xbd        ; Subtract Immediate with Carry SBI
D754:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D756:	00-22       	and r0, r16           ; Logical AND
D758:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
D75A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D75C:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
D75E:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
D760:	01-32       	cpi r16, 0x21         ; Compare with Immediate
D762:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D764:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
D766:	6A-FA       	.data 0xfa6a          ; Binary data
D768:	7D-4C       	sbci r23, 0xcd        ; Subtract Immediate with Carry SBI
D76A:	7E-4D       	sbci r23, 0xde        ; Subtract Immediate with Carry SBI
D76C:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
D76E:	C0-1A       	sub r12, r16          ; Subtract Without Carry
D770:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D772:	3C-FE       	.data 0xfe3c          ; Binary data
D774:	7C-49       	sbci r23, 0x9c        ; Subtract Immediate with Carry SBI
D776:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D778:	45-FF       	sbrs r20, 5           ; Skip if Bit in Register is Set
D77A:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D77C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D77E:	86-FD       	sbrc r24, 6           ; Skip if Bit in Register is Cleared
D780:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
D782:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
D784:	5B-FA       	.data 0xfa5b          ; Binary data
D786:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
D788:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
D78A:	78-49       	sbci r23, 0x98        ; Subtract Immediate with Carry SBI
D78C:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D78E:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
D790:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
D792:	76-4A       	sbci r23, 0xa6        ; Subtract Immediate with Carry SBI
D794:	22-60       	ori r18, 0x02         ; Logical OR with Immediate
D796:	02-20       	and r0, r2            ; Logical AND
D798:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D79A:	B0-FE       	sbrs r11, 0           ; Skip if Bit in Register is Set
D79C:	70-B1       	in r23, 0x00          ; Load an I/O Location to Register
D79E:	74-4B       	sbci r23, 0xb4        ; Subtract Immediate with Carry SBI
D7A0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D7A2:	00-21       	and r16, r0           ; Logical AND
D7A4:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
D7A6:	64-FB       	bst r22, 4            ; Bit Store from Bit in Register to T Flag in SREG
D7A8:	F4-F7       	brbc 4, .-4           ; Branch if Bit in SREG is Cleared
D7AA:	A8-FE       	.data 0xfea8          ; Binary data
D7AC:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
D7AE:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
D7B0:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
D7B2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D7B4:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
D7B6:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
D7B8:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
D7BA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
D7BC:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
D7BE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D7C0:	02-2B       	or r16, r18           ; Logical OR
D7C2:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
D7C4:	A7-81       	ldd r26, Y+7          ; Load Indirect from Data Space to Register
D7C6:	5D-4B       	sbci r21, 0xbd        ; Subtract Immediate with Carry SBI
D7C8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D7CA:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
D7CC:	02-02       	muls r16, r18         ; Multiply Signed
D7CE:	01-2A       	or r0, r17            ; Logical OR
D7D0:	02-D0       	rcall .+4             ; Relative Call to Subroutine
D7D2:	06-2B       	or r16, r22           ; Logical OR
D7D4:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
D7D6:	9E-81       	ldd r25, Y+6          ; Load Indirect from Data Space to Register
D7D8:	66-4B       	sbci r22, 0xb6        ; Subtract Immediate with Carry SBI
D7DA:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D7DC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D7DE:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D7E0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D7E2:	5C-FE       	.data 0xfe5c          ; Binary data
D7E4:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
D7E6:	64-4B       	sbci r22, 0xb4        ; Subtract Immediate with Carry SBI
D7E8:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D7EA:	64-4B       	sbci r22, 0xb4        ; Subtract Immediate with Carry SBI
D7EC:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D7EE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D7F0:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D7F2:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D7F4:	53-FE       	sbrs r5, 3            ; Skip if Bit in Register is Set
D7F6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
D7F8:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
D7FA:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D7FC:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
D7FE:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
D800:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
D802:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
D804:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
D806:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D808:	61-4B       	sbci r22, 0xb1        ; Subtract Immediate with Carry SBI
D80A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
D80C:	01-2B       	or r16, r17           ; Logical OR
D80E:	17-D1       	rcall .+558           ; Relative Call to Subroutine
D810:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D812:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D814:	88-41       	sbci r24, 0x18        ; Subtract Immediate with Carry SBI
D816:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D818:	41-FE       	sbrs r4, 1            ; Skip if Bit in Register is Set
D81A:	09-F0       	brbs 1, .+2           ; Branch if Bit in SREG is Set
D81C:	05-F8       	bld r0, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
D81E:	5D-4B       	sbci r21, 0xbd        ; Subtract Immediate with Carry SBI
D820:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D822:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D824:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D826:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D828:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D82A:	38-FE       	.data 0xfe38          ; Binary data
D82C:	56-4B       	sbci r21, 0xb6        ; Subtract Immediate with Carry SBI
D82E:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D830:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D832:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D834:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D836:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D838:	31-FE       	sbrs r3, 1            ; Skip if Bit in Register is Set
D83A:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
D83C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D83E:	31-E1       	ldi r19, 0x11         ; Load Immediate
D840:	02-2B       	or r16, r18           ; Logical OR
D842:	1A-D1       	rcall .+564           ; Relative Call to Subroutine
D844:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D846:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D848:	88-41       	sbci r24, 0x18        ; Subtract Immediate with Carry SBI
D84A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D84C:	27-FE       	sbrs r2, 7            ; Skip if Bit in Register is Set
D84E:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
D850:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
D852:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D854:	E9-FF       	.data 0xffe9          ; Binary data
D856:	4F-4B       	sbci r20, 0xbf        ; Subtract Immediate with Carry SBI
D858:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D85A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D85C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D85E:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D860:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D862:	1C-FE       	.data 0xfe1c          ; Binary data
D864:	48-4B       	sbci r20, 0xb8        ; Subtract Immediate with Carry SBI
D866:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D868:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
D86A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
D86C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D86E:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D870:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D872:	14-FE       	sbrs r1, 4            ; Skip if Bit in Register is Set
D874:	45-4B       	sbci r20, 0xb5        ; Subtract Immediate with Carry SBI
D876:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D878:	14-E1       	ldi r17, 0x14         ; Load Immediate
D87A:	03-2B       	or r16, r19           ; Logical OR
D87C:	19-D1       	rcall .+562           ; Relative Call to Subroutine
D87E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D880:	88-41       	sbci r24, 0x18        ; Subtract Immediate with Carry SBI
D882:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D884:	0B-FE       	.data 0xfe0b          ; Binary data
D886:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
D888:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
D88A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D88C:	CD-FF       	.data 0xffcd          ; Binary data
D88E:	41-4B       	sbci r20, 0xb1        ; Subtract Immediate with Carry SBI
D890:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D892:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
D894:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
D896:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D898:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D89A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D89C:	FF-FD       	.data 0xfdff          ; Binary data
D89E:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
D8A0:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D8A2:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D8A4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D8A6:	7C-51       	subi r23, 0x1c        ; Subtract Immediate
D8A8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8AA:	F8-FD       	.data 0xfdf8          ; Binary data
D8AC:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
D8AE:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D8B0:	F8-E0       	ldi r31, 0x08         ; Load Immediate
D8B2:	04-2B       	or r16, r20           ; Logical OR
D8B4:	26-D1       	rcall .+588           ; Relative Call to Subroutine
D8B6:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D8B8:	00-21       	and r16, r0           ; Logical AND
D8BA:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8BC:	AB-FF       	.data 0xffab          ; Binary data
D8BE:	00-B1       	in r16, 0x00          ; Load an I/O Location to Register
D8C0:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
D8C2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D8C4:	00-21       	and r16, r0           ; Logical AND
D8C6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8C8:	A5-FF       	sbrs r26, 5           ; Skip if Bit in Register is Set
D8CA:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
D8CC:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
D8CE:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
D8D0:	00-E0       	ldi r16, 0x00         ; Load Immediate
D8D2:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
D8D4:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D8D6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8D8:	9D-FF       	.data 0xff9d          ; Binary data
D8DA:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
D8DC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D8DE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D8E0:	88-41       	sbci r24, 0x18        ; Subtract Immediate with Carry SBI
D8E2:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8E4:	DB-FD       	.data 0xfddb          ; Binary data
D8E6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8E8:	9F-FF       	.data 0xff9f          ; Binary data
D8EA:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
D8EC:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D8EE:	D9-E0       	ldi r29, 0x09         ; Load Immediate
D8F0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D8F2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D8F4:	88-41       	sbci r24, 0x18        ; Subtract Immediate with Carry SBI
D8F6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8F8:	D1-FD       	sbrc r29, 1           ; Skip if Bit in Register is Cleared
D8FA:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D8FC:	95-FF       	sbrs r25, 5           ; Skip if Bit in Register is Set
D8FE:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
D900:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
D902:	CF-E0       	ldi r28, 0x0f         ; Load Immediate
D904:	05-2B       	or r16, r21           ; Logical OR
D906:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
D908:	C5-80       	ldd r12, Y+5          ; Load Indirect from Data Space to Register
D90A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D90C:	00-21       	and r16, r0           ; Logical AND
D90E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D910:	81-FF       	sbrs r24, 1           ; Skip if Bit in Register is Set
D912:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
D914:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D916:	00-E0       	ldi r16, 0x00         ; Load Immediate
D918:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D91A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D91C:	81-41       	sbci r24, 0x11        ; Subtract Immediate with Carry SBI
D91E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D920:	79-FF       	.data 0xff79          ; Binary data
D922:	00-28       	or r0, r0             ; Logical OR
D924:	3F-D1       	rcall .+638           ; Relative Call to Subroutine
D926:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D928:	00-21       	and r16, r0           ; Logical AND
D92A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D92C:	73-FF       	sbrs r23, 3           ; Skip if Bit in Register is Set
D92E:	98-BB       	out 0x18, r25         ; Store Register to I/O Location
D930:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
D932:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
D934:	31-E0       	ldi r19, 0x01         ; Load Immediate
D936:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
D938:	7C-92       	st X, r7              ; Store Indirect From Register to Data Space
D93A:	FF-1F       	adc r31, r31          ; Add with Carry
D93C:	D8-92       	.data 0x92d8          ; Binary data
D93E:	FF-1F       	adc r31, r31          ; Add with Carry
D940:	74-9D       	mul r23, r4           ; Multiply Unsigned
D942:	FF-1F       	adc r31, r31          ; Add with Carry
D944:	0C-00       	.data 0x000c          ; Binary data
D946:	00-20       	and r0, r0            ; Logical AND
D948:	78-9D       	mul r23, r8           ; Multiply Unsigned
D94A:	FF-1F       	adc r31, r31          ; Add with Carry
D94C:	58-F9       	.data 0xf958          ; Binary data
D94E:	FF-1F       	adc r31, r31          ; Add with Carry
D950:	C0-01       	movw r24, r0          ; Copy Register Word
D952:	00-20       	and r0, r0            ; Logical AND
D954:	F0-7D       	andi r31, 0xd0        ; Logical AND with Immediate
D956:	01-00       	.data 0x0001          ; Binary data
D958:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
D95A:	FF-1F       	adc r31, r31          ; Add with Carry
D95C:	94-9D       	mul r25, r4           ; Multiply Unsigned
D95E:	FF-1F       	adc r31, r31          ; Add with Carry
D960:	70-92-FF-1F 	sts 0x1fff, r7        ; Store Direct to Data Space
D964:	88-FB       	.data 0xfb88          ; Binary data
D966:	FF-1F       	adc r31, r31          ; Add with Carry
D968:	00-24       	clr r0                ; Clear Register
D96A:	74-49       	sbci r23, 0x94        ; Subtract Immediate with Carry SBI
D96C:	CD-CC       	rjmp .-1638           ; Relative Jump
D96E:	4C-3E       	cpi r20, 0xec         ; Compare with Immediate
D970:	78-FB       	.data 0xfb78          ; Binary data
D972:	FF-1F       	adc r31, r31          ; Add with Carry
D974:	88-9D       	mul r24, r8           ; Multiply Unsigned
D976:	FF-1F       	adc r31, r31          ; Add with Carry
D978:	1C-DF       	rcall .+7736          ; Relative Call to Subroutine
D97A:	FF-1F       	adc r31, r31          ; Add with Carry
D97C:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
D97E:	FF-1F       	adc r31, r31          ; Add with Carry
D980:	20-DF       	rcall .+7744          ; Relative Call to Subroutine
D982:	FF-1F       	adc r31, r31          ; Add with Carry
D984:	EC-92       	st X, r14             ; Store Indirect From Register to Data Space
D986:	FF-1F       	adc r31, r31          ; Add with Carry
D988:	A4-FB       	bst r26, 4            ; Bit Store from Bit in Register to T Flag in SREG
D98A:	FF-1F       	adc r31, r31          ; Add with Carry
D98C:	A8-FB       	.data 0xfba8          ; Binary data
D98E:	FF-1F       	adc r31, r31          ; Add with Carry
D990:	5C-92       	st X, r5              ; Store Indirect From Register to Data Space
D992:	FF-1F       	adc r31, r31          ; Add with Carry
D994:	98-9D       	mul r25, r8           ; Multiply Unsigned
D996:	FF-1F       	adc r31, r31          ; Add with Carry
D998:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D99A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
D99C:	81-41       	sbci r24, 0x11        ; Subtract Immediate with Carry SBI
D99E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9A0:	39-FF       	.data 0xff39          ; Binary data
D9A2:	00-28       	or r0, r0             ; Logical OR
D9A4:	70-D0       	rcall .+224           ; Relative Call to Subroutine
D9A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D9A8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9AA:	E4-F8       	bld r14, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
D9AC:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
D9AE:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
D9B0:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
D9B2:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9B4:	DF-F8       	.data 0xf8df          ; Binary data
D9B6:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
D9B8:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
D9BA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D9BC:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
D9BE:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
D9C0:	AD-F9       	.data 0xf9ad          ; Binary data
D9C2:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9C4:	0D-FC       	.data 0xfc0d          ; Binary data
D9C6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D9C8:	9F-4B       	sbci r25, 0xbf        ; Subtract Immediate with Carry SBI
D9CA:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
D9CC:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9CE:	5C-FC       	.data 0xfc5c          ; Binary data
D9D0:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
D9D2:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
D9D4:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
D9D6:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
D9D8:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
D9DA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D9DC:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
D9DE:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9E0:	5D-FD       	.data 0xfd5d          ; Binary data
D9E2:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
D9E4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
D9E6:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
D9E8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9EA:	58-FD       	.data 0xfd58          ; Binary data
D9EC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
D9EE:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
D9F0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9F2:	4C-FC       	.data 0xfc4c          ; Binary data
D9F4:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
D9F6:	BE-F8       	.data 0xf8be          ; Binary data
D9F8:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
D9FA:	EC-F9       	.data 0xf9ec          ; Binary data
D9FC:	00-22       	and r0, r16           ; Logical AND
D9FE:	95-4B       	sbci r25, 0xb5        ; Subtract Immediate with Carry SBI
DA00:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA02:	0C-F9       	.data 0xf90c          ; Binary data
DA04:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA06:	EC-FB       	.data 0xfbec          ; Binary data
DA08:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
DA0A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
DA0C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA0E:	B2-F8       	bld r11, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
DA10:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
DA12:	48-F8       	.data 0xf848          ; Binary data
DA14:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
DA16:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
DA18:	8F-4B       	sbci r24, 0xbf        ; Subtract Immediate with Carry SBI
DA1A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA1C:	FF-F8       	.data 0xf8ff          ; Binary data
DA1E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
DA20:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
DA22:	00-22       	and r0, r16           ; Logical AND
DA24:	8D-4B       	sbci r24, 0xbd        ; Subtract Immediate with Carry SBI
DA26:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA28:	6B-FB       	.data 0xfb6b          ; Binary data
DA2A:	48-B9       	out 0x08, r20         ; Store Register to I/O Location
DA2C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DA2E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
DA30:	00-22       	and r0, r16           ; Logical AND
DA32:	8B-4B       	sbci r24, 0xbb        ; Subtract Immediate with Carry SBI
DA34:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA36:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
DA38:	20-B1       	in r18, 0x00          ; Load an I/O Location to Register
DA3A:	00-24       	clr r0                ; Clear Register
DA3C:	88-4D       	sbci r24, 0xd8        ; Subtract Immediate with Carry SBI
DA3E:	01-E0       	ldi r16, 0x01         ; Load Immediate
DA40:	00-24       	clr r0                ; Clear Register
DA42:	86-4D       	sbci r24, 0xd6        ; Subtract Immediate with Carry SBI
DA44:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
DA46:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA48:	95-F8       	bld r9, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
DA4A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
DA4C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
DA4E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DA50:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
DA52:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA54:	E3-F8       	bld r14, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
DA56:	00-22       	and r0, r16           ; Logical AND
DA58:	82-4B       	sbci r24, 0xb2        ; Subtract Immediate with Carry SBI
DA5A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA5C:	DF-F8       	.data 0xf8df          ; Binary data
DA5E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA60:	77-FB       	bst r23, 7            ; Bit Store from Bit in Register to T Flag in SREG
DA62:	81-4B       	sbci r24, 0xb1        ; Subtract Immediate with Carry SBI
DA64:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
DA66:	80-EA       	ldi r24, 0xa0         ; Load Immediate
DA68:	E0-72       	andi r30, 0x20        ; Logical AND with Immediate
DA6A:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
DA6C:	E0-72       	andi r30, 0x20        ; Logical AND with Immediate
DA6E:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
DA70:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DA72:	00-28       	or r0, r0             ; Logical OR
DA74:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
DA76:	02-1C       	adc r0, r2            ; Add with Carry
DA78:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
DA7A:	01-22       	and r0, r17           ; Logical AND
DA7C:	00-E0       	ldi r16, 0x00         ; Load Immediate
DA7E:	FF-22       	and r15, r31          ; Logical AND
DA80:	52-B2       	in r5, 0x12           ; Load an I/O Location to Register
DA82:	7B-4B       	sbci r23, 0xbb        ; Subtract Immediate with Carry SBI
DA84:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DA86:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
DA88:	00-23       	and r16, r16          ; Logical AND
DA8A:	77-4A       	sbci r23, 0xa7        ; Subtract Immediate with Carry SBI
DA8C:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
DA8E:	77-4A       	sbci r23, 0xa7        ; Subtract Immediate with Carry SBI
DA90:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
DA92:	07-E0       	ldi r16, 0x07         ; Load Immediate
DA94:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
DA96:	88-41       	sbci r24, 0x18        ; Subtract Immediate with Carry SBI
DA98:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA9A:	00-FD       	sbrc r16, 0           ; Skip if Bit in Register is Cleared
DA9C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DA9E:	C4-FE       	sbrs r12, 4           ; Skip if Bit in Register is Set
DAA0:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
DAA2:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
DAA4:	70-4B       	sbci r23, 0xb0        ; Subtract Immediate with Carry SBI
DAA6:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
DAA8:	00-2A       	or r0, r16            ; Logical OR
DAAA:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
DAAC:	52-42       	sbci r21, 0x22        ; Subtract Immediate with Carry SBI
DAAE:	41-F6       	brbc 1, .-112         ; Branch if Bit in SREG is Cleared
DAB0:	57-33       	cpi r21, 0x37         ; Compare with Immediate
DAB2:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
DAB4:	04-DC       	rcall .+6152          ; Relative Call to Subroutine
DAB6:	00-23       	and r16, r16          ; Logical AND
DAB8:	6B-4A       	sbci r22, 0xab        ; Subtract Immediate with Carry SBI
DABA:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
DABC:	6B-4A       	sbci r22, 0xab        ; Subtract Immediate with Carry SBI
DABE:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
DAC0:	6C-4B       	sbci r22, 0xbc        ; Subtract Immediate with Carry SBI
DAC2:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
DAC4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DAC6:	00-21       	and r16, r0           ; Logical AND
DAC8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DACA:	A4-FE       	sbrs r10, 4           ; Skip if Bit in Register is Set
DACC:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DACE:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
DAD0:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
DAD2:	00-E0       	ldi r16, 0x00         ; Load Immediate
DAD4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DAD6:	68-49       	sbci r22, 0x98        ; Subtract Immediate with Carry SBI
DAD8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DADA:	7E-FE       	.data 0xfe7e          ; Binary data
DADC:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DADE:	67-4B       	sbci r22, 0xb7        ; Subtract Immediate with Carry SBI
DAE0:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
DAE2:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
DAE4:	00-22       	and r0, r16           ; Logical AND
DAE6:	63-4B       	sbci r22, 0xb3        ; Subtract Immediate with Carry SBI
DAE8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DAEA:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
DAEC:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
DAEE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DAF0:	00-21       	and r16, r0           ; Logical AND
DAF2:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DAF4:	8F-FE       	.data 0xfe8f          ; Binary data
DAF6:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DAF8:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
DAFA:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
DAFC:	00-E0       	ldi r16, 0x00         ; Load Immediate
DAFE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DB00:	5D-49       	sbci r21, 0x9d        ; Subtract Immediate with Carry SBI
DB02:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB04:	69-FE       	.data 0xfe69          ; Binary data
DB06:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DB08:	5C-4B       	sbci r21, 0xbc        ; Subtract Immediate with Carry SBI
DB0A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
DB0C:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
DB0E:	00-22       	and r0, r16           ; Logical AND
DB10:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
DB12:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DB14:	5B-4B       	sbci r21, 0xbb        ; Subtract Immediate with Carry SBI
DB16:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
DB18:	00-2C       	mov r0, r0            ; Copy Register
DB1A:	13-DD       	rcall .+6694          ; Relative Call to Subroutine
DB1C:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
DB1E:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
DB20:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
DB22:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
DB24:	00-2B       	or r16, r16           ; Logical OR
DB26:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
DB28:	E0-80       	ld r14, Z             ; Load Indirect from Data Space to Register
DB2A:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
DB2C:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
DB2E:	59-49       	sbci r21, 0x99        ; Subtract Immediate with Carry SBI
DB30:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB32:	B4-FC       	sbrc r11, 4           ; Skip if Bit in Register is Cleared
DB34:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
DB36:	C8-01       	movw r24, r16         ; Copy Register Word
DB38:	05-EB       	ldi r16, 0xb5         ; Load Immediate
DB3A:	41-01       	movw r8, r2           ; Copy Register Word
DB3C:	02-22       	and r0, r18           ; Logical AND
DB3E:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
DB40:	AD-FB       	.data 0xfbad          ; Binary data
DB42:	D2-E0       	ldi r29, 0x02         ; Load Immediate
DB44:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
DB46:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DB48:	36-2B       	or r19, r22           ; Logical OR
DB4A:	28-DC       	rcall .+6224          ; Relative Call to Subroutine
DB4C:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
DB4E:	03-10       	cpse r0, r3           ; Compare Skip if Equal
DB50:	40-00       	.data 0x0040          ; Binary data
DB52:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB54:	4F-FC       	.data 0xfc4f          ; Binary data
DB56:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
DB58:	00-21       	and r16, r0           ; Logical AND
DB5A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB5C:	5B-FE       	.data 0xfe5b          ; Binary data
DB5E:	00-28       	or r0, r0             ; Logical OR
DB60:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
DB62:	C3-80       	ldd r12, Y+3          ; Load Indirect from Data Space to Register
DB64:	49-4B       	sbci r20, 0xb9        ; Subtract Immediate with Carry SBI
DB66:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
DB68:	00-2B       	or r16, r16           ; Logical OR
DB6A:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
DB6C:	BE-80       	ldd r11, Y+6          ; Load Indirect from Data Space to Register
DB6E:	48-4B       	sbci r20, 0xb8        ; Subtract Immediate with Carry SBI
DB70:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
DB72:	4A-49       	sbci r20, 0x9a        ; Subtract Immediate with Carry SBI
DB74:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB76:	92-FC       	sbrc r9, 2            ; Skip if Bit in Register is Cleared
DB78:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
DB7A:	00-20       	and r0, r0            ; Logical AND
DB7C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
DB7E:	C8-71       	andi r28, 0x18        ; Logical AND with Immediate
DB80:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
DB82:	A8-FF       	.data 0xffa8          ; Binary data
DB84:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB86:	36-FC       	sbrc r3, 6            ; Skip if Bit in Register is Cleared
DB88:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
DB8A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB8C:	7F-FB       	.data 0xfb7f          ; Binary data
DB8E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DB90:	4B-FE       	.data 0xfe4b          ; Binary data
DB92:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
DB94:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
DB96:	03-22       	and r0, r19           ; Logical AND
DB98:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
DB9A:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
DB9C:	A5-E0       	ldi r26, 0x05         ; Load Immediate
DB9E:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
DBA0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DBA2:	00-2B       	or r16, r16           ; Logical OR
DBA4:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
DBA6:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
DBA8:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
DBAA:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
DBAC:	04-DC       	rcall .+6152          ; Relative Call to Subroutine
DBAE:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
DBB0:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
DBB2:	00-2B       	or r16, r16           ; Logical OR
DBB4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
DBB6:	1A-81       	ldd r17, Y+2          ; Load Indirect from Data Space to Register
DBB8:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
DBBA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DBBC:	00-2B       	or r16, r16           ; Logical OR
DBBE:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
DBC0:	FB-80       	ldd r15, Y+3          ; Load Indirect from Data Space to Register
DBC2:	13-E1       	ldi r17, 0x13         ; Load Immediate
DBC4:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
DBC6:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
DBC8:	00-E0       	ldi r16, 0x00         ; Load Immediate
DBCA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DBCC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
DBCE:	7E-51       	subi r23, 0x1e        ; Subtract Immediate
DBD0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DBD2:	5C-FB       	.data 0xfb5c          ; Binary data
DBD4:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DBD6:	28-FE       	.data 0xfe28          ; Binary data
DBD8:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
DBDA:	20-18       	sub r2, r0            ; Subtract Without Carry
DBDC:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
DBDE:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
DBE0:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
DBE2:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
DBE4:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
DBE6:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
DBE8:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
DBEA:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
DBEC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
DBEE:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
DBF0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DBF2:	4C-FB       	.data 0xfb4c          ; Binary data
DBF4:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
DBF6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DBF8:	47-FB       	bst r20, 7            ; Bit Store from Bit in Register to T Flag in SREG
DBFA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
DBFC:	8A-41       	sbci r24, 0x1a        ; Subtract Immediate with Carry SBI
DBFE:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC00:	45-FB       	bst r20, 5            ; Bit Store from Bit in Register to T Flag in SREG
DC02:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
DC04:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC06:	40-FB       	bst r20, 0            ; Bit Store from Bit in Register to T Flag in SREG
DC08:	28-49       	sbci r18, 0x98        ; Subtract Immediate with Carry SBI
DC0A:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC0C:	3F-FB       	.data 0xfb3f          ; Binary data
DC0E:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
DC10:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
DC12:	00-21       	and r16, r0           ; Logical AND
DC14:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC16:	FE-FD       	.data 0xfdfe          ; Binary data
DC18:	08-B9       	out 0x08, r16         ; Store Register to I/O Location
DC1A:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
DC1C:	00-47       	sbci r16, 0x70        ; Subtract Immediate with Carry SBI
DC1E:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
DC20:	00-21       	and r16, r0           ; Logical AND
DC22:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC24:	F7-FD       	sbrc r31, 7           ; Skip if Bit in Register is Cleared
DC26:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DC28:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
DC2A:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
DC2C:	00-E0       	ldi r16, 0x00         ; Load Immediate
DC2E:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
DC30:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
DC32:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC34:	2B-FB       	.data 0xfb2b          ; Binary data
DC36:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
DC38:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
DC3A:	00-21       	and r16, r0           ; Logical AND
DC3C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DC3E:	EA-FD       	.data 0xfdea          ; Binary data
DC40:	B0-BB       	out 0x10, r27         ; Store Register to I/O Location
DC42:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
DC44:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
DC46:	34-E0       	ldi r19, 0x04         ; Load Immediate
DC48:	34-9D       	mul r19, r4           ; Multiply Unsigned
DC4A:	FF-1F       	adc r31, r31          ; Add with Carry
DC4C:	20-DF       	rcall .+7744          ; Relative Call to Subroutine
DC4E:	FF-1F       	adc r31, r31          ; Add with Carry
DC50:	1C-DF       	rcall .+7736          ; Relative Call to Subroutine
DC52:	FF-1F       	adc r31, r31          ; Add with Carry
DC54:	00-00       	nop                   ; No Operation
DC56:	E0-3F       	cpi r30, 0xf0         ; Compare with Immediate
DC58:	33-33       	cpi r19, 0x33         ; Compare with Immediate
DC5A:	F3-3F       	cpi r31, 0xf3         ; Compare with Immediate
DC5C:	00-00       	nop                   ; No Operation
DC5E:	F0-BF       	out 0x30, r31         ; Store Register to I/O Location
DC60:	00-00       	nop                   ; No Operation
DC62:	F0-3F       	cpi r31, 0xf0         ; Compare with Immediate
DC64:	00-00       	nop                   ; No Operation
DC66:	90-40       	sbci r25, 0x00        ; Subtract Immediate with Carry SBI
DC68:	98-9D       	mul r25, r8           ; Multiply Unsigned
DC6A:	FF-1F       	adc r31, r31          ; Add with Carry
DC6C:	10-DF       	rcall .+7712          ; Relative Call to Subroutine
DC6E:	FF-1F       	adc r31, r31          ; Add with Carry
DC70:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
DC72:	FF-1F       	adc r31, r31          ; Add with Carry
DC74:	A4-FB       	bst r26, 4            ; Bit Store from Bit in Register to T Flag in SREG
DC76:	FF-1F       	adc r31, r31          ; Add with Carry
DC78:	00-00       	nop                   ; No Operation
DC7A:	A0-40       	sbci r26, 0x00        ; Subtract Immediate with Carry SBI
DC7C:	A0-FA       	bst r10, 0            ; Bit Store from Bit in Register to T Flag in SREG
DC7E:	FF-1F       	adc r31, r31          ; Add with Carry
DC80:	A8-FB       	.data 0xfba8          ; Binary data
DC82:	FF-1F       	adc r31, r31          ; Add with Carry
DC84:	DC-F7       	brbc 4, .-10          ; Branch if Bit in SREG is Cleared
DC86:	FF-1F       	adc r31, r31          ; Add with Carry
DC88:	B0-92-FF-1F 	sts 0x1fff, r11       ; Store Direct to Data Space
DC8C:	CC-F2       	brbs 4, .-78          ; Branch if Bit in SREG is Set
DC8E:	FF-1F       	adc r31, r31          ; Add with Carry
DC90:	E4-92       	xch Z, r14            ; Exchange
DC92:	FF-1F       	adc r31, r31          ; Add with Carry
DC94:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
DC96:	A6-3F       	cpi r26, 0xf6         ; Compare with Immediate
DC98:	18-DF       	rcall .+7728          ; Relative Call to Subroutine
DC9A:	FF-1F       	adc r31, r31          ; Add with Carry
DC9C:	CD-CC       	rjmp .-1638           ; Relative Jump
DC9E:	8C-3F       	cpi r24, 0xfc         ; Compare with Immediate
DCA0:	CC-92       	st X, r12             ; Store Indirect From Register to Data Space
DCA2:	FF-1F       	adc r31, r31          ; Add with Carry
DCA4:	88-9D       	mul r24, r8           ; Multiply Unsigned
DCA6:	FF-1F       	adc r31, r31          ; Add with Carry
DCA8:	88-B9       	out 0x08, r24         ; Store Register to I/O Location
DCAA:	FF-1F       	adc r31, r31          ; Add with Carry
DCAC:	00-00       	nop                   ; No Operation
DCAE:	96-43       	sbci r25, 0x36        ; Subtract Immediate with Carry SBI
DCB0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
DCB2:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
DCB4:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DCB6:	EA-FA       	.data 0xfaea          ; Binary data
DCB8:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
DCBA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DCBC:	00-21       	and r16, r0           ; Logical AND
DCBE:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DCC0:	A9-FD       	.data 0xfda9          ; Binary data
DCC2:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DCC4:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
DCC6:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
DCC8:	00-E0       	ldi r16, 0x00         ; Load Immediate
DCCA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DCCC:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
DCCE:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DCD0:	DD-FA       	.data 0xfadd          ; Binary data
DCD2:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
DCD4:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
DCD6:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DCD8:	E1-FB       	bst r30, 1            ; Bit Store from Bit in Register to T Flag in SREG
DCDA:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DCDC:	A5-FD       	sbrc r26, 5           ; Skip if Bit in Register is Cleared
DCDE:	08-EB       	ldi r16, 0xb8         ; Load Immediate
DCE0:	A0-21       	and r26, r0           ; Logical AND
DCE2:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
DCE4:	03-22       	and r0, r19           ; Logical AND
DCE6:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
DCE8:	D9-FA       	.data 0xfad9          ; Binary data
DCEA:	45-4B       	sbci r20, 0xb5        ; Subtract Immediate with Carry SBI
DCEC:	45-4A       	sbci r20, 0xa5        ; Subtract Immediate with Carry SBI
DCEE:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
DCF0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
DCF2:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
DCF4:	91-FB       	bst r25, 1            ; Bit Store from Bit in Register to T Flag in SREG
DCF6:	F2-F1       	brbs 2, .+124         ; Branch if Bit in SREG is Set
DCF8:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
DCFA:	0A-44       	sbci r16, 0x4a        ; Subtract Immediate with Carry SBI
DCFC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DCFE:	42-4B       	sbci r20, 0xb2        ; Subtract Immediate with Carry SBI
DD00:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
DD02:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
DD04:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
DD06:	3C-FE       	.data 0xfe3c          ; Binary data
DD08:	11-E0       	ldi r17, 0x01         ; Load Immediate
DD0A:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
DD0C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DD0E:	01-2B       	or r16, r17           ; Logical OR
DD10:	01-D1       	rcall .+514           ; Relative Call to Subroutine
DD12:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
DD14:	CD-FE       	.data 0xfecd          ; Binary data
DD16:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
DD18:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DD1A:	05-2B       	or r16, r21           ; Logical OR
DD1C:	01-D1       	rcall .+514           ; Relative Call to Subroutine
DD1E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
DD20:	35-FC       	sbrc r3, 5            ; Skip if Bit in Register is Cleared
DD22:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
DD24:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DD26:	06-2B       	or r16, r22           ; Logical OR
DD28:	01-D1       	rcall .+514           ; Relative Call to Subroutine
DD2A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
DD2C:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
DD2E:	38-4B       	sbci r19, 0xb8        ; Subtract Immediate with Carry SBI
DD30:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DD32:	38-4A       	sbci r19, 0xa8        ; Subtract Immediate with Carry SBI
DD34:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
DD36:	03-02       	muls r16, r19         ; Multiply Signed
DD38:	D9-17       	cp r29, r25           ; Compare
DD3A:	C1-EB       	ldi r28, 0xb1         ; Load Immediate
DD3C:	62-12       	cpse r6, r18          ; Compare Skip if Equal
DD3E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
DD40:	FA-71       	andi r31, 0x1a        ; Logical AND with Immediate
DD42:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
DD44:	12-33       	cpi r17, 0x32         ; Compare with Immediate
DD46:	53-B9       	out 0x03, r21         ; Store Register to I/O Location
DD48:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
DD4A:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
DD4C:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
DD4E:	AE-F9       	.data 0xf9ae          ; Binary data
DD50:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
DD52:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DD54:	00-2B       	or r16, r16           ; Logical OR
DD56:	02-DD       	rcall .+6660          ; Relative Call to Subroutine
DD58:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
DD5A:	30-4A       	sbci r19, 0xa0        ; Subtract Immediate with Carry SBI
DD5C:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
DD5E:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
DD60:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
DD62:	2F-4A       	sbci r18, 0xaf        ; Subtract Immediate with Carry SBI
DD64:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
DD66:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
DD68:	C9-17       	cp r28, r25           ; Compare
DD6A:	C1-EB       	ldi r28, 0xb1         ; Load Immediate
DD6C:	A3-03       	fmuls r18, r19        ; Fractional Multiply Signed
DD6E:	82-FB       	bst r24, 2            ; Bit Store from Bit in Register to T Flag in SREG
DD70:	03-12       	cpse r0, r19          ; Compare Skip if Equal
DD72:	D9-17       	cp r29, r25           ; Compare
DD74:	C1-EB       	ldi r28, 0xb1         ; Load Immediate
DD76:	A2-02       	muls r26, r18         ; Multiply Signed
DD78:	02-EB       	ldi r16, 0xb2         ; Load Immediate
DD7A:	82-02       	muls r24, r18         ; Multiply Signed
DD7C:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
DD7E:	42-0F       	add r20, r18          ; Add without Carry
DD80:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
DD82:	0D-00       	.data 0x000d          ; Binary data
DD84:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
DD86:	00-21       	and r16, r0           ; Logical AND
DD88:	01-21       	and r16, r1           ; Logical AND
DD8A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
DD8C:	65-FE       	sbrs r6, 5            ; Skip if Bit in Register is Set
DD8E:	33-E0       	ldi r19, 0x03         ; Load Immediate
DD90:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
DD92:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DD94:	00-2B       	or r16, r16           ; Logical OR
DD96:	3F-F7       	brbc 7, .-50          ; Branch if Bit in SREG is Cleared
DD98:	B8-AC       	std Y+56, r11         ; Store Indirect From Register to Data Space
DD9A:	DC-E4       	ldi r29, 0x4c         ; Load Immediate
DD9C:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
DD9E:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
DDA0:	01-32       	cpi r16, 0x21         ; Compare with Immediate
DDA2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DDA4:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
DDA6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DDA8:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
DDAA:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
DDAC:	40-F6       	brbc 0, .-112         ; Branch if Bit in SREG is Cleared
DDAE:	C4-13       	cpse r28, r20         ; Compare Skip if Equal
DDB0:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
DDB2:	7F-F6       	brbc 7, .-98          ; Branch if Bit in SREG is Cleared
DDB4:	A6-AC       	std Y+62, r10         ; Store Indirect From Register to Data Space
DDB6:	A1-E4       	ldi r26, 0x41         ; Load Immediate
DDB8:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
DDBA:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
DDBC:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
DDBE:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
DDC0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
DDC2:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
DDC4:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DDC6:	1E-FC       	.data 0xfc1e          ; Binary data
DDC8:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
DDCA:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
DDCC:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
DDCE:	19-49       	sbci r17, 0x99        ; Subtract Immediate with Carry SBI
DDD0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DDD2:	18-FC       	.data 0xfc18          ; Binary data
DDD4:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
DDD6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DDD8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DDDA:	58-FA       	.data 0xfa58          ; Binary data
DDDC:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
DDDE:	00-21       	and r16, r0           ; Logical AND
DDE0:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DDE2:	18-FD       	.data 0xfd18          ; Binary data
DDE4:	00-28       	or r0, r0             ; Logical OR
DDE6:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
DDE8:	F0-AE       	std Y+56, r15         ; Store Indirect From Register to Data Space
DDEA:	EB-E6       	ldi r30, 0x6b         ; Load Immediate
DDEC:	00-20       	and r0, r0            ; Logical AND
DDEE:	00-21       	and r16, r0           ; Logical AND
DDF0:	03-22       	and r0, r19           ; Logical AND
DDF2:	F3-F7       	brbc 3, .-4           ; Branch if Bit in SREG is Cleared
DDF4:	53-FA       	bst r5, 3             ; Bit Store from Bit in Register to T Flag in SREG
DDF6:	78-E7       	ldi r23, 0x78         ; Load Immediate
DDF8:	04-B0       	in r0, 0x04           ; Load an I/O Location to Register
DDFA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
DDFC:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
DDFE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
DE00:	44-9D       	mul r20, r4           ; Multiply Unsigned
DE02:	FF-1F       	adc r31, r31          ; Add with Carry
DE04:	B4-92       	xch Z, r11            ; Exchange
DE06:	FF-1F       	adc r31, r31          ; Add with Carry
DE08:	74-9D       	mul r23, r4           ; Multiply Unsigned
DE0A:	FF-1F       	adc r31, r31          ; Add with Carry
DE0C:	D8-92       	.data 0x92d8          ; Binary data
DE0E:	FF-1F       	adc r31, r31          ; Add with Carry
DE10:	94-9D       	mul r25, r4           ; Multiply Unsigned
DE12:	FF-1F       	adc r31, r31          ; Add with Carry
DE14:	D3-4D       	sbci r29, 0xd3        ; Subtract Immediate with Carry SBI
DE16:	62-10       	cpse r6, r2           ; Compare Skip if Equal
DE18:	78-FB       	.data 0xfb78          ; Binary data
DE1A:	FF-1F       	adc r31, r31          ; Add with Carry
DE1C:	8C-9D       	mul r24, r12          ; Multiply Unsigned
DE1E:	FF-1F       	adc r31, r31          ; Add with Carry
DE20:	67-66       	ori r22, 0x67         ; Logical OR with Immediate
DE22:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
DE24:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
DE26:	FF-1F       	adc r31, r31          ; Add with Carry
DE28:	0C-00       	.data 0x000c          ; Binary data
DE2A:	00-20       	and r0, r0            ; Logical AND
DE2C:	E4-92       	xch Z, r14            ; Exchange
DE2E:	FF-1F       	adc r31, r31          ; Add with Carry
DE30:	9C-F8       	.data 0xf89c          ; Binary data
DE32:	FF-1F       	adc r31, r31          ; Add with Carry
DE34:	00-00       	nop                   ; No Operation
DE36:	40-40       	sbci r20, 0x00        ; Subtract Immediate with Carry SBI
DE38:	30-FC       	sbrc r3, 0            ; Skip if Bit in Register is Cleared
DE3A:	FF-1F       	adc r31, r31          ; Add with Carry
DE3C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
DE3E:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
DE40:	D3-FC       	sbrc r13, 3           ; Skip if Bit in Register is Cleared
DE42:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
DE44:	FF-22       	and r15, r31          ; Logical AND
DE46:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
DE48:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
DE4A:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
DE4C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
DE4E:	D2-23       	and r29, r18          ; Logical AND
DE50:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
DE52:	FD-D1       	rcall .+1018          ; Relative Call to Subroutine
DE54:	26-E0       	ldi r18, 0x06         ; Load Immediate
DE56:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
DE58:	FD-D1       	rcall .+1018          ; Relative Call to Subroutine
DE5A:	32-23       	and r19, r18          ; Logical AND
DE5C:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
DE5E:	FD-D1       	rcall .+1018          ; Relative Call to Subroutine
DE60:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
DE62:	00-22       	and r0, r16           ; Logical AND
DE64:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
DE66:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
DE68:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
DE6A:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
DE6C:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
DE6E:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
DE70:	9A-71       	andi r25, 0x1a        ; Logical AND with Immediate
DE72:	DA-71       	andi r29, 0x1a        ; Logical AND with Immediate
DE74:	1A-72       	andi r17, 0x2a        ; Logical AND with Immediate
DE76:	5A-72       	andi r21, 0x2a        ; Logical AND with Immediate
DE78:	9A-72       	andi r25, 0x2a        ; Logical AND with Immediate
DE7A:	DA-72       	andi r29, 0x2a        ; Logical AND with Immediate
DE7C:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
DE7E:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
DE80:	9A-73       	andi r25, 0x3a        ; Logical AND with Immediate
DE82:	14-22       	and r1, r20           ; Logical AND
DE84:	DA-73       	andi r29, 0x3a        ; Logical AND with Immediate
DE86:	1A-74       	andi r17, 0x4a        ; Logical AND with Immediate
DE88:	5A-74       	andi r21, 0x4a        ; Logical AND with Immediate
DE8A:	0A-22       	and r0, r26           ; Logical AND
DE8C:	9A-74       	andi r25, 0x4a        ; Logical AND with Immediate
DE8E:	DA-74       	andi r29, 0x4a        ; Logical AND with Immediate
DE90:	1A-75       	andi r17, 0x5a        ; Logical AND with Immediate
DE92:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
DE94:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
DE96:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
DE98:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DE9A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
DE9C:	C8-73       	andi r28, 0x38        ; Logical AND with Immediate
DE9E:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
DEA0:	FD-D1       	rcall .+1018          ; Relative Call to Subroutine
DEA2:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
DEA4:	1F-4D       	sbci r17, 0xdf        ; Subtract Immediate with Carry SBI
DEA6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
DEA8:	00-21       	and r16, r0           ; Logical AND
DEAA:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
DEAC:	F2-F7       	brbc 2, .-4           ; Branch if Bit in SREG is Cleared
DEAE:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
DEB0:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
DEB2:	2B-60       	ori r18, 0x0b         ; Logical OR with Immediate
DEB4:	00-24       	clr r0                ; Clear Register
DEB6:	2C-83       	std Y+4, r18          ; Store Indirect From Register to Data Space
DEB8:	6C-83       	std Y+4, r22          ; Store Indirect From Register to Data Space
DEBA:	EC-61       	ori r30, 0x1c         ; Logical OR with Immediate
DEBC:	2C-62       	ori r18, 0x2c         ; Logical OR with Immediate
DEBE:	AC-62       	ori r26, 0x2c         ; Logical OR with Immediate
DEC0:	AC-85       	std Y+12, r26         ; Store Indirect From Register to Data Space
DEC2:	EC-85       	std Y+12, r30         ; Store Indirect From Register to Data Space
DEC4:	2C-63       	ori r18, 0x3c         ; Logical OR with Immediate
DEC6:	19-4E       	sbci r17, 0xe9        ; Subtract Immediate with Carry SBI
DEC8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
DECA:	01-21       	and r16, r1           ; Logical AND
DECC:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
DECE:	18-02       	muls r17, r24         ; Multiply Signed
DED0:	F2-F7       	brbc 2, .-4           ; Branch if Bit in SREG is Cleared
DED2:	62-FD       	sbrc r22, 2           ; Skip if Bit in Register is Cleared
DED4:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
DED6:	33-60       	ori r19, 0x03         ; Logical OR with Immediate
DED8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
DEDA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
DEDC:	E9-F8       	.data 0xf8e9          ; Binary data
DEDE:	15-48       	sbci r17, 0x85        ; Subtract Immediate with Carry SBI
DEE0:	05-60       	ori r16, 0x05         ; Logical OR with Immediate
DEE2:	46-60       	ori r20, 0x06         ; Logical OR with Immediate
DEE4:	04-72       	andi r16, 0x24        ; Logical AND with Immediate
DEE6:	44-72       	andi r20, 0x24        ; Logical AND with Immediate
DEE8:	C4-60       	ori r28, 0x04         ; Logical OR with Immediate
DEEA:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
DEEC:	07-FA       	bst r0, 7             ; Bit Store from Bit in Register to T Flag in SREG
DEEE:	12-4C       	sbci r17, 0xc2        ; Subtract Immediate with Carry SBI
DEF0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DEF2:	12-49       	sbci r17, 0x92        ; Subtract Immediate with Carry SBI
DEF4:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
DEF6:	52-FE       	sbrs r5, 2            ; Skip if Bit in Register is Set
DEF8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DEFA:	11-49       	sbci r17, 0x91        ; Subtract Immediate with Carry SBI
DEFC:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
DEFE:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DF00:	D9-FC       	.data 0xfcd9          ; Binary data
DF02:	11-48       	sbci r17, 0x81        ; Subtract Immediate with Carry SBI
DF04:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
DF06:	C6-F9       	bld r28, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
DF08:	10-48       	sbci r17, 0x80        ; Subtract Immediate with Carry SBI
DF0A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
DF0C:	4B-F8       	.data 0xf84b          ; Binary data
DF0E:	33-23       	and r19, r19          ; Logical AND
DF10:	A1-E7       	ldi r26, 0x71         ; Load Immediate
DF12:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
DF14:	60-F8       	bld r6, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
DF16:	FF-1F       	adc r31, r31          ; Add with Carry
DF18:	78-F9       	.data 0xf978          ; Binary data
DF1A:	FF-1F       	adc r31, r31          ; Add with Carry
DF1C:	54-FA       	bst r5, 4             ; Bit Store from Bit in Register to T Flag in SREG
DF1E:	FF-1F       	adc r31, r31          ; Add with Carry
DF20:	A0-EF       	ldi r26, 0xf0         ; Load Immediate
DF22:	FF-1F       	adc r31, r31          ; Add with Carry
DF24:	F4-FB       	bst r31, 4            ; Bit Store from Bit in Register to T Flag in SREG
DF26:	FF-1F       	adc r31, r31          ; Add with Carry
DF28:	30-80       	ld r3, Z              ; Load Indirect from Data Space to Register
DF2A:	01-00       	.data 0x0001          ; Binary data
DF2C:	A4-FA       	bst r10, 4            ; Bit Store from Bit in Register to T Flag in SREG
DF2E:	FF-1F       	adc r31, r31          ; Add with Carry
DF30:	20-80       	ld r2, Z              ; Load Indirect from Data Space to Register
DF32:	01-00       	.data 0x0001          ; Binary data
DF34:	5C-9D       	mul r21, r12          ; Multiply Unsigned
DF36:	FF-1F       	adc r31, r31          ; Add with Carry
DF38:	18-9E       	mul r1, r24           ; Multiply Unsigned
DF3A:	FF-1F       	adc r31, r31          ; Add with Carry
DF3C:	C4-7B       	andi r28, 0xb4        ; Logical AND with Immediate
DF3E:	01-00       	.data 0x0001          ; Binary data
DF40:	05-2B       	or r16, r21           ; Logical OR
DF42:	01-00       	.data 0x0001          ; Binary data
DF44:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
DF46:	FF-1F       	adc r31, r31          ; Add with Carry
DF48:	C0-FB       	bst r28, 0            ; Bit Store from Bit in Register to T Flag in SREG
DF4A:	FF-1F       	adc r31, r31          ; Add with Carry
DF4C:	64-F9       	bld r22, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
DF4E:	FF-1F       	adc r31, r31          ; Add with Carry
DF50:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
DF52:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
DF54:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
DF56:	9C-FA       	.data 0xfa9c          ; Binary data
DF58:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
DF5A:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
DF5C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
DF5E:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
DF60:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
DF62:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
DF64:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DF66:	A6-FC       	sbrc r10, 6           ; Skip if Bit in Register is Cleared
DF68:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
DF6A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
DF6C:	4C-FC       	.data 0xfc4c          ; Binary data
DF6E:	FF-1F       	adc r31, r31          ; Add with Carry
DF70:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
DF72:	00-00       	nop                   ; No Operation
DF74:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
DF76:	FF-1F       	adc r31, r31          ; Add with Carry
DF78:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
DF7A:	06-4D       	sbci r16, 0xd6        ; Subtract Immediate with Carry SBI
DF7C:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
DF7E:	07-48       	sbci r16, 0x87        ; Subtract Immediate with Carry SBI
DF80:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
DF82:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
DF84:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DF86:	96-FC       	sbrc r9, 6            ; Skip if Bit in Register is Cleared
DF88:	05-48       	sbci r16, 0x85        ; Subtract Immediate with Carry SBI
DF8A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
DF8C:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
DF8E:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DF90:	91-FC       	sbrc r9, 1            ; Skip if Bit in Register is Cleared
DF92:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
DF94:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
DF96:	00-00       	nop                   ; No Operation
DF98:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
DF9A:	FF-1F       	adc r31, r31          ; Add with Carry
DF9C:	54-FC       	sbrc r5, 4            ; Skip if Bit in Register is Cleared
DF9E:	FF-1F       	adc r31, r31          ; Add with Carry
DFA0:	5C-FC       	.data 0xfc5c          ; Binary data
DFA2:	FF-1F       	adc r31, r31          ; Add with Carry
DFA4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
DFA6:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
DFA8:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
DFAA:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
DFAC:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DFAE:	82-FC       	sbrc r8, 2            ; Skip if Bit in Register is Cleared
DFB0:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
DFB2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
DFB4:	64-FC       	sbrc r6, 4            ; Skip if Bit in Register is Cleared
DFB6:	FF-1F       	adc r31, r31          ; Add with Carry
DFB8:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
DFBA:	00-00       	nop                   ; No Operation
DFBC:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
DFBE:	FF-1F       	adc r31, r31          ; Add with Carry
DFC0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
DFC2:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
DFC4:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
DFC6:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
DFC8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
DFCA:	74-FC       	sbrc r7, 4            ; Skip if Bit in Register is Cleared
DFCC:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
DFCE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
DFD0:	6C-FC       	.data 0xfc6c          ; Binary data
DFD2:	FF-1F       	adc r31, r31          ; Add with Carry
DFD4:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
DFD6:	00-00       	nop                   ; No Operation
DFD8:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
DFDA:	FF-1F       	adc r31, r31          ; Add with Carry
DFDC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
DFDE:	00-21       	and r16, r0           ; Logical AND
DFE0:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
DFE2:	80-F9       	bld r24, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
DFE4:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
DFE6:	A0-B1       	in r26, 0x00          ; Load an I/O Location to Register
DFE8:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
DFEA:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
DFEC:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
DFEE:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
DFF0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
DFF2:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
DFF4:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
DFF6:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
DFF8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
DFFA:	1B-B9       	out 0x0b, r17         ; Store Register to I/O Location
DFFC:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
DFFE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E000:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
E002:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E004:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E006:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
E008:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
E00A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E00C:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
E00E:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
E010:	33-F9       	bld r19, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
E012:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E014:	84-FC       	sbrc r8, 4            ; Skip if Bit in Register is Cleared
E016:	FF-1F       	adc r31, r31          ; Add with Carry
E018:	74-FC       	sbrc r7, 4            ; Skip if Bit in Register is Cleared
E01A:	FF-1F       	adc r31, r31          ; Add with Carry
E01C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
E01E:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
E020:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E022:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
E024:	19-79       	andi r17, 0x99        ; Logical AND with Immediate
E026:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
E028:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
E02A:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
E02C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
E02E:	06-D2       	rcall .+1036          ; Relative Call to Subroutine
E030:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
E032:	80-74       	andi r24, 0x40        ; Logical AND with Immediate
E034:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
E036:	80-73       	andi r24, 0x30        ; Logical AND with Immediate
E038:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
E03A:	00-74       	andi r16, 0x40        ; Logical AND with Immediate
E03C:	02-E0       	ldi r16, 0x02         ; Load Immediate
E03E:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
E040:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
E042:	80-74       	andi r24, 0x40        ; Logical AND with Immediate
E044:	16-4A       	sbci r17, 0xa6        ; Subtract Immediate with Carry SBI
E046:	10-68       	ori r17, 0x80         ; Logical OR with Immediate
E048:	98-B1       	in r25, 0x08          ; Load an I/O Location to Register
E04A:	02-1D       	adc r16, r2           ; Add with Carry
E04C:	47-F6       	brbc 7, .-112         ; Branch if Bit in SREG is Cleared
E04E:	FF-75       	andi r31, 0x5f        ; Logical AND with Immediate
E050:	32-F9       	bld r19, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
E052:	02-1B       	sub r16, r18          ; Subtract Without Carry
E054:	29-44       	sbci r18, 0x49        ; Subtract Immediate with Carry SBI
E056:	09-11       	cpse r16, r9          ; Compare Skip if Equal
E058:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E05A:	02-1B       	sub r16, r18          ; Subtract Without Carry
E05C:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
E05E:	F7-D8       	rcall .+4590          ; Relative Call to Subroutine
E060:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
E062:	0A-F9       	.data 0xf90a          ; Binary data
E064:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
E066:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E068:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
E06A:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
E06C:	00-22       	and r0, r16           ; Logical AND
E06E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E070:	05-E0       	ldi r16, 0x05         ; Load Immediate
E072:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
E074:	FF-72       	andi r31, 0x2f        ; Logical AND with Immediate
E076:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E078:	02-2B       	or r16, r18           ; Logical OR
E07A:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
E07C:	FB-D8       	rcall .+4598          ; Relative Call to Subroutine
E07E:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
E080:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
E082:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
E084:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
E086:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
E088:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
E08A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E08C:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
E08E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E090:	78-FC       	.data 0xfc78          ; Binary data
E092:	FF-1F       	adc r31, r31          ; Add with Carry
E094:	1F-80       	ldd r1, Y+7           ; Load Indirect from Data Space to Register
E096:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
E098:	18-89       	std Y+16, r17         ; Store Indirect From Register to Data Space
E09A:	FF-1F       	adc r31, r31          ; Add with Carry
E09C:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
E09E:	FF-1F       	adc r31, r31          ; Add with Carry
E0A0:	84-FC       	sbrc r8, 4            ; Skip if Bit in Register is Cleared
E0A2:	FF-1F       	adc r31, r31          ; Add with Carry
E0A4:	74-FC       	sbrc r7, 4            ; Skip if Bit in Register is Cleared
E0A6:	FF-1F       	adc r31, r31          ; Add with Carry
E0A8:	80-FC       	sbrc r8, 0            ; Skip if Bit in Register is Cleared
E0AA:	FF-1F       	adc r31, r31          ; Add with Carry
E0AC:	08-E2       	ldi r16, 0x28         ; Load Immediate
E0AE:	00-E0       	ldi r16, 0x00         ; Load Immediate
E0B0:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
E0B2:	4F-48       	sbci r20, 0x8f        ; Subtract Immediate with Carry SBI
E0B4:	01-21       	and r16, r1           ; Logical AND
E0B6:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
E0B8:	8D-F9       	.data 0xf98d          ; Binary data
E0BA:	4E-4B       	sbci r20, 0xbe        ; Subtract Immediate with Carry SBI
E0BC:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E0BE:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
E0C0:	80-52       	subi r24, 0x20        ; Subtract Immediate
E0C2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E0C4:	80-22       	and r8, r16           ; Logical AND
E0C6:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
E0C8:	03-23       	and r16, r19          ; Logical AND
E0CA:	03-F6       	brbc 3, .-128         ; Branch if Bit in SREG is Cleared
E0CC:	F5-73       	andi r31, 0x35        ; Logical AND with Immediate
E0CE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
E0D0:	00-24       	clr r0                ; Clear Register
E0D2:	49-4E       	sbci r20, 0xe9        ; Subtract Immediate with Carry SBI
E0D4:	01-25       	clr r257              ; Clear Register
E0D6:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
E0D8:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
E0DA:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E0DC:	D3-FD       	sbrc r29, 3           ; Skip if Bit in Register is Cleared
E0DE:	08-34       	cpi r16, 0x48         ; Compare with Immediate
E0E0:	A4-B2       	in r10, 0x14          ; Load an I/O Location to Register
E0E2:	23-B2       	in r2, 0x13           ; Load an I/O Location to Register
E0E4:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
E0E6:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
E0E8:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
E0EA:	44-4B       	sbci r20, 0xb4        ; Subtract Immediate with Carry SBI
E0EC:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
E0EE:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
E0F0:	80-0F       	add r24, r16          ; Add without Carry
E0F2:	16-D0       	rcall .+44            ; Relative Call to Subroutine
E0F4:	42-4B       	sbci r20, 0xb2        ; Subtract Immediate with Carry SBI
E0F6:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E0F8:	48-F6       	brbc 0, .-110         ; Branch if Bit in SREG is Cleared
E0FA:	A2-73       	andi r26, 0x32        ; Logical AND with Immediate
E0FC:	1A-40       	sbci r17, 0x0a        ; Subtract Immediate with Carry SBI
E0FE:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
E100:	0F-D1       	rcall .+542           ; Relative Call to Subroutine
E102:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
E104:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E106:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
E108:	3F-43       	sbci r19, 0x3f        ; Subtract Immediate with Carry SBI
E10A:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
E10C:	09-D1       	rcall .+530           ; Relative Call to Subroutine
E10E:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
E110:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
E112:	01-2B       	or r16, r17           ; Logical OR
E114:	05-D1       	rcall .+522           ; Relative Call to Subroutine
E116:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
E118:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E11A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
E11C:	01-13       	cpse r16, r17         ; Compare Skip if Equal
E11E:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
E120:	17-D0       	rcall .+46            ; Relative Call to Subroutine
E122:	36-4B       	sbci r19, 0xb6        ; Subtract Immediate with Carry SBI
E124:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E126:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
E128:	80-02       	muls r24, r16         ; Multiply Signed
E12A:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E12C:	01-22       	and r0, r17           ; Logical AND
E12E:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
E130:	90-33       	cpi r25, 0x30         ; Compare with Immediate
E132:	30-3B       	cpi r19, 0xb0         ; Compare with Immediate
E134:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E136:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
E138:	3F-42       	sbci r19, 0x2f        ; Subtract Immediate with Carry SBI
E13A:	08-3B       	cpi r16, 0xb8         ; Compare with Immediate
E13C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E13E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
E140:	48-F6       	brbc 0, .-110         ; Branch if Bit in SREG is Cleared
E142:	A3-72       	andi r26, 0x23        ; Logical AND with Immediate
E144:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E146:	32-4A       	sbci r19, 0xa2        ; Subtract Immediate with Carry SBI
E148:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E14A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
E14C:	01-12       	cpse r0, r17          ; Compare Skip if Equal
E14E:	10-33       	cpi r17, 0x30         ; Compare with Immediate
E150:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E152:	27-4C       	sbci r18, 0xc7        ; Subtract Immediate with Carry SBI
E154:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
E156:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
E158:	00-22       	and r0, r16           ; Logical AND
E15A:	2E-49       	sbci r18, 0x9e        ; Subtract Immediate with Carry SBI
E15C:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
E15E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
E160:	02-21       	and r16, r2           ; Logical AND
E162:	19-71       	andi r17, 0x19        ; Logical AND with Immediate
E164:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
E166:	01-20       	and r0, r1            ; Logical AND
E168:	98-71       	andi r25, 0x18        ; Logical AND with Immediate
E16A:	D8-71       	andi r29, 0x18        ; Logical AND with Immediate
E16C:	19-72       	andi r17, 0x29        ; Logical AND with Immediate
E16E:	5A-72       	andi r21, 0x2a        ; Logical AND with Immediate
E170:	9A-72       	andi r25, 0x2a        ; Logical AND with Immediate
E172:	DA-72       	andi r29, 0x2a        ; Logical AND with Immediate
E174:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
E176:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
E178:	01-01       	movw r0, r2           ; Copy Register Word
E17A:	59-73       	andi r21, 0x39        ; Logical AND with Immediate
E17C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
E17E:	FF-31       	cpi r31, 0x1f         ; Compare with Immediate
E180:	99-73       	andi r25, 0x39        ; Logical AND with Immediate
E182:	D9-73       	andi r29, 0x39        ; Logical AND with Immediate
E184:	19-69       	ori r17, 0x99         ; Logical OR with Immediate
E186:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
E188:	19-61       	ori r17, 0x19         ; Logical OR with Immediate
E18A:	1A-75       	andi r17, 0x5a        ; Logical AND with Immediate
E18C:	5A-75       	andi r21, 0x5a        ; Logical AND with Immediate
E18E:	D9-8A       	std Y+17, r13         ; Store Indirect From Register to Data Space
E190:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
E192:	80-71       	andi r24, 0x10        ; Logical AND with Immediate
E194:	D9-82       	std Y+1, r13          ; Store Indirect From Register to Data Space
E196:	1A-76       	andi r17, 0x6a        ; Logical AND with Immediate
E198:	5A-76       	andi r21, 0x6a        ; Logical AND with Immediate
E19A:	9A-76       	andi r25, 0x6a        ; Logical AND with Immediate
E19C:	DA-76       	andi r29, 0x6a        ; Logical AND with Immediate
E19E:	D8-8B       	std Y+16, r29         ; Store Indirect From Register to Data Space
E1A0:	D9-83       	std Y+1, r29          ; Store Indirect From Register to Data Space
E1A2:	99-8B       	std Y+17, r25         ; Store Indirect From Register to Data Space
E1A4:	06-21       	and r16, r6           ; Logical AND
E1A6:	99-83       	std Y+1, r25          ; Store Indirect From Register to Data Space
E1A8:	23-79       	andi r18, 0x93        ; Logical AND with Immediate
E1AA:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
E1AC:	80-43       	sbci r24, 0x30        ; Subtract Immediate with Carry SBI
E1AE:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
E1B0:	04-33       	cpi r16, 0x34         ; Compare with Immediate
E1B2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
E1B4:	B0-22       	and r11, r16          ; Logical AND
E1B6:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
E1B8:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
E1BA:	B8-F8       	.data 0xf8b8          ; Binary data
E1BC:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
E1BE:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
E1C0:	22-79       	andi r18, 0x92        ; Logical AND with Immediate
E1C2:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
E1C4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
E1C6:	22-79       	andi r18, 0x92        ; Logical AND with Immediate
E1C8:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
E1CA:	10-01       	movw r2, r0           ; Copy Register Word
E1CC:	14-48       	sbci r17, 0x84        ; Subtract Immediate with Carry SBI
E1CE:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
E1D0:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E1D2:	21-00       	.data 0x0021          ; Binary data
E1D4:	53-11       	cpse r21, r3          ; Compare Skip if Equal
E1D6:	9B-00       	.data 0x009b          ; Binary data
E1D8:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
E1DA:	60-43       	sbci r22, 0x30        ; Subtract Immediate with Carry SBI
E1DC:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
E1DE:	61-43       	sbci r22, 0x31        ; Subtract Immediate with Carry SBI
E1E0:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E1E2:	1F-02       	muls r17, r31         ; Multiply Signed
E1E4:	01-21       	and r16, r1           ; Logical AND
E1E6:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
E1E8:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
E1EA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E1EC:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
E1EE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E1F0:	78-FC       	.data 0xfc78          ; Binary data
E1F2:	FF-1F       	adc r31, r31          ; Add with Carry
E1F4:	2C-80       	ldd r2, Y+4           ; Load Indirect from Data Space to Register
E1F6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
E1F8:	00-C0       	rjmp .+0              ; Relative Jump
E1FA:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
E1FC:	3C-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
E1FE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
E200:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
E202:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
E204:	04-60       	ori r16, 0x04         ; Logical OR with Immediate
E206:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
E208:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
E20A:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
E20C:	10-60       	ori r17, 0x00         ; Logical OR with Immediate
E20E:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
E210:	A2-8F       	std Y+26, r26         ; Store Indirect From Register to Data Space
E212:	01-00       	.data 0x0001          ; Binary data
E214:	18-88       	std Y+16, r1          ; Store Indirect From Register to Data Space
E216:	FF-1F       	adc r31, r31          ; Add with Carry
E218:	80-FC       	sbrc r8, 0            ; Skip if Bit in Register is Cleared
E21A:	FF-1F       	adc r31, r31          ; Add with Carry
E21C:	1B-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
E21E:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
E220:	1D-E0       	ldi r17, 0x0d         ; Load Immediate
E222:	00-00       	nop                   ; No Operation
E224:	00-8C       	std Y+24, r0          ; Store Indirect From Register to Data Space
E226:	FF-1F       	adc r31, r31          ; Add with Carry
E228:	02-29       	or r16, r2            ; Logical OR
E22A:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
E22C:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
E22E:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
E230:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E232:	BF-02       	muls r27, r31         ; Multiply Signed
E234:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
E236:	40-02       	muls r20, r16         ; Multiply Signed
E238:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
E23A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
E23C:	21-C0       	rjmp .+66             ; Relative Jump
E23E:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
E240:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E242:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
E244:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E246:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
E248:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
E24A:	34-FB       	bst r19, 4            ; Bit Store from Bit in Register to T Flag in SREG
E24C:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E24E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E250:	78-FC       	.data 0xfc78          ; Binary data
E252:	FF-1F       	adc r31, r31          ; Add with Carry
E254:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
E256:	00-00       	nop                   ; No Operation
E258:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
E25A:	FF-1F       	adc r31, r31          ; Add with Carry
E25C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E25E:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
E260:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E262:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
E264:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
E266:	26-FB       	bst r18, 6            ; Bit Store from Bit in Register to T Flag in SREG
E268:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E26A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E26C:	88-FC       	.data 0xfc88          ; Binary data
E26E:	FF-1F       	adc r31, r31          ; Add with Carry
E270:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
E272:	00-00       	nop                   ; No Operation
E274:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
E276:	FF-1F       	adc r31, r31          ; Add with Carry
E278:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E27A:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
E27C:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E27E:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
E280:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
E282:	18-FB       	.data 0xfb18          ; Binary data
E284:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E286:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E288:	90-FC       	sbrc r9, 0            ; Skip if Bit in Register is Cleared
E28A:	FF-1F       	adc r31, r31          ; Add with Carry
E28C:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
E28E:	00-00       	nop                   ; No Operation
E290:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
E292:	FF-1F       	adc r31, r31          ; Add with Carry
E294:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E296:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
E298:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E29A:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
E29C:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
E29E:	0A-FB       	.data 0xfb0a          ; Binary data
E2A0:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E2A2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E2A4:	98-FC       	.data 0xfc98          ; Binary data
E2A6:	FF-1F       	adc r31, r31          ; Add with Carry
E2A8:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
E2AA:	00-00       	nop                   ; No Operation
E2AC:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
E2AE:	FF-1F       	adc r31, r31          ; Add with Carry
E2B0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E2B2:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
E2B4:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E2B6:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
E2B8:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
E2BA:	FC-FA       	.data 0xfafc          ; Binary data
E2BC:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E2BE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E2C0:	A0-FC       	sbrc r10, 0           ; Skip if Bit in Register is Cleared
E2C2:	FF-1F       	adc r31, r31          ; Add with Carry
E2C4:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
E2C6:	00-00       	nop                   ; No Operation
E2C8:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
E2CA:	FF-1F       	adc r31, r31          ; Add with Carry
E2CC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E2CE:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
E2D0:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
E2D2:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
E2D4:	08-F0       	brbs 0, .+2           ; Branch if Bit in SREG is Set
E2D6:	EE-FA       	.data 0xfaee          ; Binary data
E2D8:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E2DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E2DC:	A8-FC       	.data 0xfca8          ; Binary data
E2DE:	FF-1F       	adc r31, r31          ; Add with Carry
E2E0:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
E2E2:	00-00       	nop                   ; No Operation
E2E4:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
E2E6:	FF-1F       	adc r31, r31          ; Add with Carry
E2E8:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
E2EA:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
E2EC:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
E2EE:	B0-F9       	bld r27, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
E2F0:	18-30       	cpi r17, 0x08         ; Compare with Immediate
E2F2:	00-2B       	or r16, r16           ; Logical OR
E2F4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
E2F6:	FD-80       	ldd r15, Y+5          ; Load Indirect from Data Space to Register
E2F8:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E2FA:	62-FF       	sbrs r22, 2           ; Skip if Bit in Register is Set
E2FC:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
E2FE:	00-28       	or r0, r0             ; Logical OR
E300:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
E302:	F7-80       	ldd r15, Y+7          ; Load Indirect from Data Space to Register
E304:	06-1D       	adc r16, r6           ; Add with Carry
E306:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E308:	2C-30       	cpi r18, 0x0c         ; Compare with Immediate
E30A:	07-2B       	or r16, r23           ; Logical OR
E30C:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
E30E:	D9-80       	ldd r13, Y+1          ; Load Indirect from Data Space to Register
E310:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
E312:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E314:	04-6A       	ori r16, 0xa4         ; Logical OR with Immediate
E316:	58-92       	.data 0x9258          ; Binary data
E318:	2B-AF       	std Y+59, r18         ; Store Indirect From Register to Data Space
E31A:	7E-C1       	rjmp .+764            ; Relative Jump
E31C:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
E31E:	82-7E       	andi r24, 0xe2        ; Logical AND with Immediate
E320:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
E322:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
E324:	FF-75       	andi r31, 0x5f        ; Logical AND with Immediate
E326:	74-48       	sbci r23, 0x84        ; Subtract Immediate with Carry SBI
E328:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E32A:	D1-0D       	add r29, r1           ; Add without Carry
E32C:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
E32E:	CF-12       	cpse r12, r31         ; Compare Skip if Equal
E330:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E332:	18-C0       	rjmp .+48             ; Relative Jump
E334:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
E336:	05-08       	sbc r0, r5            ; Subtract with Carry
E338:	30-F9       	bld r19, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
E33A:	11-90       	ld r1, Z+             ; Load Indirect from Data Space to Register
E33C:	01-31       	cpi r16, 0x11         ; Compare with Immediate
E33E:	30-F9       	bld r19, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
E340:	11-10       	cpse r1, r1           ; Compare Skip if Equal
E342:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
E344:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
E346:	09-FB       	.data 0xfb09          ; Binary data
E348:	08-12       	cpse r0, r24          ; Compare Skip if Equal
E34A:	12-14       	cp r1, r2             ; Compare
E34C:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
E34E:	0C-F2       	brbs 4, .-126         ; Branch if Bit in SREG is Set
E350:	D2-13       	cpse r29, r18         ; Compare Skip if Equal
E352:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E354:	02-2B       	or r16, r18           ; Logical OR
E356:	A1-6A       	ori r26, 0xa1         ; Logical OR with Immediate
E358:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E35A:	8A-18       	sub r8, r10           ; Subtract Without Carry
E35C:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
E35E:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
E360:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
E362:	E2-61       	ori r30, 0x12         ; Logical OR with Immediate
E364:	73-45       	sbci r23, 0x53        ; Subtract Immediate with Carry SBI
E366:	DF-D1       	rcall .+958           ; Relative Call to Subroutine
E368:	AB-E0       	ldi r26, 0x0b         ; Load Immediate
E36A:	23-6B       	ori r18, 0xb3         ; Logical OR with Immediate
E36C:	1B-B9       	out 0x0b, r17         ; Store Register to I/O Location
E36E:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E370:	83-FF       	sbrs r24, 3           ; Skip if Bit in Register is Set
E372:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
E374:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
E376:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
E378:	82-7E       	andi r24, 0xe2        ; Logical AND with Immediate
E37A:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
E37C:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
E37E:	FF-75       	andi r31, 0x5f        ; Logical AND with Immediate
E380:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E382:	D0-0D       	add r29, r0           ; Add without Carry
E384:	21-6B       	ori r18, 0xb1         ; Logical OR with Immediate
E386:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
E388:	CF-12       	cpse r12, r31         ; Compare Skip if Equal
E38A:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E38C:	18-C0       	rjmp .+48             ; Relative Jump
E38E:	31-F9       	bld r19, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
E390:	10-80       	ld r1, Z              ; Load Indirect from Data Space to Register
E392:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
E394:	05-09       	sbc r16, r5           ; Subtract with Carry
E396:	01-30       	cpi r16, 0x01         ; Compare with Immediate
E398:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
E39A:	31-F9       	bld r19, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
E39C:	10-10       	cpse r1, r0           ; Compare Skip if Equal
E39E:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
E3A0:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
E3A2:	09-FB       	.data 0xfb09          ; Binary data
E3A4:	08-12       	cpse r0, r24          ; Compare Skip if Equal
E3A6:	12-14       	cp r1, r2             ; Compare
E3A8:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
E3AA:	0C-F2       	brbs 4, .-126         ; Branch if Bit in SREG is Set
E3AC:	D2-13       	cpse r29, r18         ; Compare Skip if Equal
E3AE:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E3B0:	02-2B       	or r16, r18           ; Logical OR
E3B2:	A1-6A       	ori r26, 0xa1         ; Logical OR with Immediate
E3B4:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E3B6:	0A-44       	sbci r16, 0x4a        ; Subtract Immediate with Carry SBI
E3B8:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
E3BA:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
E3BC:	E2-61       	ori r30, 0x12         ; Logical OR with Immediate
E3BE:	73-45       	sbci r23, 0x53        ; Subtract Immediate with Carry SBI
E3C0:	DE-D1       	rcall .+956           ; Relative Call to Subroutine
E3C2:	7E-E0       	ldi r23, 0x0e         ; Load Immediate
E3C4:	82-1D       	adc r24, r2           ; Add with Carry
E3C6:	80-23       	and r24, r16          ; Logical AND
E3C8:	E1-69       	ori r30, 0x91         ; Logical OR with Immediate
E3CA:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
E3CC:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
E3CE:	21-8B       	std Y+17, r18         ; Store Indirect From Register to Data Space
E3D0:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
E3D2:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
E3D4:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
E3D6:	02-1C       	adc r0, r2            ; Add with Carry
E3D8:	A0-6A       	ori r26, 0xa0         ; Logical OR with Immediate
E3DA:	E1-69       	ori r30, 0x91         ; Logical OR with Immediate
E3DC:	01-44       	sbci r16, 0x41        ; Subtract Immediate with Carry SBI
E3DE:	E1-61       	ori r30, 0x11         ; Logical OR with Immediate
E3E0:	02-32       	cpi r16, 0x22         ; Compare with Immediate
E3E2:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
E3E4:	F0-D1       	rcall .+992           ; Relative Call to Subroutine
E3E6:	6C-E0       	ldi r22, 0x0c         ; Load Immediate
E3E8:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
E3EA:	82-70       	andi r24, 0x02        ; Logical AND with Immediate
E3EC:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
E3EE:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E3F0:	42-F3       	brbs 2, .-48          ; Branch if Bit in SREG is Set
E3F2:	CF-32       	cpi r28, 0x2f         ; Compare with Immediate
E3F4:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E3F6:	18-10       	cpse r1, r8           ; Compare Skip if Equal
E3F8:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
E3FA:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
E3FC:	D2-13       	cpse r29, r18         ; Compare Skip if Equal
E3FE:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E400:	02-2B       	or r16, r18           ; Logical OR
E402:	A1-6A       	ori r26, 0xa1         ; Logical OR with Immediate
E404:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E406:	0A-44       	sbci r16, 0x4a        ; Subtract Immediate with Carry SBI
E408:	E2-61       	ori r30, 0x12         ; Logical OR with Immediate
E40A:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
E40C:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
E40E:	58-E0       	ldi r21, 0x08         ; Load Immediate
E410:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
E412:	82-70       	andi r24, 0x02        ; Logical AND with Immediate
E414:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
E416:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E418:	42-F3       	brbs 2, .-48          ; Branch if Bit in SREG is Set
E41A:	CF-32       	cpi r28, 0x2f         ; Compare with Immediate
E41C:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E41E:	18-10       	cpse r1, r8           ; Compare Skip if Equal
E420:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
E422:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
E424:	D2-13       	cpse r29, r18         ; Compare Skip if Equal
E426:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E428:	02-2B       	or r16, r18           ; Logical OR
E42A:	A1-6A       	ori r26, 0xa1         ; Logical OR with Immediate
E42C:	E2-69       	ori r30, 0x92         ; Logical OR with Immediate
E42E:	52-1A       	sub r5, r18           ; Subtract Without Carry
E430:	E2-61       	ori r30, 0x12         ; Logical OR with Immediate
E432:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
E434:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
E436:	44-E0       	ldi r20, 0x04         ; Load Immediate
E438:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
E43A:	82-70       	andi r24, 0x02        ; Logical AND with Immediate
E43C:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
E43E:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
E440:	00-2B       	or r16, r16           ; Logical OR
E442:	25-8B       	std Y+21, r18         ; Store Indirect From Register to Data Space
E444:	BC-BF       	out 0x3c, r27         ; Store Register to I/O Location
E446:	6D-42       	sbci r22, 0x2d        ; Subtract Immediate with Carry SBI
E448:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
E44A:	99-00       	.data 0x0099          ; Binary data
E44C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
E44E:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
E450:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
E452:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
E454:	49-0C       	add r4, r9            ; Add without Carry
E456:	2B-B2       	in r2, 0x1b           ; Load an I/O Location to Register
E458:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
E45A:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
E45C:	C9-13       	cpse r28, r25         ; Compare Skip if Equal
E45E:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
E460:	02-1B       	sub r16, r18          ; Subtract Without Carry
E462:	A1-6A       	ori r26, 0xa1         ; Logical OR with Immediate
E464:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
E466:	03-EB       	ldi r16, 0xb3         ; Load Immediate
E468:	41-03       	mulsu r20, r17        ; Multiply Signed with Unsigned
E46A:	E3-61       	ori r30, 0x13         ; Logical OR with Immediate
E46C:	82-42       	sbci r24, 0x22        ; Subtract Immediate with Carry SBI
E46E:	E6-D1       	rcall .+972           ; Relative Call to Subroutine
E470:	27-E0       	ldi r18, 0x07         ; Load Immediate
E472:	82-1D       	adc r24, r2           ; Add with Carry
E474:	80-23       	and r24, r16          ; Logical AND
E476:	E0-69       	ori r30, 0x90         ; Logical OR with Immediate
E478:	21-6A       	ori r18, 0xa1         ; Logical OR with Immediate
E47A:	88-42       	sbci r24, 0x28        ; Subtract Immediate with Carry SBI
E47C:	21-8B       	std Y+17, r18         ; Store Indirect From Register to Data Space
E47E:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
E480:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
E482:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
E484:	02-1C       	adc r0, r2            ; Add with Carry
E486:	A0-6A       	ori r26, 0xa0         ; Logical OR with Immediate
E488:	E1-69       	ori r30, 0x91         ; Logical OR with Immediate
E48A:	01-44       	sbci r16, 0x41        ; Subtract Immediate with Carry SBI
E48C:	E1-61       	ori r30, 0x11         ; Logical OR with Immediate
E48E:	02-32       	cpi r16, 0x22         ; Compare with Immediate
E490:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
E492:	F0-D1       	rcall .+992           ; Relative Call to Subroutine
E494:	15-E0       	ldi r17, 0x05         ; Load Immediate
E496:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
E498:	82-78       	andi r24, 0x82        ; Logical AND with Immediate
E49A:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
E49C:	A2-6A       	ori r26, 0xa2         ; Logical OR with Immediate
E49E:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
E4A0:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
E4A2:	05-D2       	rcall .+1034          ; Relative Call to Subroutine
E4A4:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E4A6:	18-10       	cpse r1, r8           ; Compare Skip if Equal
E4A8:	48-42       	sbci r20, 0x28        ; Subtract Immediate with Carry SBI
E4AA:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
E4AC:	13-FB       	bst r17, 3            ; Bit Store from Bit in Register to T Flag in SREG
E4AE:	A0-84       	std Y+8, r10          ; Store Indirect From Register to Data Space
E4B0:	A3-8C       	std Y+27, r10         ; Store Indirect From Register to Data Space
E4B2:	25-F8       	bld r2, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
E4B4:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
E4B6:	A2-6A       	ori r26, 0xa2         ; Logical OR with Immediate
E4B8:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
E4BA:	13-44       	sbci r17, 0x43        ; Subtract Immediate with Carry SBI
E4BC:	E3-61       	ori r30, 0x13         ; Logical OR with Immediate
E4BE:	45-45       	sbci r20, 0x55        ; Subtract Immediate with Carry SBI
E4C0:	EC-D1       	rcall .+984           ; Relative Call to Subroutine
E4C2:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E4C4:	2E-30       	cpi r18, 0x0e         ; Compare with Immediate
E4C6:	63-B1       	in r22, 0x03          ; Load an I/O Location to Register
E4C8:	07-F5       	brbc 7, .+64          ; Branch if Bit in SREG is Cleared
E4CA:	82-71       	andi r24, 0x12        ; Logical AND with Immediate
E4CC:	B6-F9       	bld r27, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
E4CE:	00-30       	cpi r16, 0x00         ; Compare with Immediate
E4D0:	B4-F9       	bld r27, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E4D2:	2E-20       	and r2, r14           ; Logical AND
E4D4:	13-44       	sbci r17, 0x43        ; Subtract Immediate with Carry SBI
E4D6:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
E4D8:	0F-03       	fmul r16, r23         ; Fractional Multiply Unsigned
E4DA:	26-F8       	bld r2, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
E4DC:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
E4DE:	B1-42       	sbci r27, 0x21        ; Subtract Immediate with Carry SBI
E4E0:	F4-D8       	rcall .+4584          ; Relative Call to Subroutine
E4E2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E4E4:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
E4E6:	00-22       	and r0, r16           ; Logical AND
E4E8:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E4EA:	E6-FE       	sbrs r14, 6           ; Skip if Bit in Register is Set
E4EC:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
E4EE:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E4F0:	C3-FE       	sbrs r12, 3           ; Skip if Bit in Register is Set
E4F2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
E4F4:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
E4F6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E4F8:	14-7E       	andi r17, 0xe4        ; Logical AND with Immediate
E4FA:	01-00       	.data 0x0001          ; Binary data
E4FC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
E4FE:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
E500:	02-AB       	std Y+50, r16         ; Store Indirect From Register to Data Space
E502:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
E504:	04-1D       	adc r16, r4           ; Add with Carry
E506:	02-68       	ori r16, 0x82         ; Logical OR with Immediate
E508:	14-68       	ori r17, 0x84         ; Logical OR with Immediate
E50A:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
E50C:	01-22       	and r0, r17           ; Logical AND
E50E:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
E510:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
E512:	9D-F8       	.data 0xf89d          ; Binary data
E514:	04-00       	.data 0x0004          ; Binary data
E516:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
E518:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E51A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E51C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
E51E:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
E520:	8D-F8       	.data 0xf88d          ; Binary data
E522:	04-10       	cpse r0, r4           ; Compare Skip if Equal
E524:	8D-F8       	.data 0xf88d          ; Binary data
E526:	05-20       	and r0, r5            ; Logical AND
E528:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
E52A:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
E52C:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
E52E:	02-22       	and r0, r18           ; Logical AND
E530:	00-23       	and r16, r16          ; Logical AND
E532:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
E534:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
E536:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E538:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
E53A:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
E53C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
E53E:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
E540:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
E542:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
E544:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E546:	DA-FF       	.data 0xffda          ; Binary data
E548:	01-23       	and r16, r17          ; Logical AND
E54A:	06-9D       	mul r16, r6           ; Multiply Unsigned
E54C:	AB-40       	sbci r26, 0x0b        ; Subtract Immediate with Carry SBI
E54E:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
E550:	A3-40       	sbci r26, 0x03        ; Subtract Immediate with Carry SBI
E552:	08-FA       	.data 0xfa08          ; Binary data
E554:	04-F4       	brbc 4, .+0           ; Branch if Bit in SREG is Cleared
E556:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
E558:	20-EA       	ldi r18, 0xa0         ; Load Immediate
E55A:	03-00       	.data 0x0003          ; Binary data
E55C:	C2-B2       	in r12, 0x12          ; Load an I/O Location to Register
E55E:	23-40       	sbci r18, 0x03        ; Subtract Immediate with Carry SBI
E560:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
E562:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
E564:	1A-43       	sbci r17, 0x3a        ; Subtract Immediate with Carry SBI
E566:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E568:	D9-FF       	.data 0xffd9          ; Binary data
E56A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
E56C:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
E56E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E570:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E572:	00-21       	and r16, r0           ; Logical AND
E574:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E576:	C2-FF       	sbrs r28, 2           ; Skip if Bit in Register is Set
E578:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E57A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E57C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E57E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E580:	F7-FF       	sbrs r31, 7           ; Skip if Bit in Register is Set
E582:	D1-28       	or r13, r1            ; Logical OR
E584:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
E586:	00-20       	and r0, r0            ; Logical AND
E588:	01-20       	and r0, r1            ; Logical AND
E58A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E58C:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
E58E:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E590:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
E592:	04-23       	and r16, r20          ; Logical AND
E594:	00-93-42-21 	sts 0x2142, r16       ; Store Direct to Data Space
E598:	00-23       	and r16, r16          ; Logical AND
E59A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E59C:	CD-FF       	.data 0xffcd          ; Binary data
E59E:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E5A0:	5D-F8       	.data 0xf85d          ; Binary data
E5A2:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
E5A4:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
E5A6:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E5A8:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
E5AA:	04-23       	and r16, r20          ; Logical AND
E5AC:	00-93-40-21 	sts 0x2140, r16       ; Store Direct to Data Space
E5B0:	00-23       	and r16, r16          ; Logical AND
E5B2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E5B4:	C1-FF       	sbrs r28, 1           ; Skip if Bit in Register is Set
E5B6:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E5B8:	5D-F8       	.data 0xf85d          ; Binary data
E5BA:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
E5BC:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
E5BE:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E5C0:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
E5C2:	03-23       	and r16, r19          ; Logical AND
E5C4:	00-93-43-21 	sts 0x2143, r16       ; Store Direct to Data Space
E5C8:	00-23       	and r16, r16          ; Logical AND
E5CA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E5CC:	B5-FF       	sbrs r27, 5           ; Skip if Bit in Register is Set
E5CE:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E5D0:	5D-F8       	.data 0xf85d          ; Binary data
E5D2:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
E5D4:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
E5D6:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E5D8:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
E5DA:	04-23       	and r16, r20          ; Logical AND
E5DC:	00-93-41-21 	sts 0x2141, r16       ; Store Direct to Data Space
E5E0:	00-23       	and r16, r16          ; Logical AND
E5E2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E5E4:	A9-FF       	.data 0xffa9          ; Binary data
E5E6:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E5E8:	5D-F8       	.data 0xf85d          ; Binary data
E5EA:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
E5EC:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
E5EE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
E5F0:	7E-21       	and r23, r14          ; Logical AND
E5F2:	B6-22       	and r11, r22          ; Logical AND
E5F4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E5F6:	92-FF       	sbrs r25, 2           ; Skip if Bit in Register is Set
E5F8:	01-20       	and r0, r1            ; Logical AND
E5FA:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E5FC:	43-FB       	bst r20, 3            ; Bit Store from Bit in Register to T Flag in SREG
E5FE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E600:	7F-21       	and r23, r15          ; Logical AND
E602:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E604:	7B-FF       	.data 0xff7b          ; Binary data
E606:	01-20       	and r0, r1            ; Logical AND
E608:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E60A:	3C-FB       	.data 0xfb3c          ; Binary data
E60C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E60E:	7E-21       	and r23, r14          ; Logical AND
E610:	11-22       	and r1, r17           ; Logical AND
E612:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E614:	83-FF       	sbrs r24, 3           ; Skip if Bit in Register is Set
E616:	01-20       	and r0, r1            ; Logical AND
E618:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E61A:	34-FB       	bst r19, 4            ; Bit Store from Bit in Register to T Flag in SREG
E61C:	00-25       	clr r256              ; Clear Register
E61E:	03-26       	clr r515              ; Clear Register
E620:	01-27       	clr r769              ; Clear Register
E622:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E624:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
E626:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E628:	69-FF       	.data 0xff69          ; Binary data
E62A:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
E62C:	01-10       	cpse r0, r1           ; Compare Skip if Equal
E62E:	01-28       	or r0, r1             ; Logical OR
E630:	3A-D0       	rcall .+116           ; Relative Call to Subroutine
E632:	C8-2D       	mov r28, r8           ; Copy Register
E634:	3B-D1       	rcall .+630           ; Relative Call to Subroutine
E636:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
E638:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
E63A:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
E63C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E63E:	1F-49       	sbci r17, 0x9f        ; Subtract Immediate with Carry SBI
E640:	0B-22       	and r0, r27           ; Logical AND
E642:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
E644:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E646:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
E648:	8D-F8       	.data 0xf88d          ; Binary data
E64A:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
E64C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E64E:	7E-21       	and r23, r14          ; Logical AND
E650:	15-22       	and r1, r21           ; Logical AND
E652:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E654:	63-FF       	sbrs r22, 3           ; Skip if Bit in Register is Set
E656:	01-20       	and r0, r1            ; Logical AND
E658:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E65A:	14-FB       	bst r17, 4            ; Bit Store from Bit in Register to T Flag in SREG
E65C:	03-25       	clr r259              ; Clear Register
E65E:	01-26       	clr r513              ; Clear Register
E660:	02-E0       	ldi r16, 0x02         ; Load Immediate
E662:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
E664:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E666:	0E-FB       	.data 0xfb0e          ; Binary data
E668:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E66A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
E66C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E66E:	46-FF       	sbrs r20, 6           ; Skip if Bit in Register is Set
E670:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
E672:	81-00       	.data 0x0081          ; Binary data
E674:	01-28       	or r0, r1             ; Logical OR
E676:	F4-D1       	rcall .+1000          ; Relative Call to Subroutine
E678:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E67A:	03-21       	and r16, r3           ; Logical AND
E67C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E67E:	9E-FF       	.data 0xff9e          ; Binary data
E680:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E682:	03-21       	and r16, r3           ; Logical AND
E684:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E686:	A6-FF       	sbrs r26, 6           ; Skip if Bit in Register is Set
E688:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E68A:	55-21       	and r21, r5           ; Logical AND
E68C:	FF-22       	and r15, r31          ; Logical AND
E68E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E690:	45-FF       	sbrs r20, 5           ; Skip if Bit in Register is Set
E692:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E694:	56-21       	and r21, r6           ; Logical AND
E696:	F0-22       	and r15, r16          ; Logical AND
E698:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E69A:	40-FF       	sbrs r20, 0           ; Skip if Bit in Register is Set
E69C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E69E:	57-21       	and r21, r7           ; Logical AND
E6A0:	00-22       	and r0, r16           ; Logical AND
E6A2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E6A4:	3B-FF       	.data 0xff3b          ; Binary data
E6A6:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
E6A8:	C8-2D       	mov r28, r8           ; Copy Register
E6AA:	CF-D1       	rcall .+926           ; Relative Call to Subroutine
E6AC:	C3-E7       	ldi r28, 0x73         ; Load Immediate
E6AE:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
E6B0:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E6B2:	E8-FA       	.data 0xfae8          ; Binary data
E6B4:	01-35       	cpi r16, 0x51         ; Compare with Immediate
E6B6:	B4-E7       	ldi r27, 0x74         ; Load Immediate
E6B8:	C0-01       	movw r24, r0          ; Copy Register Word
E6BA:	00-20       	and r0, r0            ; Logical AND
E6BC:	38-80       	ld r3, Y              ; Load Indirect from Data Space to Register
E6BE:	01-00       	.data 0x0001          ; Binary data
E6C0:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
E6C2:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E6C4:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
E6C6:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
E6C8:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
E6CA:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
E6CC:	12-23       	and r17, r18          ; Logical AND
E6CE:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
E6D0:	08-3D       	cpi r16, 0xd8         ; Compare with Immediate
E6D2:	04-68       	ori r16, 0x84         ; Logical OR with Immediate
E6D4:	24-68       	ori r18, 0x84         ; Logical OR with Immediate
E6D6:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
E6D8:	01-22       	and r0, r17           ; Logical AND
E6DA:	06-23       	and r16, r22          ; Logical AND
E6DC:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
E6DE:	9D-F8       	.data 0xf89d          ; Binary data
E6E0:	01-20       	and r0, r1            ; Logical AND
E6E2:	9D-F8       	.data 0xf89d          ; Binary data
E6E4:	00-30       	cpi r16, 0x00         ; Compare with Immediate
E6E6:	43-EA       	ldi r20, 0xa3         ; Load Immediate
E6E8:	02-23       	and r16, r18          ; Logical AND
E6EA:	3B-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
E6EC:	9D-F8       	.data 0xf89d          ; Binary data
E6EE:	03-20       	and r0, r3            ; Logical AND
E6F0:	9D-F8       	.data 0xf89d          ; Binary data
E6F2:	02-30       	cpi r16, 0x02         ; Compare with Immediate
E6F4:	43-EA       	ldi r20, 0xa3         ; Load Immediate
E6F6:	02-23       	and r16, r18          ; Logical AND
E6F8:	33-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
E6FA:	9D-F8       	.data 0xf89d          ; Binary data
E6FC:	05-20       	and r0, r5            ; Logical AND
E6FE:	9D-F8       	.data 0xf89d          ; Binary data
E700:	04-30       	cpi r16, 0x04         ; Compare with Immediate
E702:	43-EA       	ldi r20, 0xa3         ; Load Immediate
E704:	02-23       	and r16, r18          ; Logical AND
E706:	2B-80       	ldd r2, Y+3           ; Load Indirect from Data Space to Register
E708:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E70A:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
E70C:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
E70E:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E710:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
E712:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
E714:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
E716:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
E718:	0C-23       	and r16, r28          ; Logical AND
E71A:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
E71C:	08-3D       	cpi r16, 0xd8         ; Compare with Immediate
E71E:	04-68       	ori r16, 0x84         ; Logical OR with Immediate
E720:	24-68       	ori r18, 0x84         ; Logical OR with Immediate
E722:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
E724:	01-22       	and r0, r17           ; Logical AND
E726:	06-23       	and r16, r22          ; Logical AND
E728:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
E72A:	9D-F8       	.data 0xf89d          ; Binary data
E72C:	01-20       	and r0, r1            ; Logical AND
E72E:	9D-F8       	.data 0xf89d          ; Binary data
E730:	00-30       	cpi r16, 0x00         ; Compare with Immediate
E732:	43-EA       	ldi r20, 0xa3         ; Load Immediate
E734:	02-23       	and r16, r18          ; Logical AND
E736:	3B-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
E738:	9D-F8       	.data 0xf89d          ; Binary data
E73A:	03-20       	and r0, r3            ; Logical AND
E73C:	9D-F8       	.data 0xf89d          ; Binary data
E73E:	02-30       	cpi r16, 0x02         ; Compare with Immediate
E740:	43-EA       	ldi r20, 0xa3         ; Load Immediate
E742:	02-23       	and r16, r18          ; Logical AND
E744:	33-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
E746:	9D-F8       	.data 0xf89d          ; Binary data
E748:	05-20       	and r0, r5            ; Logical AND
E74A:	9D-F8       	.data 0xf89d          ; Binary data
E74C:	04-30       	cpi r16, 0x04         ; Compare with Immediate
E74E:	43-EA       	ldi r20, 0xa3         ; Load Immediate
E750:	02-23       	and r16, r18          ; Logical AND
E752:	2B-80       	ldd r2, Y+3           ; Load Indirect from Data Space to Register
E754:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E756:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
E758:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E75A:	01-75       	andi r16, 0x51        ; Logical AND with Immediate
E75C:	01-29       	or r16, r1            ; Logical OR
E75E:	02-D0       	rcall .+4             ; Relative Call to Subroutine
E760:	02-29       	or r16, r2            ; Logical OR
E762:	02-D0       	rcall .+4             ; Relative Call to Subroutine
E764:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
E766:	C2-60       	ori r28, 0x02         ; Logical OR with Immediate
E768:	00-E0       	ldi r16, 0x00         ; Load Immediate
E76A:	02-61       	ori r16, 0x12         ; Logical OR with Immediate
E76C:	00-2B       	or r16, r16           ; Logical OR
E76E:	04-DB       	rcall .+5640          ; Relative Call to Subroutine
E770:	22-2B       	or r18, r18           ; Logical OR
E772:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
E774:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
E776:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
E778:	83-60       	ori r24, 0x03         ; Logical OR with Immediate
E77A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
E77C:	E9-F8       	.data 0xf8e9          ; Binary data
E77E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E780:	00-20       	and r0, r0            ; Logical AND
E782:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E784:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
E786:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
E788:	0B-4C       	sbci r16, 0xcb        ; Subtract Immediate with Carry SBI
E78A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E78C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E78E:	EA-FC       	.data 0xfcea          ; Binary data
E790:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E792:	E9-68       	ori r30, 0x89         ; Logical OR with Immediate
E794:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E796:	E8-FE       	.data 0xfee8          ; Binary data
E798:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E79A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E79C:	EB-FE       	.data 0xfeeb          ; Binary data
E79E:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
E7A0:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
E7A2:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
E7A4:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
E7A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E7A8:	05-49       	sbci r16, 0x95        ; Subtract Immediate with Carry SBI
E7AA:	27-22       	and r2, r23           ; Logical AND
E7AC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
E7AE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E7B0:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E7B2:	D8-FF       	.data 0xffd8          ; Binary data
E7B4:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
E7B6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E7B8:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
E7BA:	FF-1F       	adc r31, r31          ; Add with Carry
E7BC:	C0-01       	movw r24, r0          ; Copy Register Word
E7BE:	00-20       	and r0, r0            ; Logical AND
E7C0:	9C-80       	ldd r9, Y+4           ; Load Indirect from Data Space to Register
E7C2:	01-00       	.data 0x0001          ; Binary data
E7C4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
E7C6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
E7C8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E7CA:	1C-FB       	.data 0xfb1c          ; Binary data
E7CC:	20-69       	ori r18, 0x90         ; Logical OR with Immediate
E7CE:	00-28       	or r0, r0             ; Logical OR
E7D0:	04-DB       	rcall .+5640          ; Relative Call to Subroutine
E7D2:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
E7D4:	01-21       	and r16, r1           ; Logical AND
E7D6:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E7D8:	71-F9       	bld r23, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
E7DA:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E7DC:	05-4C       	sbci r16, 0xc5        ; Subtract Immediate with Carry SBI
E7DE:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
E7E0:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
E7E2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E7E4:	04-49       	sbci r16, 0x94        ; Subtract Immediate with Carry SBI
E7E6:	42-22       	and r4, r18           ; Logical AND
E7E8:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
E7EA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E7EC:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
E7EE:	BA-FF       	.data 0xffba          ; Binary data
E7F0:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E7F2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E7F4:	C0-01       	movw r24, r0          ; Copy Register Word
E7F6:	00-20       	and r0, r0            ; Logical AND
E7F8:	C4-80       	ldd r12, Y+4          ; Load Indirect from Data Space to Register
E7FA:	01-00       	.data 0x0001          ; Binary data
E7FC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E7FE:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
E800:	14-30       	cpi r17, 0x04         ; Compare with Immediate
E802:	01-2B       	or r16, r17           ; Logical OR
E804:	02-D0       	rcall .+4             ; Relative Call to Subroutine
E806:	02-2B       	or r16, r18           ; Logical OR
E808:	03-D0       	rcall .+6             ; Relative Call to Subroutine
E80A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E80C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E80E:	BA-FF       	.data 0xffba          ; Binary data
E810:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E812:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E814:	D7-FF       	sbrs r29, 7           ; Skip if Bit in Register is Set
E816:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E818:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
E81A:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
E81C:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
E81E:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
E820:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
E822:	00-69       	ori r16, 0x90         ; Logical OR with Immediate
E824:	00-28       	or r0, r0             ; Logical OR
E826:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
E828:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
E82A:	00-21       	and r16, r0           ; Logical AND
E82C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E82E:	14-F9       	bld r17, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
E830:	74-B1       	in r23, 0x04          ; Load an I/O Location to Register
E832:	2B-19       	sub r18, r11          ; Subtract Without Carry
E834:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
E836:	13-4C       	sbci r17, 0xc3        ; Subtract Immediate with Carry SBI
E838:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
E83A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
E83C:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
E83E:	01-2B       	or r16, r17           ; Logical OR
E840:	E0-62       	ori r30, 0x20         ; Logical OR with Immediate
E842:	62-63       	ori r22, 0x32         ; Logical OR with Immediate
E844:	E2-6A       	ori r30, 0xa2         ; Logical OR with Immediate
E846:	00-2A       	or r0, r16            ; Logical OR
E848:	FC-DA       	rcall .+5624          ; Relative Call to Subroutine
E84A:	A2-6B       	ori r26, 0xb2         ; Logical OR with Immediate
E84C:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
E84E:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
E850:	7F-B1       	in r23, 0x0f          ; Load an I/O Location to Register
E852:	EC-19       	sub r30, r12          ; Subtract Without Carry
E854:	0B-4A       	sbci r16, 0xab        ; Subtract Immediate with Carry SBI
E856:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
E858:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
E85A:	00-21       	and r16, r0           ; Logical AND
E85C:	01-35       	cpi r16, 0x51         ; Compare with Immediate
E85E:	D0-62       	ori r29, 0x20         ; Logical OR with Immediate
E860:	51-63       	ori r21, 0x31         ; Logical OR with Immediate
E862:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
E864:	00-2B       	or r16, r16           ; Logical OR
E866:	FC-DA       	rcall .+5624          ; Relative Call to Subroutine
E868:	93-6B       	ori r25, 0xb3         ; Logical OR with Immediate
E86A:	05-F8       	bld r0, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
E86C:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
E86E:	A5-42       	sbci r26, 0x25        ; Subtract Immediate with Carry SBI
E870:	F4-D1       	rcall .+1000          ; Relative Call to Subroutine
E872:	30-69       	ori r19, 0x90         ; Logical OR with Immediate
E874:	00-28       	or r0, r0             ; Logical OR
E876:	03-DB       	rcall .+5638          ; Relative Call to Subroutine
E878:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
E87A:	01-21       	and r16, r1           ; Logical AND
E87C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
E87E:	EC-F8       	.data 0xf8ec          ; Binary data
E880:	00-20       	and r0, r0            ; Logical AND
E882:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
E884:	00-C0       	rjmp .+0              ; Relative Jump
E886:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
E888:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
E88A:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
E88C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E88E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
E890:	FF-32       	cpi r31, 0x2f         ; Compare with Immediate
E892:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
E894:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
E896:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
E898:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
E89A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E89C:	B0-FC       	sbrc r11, 0           ; Skip if Bit in Register is Cleared
E89E:	FF-1F       	adc r31, r31          ; Add with Carry
E8A0:	50-80       	ld r5, Z              ; Load Indirect from Data Space to Register
E8A2:	01-00       	.data 0x0001          ; Binary data
E8A4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
E8A6:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
E8A8:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
E8AA:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
E8AC:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
E8AE:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
E8B0:	16-48       	sbci r17, 0x86        ; Subtract Immediate with Carry SBI
E8B2:	D9-F8       	.data 0xf8d9          ; Binary data
E8B4:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
E8B6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E8B8:	57-FE       	sbrs r5, 7            ; Skip if Bit in Register is Set
E8BA:	4C-B1       	in r20, 0x0c          ; Load an I/O Location to Register
E8BC:	3D-46       	sbci r19, 0x6d        ; Subtract Immediate with Carry SBI
E8BE:	13-4E       	sbci r17, 0xe3        ; Subtract Immediate with Carry SBI
E8C0:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
E8C2:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
E8C4:	15-F8       	bld r1, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
E8C6:	01-1B       	sub r16, r17          ; Subtract Without Carry
E8C8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E8CA:	78-FB       	.data 0xfb78          ; Binary data
E8CC:	00-2C       	mov r0, r0            ; Copy Register
E8CE:	F7-D1       	rcall .+1006          ; Relative Call to Subroutine
E8D0:	0E-48       	sbci r16, 0x8e        ; Subtract Immediate with Carry SBI
E8D2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E8D4:	4F-FE       	.data 0xfe4f          ; Binary data
E8D6:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
E8D8:	00-0F       	add r16, r16          ; Add without Carry
E8DA:	13-D0       	rcall .+38            ; Relative Call to Subroutine
E8DC:	0B-48       	sbci r16, 0x8b        ; Subtract Immediate with Carry SBI
E8DE:	D9-F8       	.data 0xf8d9          ; Binary data
E8E0:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
E8E2:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
E8E4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E8E6:	38-FE       	.data 0xfe38          ; Binary data
E8E8:	B8-44       	sbci r27, 0x48        ; Subtract Immediate with Carry SBI
E8EA:	08-4C       	sbci r16, 0xc8        ; Subtract Immediate with Carry SBI
E8EC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E8EE:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E8F0:	87-FB       	bst r24, 7            ; Bit Store from Bit in Register to T Flag in SREG
E8F2:	38-B1       	in r19, 0x08          ; Load an I/O Location to Register
E8F4:	47-45       	sbci r20, 0x57        ; Subtract Immediate with Carry SBI
E8F6:	05-D0       	rcall .+10            ; Relative Call to Subroutine
E8F8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E8FA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
E8FC:	8B-FB       	.data 0xfb8b          ; Binary data
E8FE:	07-F8       	bld r0, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
E900:	01-0B       	sbc r16, r17          ; Subtract with Carry
E902:	F3-E7       	ldi r31, 0x73         ; Load Immediate
E904:	00-20       	and r0, r0            ; Logical AND
E906:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
E908:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
E90A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E90C:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
E90E:	FF-1F       	adc r31, r31          ; Add with Carry
E910:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
E912:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
E914:	14-40       	sbci r17, 0x04        ; Subtract Immediate with Carry SBI
E916:	01-2C       	mov r0, r1            ; Copy Register
E918:	02-D0       	rcall .+4             ; Relative Call to Subroutine
E91A:	02-2C       	mov r0, r2            ; Copy Register
E91C:	03-D0       	rcall .+6             ; Relative Call to Subroutine
E91E:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
E920:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E922:	C0-FF       	sbrs r28, 0           ; Skip if Bit in Register is Set
E924:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E926:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
E928:	0C-78       	andi r16, 0x8c        ; Logical AND with Immediate
E92A:	64-F0       	brbs 4, .+24          ; Branch if Bit in SREG is Set
E92C:	7F-04       	cpc r7, r15           ; Compare with Carry
E92E:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
E930:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E932:	72-FF       	sbrs r23, 2           ; Skip if Bit in Register is Set
E934:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E936:	00-20       	and r0, r0            ; Logical AND
E938:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E93A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E93C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
E93E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E940:	00-20       	and r0, r0            ; Logical AND
E942:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
E944:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
E946:	04-68       	ori r16, 0x84         ; Logical OR with Immediate
E948:	A4-68       	ori r26, 0x84         ; Logical OR with Immediate
E94A:	A0-47       	sbci r26, 0x70        ; Subtract Immediate with Carry SBI
E94C:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
E94E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E950:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
E952:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
E954:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
E956:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
E958:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
E95A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
E95C:	02-A9       	std Y+50, r16         ; Store Indirect From Register to Data Space
E95E:	7F-23       	and r23, r31          ; Logical AND
E960:	01-F8       	bld r0, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
E962:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
E964:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
E966:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
E968:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E96A:	01-22       	and r0, r17           ; Logical AND
E96C:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
E96E:	A8-47       	sbci r26, 0x78        ; Subtract Immediate with Carry SBI
E970:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E972:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E974:	3B-FE       	.data 0xfe3b          ; Binary data
E976:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
E978:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E97A:	FA-FD       	.data 0xfdfa          ; Binary data
E97C:	D1-28       	or r13, r1            ; Logical OR
E97E:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
E980:	00-20       	and r0, r0            ; Logical AND
E982:	01-20       	and r0, r1            ; Logical AND
E984:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
E986:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
E988:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
E98A:	19-29       	or r17, r9            ; Logical OR
E98C:	11-DD       	rcall .+6690          ; Relative Call to Subroutine
E98E:	32-29       	or r19, r2            ; Logical OR
E990:	11-DD       	rcall .+6690          ; Relative Call to Subroutine
E992:	64-29       	or r22, r4            ; Logical OR
E994:	11-DD       	rcall .+6690          ; Relative Call to Subroutine
E996:	C8-29       	or r28, r8            ; Logical OR
E998:	11-DD       	rcall .+6690          ; Relative Call to Subroutine
E99A:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
E99C:	C8-7F       	andi r28, 0xf8        ; Logical AND with Immediate
E99E:	10-DD       	rcall .+6688          ; Relative Call to Subroutine
E9A0:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
E9A2:	48-7F       	andi r20, 0xf8        ; Logical AND with Immediate
E9A4:	0F-DD       	rcall .+6686          ; Relative Call to Subroutine
E9A6:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
E9A8:	C8-6F       	ori r28, 0xf8         ; Logical OR with Immediate
E9AA:	CC-BF       	out 0x3c, r28         ; Store Register to I/O Location
E9AC:	0D-21       	and r16, r13          ; Logical AND
E9AE:	0C-21       	and r16, r12          ; Logical AND
E9B0:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
E9B2:	06-21       	and r16, r6           ; Logical AND
E9B4:	08-E0       	ldi r16, 0x08         ; Load Immediate
E9B6:	07-21       	and r16, r7           ; Logical AND
E9B8:	06-E0       	ldi r16, 0x06         ; Load Immediate
E9BA:	08-21       	and r16, r8           ; Logical AND
E9BC:	04-E0       	ldi r16, 0x04         ; Load Immediate
E9BE:	09-21       	and r16, r9           ; Logical AND
E9C0:	02-E0       	ldi r16, 0x02         ; Load Immediate
E9C2:	0A-21       	and r16, r10          ; Logical AND
E9C4:	00-E0       	ldi r16, 0x00         ; Load Immediate
E9C6:	0B-21       	and r16, r11          ; Logical AND
E9C8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
E9CA:	E0-FD       	sbrc r30, 0           ; Skip if Bit in Register is Cleared
E9CC:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
E9CE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
E9D0:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
E9D2:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
E9D4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
E9D6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
E9D8:	10-81       	ld r17, Z             ; Load Indirect from Data Space to Register
E9DA:	01-00       	.data 0x0001          ; Binary data
E9DC:	C8-FC       	.data 0xfcc8          ; Binary data
E9DE:	FF-1F       	adc r31, r31          ; Add with Carry
E9E0:	70-B4       	in r7, 0x20           ; Load an I/O Location to Register
E9E2:	61-B3       	in r22, 0x11          ; Load an I/O Location to Register
E9E4:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
E9E6:	03-30       	cpi r16, 0x03         ; Compare with Immediate
E9E8:	4B-1E       	adc r4, r27           ; Add with Carry
E9EA:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
E9EC:	03-EB       	ldi r16, 0xb3         ; Load Immediate
E9EE:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
E9F0:	C6-18       	sub r12, r6           ; Subtract Without Carry
E9F2:	00-25       	clr r256              ; Clear Register
E9F4:	11-1C       	adc r1, r1            ; Add with Carry
E9F6:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
E9F8:	01-21       	and r16, r1           ; Logical AND
E9FA:	23-46       	sbci r18, 0x63        ; Subtract Immediate with Carry SBI
E9FC:	20-78       	andi r18, 0x80        ; Logical AND with Immediate
E9FE:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
EA00:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
EA02:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
EA04:	01-EB       	ldi r16, 0xb1         ; Load Immediate
EA06:	20-20       	and r2, r0            ; Logical AND
EA08:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
EA0A:	00-E0       	ldi r16, 0x00         ; Load Immediate
EA0C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EA0E:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
EA10:	58-78       	andi r21, 0x88        ; Logical AND with Immediate
EA12:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
EA14:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
EA16:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
EA18:	01-EB       	ldi r16, 0xb1         ; Load Immediate
EA1A:	20-20       	and r2, r0            ; Logical AND
EA1C:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
EA1E:	00-E0       	ldi r16, 0x00         ; Load Immediate
EA20:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EA22:	58-70       	andi r21, 0x08        ; Logical AND with Immediate
EA24:	98-78       	andi r25, 0x88        ; Logical AND with Immediate
EA26:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
EA28:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
EA2A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
EA2C:	01-EB       	ldi r16, 0xb1         ; Load Immediate
EA2E:	20-21       	and r18, r0           ; Logical AND
EA30:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
EA32:	00-E0       	ldi r16, 0x00         ; Load Immediate
EA34:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
EA36:	99-70       	andi r25, 0x09        ; Logical AND with Immediate
EA38:	03-34       	cpi r16, 0x43         ; Compare with Immediate
EA3A:	B4-42       	sbci r27, 0x24        ; Subtract Immediate with Carry SBI
EA3C:	DA-D1       	rcall .+948           ; Relative Call to Subroutine
EA3E:	70-BC       	out 0x20, r7          ; Store Register to I/O Location
EA40:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EA42:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EA44:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
EA46:	C9-B1       	in r28, 0x09          ; Load an I/O Location to Register
EA48:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
EA4A:	03-30       	cpi r16, 0x03         ; Compare with Immediate
EA4C:	01-39       	cpi r16, 0x91         ; Compare with Immediate
EA4E:	89-B2       	in r8, 0x19           ; Load an I/O Location to Register
EA50:	01-EB       	ldi r16, 0xb1         ; Load Immediate
EA52:	41-01       	movw r8, r2           ; Copy Register Word
EA54:	08-44       	sbci r16, 0x48        ; Subtract Immediate with Carry SBI
EA56:	01-32       	cpi r16, 0x21         ; Compare with Immediate
EA58:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
EA5A:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
EA5C:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
EA5E:	09-12       	cpse r0, r25          ; Compare Skip if Equal
EA60:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
EA62:	59-78       	andi r21, 0x89        ; Logical AND with Immediate
EA64:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
EA66:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
EA68:	09-12       	cpse r0, r25          ; Compare Skip if Equal
EA6A:	59-70       	andi r21, 0x09        ; Logical AND with Immediate
EA6C:	99-78       	andi r25, 0x89        ; Logical AND with Immediate
EA6E:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
EA70:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
EA72:	09-12       	cpse r0, r25          ; Compare Skip if Equal
EA74:	99-70       	andi r25, 0x09        ; Logical AND with Immediate
EA76:	03-33       	cpi r16, 0x33         ; Compare with Immediate
EA78:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
EA7A:	ED-D1       	rcall .+986           ; Relative Call to Subroutine
EA7C:	5D-F8       	.data 0xf85d          ; Binary data
EA7E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
EA80:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EA82:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EA84:	FF-22       	and r15, r31          ; Logical AND
EA86:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
EA88:	00-22       	and r0, r16           ; Logical AND
EA8A:	42-80       	ldd r4, Y+2           ; Load Indirect from Data Space to Register
EA8C:	C2-60       	ori r28, 0x02         ; Logical OR with Immediate
EA8E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
EA90:	FF-32       	cpi r31, 0x2f         ; Compare with Immediate
EA92:	82-60       	ori r24, 0x02         ; Logical OR with Immediate
EA94:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EA96:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EA98:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
EA9A:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
EA9C:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
EA9E:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
EAA0:	5C-1C       	adc r5, r12           ; Add with Carry
EAA2:	14-60       	ori r17, 0x04         ; Logical OR with Immediate
EAA4:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
EAA6:	14-DB       	rcall .+5672          ; Relative Call to Subroutine
EAA8:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
EAAA:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
EAAC:	00-93-00-9D 	sts 0x9d00, r16       ; Store Direct to Data Space
EAB0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
EAB2:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
EAB4:	01-FB       	bst r16, 1            ; Bit Store from Bit in Register to T Flag in SREG
EAB6:	04-F4       	brbc 4, .+0           ; Branch if Bit in SREG is Cleared
EAB8:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
EABA:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
EABC:	69-1A       	sub r6, r25           ; Subtract Without Carry
EABE:	B4-FB       	bst r27, 4            ; Bit Store from Bit in Register to T Flag in SREG
EAC0:	F1-F1       	brbs 1, .+124         ; Branch if Bit in SREG is Set
EAC2:	41-80       	ldd r4, Y+1           ; Load Indirect from Data Space to Register
EAC4:	00-20       	and r0, r0            ; Logical AND
EAC6:	04-49       	sbci r16, 0x94        ; Subtract Immediate with Carry SBI
EAC8:	08-60       	ori r16, 0x08         ; Logical OR with Immediate
EACA:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
EACC:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
EACE:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
EAD0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
EAD2:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
EAD4:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
EAD6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EAD8:	E4-FC       	sbrc r14, 4           ; Skip if Bit in Register is Cleared
EADA:	FF-1F       	adc r31, r31          ; Add with Carry
EADC:	0C-00       	.data 0x000c          ; Binary data
EADE:	00-20       	and r0, r0            ; Logical AND
EAE0:	EC-FC       	.data 0xfcec          ; Binary data
EAE2:	FF-1F       	adc r31, r31          ; Add with Carry
EAE4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
EAE6:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
EAE8:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
EAEA:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
EAEC:	8A-46       	sbci r24, 0x6a        ; Subtract Immediate with Carry SBI
EAEE:	2E-4C       	sbci r18, 0xce        ; Subtract Immediate with Carry SBI
EAF0:	D8-F8       	.data 0xf8d8          ; Binary data
EAF2:	04-30       	cpi r16, 0x04         ; Compare with Immediate
EAF4:	3B-B1       	in r19, 0x0b          ; Load an I/O Location to Register
EAF6:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
EAF8:	A1-F8       	bld r10, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
EAFA:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
EAFC:	C0-1A       	sub r12, r16          ; Subtract Without Carry
EAFE:	D8-F8       	.data 0xf8d8          ; Binary data
EB00:	04-20       	and r0, r4            ; Logical AND
EB02:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
EB04:	F4-D3       	rcall .+2024          ; Relative Call to Subroutine
EB06:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
EB08:	99-F8       	.data 0xf899          ; Binary data
EB0A:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
EB0C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
EB0E:	D8-F8       	.data 0xf8d8          ; Binary data
EB10:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
EB12:	23-B1       	in r18, 0x03          ; Load an I/O Location to Register
EB14:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
EB16:	D8-F8       	.data 0xf8d8          ; Binary data
EB18:	08-10       	cpse r0, r8           ; Compare Skip if Equal
EB1A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
EB1C:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
EB1E:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
EB20:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
EB22:	00-2C       	mov r0, r0            ; Copy Register
EB24:	39-D0       	rcall .+114           ; Relative Call to Subroutine
EB26:	00-26       	clr r512              ; Clear Register
EB28:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
EB2A:	12-90       	ld r1, -Z             ; Load Indirect from Data Space to Register
EB2C:	B8-F8       	.data 0xf8b8          ; Binary data
EB2E:	02-30       	cpi r16, 0x02         ; Compare with Immediate
EB30:	63-2B       	or r22, r19           ; Logical OR
EB32:	98-BF       	out 0x38, r25         ; Store Register to I/O Location
EB34:	A6-74       	andi r26, 0x46        ; Logical AND with Immediate
EB36:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
EB38:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
EB3A:	04-C0       	rjmp .+8              ; Relative Jump
EB3C:	61-68       	ori r22, 0x81         ; Logical OR with Immediate
EB3E:	62-69       	ori r22, 0x92         ; Logical OR with Immediate
EB40:	8D-F8       	.data 0xf88d          ; Binary data
EB42:	04-60       	ori r16, 0x04         ; Logical OR with Immediate
EB44:	8D-F8       	.data 0xf88d          ; Binary data
EB46:	05-60       	ori r16, 0x05         ; Logical OR with Immediate
EB48:	8D-F8       	.data 0xf88d          ; Binary data
EB4A:	06-60       	ori r16, 0x06         ; Logical OR with Immediate
EB4C:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
EB4E:	00-0F       	add r16, r16          ; Add without Carry
EB50:	1B-D0       	rcall .+54            ; Relative Call to Subroutine
EB52:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
EB54:	0B-05       	cpc r16, r11          ; Compare with Carry
EB56:	33-46       	sbci r19, 0x63        ; Subtract Immediate with Carry SBI
EB58:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
EB5A:	0C-0B       	sbc r16, r28          ; Subtract with Carry
EB5C:	15-F8       	bld r1, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
EB5E:	01-7F       	andi r16, 0xf1        ; Logical AND with Immediate
EB60:	CB-EB       	ldi r28, 0xbb         ; Load Immediate
EB62:	05-0E       	add r0, r21           ; Add without Carry
EB64:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
EB66:	0F-00       	.data 0x000f          ; Binary data
EB68:	1E-F8       	.data 0xf81e          ; Binary data
EB6A:	00-00       	nop                   ; No Operation
EB6C:	57-B1       	in r21, 0x07          ; Load an I/O Location to Register
EB6E:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
EB70:	01-37       	cpi r16, 0x71         ; Compare with Immediate
EB72:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
EB74:	07-77       	andi r16, 0x77        ; Logical AND with Immediate
EB76:	0A-FB       	.data 0xfb0a          ; Binary data
EB78:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
EB7A:	00-0C       	add r0, r0            ; Add without Carry
EB7C:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
EB7E:	04-0E       	add r0, r20           ; Add without Carry
EB80:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
EB82:	0E-00       	.data 0x000e          ; Binary data
EB84:	01-33       	cpi r16, 0x31         ; Compare with Immediate
EB86:	03-2B       	or r16, r19           ; Logical OR
EB88:	E8-D1       	rcall .+976           ; Relative Call to Subroutine
EB8A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EB8C:	01-AB       	std Y+49, r16         ; Store Indirect From Register to Data Space
EB8E:	E0-47       	sbci r30, 0x70        ; Subtract Immediate with Carry SBI
EB90:	84-F8       	bld r8, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
EB92:	12-90       	ld r1, -Z             ; Load Indirect from Data Space to Register
EB94:	A4-68       	ori r26, 0x84         ; Logical OR with Immediate
EB96:	00-2C       	mov r0, r0            ; Copy Register
EB98:	C6-D1       	rcall .+908           ; Relative Call to Subroutine
EB9A:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
EB9C:	19-21       	and r17, r9           ; Logical AND
EB9E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EBA0:	7B-FF       	.data 0xff7b          ; Binary data
EBA2:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
EBA4:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
EBA6:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
EBA8:	E8-FC       	.data 0xfce8          ; Binary data
EBAA:	FF-1F       	adc r31, r31          ; Add with Carry
EBAC:	E0-FC       	sbrc r14, 0           ; Skip if Bit in Register is Cleared
EBAE:	FF-1F       	adc r31, r31          ; Add with Carry
EBB0:	4A-B1       	in r20, 0x0a          ; Load an I/O Location to Register
EBB2:	81-B1       	in r24, 0x01          ; Load an I/O Location to Register
EBB4:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
EBB6:	93-FB       	bst r25, 3            ; Bit Store from Bit in Register to T Flag in SREG
EBB8:	F1-F1       	brbs 1, .+124         ; Branch if Bit in SREG is Set
EBBA:	43-68       	ori r20, 0x83         ; Logical OR with Immediate
EBBC:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
EBBE:	2C-BF       	out 0x3c, r18         ; Store Register to I/O Location
EBC0:	43-60       	ori r20, 0x03         ; Logical OR with Immediate
EBC2:	41-60       	ori r20, 0x01         ; Logical OR with Immediate
EBC4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EBC6:	21-B1       	in r18, 0x01          ; Load an I/O Location to Register
EBC8:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
EBCA:	93-FB       	bst r25, 3            ; Bit Store from Bit in Register to T Flag in SREG
EBCC:	F1-F1       	brbs 1, .+124         ; Branch if Bit in SREG is Set
EBCE:	41-60       	ori r20, 0x01         ; Logical OR with Immediate
EBD0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EBD2:	00-23       	and r16, r16          ; Logical AND
EBD4:	43-60       	ori r20, 0x03         ; Logical OR with Immediate
EBD6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EBD8:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
EBDA:	0F-00       	.data 0x000f          ; Binary data
EBDC:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
EBDE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
EBE0:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
EBE2:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
EBE4:	1E-1E       	adc r1, r30           ; Add with Carry
EBE6:	DC-BF       	out 0x3c, r29         ; Store Register to I/O Location
EBE8:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
EBEA:	00-25       	clr r256              ; Clear Register
EBEC:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
EBEE:	9B-68       	ori r25, 0x8b         ; Logical OR with Immediate
EBF0:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
EBF2:	05-EB       	ldi r16, 0xb5         ; Load Immediate
EBF4:	45-05       	cpc r20, r5           ; Compare with Carry
EBF6:	2F-44       	sbci r18, 0x4f        ; Subtract Immediate with Carry SBI
EBF8:	67-60       	ori r22, 0x07         ; Logical OR with Immediate
EBFA:	66-61       	ori r22, 0x16         ; Logical OR with Immediate
EBFC:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
EBFE:	5B-69       	ori r21, 0x9b         ; Logical OR with Immediate
EC00:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EC02:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
EC04:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
EC06:	03-48       	sbci r16, 0x83        ; Subtract Immediate with Carry SBI
EC08:	01-22       	and r0, r17           ; Logical AND
EC0A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EC0C:	D1-FF       	sbrs r29, 1           ; Skip if Bit in Register is Set
EC0E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EC10:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
EC12:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EC14:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
EC16:	FF-1F       	adc r31, r31          ; Add with Carry
EC18:	00-20       	and r0, r0            ; Logical AND
EC1A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EC1C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
EC1E:	02-48       	sbci r16, 0x82        ; Subtract Immediate with Carry SBI
EC20:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EC22:	30-FF       	sbrs r19, 0           ; Skip if Bit in Register is Set
EC24:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
EC26:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EC28:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
EC2A:	FF-1F       	adc r31, r31          ; Add with Carry
EC2C:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
EC2E:	02-78       	andi r16, 0x82        ; Logical AND with Immediate
EC30:	45-78       	andi r20, 0x85        ; Logical AND with Immediate
EC32:	84-78       	andi r24, 0x84        ; Logical AND with Immediate
EC34:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
EC36:	1F-00       	.data 0x001f          ; Binary data
EC38:	C0-00       	.data 0x00c0          ; Binary data
EC3A:	56-23       	and r21, r22          ; Logical AND
EC3C:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
EC3E:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
EC40:	1B-0A       	sbc r1, r27           ; Subtract with Carry
EC42:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
EC44:	80-0F       	add r24, r16          ; Add without Carry
EC46:	22-D1       	rcall .+580           ; Relative Call to Subroutine
EC48:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
EC4A:	40-0F       	add r20, r16          ; Add without Carry
EC4C:	0D-D1       	rcall .+538           ; Relative Call to Subroutine
EC4E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
EC50:	20-0F       	add r18, r16          ; Add without Carry
EC52:	05-D1       	rcall .+522           ; Relative Call to Subroutine
EC54:	83-F0       	brbs 3, .+32          ; Branch if Bit in SREG is Set
EC56:	FF-00       	.data 0x00ff          ; Binary data
EC58:	00-22       	and r0, r16           ; Logical AND
EC5A:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
EC5C:	00-23       	and r16, r16          ; Logical AND
EC5E:	40-E0       	ldi r20, 0x00         ; Load Immediate
EC60:	55-33       	cpi r21, 0x35         ; Compare with Immediate
EC62:	DA-B2       	in r13, 0x1a          ; Load an I/O Location to Register
EC64:	00-23       	and r16, r16          ; Logical AND
EC66:	AB-20       	and r10, r11          ; Logical AND
EC68:	3B-E0       	ldi r19, 0x0b         ; Load Immediate
EC6A:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
EC6C:	20-0F       	add r18, r16          ; Add without Carry
EC6E:	09-D1       	rcall .+530           ; Relative Call to Subroutine
EC70:	AB-22       	and r10, r27          ; Logical AND
EC72:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
EC74:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
EC76:	00-12       	cpse r0, r16          ; Compare Skip if Equal
EC78:	10-1A       	sub r1, r16           ; Subtract Without Carry
EC7A:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
EC7C:	56-3B       	cpi r21, 0xb6         ; Compare with Immediate
EC7E:	DA-B2       	in r13, 0x1a          ; Load an I/O Location to Register
EC80:	00-23       	and r16, r16          ; Logical AND
EC82:	2E-E0       	ldi r18, 0x0e         ; Load Immediate
EC84:	00-22       	and r0, r16           ; Logical AND
EC86:	DA-43       	sbci r29, 0x3a        ; Subtract Immediate with Carry SBI
EC88:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
EC8A:	00-20       	and r0, r0            ; Logical AND
EC8C:	29-E0       	ldi r18, 0x09         ; Load Immediate
EC8E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
EC90:	40-0F       	add r20, r16          ; Add without Carry
EC92:	14-D1       	rcall .+552           ; Relative Call to Subroutine
EC94:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
EC96:	20-0F       	add r18, r16          ; Add without Carry
EC98:	0B-D1       	rcall .+534           ; Relative Call to Subroutine
EC9A:	00-23       	and r16, r16          ; Logical AND
EC9C:	AB-23       	and r26, r27          ; Logical AND
EC9E:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
ECA0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
ECA2:	00-0A       	sbc r0, r16           ; Subtract with Carry
ECA4:	1A-1A       	sub r1, r26           ; Subtract Without Carry
ECA6:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
ECA8:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
ECAA:	55-03       	mulsu r21, r21        ; Multiply Signed with Unsigned
ECAC:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
ECAE:	00-20       	and r0, r0            ; Logical AND
ECB0:	17-E0       	ldi r17, 0x07         ; Load Immediate
ECB2:	00-22       	and r0, r16           ; Logical AND
ECB4:	DA-43       	sbci r29, 0x3a        ; Subtract Immediate with Carry SBI
ECB6:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
ECB8:	D3-B2       	in r13, 0x13          ; Load an I/O Location to Register
ECBA:	00-22       	and r0, r16           ; Logical AND
ECBC:	11-E0       	ldi r17, 0x01         ; Load Immediate
ECBE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
ECC0:	20-0F       	add r18, r16          ; Add without Carry
ECC2:	07-D1       	rcall .+526           ; Relative Call to Subroutine
ECC4:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
ECC6:	55-00       	.data 0x0055          ; Binary data
ECC8:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
ECCA:	00-22       	and r0, r16           ; Logical AND
ECCC:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
ECCE:	AB-03       	fmulsu r18, r19       ; Fractional Multiply Signed with Unsigned
ECD0:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
ECD2:	06-E0       	ldi r16, 0x06         ; Load Immediate
ECD4:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
ECD6:	56-00       	.data 0x0056          ; Binary data
ECD8:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
ECDA:	00-22       	and r0, r16           ; Logical AND
ECDC:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
ECDE:	55-03       	mulsu r21, r21        ; Multiply Signed with Unsigned
ECE0:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
ECE2:	FF-2D       	mov r31, r15          ; Copy Register
ECE4:	1F-D0       	rcall .+62            ; Relative Call to Subroutine
ECE6:	DD-B1       	in r29, 0x0d          ; Load an I/O Location to Register
ECE8:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
ECEA:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
ECEC:	00-00       	nop                   ; No Operation
ECEE:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
ECF0:	07-20       	and r0, r7            ; Logical AND
ECF2:	1A-B1       	in r17, 0x0a          ; Load an I/O Location to Register
ECF4:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
ECF6:	02-22       	and r0, r18           ; Logical AND
ECF8:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
ECFA:	07-22       	and r0, r23           ; Logical AND
ECFC:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
ECFE:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
ED00:	03-33       	cpi r16, 0x33         ; Compare with Immediate
ED02:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
ED04:	07-23       	and r16, r23          ; Logical AND
ED06:	ED-43       	sbci r30, 0x3d        ; Subtract Immediate with Carry SBI
ED08:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
ED0A:	05-FB       	bst r16, 5            ; Bit Store from Bit in Register to T Flag in SREG
ED0C:	05-55       	subi r16, 0x55        ; Subtract Immediate
ED0E:	C5-F3       	brbs 5, .-16          ; Branch if Bit in SREG is Set
ED10:	07-25       	clr r263              ; Clear Register
ED12:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
ED14:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
ED16:	2A-44       	sbci r18, 0x4a        ; Subtract Immediate with Carry SBI
ED18:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
ED1A:	2B-44       	sbci r18, 0x4b        ; Subtract Immediate with Carry SBI
ED1C:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
ED1E:	02-E0       	ldi r16, 0x02         ; Load Immediate
ED20:	FF-23       	and r31, r31          ; Logical AND
ED22:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
ED24:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
ED26:	FF-2C       	mov r15, r15          ; Copy Register
ED28:	1C-D0       	rcall .+56            ; Relative Call to Subroutine
ED2A:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
ED2C:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
ED2E:	2D-12       	cpse r2, r29          ; Compare Skip if Equal
ED30:	00-2C       	mov r0, r0            ; Copy Register
ED32:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
ED34:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
ED36:	6C-1C       	adc r6, r12           ; Add with Carry
ED38:	14-F0       	brbs 4, .+4           ; Branch if Bit in SREG is Set
ED3A:	FF-04       	cpc r15, r15          ; Compare with Carry
ED3C:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
ED3E:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
ED40:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
ED42:	00-00       	nop                   ; No Operation
ED44:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
ED46:	07-20       	and r0, r7            ; Logical AND
ED48:	1A-B1       	in r17, 0x0a          ; Load an I/O Location to Register
ED4A:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
ED4C:	02-22       	and r0, r18           ; Logical AND
ED4E:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
ED50:	07-22       	and r0, r23           ; Logical AND
ED52:	3B-B1       	in r19, 0x0b          ; Load an I/O Location to Register
ED54:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
ED56:	03-33       	cpi r16, 0x33         ; Compare with Immediate
ED58:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
ED5A:	07-23       	and r16, r23          ; Logical AND
ED5C:	02-E0       	ldi r16, 0x02         ; Load Immediate
ED5E:	00-23       	and r16, r16          ; Logical AND
ED60:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
ED62:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
ED64:	08-70       	andi r16, 0x08        ; Logical AND with Immediate
ED66:	4A-70       	andi r20, 0x0a        ; Logical AND with Immediate
ED68:	8B-70       	andi r24, 0x0b        ; Logical AND with Immediate
ED6A:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
ED6C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
ED6E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
ED70:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
ED72:	86-46       	sbci r24, 0x66        ; Subtract Immediate with Carry SBI
ED74:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
ED76:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
ED78:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
ED7A:	0F-4C       	sbci r16, 0xcf        ; Subtract Immediate with Carry SBI
ED7C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
ED7E:	71-46       	sbci r23, 0x61        ; Subtract Immediate with Carry SBI
ED80:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
ED82:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
ED84:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
ED86:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
ED88:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
ED8A:	18-F9       	.data 0xf918          ; Binary data
ED8C:	5D-B1       	in r21, 0x0d          ; Load an I/O Location to Register
ED8E:	7C-1E       	adc r7, r28           ; Add with Carry
ED90:	6E-1E       	adc r6, r30           ; Add with Carry
ED92:	57-FA       	bst r5, 7             ; Bit Store from Bit in Register to T Flag in SREG
ED94:	86-F6       	brbc 6, .-96          ; Branch if Bit in SREG is Cleared
ED96:	08-4D       	sbci r16, 0xd8        ; Subtract Immediate with Carry SBI
ED98:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
ED9A:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
ED9C:	01-1F       	adc r16, r17          ; Add with Carry
ED9E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EDA0:	0D-F9       	.data 0xf90d          ; Binary data
EDA2:	B4-42       	sbci r27, 0x24        ; Subtract Immediate with Carry SBI
EDA4:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
EDA6:	04-48       	sbci r16, 0x84        ; Subtract Immediate with Carry SBI
EDA8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EDAA:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
EDAC:	D0-F1       	brbs 0, .+116         ; Branch if Bit in SREG is Set
EDAE:	01-00       	.data 0x0001          ; Binary data
EDB0:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
EDB2:	00-20       	and r0, r0            ; Logical AND
EDB4:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
EDB6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EDB8:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
EDBA:	FF-1F       	adc r31, r31          ; Add with Carry
EDBC:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
EDBE:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
EDC0:	02-AB       	std Y+50, r16         ; Store Indirect From Register to Data Space
EDC2:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
EDC4:	01-2D       	mov r16, r1           ; Copy Register
EDC6:	01-22       	and r0, r17           ; Logical AND
EDC8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EDCA:	D2-FF       	sbrs r29, 2           ; Skip if Bit in Register is Set
EDCC:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
EDCE:	5D-F8       	.data 0xf85d          ; Binary data
EDD0:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
EDD2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EDD4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
EDD6:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
EDD8:	89-B0       	in r8, 0x09           ; Load an I/O Location to Register
EDDA:	83-46       	sbci r24, 0x63        ; Subtract Immediate with Carry SBI
EDDC:	02-91       	ld r16, -Z            ; Load Indirect from Data Space to Register
EDDE:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
EDE0:	BD-F8       	.data 0xf8bd          ; Binary data
EDE2:	48-70       	andi r20, 0x08        ; Logical AND with Immediate
EDE4:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
EDE6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
EDE8:	05-93       	las Z, r16            ; Load and Set
EDEA:	DD-F8       	.data 0xf8dd          ; Binary data
EDEC:	14-90       	lpm r1, Z             ; Load Program Memory
EDEE:	00-92-00-2A 	sts 0x2a00, r0        ; Store Direct to Data Space
EDF2:	42-D0       	rcall .+132           ; Relative Call to Subroutine
EDF4:	00-26       	clr r512              ; Clear Register
EDF6:	34-46       	sbci r19, 0x64        ; Subtract Immediate with Carry SBI
EDF8:	DF-F8       	.data 0xf8df          ; Binary data
EDFA:	A4-A0       	ldd r10, Y+36         ; Load Indirect from Data Space to Register
EDFC:	10-2A       	or r1, r16            ; Logical OR
EDFE:	A8-BF       	out 0x38, r26         ; Store Register to I/O Location
EE00:	10-22       	and r1, r16           ; Logical AND
EE02:	03-92       	.data 0x9203          ; Binary data
EE04:	27-4D       	sbci r18, 0xd7        ; Subtract Immediate with Carry SBI
EE06:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE08:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
EE0A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE0C:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
EE0E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE10:	02-99       	sbic 0x00, 2          ; Skip if Bit in I/O Register is Cleared
EE12:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE14:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
EE16:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE18:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE1A:	AC-FB       	.data 0xfbac          ; Binary data
EE1C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE1E:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
EE20:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE22:	76-FA       	bst r7, 6             ; Bit Store from Bit in Register to T Flag in SREG
EE24:	01-96       	adiw r24, 0x01        ; Add Immediate to Word
EE26:	00-9A       	sbi 0x00, 0           ; Set Bit in I/O Register
EE28:	96-1B       	sub r25, r22          ; Subtract Without Carry
EE2A:	10-2E       	mov r1, r16           ; Copy Register
EE2C:	B4-BF       	out 0x34, r27         ; Store Register to I/O Location
EE2E:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
EE30:	10-22       	and r1, r16           ; Logical AND
EE32:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE34:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
EE36:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
EE38:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE3A:	88-FB       	.data 0xfb88          ; Binary data
EE3C:	07-E0       	ldi r16, 0x07         ; Load Immediate
EE3E:	66-B2       	in r6, 0x16           ; Load an I/O Location to Register
EE40:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE42:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE44:	E7-F8       	bld r14, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
EE46:	08-F8       	.data 0xf808          ; Binary data
EE48:	06-00       	.data 0x0006          ; Binary data
EE4A:	01-34       	cpi r16, 0x41         ; Compare with Immediate
EE4C:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
EE4E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EE50:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EE52:	D6-F8       	bld r13, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
EE54:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
EE56:	00-2F       	mov r16, r16          ; Copy Register
EE58:	F1-D0       	rcall .+482           ; Relative Call to Subroutine
EE5A:	DA-F8       	.data 0xf8da          ; Binary data
EE5C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
EE5E:	06-93       	lac Z, r16            ; Load and Clear
EE60:	06-9B       	sbis 0x00, 6          ; Skip if Bit in I/O Register is Set
EE62:	C9-EB       	ldi r28, 0xb9         ; Load Immediate
EE64:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
EE66:	BB-42       	sbci r27, 0x2b        ; Subtract Immediate with Carry SBI
EE68:	E9-D3       	rcall .+2002          ; Relative Call to Subroutine
EE6A:	01-9E       	mul r0, r17           ; Multiply Unsigned
EE6C:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
EE6E:	1E-44       	sbci r17, 0x4e        ; Subtract Immediate with Carry SBI
EE70:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
EE72:	00-9A       	sbi 0x00, 0           ; Set Bit in I/O Register
EE74:	B2-42       	sbci r27, 0x22        ; Subtract Immediate with Carry SBI
EE76:	C5-D8       	rcall .+4490          ; Relative Call to Subroutine
EE78:	00-E0       	ldi r16, 0x00         ; Load Immediate
EE7A:	00-24       	clr r0                ; Clear Register
EE7C:	67-B1       	in r22, 0x07          ; Load an I/O Location to Register
EE7E:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
EE80:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
EE82:	07-93       	lat Z, r16            ; Load and Toggle
EE84:	07-9B       	sbis 0x00, 7          ; Skip if Bit in I/O Register is Set
EE86:	C9-EB       	ldi r28, 0xb9         ; Load Immediate
EE88:	03-09       	sbc r16, r3           ; Subtract with Carry
EE8A:	B9-45       	sbci r27, 0x59        ; Subtract Immediate with Carry SBI
EE8C:	04-D3       	rcall .+1544          ; Relative Call to Subroutine
EE8E:	63-B2       	in r6, 0x13           ; Load an I/O Location to Register
EE90:	00-9A       	sbi 0x00, 0           ; Set Bit in I/O Register
EE92:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
EE94:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
EE96:	FF-24       	clr r255              ; Clear Register
EE98:	60-B2       	in r6, 0x10           ; Load an I/O Location to Register
EE9A:	09-B0       	in r0, 0x09           ; Load an I/O Location to Register
EE9C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
EE9E:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
EEA0:	0C-00       	.data 0x000c          ; Binary data
EEA2:	00-20       	and r0, r0            ; Logical AND
EEA4:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
EEA6:	FF-1F       	adc r31, r31          ; Add with Carry
EEA8:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
EEAA:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
EEAC:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
EEAE:	00-93-01-22 	sts 0x2201, r16       ; Store Direct to Data Space
EEB2:	23-46       	sbci r18, 0x63        ; Subtract Immediate with Carry SBI
EEB4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EEB6:	8E-FF       	.data 0xff8e          ; Binary data
EEB8:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
EEBA:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
EEBC:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
EEBE:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
EEC0:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
EEC2:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
EEC4:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
EEC6:	07-02       	muls r16, r23         ; Multiply Signed
EEC8:	BD-F8       	.data 0xf8bd          ; Binary data
EECA:	1C-30       	cpi r17, 0x0c         ; Compare with Immediate
EECC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EECE:	EC-FF       	.data 0xffec          ; Binary data
EED0:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
EED2:	68-B1       	in r22, 0x08          ; Load an I/O Location to Register
EED4:	2A-1B       	sub r18, r26          ; Subtract Without Carry
EED6:	01-32       	cpi r16, 0x21         ; Compare with Immediate
EED8:	01-21       	and r16, r1           ; Logical AND
EEDA:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
EEDC:	04-F4       	brbc 4, .+0           ; Branch if Bit in SREG is Cleared
EEDE:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
EEE0:	94-40       	sbci r25, 0x04        ; Subtract Immediate with Carry SBI
EEE2:	9D-F8       	.data 0xf89d          ; Binary data
EEE4:	07-10       	cpse r0, r7           ; Compare Skip if Equal
EEE6:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
EEE8:	44-FA       	bst r4, 4             ; Bit Store from Bit in Register to T Flag in SREG
EEEA:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
EEEC:	06-99       	sbic 0x00, 6          ; Skip if Bit in I/O Register is Cleared
EEEE:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
EEF0:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
EEF2:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
EEF4:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
EEF6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EEF8:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
EEFA:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
EEFC:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
EEFE:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
EF00:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
EF02:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
EF04:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
EF06:	07-02       	muls r16, r23         ; Multiply Signed
EF08:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
EF0A:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
EF0C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EF0E:	CC-FF       	.data 0xffcc          ; Binary data
EF10:	37-B1       	in r19, 0x07          ; Load an I/O Location to Register
EF12:	01-22       	and r0, r17           ; Logical AND
EF14:	B2-40       	sbci r27, 0x02        ; Subtract Immediate with Carry SBI
EF16:	9D-F8       	.data 0xf89d          ; Binary data
EF18:	07-30       	cpi r16, 0x07         ; Compare with Immediate
EF1A:	1A-43       	sbci r17, 0x3a        ; Subtract Immediate with Carry SBI
EF1C:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
EF1E:	05-E0       	ldi r16, 0x05         ; Load Immediate
EF20:	01-22       	and r0, r17           ; Logical AND
EF22:	B2-40       	sbci r27, 0x02        ; Subtract Immediate with Carry SBI
EF24:	9D-F8       	.data 0xf89d          ; Binary data
EF26:	07-30       	cpi r16, 0x07         ; Compare with Immediate
EF28:	23-EA       	ldi r18, 0xa3         ; Load Immediate
EF2A:	02-02       	muls r16, r18         ; Multiply Signed
EF2C:	8D-F8       	.data 0xf88d          ; Binary data
EF2E:	07-20       	and r0, r7            ; Logical AND
EF30:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
EF32:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
EF34:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EF36:	42-FF       	sbrs r20, 2           ; Skip if Bit in Register is Set
EF38:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
EF3A:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
EF3C:	F4-92       	xch Z, r15            ; Exchange
EF3E:	FF-1F       	adc r31, r31          ; Add with Carry
EF40:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
EF42:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
EF44:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
EF46:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
EF48:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
EF4A:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
EF4C:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
EF4E:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
EF50:	07-02       	muls r16, r23         ; Multiply Signed
EF52:	13-4C       	sbci r17, 0xc3        ; Subtract Immediate with Carry SBI
EF54:	23-88       	std Y+19, r2          ; Store Indirect From Register to Data Space
EF56:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EF58:	A7-FF       	sbrs r26, 7           ; Skip if Bit in Register is Set
EF5A:	E8-B1       	in r30, 0x08          ; Load an I/O Location to Register
EF5C:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
EF5E:	08-08       	sbc r0, r8            ; Subtract with Carry
EF60:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
EF62:	01-08       	sbc r0, r1            ; Subtract with Carry
EF64:	01-23       	and r16, r17          ; Logical AND
EF66:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
EF68:	05-F5       	brbc 5, .+64          ; Branch if Bit in SREG is Cleared
EF6A:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
EF6C:	05-FA       	bst r0, 5             ; Bit Store from Bit in Register to T Flag in SREG
EF6E:	08-F5       	brbc 0, .+66          ; Branch if Bit in SREG is Cleared
EF70:	9D-F8       	.data 0xf89d          ; Binary data
EF72:	20-20       	and r2, r0            ; Logical AND
EF74:	02-FA       	bst r0, 2             ; Bit Store from Bit in Register to T Flag in SREG
EF76:	08-F8       	.data 0xf808          ; Binary data
EF78:	5F-FA       	.data 0xfa5f          ; Binary data
EF7A:	88-F8       	.data 0xf888          ; Binary data
EF7C:	9D-F8       	.data 0xf89d          ; Binary data
EF7E:	07-20       	and r0, r7            ; Logical AND
EF80:	22-EA       	ldi r18, 0xa2         ; Load Immediate
EF82:	05-02       	muls r16, r21         ; Multiply Signed
EF84:	08-EA       	ldi r16, 0xa8         ; Load Immediate
EF86:	05-05       	cpc r16, r5           ; Compare with Carry
EF88:	2A-43       	sbci r18, 0x3a        ; Subtract Immediate with Carry SBI
EF8A:	8D-F8       	.data 0xf88d          ; Binary data
EF8C:	07-20       	and r0, r7            ; Logical AND
EF8E:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
EF90:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
EF92:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EF94:	13-FF       	sbrs r17, 3           ; Skip if Bit in Register is Set
EF96:	00-E0       	ldi r16, 0x00         ; Load Immediate
EF98:	00-20       	and r0, r0            ; Logical AND
EF9A:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
EF9C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
EF9E:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
EFA0:	F4-92       	xch Z, r15            ; Exchange
EFA2:	FF-1F       	adc r31, r31          ; Add with Carry
EFA4:	01-22       	and r0, r17           ; Logical AND
EFA6:	42-73       	andi r20, 0x32        ; Logical AND with Immediate
EFA8:	00-22       	and r0, r16           ; Logical AND
EFAA:	02-82       	std Y+2, r0           ; Store Indirect From Register to Data Space
EFAC:	82-74       	andi r24, 0x42        ; Logical AND with Immediate
EFAE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EFB0:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
EFB2:	80-7C       	andi r24, 0xc0        ; Logical AND with Immediate
EFB4:	00-22       	and r0, r16           ; Logical AND
EFB6:	9A-74       	andi r25, 0x4a        ; Logical AND with Immediate
EFB8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
EFBA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
EFBC:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
EFBE:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
EFC0:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
EFC2:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
EFC4:	08-4C       	sbci r16, 0xc8        ; Subtract Immediate with Carry SBI
EFC6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EFC8:	A9-7B       	andi r26, 0xb9        ; Logical AND with Immediate
EFCA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EFCC:	A1-F9       	bld r26, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
EFCE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EFD0:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
EFD2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
EFD4:	F3-FF       	sbrs r31, 3           ; Skip if Bit in Register is Set
EFD6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EFD8:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
EFDA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
EFDC:	EF-FF       	.data 0xffef          ; Binary data
EFDE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EFE0:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
EFE2:	C8-FA       	.data 0xfac8          ; Binary data
EFE4:	28-73       	andi r18, 0x38        ; Logical AND with Immediate
EFE6:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
EFE8:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
EFEA:	FF-1F       	adc r31, r31          ; Add with Carry
EFEC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
EFEE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
EFF0:	43-7B       	andi r20, 0xb3        ; Logical AND with Immediate
EFF2:	6B-B9       	out 0x0b, r22         ; Store Register to I/O Location
EFF4:	10-21       	and r17, r0           ; Logical AND
EFF6:	80-22       	and r8, r16           ; Logical AND
EFF8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
EFFA:	E0-FF       	sbrs r30, 0           ; Skip if Bit in Register is Set
EFFC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
EFFE:	11-21       	and r17, r1           ; Logical AND
F000:	80-22       	and r8, r16           ; Logical AND
F002:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F004:	DB-FF       	.data 0xffdb          ; Binary data
F006:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F008:	12-21       	and r17, r2           ; Logical AND
F00A:	04-22       	and r0, r20           ; Logical AND
F00C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F00E:	D6-FF       	sbrs r29, 6           ; Skip if Bit in Register is Set
F010:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F012:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F014:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
F016:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
F018:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
F01A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F01C:	2B-4D       	sbci r18, 0xdb        ; Subtract Immediate with Carry SBI
F01E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F020:	A1-7B       	andi r26, 0xb1        ; Logical AND with Immediate
F022:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F024:	75-F9       	bld r23, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
F026:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
F028:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F02A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F02C:	28-21       	and r18, r8           ; Logical AND
F02E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
F030:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F032:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F034:	9F-FA       	.data 0xfa9f          ; Binary data
F036:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F038:	A1-7B       	andi r26, 0xb1        ; Logical AND with Immediate
F03A:	06-22       	and r0, r22           ; Logical AND
F03C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F03E:	86-FA       	bst r8, 6             ; Bit Store from Bit in Register to T Flag in SREG
F040:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
F042:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F044:	00-93-00-9E 	sts 0x9e00, r16       ; Store Direct to Data Space
F048:	21-4F       	sbci r18, 0xf1        ; Subtract Immediate with Carry SBI
F04A:	B6-B2       	in r11, 0x16          ; Load an I/O Location to Register
F04C:	0B-E0       	ldi r16, 0x0b         ; Load Immediate
F04E:	23-8A       	std Y+19, r2          ; Store Indirect From Register to Data Space
F050:	4B-B1       	in r20, 0x0b          ; Load an I/O Location to Register
F052:	3A-68       	ori r19, 0x8a         ; Logical OR with Immediate
F054:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
F056:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
F058:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
F05A:	92-1B       	sub r25, r18          ; Subtract Without Carry
F05C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
F05E:	02-DD       	rcall .+6660          ; Relative Call to Subroutine
F060:	01-23       	and r16, r17          ; Logical AND
F062:	A3-74       	andi r26, 0x43        ; Logical AND with Immediate
F064:	2F-E0       	ldi r18, 0x0f         ; Load Immediate
F066:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F068:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F06A:	CA-FF       	.data 0xffca          ; Binary data
F06C:	05-28       	or r0, r5             ; Logical OR
F06E:	EE-DD       	rcall .+7132          ; Relative Call to Subroutine
F070:	16-4D       	sbci r17, 0xd6        ; Subtract Immediate with Carry SBI
F072:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F074:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F076:	CE-FF       	.data 0xffce          ; Binary data
F078:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
F07A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F07C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F07E:	CA-FF       	.data 0xffca          ; Binary data
F080:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
F082:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F084:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F086:	C6-FF       	sbrs r28, 6           ; Skip if Bit in Register is Set
F088:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
F08A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F08C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F08E:	C2-FF       	sbrs r28, 2           ; Skip if Bit in Register is Set
F090:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
F092:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F094:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F096:	BE-FF       	.data 0xffbe          ; Binary data
F098:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
F09A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F09C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F09E:	BA-FF       	.data 0xffba          ; Binary data
F0A0:	5F-FA       	.data 0xfa5f          ; Binary data
F0A2:	8A-FA       	.data 0xfa8a          ; Binary data
F0A4:	5F-FA       	.data 0xfa5f          ; Binary data
F0A6:	89-F9       	.data 0xf989          ; Binary data
F0A8:	49-EA       	ldi r20, 0xa9         ; Load Immediate
F0AA:	0A-29       	or r16, r10           ; Logical OR
F0AC:	A4-F8       	bld r10, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
F0AE:	00-90-5F-FA 	lds r0, 0xfa5f        ; Load Direct from Data Space (32-bit)
F0B2:	88-F8       	.data 0xf888          ; Binary data
F0B4:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
F0B6:	47-EA       	ldi r20, 0xa7         ; Load Immediate
F0B8:	08-27       	clr r776              ; Clear Register
F0BA:	67-80       	ldd r6, Y+7           ; Load Indirect from Data Space to Register
F0BC:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
F0BE:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
F0C0:	46-EA       	ldi r20, 0xa6         ; Load Immediate
F0C2:	00-26       	clr r512              ; Clear Register
F0C4:	A6-80       	ldd r10, Y+6          ; Load Indirect from Data Space to Register
F0C6:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
F0C8:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
F0CA:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
F0CC:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
F0CE:	FF-1F       	adc r31, r31          ; Add with Carry
F0D0:	0C-00       	.data 0x000c          ; Binary data
F0D2:	00-20       	and r0, r0            ; Logical AND
F0D4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
F0D6:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
F0D8:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
F0DA:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F0DC:	2B-4D       	sbci r18, 0xdb        ; Subtract Immediate with Carry SBI
F0DE:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F0E0:	A1-7B       	andi r26, 0xb1        ; Logical AND with Immediate
F0E2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F0E4:	15-F9       	bld r17, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
F0E6:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
F0E8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F0EA:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F0EC:	22-21       	and r18, r2           ; Logical AND
F0EE:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
F0F0:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F0F2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F0F4:	3F-FA       	.data 0xfa3f          ; Binary data
F0F6:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F0F8:	A1-7B       	andi r26, 0xb1        ; Logical AND with Immediate
F0FA:	06-22       	and r0, r22           ; Logical AND
F0FC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F0FE:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
F100:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
F102:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F104:	00-93-00-9E 	sts 0x9e00, r16       ; Store Direct to Data Space
F108:	21-4F       	sbci r18, 0xf1        ; Subtract Immediate with Carry SBI
F10A:	B6-B2       	in r11, 0x16          ; Load an I/O Location to Register
F10C:	0B-E0       	ldi r16, 0x0b         ; Load Immediate
F10E:	23-8A       	std Y+19, r2          ; Store Indirect From Register to Data Space
F110:	4B-B1       	in r20, 0x0b          ; Load an I/O Location to Register
F112:	3A-68       	ori r19, 0x8a         ; Logical OR with Immediate
F114:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
F116:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
F118:	92-B2       	in r9, 0x12           ; Load an I/O Location to Register
F11A:	92-1B       	sub r25, r18          ; Subtract Without Carry
F11C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
F11E:	02-DD       	rcall .+6660          ; Relative Call to Subroutine
F120:	01-23       	and r16, r17          ; Logical AND
F122:	A3-74       	andi r26, 0x43        ; Logical AND with Immediate
F124:	2F-E0       	ldi r18, 0x0f         ; Load Immediate
F126:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F128:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F12A:	6A-FF       	.data 0xff6a          ; Binary data
F12C:	05-28       	or r0, r5             ; Logical OR
F12E:	EE-DD       	rcall .+7132          ; Relative Call to Subroutine
F130:	16-4D       	sbci r17, 0xd6        ; Subtract Immediate with Carry SBI
F132:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F134:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F136:	6E-FF       	.data 0xff6e          ; Binary data
F138:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
F13A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F13C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F13E:	6A-FF       	.data 0xff6a          ; Binary data
F140:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
F142:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F144:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F146:	66-FF       	sbrs r22, 6           ; Skip if Bit in Register is Set
F148:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
F14A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F14C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F14E:	62-FF       	sbrs r22, 2           ; Skip if Bit in Register is Set
F150:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
F152:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F154:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F156:	5E-FF       	.data 0xff5e          ; Binary data
F158:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
F15A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
F15C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F15E:	5A-FF       	.data 0xff5a          ; Binary data
F160:	5F-FA       	.data 0xfa5f          ; Binary data
F162:	8A-FA       	.data 0xfa8a          ; Binary data
F164:	5F-FA       	.data 0xfa5f          ; Binary data
F166:	89-F9       	.data 0xf989          ; Binary data
F168:	49-EA       	ldi r20, 0xa9         ; Load Immediate
F16A:	0A-29       	or r16, r10           ; Logical OR
F16C:	A4-F8       	bld r10, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
F16E:	06-90       	elpm r0, Z            ; Extended Load Program Memory
F170:	5F-FA       	.data 0xfa5f          ; Binary data
F172:	88-F8       	.data 0xf888          ; Binary data
F174:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
F176:	47-EA       	ldi r20, 0xa7         ; Load Immediate
F178:	08-27       	clr r776              ; Clear Register
F17A:	27-81       	ldd r18, Y+7          ; Load Indirect from Data Space to Register
F17C:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
F17E:	F6-B2       	in r15, 0x16          ; Load an I/O Location to Register
F180:	46-EA       	ldi r20, 0xa6         ; Load Immediate
F182:	00-26       	clr r512              ; Clear Register
F184:	66-81       	ldd r22, Y+6          ; Load Indirect from Data Space to Register
F186:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
F188:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
F18A:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
F18C:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
F18E:	FF-1F       	adc r31, r31          ; Add with Carry
F190:	0C-00       	.data 0x000c          ; Binary data
F192:	00-20       	and r0, r0            ; Logical AND
F194:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
F196:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
F198:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
F19A:	10-4C       	sbci r17, 0xc0        ; Subtract Immediate with Carry SBI
F19C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F19E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F1A0:	B7-F8       	bld r11, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
F1A2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F1A4:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
F1A6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F1A8:	09-FF       	.data 0xff09          ; Binary data
F1AA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F1AC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F1AE:	E2-F9       	bld r30, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
F1B0:	68-B9       	out 0x08, r22         ; Store Register to I/O Location
F1B2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F1B4:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
F1B6:	01-22       	and r0, r17           ; Logical AND
F1B8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F1BA:	C8-F9       	.data 0xf9c8          ; Binary data
F1BC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F1BE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F1C0:	1F-FF       	.data 0xff1f          ; Binary data
F1C2:	38-B1       	in r19, 0x08          ; Load an I/O Location to Register
F1C4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F1C6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F1C8:	25-FF       	sbrs r18, 5           ; Skip if Bit in Register is Set
F1CA:	80-B2       	in r8, 0x10           ; Load an I/O Location to Register
F1CC:	04-E0       	ldi r16, 0x04         ; Load Immediate
F1CE:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
F1D0:	FF-70       	andi r31, 0x0f        ; Logical AND with Immediate
F1D2:	01-E0       	ldi r16, 0x01         ; Load Immediate
F1D4:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
F1D6:	FF-70       	andi r31, 0x0f        ; Logical AND with Immediate
F1D8:	00-B2       	in r0, 0x10           ; Load an I/O Location to Register
F1DA:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F1DC:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
F1DE:	FF-1F       	adc r31, r31          ; Add with Carry
F1E0:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
F1E2:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
F1E4:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
F1E6:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
F1E8:	01-29       	or r16, r1            ; Logical OR
F1EA:	02-D0       	rcall .+4             ; Relative Call to Subroutine
F1EC:	02-2A       	or r0, r18            ; Logical OR
F1EE:	17-D1       	rcall .+558           ; Relative Call to Subroutine
F1F0:	27-E0       	ldi r18, 0x07         ; Load Immediate
F1F2:	00-2A       	or r0, r16            ; Logical OR
F1F4:	42-D0       	rcall .+132           ; Relative Call to Subroutine
F1F6:	3A-E0       	ldi r19, 0x0a         ; Load Immediate
F1F8:	01-2C       	mov r0, r1            ; Copy Register
F1FA:	26-D1       	rcall .+588           ; Relative Call to Subroutine
F1FC:	27-E0       	ldi r18, 0x07         ; Load Immediate
F1FE:	01-2D       	mov r16, r1           ; Copy Register
F200:	45-D0       	rcall .+138           ; Relative Call to Subroutine
F202:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F204:	6A-21       	and r22, r10          ; Logical AND
F206:	0F-22       	and r0, r31           ; Logical AND
F208:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F20A:	C4-FF       	sbrs r28, 4           ; Skip if Bit in Register is Set
F20C:	69-28       	or r6, r9             ; Logical OR
F20E:	03-D1       	rcall .+518           ; Relative Call to Subroutine
F210:	01-2C       	mov r0, r1            ; Copy Register
F212:	1F-D0       	rcall .+62            ; Relative Call to Subroutine
F214:	00-25       	clr r256              ; Clear Register
F216:	03-E0       	ldi r16, 0x03         ; Load Immediate
F218:	01-2C       	mov r0, r1            ; Copy Register
F21A:	0A-D0       	rcall .+20            ; Relative Call to Subroutine
F21C:	02-2D       	mov r16, r2           ; Copy Register
F21E:	0A-D0       	rcall .+20            ; Relative Call to Subroutine
F220:	74-73       	andi r23, 0x34        ; Logical AND with Immediate
F222:	54-B9       	out 0x04, r21         ; Store Register to I/O Location
F224:	01-2D       	mov r16, r1           ; Copy Register
F226:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
F228:	6A-23       	and r22, r26          ; Logical AND
F22A:	6B-23       	and r22, r27          ; Logical AND
F22C:	B3-73       	andi r27, 0x33        ; Logical AND with Immediate
F22E:	01-20       	and r0, r1            ; Logical AND
F230:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F232:	00-20       	and r0, r0            ; Logical AND
F234:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F236:	00-20       	and r0, r0            ; Logical AND
F238:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F23A:	01-20       	and r0, r1            ; Logical AND
F23C:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F23E:	00-20       	and r0, r0            ; Logical AND
F240:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F242:	01-29       	or r16, r1            ; Logical OR
F244:	0C-D9       	rcall .+4632          ; Relative Call to Subroutine
F246:	00-20       	and r0, r0            ; Logical AND
F248:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F24A:	01-25       	clr r257              ; Clear Register
F24C:	E8-E7       	ldi r30, 0x78         ; Load Immediate
F24E:	01-25       	clr r257              ; Clear Register
F250:	00-24       	clr r0                ; Clear Register
F252:	E5-E7       	ldi r30, 0x75         ; Load Immediate
F254:	00-25       	clr r256              ; Clear Register
F256:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
F258:	E2-E7       	ldi r30, 0x72         ; Load Immediate
F25A:	01-25       	clr r257              ; Clear Register
F25C:	00-24       	clr r0                ; Clear Register
F25E:	DF-E7       	ldi r29, 0x7f         ; Load Immediate
F260:	6B-21       	and r22, r11          ; Logical AND
F262:	0F-22       	and r0, r31           ; Logical AND
F264:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F266:	96-FF       	sbrs r25, 6           ; Skip if Bit in Register is Set
F268:	69-28       	or r6, r9             ; Logical OR
F26A:	C5-D0       	rcall .+394           ; Relative Call to Subroutine
F26C:	C9-E7       	ldi r28, 0x79         ; Load Immediate
F26E:	6B-21       	and r22, r11          ; Logical AND
F270:	0F-22       	and r0, r31           ; Logical AND
F272:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F274:	8F-FF       	.data 0xff8f          ; Binary data
F276:	69-28       	or r6, r9             ; Logical OR
F278:	EF-D0       	rcall .+478           ; Relative Call to Subroutine
F27A:	C0-E7       	ldi r28, 0x70         ; Load Immediate
F27C:	6A-21       	and r22, r10          ; Logical AND
F27E:	0F-22       	and r0, r31           ; Logical AND
F280:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F282:	88-FF       	.data 0xff88          ; Binary data
F284:	69-28       	or r6, r9             ; Logical OR
F286:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
F288:	00-24       	clr r0                ; Clear Register
F28A:	C9-D0       	rcall .+402           ; Relative Call to Subroutine
F28C:	C4-E7       	ldi r28, 0x74         ; Load Immediate
F28E:	01-2C       	mov r0, r1            ; Copy Register
F290:	C6-D1       	rcall .+908           ; Relative Call to Subroutine
F292:	D4-E7       	ldi r29, 0x74         ; Load Immediate
F294:	68-23       	and r22, r24          ; Logical AND
F296:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
F298:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
F29A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F29C:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
F29E:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
F2A0:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F2A2:	00-91-1B-21 	lds r16, 0x211b       ; Load Direct from Data Space (32-bit)
F2A6:	04-22       	and r0, r20           ; Logical AND
F2A8:	02-23       	and r16, r18          ; Logical AND
F2AA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F2AC:	49-FE       	.data 0xfe49          ; Binary data
F2AE:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
F2B0:	5D-F8       	.data 0xf85d          ; Binary data
F2B2:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
F2B4:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
F2B6:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
F2B8:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F2BA:	00-91-1C-21 	lds r16, 0x211c       ; Load Direct from Data Space (32-bit)
F2BE:	04-22       	and r0, r20           ; Logical AND
F2C0:	02-23       	and r16, r18          ; Logical AND
F2C2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F2C4:	3D-FE       	.data 0xfe3d          ; Binary data
F2C6:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
F2C8:	5D-F8       	.data 0xf85d          ; Binary data
F2CA:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
F2CC:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
F2CE:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
F2D0:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F2D2:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
F2D4:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
F2D6:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
F2D8:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
F2DA:	13-F8       	bld r1, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
F2DC:	01-0B       	sbc r16, r17          ; Subtract with Carry
F2DE:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
F2E0:	12-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
F2E2:	00-92-3B-21 	sts 0x213b, r0        ; Store Direct to Data Space
F2E6:	0E-22       	and r0, r30           ; Logical AND
F2E8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F2EA:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
F2EC:	62-78       	andi r22, 0x82        ; Logical AND with Immediate
F2EE:	A3-78       	andi r26, 0x83        ; Logical AND with Immediate
F2F0:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F2F2:	02-23       	and r16, r18          ; Logical AND
F2F4:	3B-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
F2F6:	E2-78       	andi r30, 0x82        ; Logical AND with Immediate
F2F8:	23-79       	andi r18, 0x93        ; Logical AND with Immediate
F2FA:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F2FC:	02-23       	and r16, r18          ; Logical AND
F2FE:	33-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
F300:	62-79       	andi r22, 0x92        ; Logical AND with Immediate
F302:	A3-79       	andi r26, 0x93        ; Logical AND with Immediate
F304:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F306:	02-23       	and r16, r18          ; Logical AND
F308:	2B-80       	ldd r2, Y+3           ; Load Indirect from Data Space to Register
F30A:	62-7A       	andi r22, 0xa2        ; Logical AND with Immediate
F30C:	A3-7A       	andi r26, 0xa3        ; Logical AND with Immediate
F30E:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F310:	02-22       	and r0, r18           ; Logical AND
F312:	08-9B       	sbis 0x01, 0          ; Skip if Bit in I/O Register is Set
F314:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
F316:	E2-7A       	andi r30, 0xa2        ; Logical AND with Immediate
F318:	23-7B       	andi r18, 0xb3        ; Logical AND with Immediate
F31A:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F31C:	02-22       	and r0, r18           ; Logical AND
F31E:	09-9B       	sbis 0x01, 1          ; Skip if Bit in I/O Register is Set
F320:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
F322:	62-7B       	andi r22, 0xb2        ; Logical AND with Immediate
F324:	A3-7B       	andi r26, 0xb3        ; Logical AND with Immediate
F326:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F328:	02-22       	and r0, r18           ; Logical AND
F32A:	0A-9B       	sbis 0x01, 2          ; Skip if Bit in I/O Register is Set
F32C:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
F32E:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
F330:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
F332:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F334:	F4-92       	xch Z, r15            ; Exchange
F336:	FF-1F       	adc r31, r31          ; Add with Carry
F338:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
F33A:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
F33C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F33E:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
F340:	13-F8       	bld r1, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
F342:	01-0B       	sbc r16, r17          ; Subtract with Carry
F344:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
F346:	12-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
F348:	00-92-41-21 	sts 0x2141, r0        ; Store Direct to Data Space
F34C:	02-22       	and r0, r18           ; Logical AND
F34E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F350:	41-FD       	sbrc r20, 1           ; Skip if Bit in Register is Cleared
F352:	60-78       	andi r22, 0x80        ; Logical AND with Immediate
F354:	A3-78       	andi r26, 0x83        ; Logical AND with Immediate
F356:	43-EA       	ldi r20, 0xa3         ; Load Immediate
F358:	00-20       	and r0, r0            ; Logical AND
F35A:	00-B2       	in r0, 0x10           ; Load an I/O Location to Register
F35C:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
F35E:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F360:	F4-92       	xch Z, r15            ; Exchange
F362:	FF-1F       	adc r31, r31          ; Add with Carry
F364:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
F366:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
F368:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F36A:	6B-21       	and r22, r11          ; Logical AND
F36C:	06-22       	and r0, r22           ; Logical AND
F36E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F370:	C3-FD       	sbrc r28, 3           ; Skip if Bit in Register is Cleared
F372:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
F374:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
F376:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
F378:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F37A:	00-91-6B-21 	lds r16, 0x216b       ; Load Direct from Data Space (32-bit)
F37E:	02-22       	and r0, r18           ; Logical AND
F380:	03-23       	and r16, r19          ; Logical AND
F382:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F384:	DD-FD       	.data 0xfddd          ; Binary data
F386:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
F388:	5D-F8       	.data 0xf85d          ; Binary data
F38A:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
F38C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
F38E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F390:	01-21       	and r16, r1           ; Logical AND
F392:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F394:	EF-FF       	.data 0xffef          ; Binary data
F396:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F398:	00-21       	and r16, r0           ; Logical AND
F39A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F39C:	7F-FF       	.data 0xff7f          ; Binary data
F39E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F3A0:	00-21       	and r16, r0           ; Logical AND
F3A2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F3A4:	87-FF       	sbrs r24, 7           ; Skip if Bit in Register is Set
F3A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F3A8:	00-21       	and r16, r0           ; Logical AND
F3AA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F3AC:	DB-FF       	.data 0xffdb          ; Binary data
F3AE:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F3B0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
F3B2:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
F3B4:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F3B6:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
F3B8:	13-F8       	bld r1, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
F3BA:	01-0B       	sbc r16, r17          ; Subtract with Carry
F3BC:	00-93-05-4B 	sts 0x4b05, r16       ; Store Direct to Data Space
F3C0:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
F3C2:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
F3C4:	75-21       	and r23, r5           ; Logical AND
F3C6:	06-22       	and r0, r22           ; Logical AND
F3C8:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
F3CA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F3CC:	77-FD       	sbrc r23, 7           ; Skip if Bit in Register is Cleared
F3CE:	60-78       	andi r22, 0x80        ; Logical AND with Immediate
F3D0:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
F3D2:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F3D4:	F4-92       	xch Z, r15            ; Exchange
F3D6:	FF-1F       	adc r31, r31          ; Add with Carry
F3D8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
F3DA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F3DC:	E9-FF       	.data 0xffe9          ; Binary data
F3DE:	34-28       	or r3, r4             ; Logical OR
F3E0:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
F3E2:	00-20       	and r0, r0            ; Logical AND
F3E4:	01-20       	and r0, r1            ; Logical AND
F3E6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
F3E8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
F3EA:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
F3EC:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F3EE:	6A-21       	and r22, r10          ; Logical AND
F3F0:	07-22       	and r0, r23           ; Logical AND
F3F2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F3F4:	81-FD       	sbrc r24, 1           ; Skip if Bit in Register is Cleared
F3F6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
F3F8:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
F3FA:	10-4E       	sbci r17, 0xe0        ; Subtract Immediate with Carry SBI
F3FC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F3FE:	00-21       	and r16, r0           ; Logical AND
F400:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
F402:	E8-FF       	.data 0xffe8          ; Binary data
F404:	0E-4D       	sbci r16, 0xde        ; Subtract Immediate with Carry SBI
F406:	0F-4C       	sbci r16, 0xcf        ; Subtract Immediate with Carry SBI
F408:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F40A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
F40C:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
F40E:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
F410:	51-FA       	bst r5, 1             ; Bit Store from Bit in Register to T Flag in SREG
F412:	0D-4E       	sbci r16, 0xed        ; Subtract Immediate with Carry SBI
F414:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F416:	00-21       	and r16, r0           ; Logical AND
F418:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
F41A:	DC-FF       	.data 0xffdc          ; Binary data
F41C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F41E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
F420:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
F422:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
F424:	47-FA       	bst r4, 7             ; Bit Store from Bit in Register to T Flag in SREG
F426:	09-4E       	sbci r16, 0xe9        ; Subtract Immediate with Carry SBI
F428:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F42A:	00-21       	and r16, r0           ; Logical AND
F42C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
F42E:	D2-FF       	sbrs r29, 2           ; Skip if Bit in Register is Set
F430:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
F432:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
F434:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
F436:	07-F0       	brbs 7, .+0           ; Branch if Bit in SREG is Set
F438:	3D-FA       	.data 0xfa3d          ; Binary data
F43A:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F43C:	F4-FC       	sbrc r15, 4           ; Skip if Bit in Register is Cleared
F43E:	FF-1F       	adc r31, r31          ; Add with Carry
F440:	51-DF       	rcall .+7842          ; Relative Call to Subroutine
F442:	00-00       	nop                   ; No Operation
F444:	3C-92       	st X, r3              ; Store Indirect From Register to Data Space
F446:	FF-1F       	adc r31, r31          ; Add with Carry
F448:	04-FD       	sbrc r16, 4           ; Skip if Bit in Register is Cleared
F44A:	FF-1F       	adc r31, r31          ; Add with Carry
F44C:	FC-FC       	.data 0xfcfc          ; Binary data
F44E:	FF-1F       	adc r31, r31          ; Add with Carry
F450:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
F452:	00-22       	and r0, r16           ; Logical AND
F454:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
F456:	02-21       	and r16, r2           ; Logical AND
F458:	59-60       	ori r21, 0x09         ; Logical OR with Immediate
F45A:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
F45C:	24-20       	and r2, r4            ; Logical AND
F45E:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
F460:	30-20       	and r3, r0            ; Logical AND
F462:	03-49       	sbci r16, 0x93        ; Subtract Immediate with Carry SBI
F464:	D9-62       	ori r29, 0x29         ; Logical OR with Immediate
F466:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
F468:	32-20       	and r3, r2            ; Logical AND
F46A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
F46C:	0C-FD       	.data 0xfd0c          ; Binary data
F46E:	FF-1F       	adc r31, r31          ; Add with Carry
F470:	28-81       	ld r18, Y             ; Load Indirect from Data Space to Register
F472:	01-00       	.data 0x0001          ; Binary data
F474:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
F476:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
F478:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
F47A:	80-62       	ori r24, 0x20         ; Logical OR with Immediate
F47C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F47E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
F480:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
F482:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
F484:	FF-22       	and r15, r31          ; Logical AND
F486:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F488:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
F48A:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
F48C:	00-2B       	or r16, r16           ; Logical OR
F48E:	FC-DA       	rcall .+5624          ; Relative Call to Subroutine
F490:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
F492:	98-6B       	ori r25, 0xb8         ; Logical OR with Immediate
F494:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
F496:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
F498:	00-C0       	rjmp .+0              ; Relative Jump
F49A:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
F49C:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
F49E:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
F4A0:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
F4A2:	80-62       	ori r24, 0x20         ; Logical OR with Immediate
F4A4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F4A6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
F4A8:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
F4AA:	DA-62       	ori r29, 0x2a         ; Logical OR with Immediate
F4AC:	58-63       	ori r21, 0x38         ; Logical OR with Immediate
F4AE:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
F4B0:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
F4B2:	00-2B       	or r16, r16           ; Logical OR
F4B4:	FC-DA       	rcall .+5624          ; Relative Call to Subroutine
F4B6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
F4B8:	00-C0       	rjmp .+0              ; Relative Jump
F4BA:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
F4BC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
F4BE:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F4C0:	01-21       	and r16, r1           ; Logical AND
F4C2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F4C4:	C9-FA       	.data 0xfac9          ; Binary data
F4C6:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
F4C8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F4CA:	F3-B1       	in r31, 0x03          ; Load an I/O Location to Register
F4CC:	00-22       	and r0, r16           ; Logical AND
F4CE:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
F4D0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
F4D2:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
F4D4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F4D6:	C3-B1       	in r28, 0x03          ; Load an I/O Location to Register
F4D8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F4DA:	01-0F       	add r16, r17          ; Add without Carry
F4DC:	03-D0       	rcall .+6             ; Relative Call to Subroutine
F4DE:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
F4E0:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
F4E2:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
F4E4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F4E6:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
F4E8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F4EA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F4EC:	02-0F       	add r16, r18          ; Add without Carry
F4EE:	03-D0       	rcall .+6             ; Relative Call to Subroutine
F4F0:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
F4F2:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
F4F4:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
F4F6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F4F8:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
F4FA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F4FC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F4FE:	04-0F       	add r16, r20          ; Add without Carry
F500:	03-D0       	rcall .+6             ; Relative Call to Subroutine
F502:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
F504:	9A-68       	ori r25, 0x8a         ; Logical OR with Immediate
F506:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
F508:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F50A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
F50C:	64-FD       	sbrc r22, 4           ; Skip if Bit in Register is Cleared
F50E:	FF-1F       	adc r31, r31          ; Add with Carry
F510:	90-FF       	sbrs r25, 0           ; Skip if Bit in Register is Set
F512:	FF-1F       	adc r31, r31          ; Add with Carry
F514:	84-FF       	sbrs r24, 4           ; Skip if Bit in Register is Set
F516:	FF-1F       	adc r31, r31          ; Add with Carry
F518:	00-E1       	ldi r16, 0x10         ; Load Immediate
F51A:	00-E0       	ldi r16, 0x00         ; Load Immediate
F51C:	04-E1       	ldi r16, 0x14         ; Load Immediate
F51E:	00-E0       	ldi r16, 0x00         ; Load Immediate
F520:	08-E1       	ldi r16, 0x18         ; Load Immediate
F522:	00-E0       	ldi r16, 0x00         ; Load Immediate
F524:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
F526:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
F528:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F52A:	00-2B       	or r16, r16           ; Logical OR
F52C:	3E-D1       	rcall .+636           ; Relative Call to Subroutine
F52E:	01-22       	and r0, r17           ; Logical AND
F530:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
F532:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
F534:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
F536:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
F538:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
F53A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F53C:	00-2B       	or r16, r16           ; Logical OR
F53E:	28-D0       	rcall .+80            ; Relative Call to Subroutine
F540:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
F542:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
F544:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F546:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F548:	01-0F       	add r16, r17          ; Add without Carry
F54A:	07-D0       	rcall .+14            ; Relative Call to Subroutine
F54C:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
F54E:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
F550:	1D-49       	sbci r17, 0x9d        ; Subtract Immediate with Carry SBI
F552:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
F554:	21-40       	sbci r18, 0x01        ; Subtract Immediate with Carry SBI
F556:	1D-4C       	sbci r17, 0xcd        ; Subtract Immediate with Carry SBI
F558:	21-60       	ori r18, 0x01         ; Logical OR with Immediate
F55A:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
F55C:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
F55E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F560:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F562:	02-0F       	add r16, r18          ; Add without Carry
F564:	07-D0       	rcall .+14            ; Relative Call to Subroutine
F566:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
F568:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
F56A:	17-49       	sbci r17, 0x97        ; Subtract Immediate with Carry SBI
F56C:	49-68       	ori r20, 0x89         ; Logical OR with Immediate
F56E:	21-40       	sbci r18, 0x01        ; Subtract Immediate with Carry SBI
F570:	16-4C       	sbci r17, 0xc6        ; Subtract Immediate with Carry SBI
F572:	61-60       	ori r22, 0x01         ; Logical OR with Immediate
F574:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
F576:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
F578:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
F57A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F57C:	04-0F       	add r16, r20          ; Add without Carry
F57E:	07-D0       	rcall .+14            ; Relative Call to Subroutine
F580:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
F582:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
F584:	10-49       	sbci r17, 0x90        ; Subtract Immediate with Carry SBI
F586:	89-68       	ori r24, 0x89         ; Logical OR with Immediate
F588:	21-40       	sbci r18, 0x01        ; Subtract Immediate with Carry SBI
F58A:	10-4C       	sbci r17, 0xc0        ; Subtract Immediate with Carry SBI
F58C:	A1-60       	ori r26, 0x01         ; Logical OR with Immediate
F58E:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
F590:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
F592:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
F594:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
F596:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
F598:	08-D0       	rcall .+16            ; Relative Call to Subroutine
F59A:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
F59C:	0F-49       	sbci r16, 0x9f        ; Subtract Immediate with Carry SBI
F59E:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
F5A0:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
F5A2:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
F5A4:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
F5A6:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
F5A8:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
F5AA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F5AC:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
F5AE:	00-21       	and r16, r0           ; Logical AND
F5B0:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
F5B2:	52-FA       	bst r5, 2             ; Bit Store from Bit in Register to T Flag in SREG
F5B4:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F5B6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F5B8:	64-FD       	sbrc r22, 4           ; Skip if Bit in Register is Cleared
F5BA:	FF-1F       	adc r31, r31          ; Add with Carry
F5BC:	60-FD       	sbrc r22, 0           ; Skip if Bit in Register is Cleared
F5BE:	FF-1F       	adc r31, r31          ; Add with Carry
F5C0:	90-FF       	sbrs r25, 0           ; Skip if Bit in Register is Set
F5C2:	FF-1F       	adc r31, r31          ; Add with Carry
F5C4:	80-E1       	ldi r24, 0x10         ; Load Immediate
F5C6:	00-E0       	ldi r16, 0x00         ; Load Immediate
F5C8:	78-FF       	.data 0xff78          ; Binary data
F5CA:	FF-1F       	adc r31, r31          ; Add with Carry
F5CC:	84-FF       	sbrs r24, 4           ; Skip if Bit in Register is Set
F5CE:	FF-1F       	adc r31, r31          ; Add with Carry
F5D0:	84-E1       	ldi r24, 0x14         ; Load Immediate
F5D2:	00-E0       	ldi r16, 0x00         ; Load Immediate
F5D4:	88-E1       	ldi r24, 0x18         ; Load Immediate
F5D6:	00-E0       	ldi r16, 0x00         ; Load Immediate
F5D8:	00-C0       	rjmp .+0              ; Relative Jump
F5DA:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
F5DC:	01-40       	sbci r16, 0x01        ; Subtract Immediate with Carry SBI
F5DE:	1F-00       	.data 0x001f          ; Binary data
F5E0:	00-00       	nop                   ; No Operation
F5E2:	1F-80       	ldd r1, Y+7           ; Load Indirect from Data Space to Register
F5E4:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
F5E6:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
F5E8:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
F5EA:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
F5EC:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F5EE:	00-93-00-9C 	sts 0x9c00, r16       ; Store Direct to Data Space
F5F2:	09-4D       	sbci r16, 0xd9        ; Subtract Immediate with Carry SBI
F5F4:	A4-B2       	in r10, 0x14          ; Load an I/O Location to Register
F5F6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F5F8:	3D-FF       	.data 0xff3d          ; Binary data
F5FA:	FF-28       	or r15, r15           ; Logical OR
F5FC:	07-D0       	rcall .+14            ; Relative Call to Subroutine
F5FE:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
F600:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
F602:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
F604:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
F606:	1B-1B       	sub r17, r27          ; Subtract Without Carry
F608:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
F60A:	F4-DB       	rcall .+6120          ; Relative Call to Subroutine
F60C:	01-E0       	ldi r16, 0x01         ; Load Immediate
F60E:	01-20       	and r0, r1            ; Logical AND
F610:	00-E0       	ldi r16, 0x00         ; Load Immediate
F612:	00-20       	and r0, r0            ; Logical AND
F614:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
F616:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F618:	0C-00       	.data 0x000c          ; Binary data
F61A:	00-20       	and r0, r0            ; Logical AND
F61C:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
F61E:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
F620:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
F622:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
F624:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
F626:	96-71       	andi r25, 0x16        ; Logical AND with Immediate
F628:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F62A:	DC-FF       	.data 0xffdc          ; Binary data
F62C:	47-F0       	brbs 7, .+16          ; Branch if Bit in SREG is Set
F62E:	40-00       	.data 0x0040          ; Binary data
F630:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F632:	34-FF       	sbrs r19, 4           ; Skip if Bit in Register is Set
F634:	18-24       	clr r24               ; Clear Register
F636:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
F638:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
F63A:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
F63C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F63E:	2E-FF       	.data 0xff2e          ; Binary data
F640:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
F642:	14-F1       	brbs 4, .+68          ; Branch if Bit in SREG is Set
F644:	08-0F       	add r16, r24          ; Add without Carry
F646:	F6-D1       	rcall .+1004          ; Relative Call to Subroutine
F648:	27-B1       	in r18, 0x07          ; Load an I/O Location to Register
F64A:	08-2F       	mov r16, r24          ; Copy Register
F64C:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
F64E:	87-20       	and r8, r7            ; Logical AND
F650:	FF-20       	and r15, r15          ; Logical AND
F652:	00-E0       	ldi r16, 0x00         ; Load Immediate
F654:	95-20       	and r9, r5            ; Logical AND
F656:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F658:	21-FF       	sbrs r18, 1           ; Skip if Bit in Register is Set
F65A:	00-24       	clr r0                ; Clear Register
F65C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F65E:	0A-FF       	.data 0xff0a          ; Binary data
F660:	68-70       	andi r22, 0x08        ; Logical AND with Immediate
F662:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
F664:	80-0F       	add r24, r16          ; Add without Carry
F666:	03-D0       	rcall .+6             ; Relative Call to Subroutine
F668:	01-34       	cpi r16, 0x41         ; Compare with Immediate
F66A:	B4-F5       	brbc 4, .+108         ; Branch if Bit in SREG is Cleared
F66C:	80-7F       	andi r24, 0xf0        ; Logical AND with Immediate
F66E:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
F670:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
F672:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F674:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
F676:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
F678:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F67A:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
F67C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F67E:	00-93-00-9D 	sts 0x9d00, r16       ; Store Direct to Data Space
F682:	0C-4E       	sbci r16, 0xec        ; Subtract Immediate with Carry SBI
F684:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
F686:	07-E0       	ldi r16, 0x07         ; Load Immediate
F688:	33-68       	ori r19, 0x83         ; Logical OR with Immediate
F68A:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
F68C:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
F68E:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
F690:	5B-1B       	sub r21, r27          ; Subtract Without Carry
F692:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
F694:	96-7F       	andi r25, 0xf6        ; Logical AND with Immediate
F696:	09-DC       	rcall .+6162          ; Relative Call to Subroutine
F698:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F69A:	EC-FE       	.data 0xfeec          ; Binary data
F69C:	60-70       	andi r22, 0x00        ; Logical AND with Immediate
F69E:	FF-28       	or r15, r15           ; Logical OR
F6A0:	F2-D0       	rcall .+484           ; Relative Call to Subroutine
F6A2:	FE-28       	or r15, r14           ; Logical OR
F6A4:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
F6A6:	00-20       	and r0, r0            ; Logical AND
F6A8:	01-20       	and r0, r1            ; Logical AND
F6AA:	00-E0       	ldi r16, 0x00         ; Load Immediate
F6AC:	00-20       	and r0, r0            ; Logical AND
F6AE:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
F6B0:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F6B2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F6B4:	0C-00       	.data 0x000c          ; Binary data
F6B6:	00-20       	and r0, r0            ; Logical AND
F6B8:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
F6BA:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F6BC:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
F6BE:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
F6C0:	83-78       	andi r24, 0x83        ; Logical AND with Immediate
F6C2:	03-2B       	or r16, r19           ; Logical OR
F6C4:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
F6C6:	4D-02       	muls r20, r29         ; Multiply Signed
F6C8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F6CA:	2C-FF       	.data 0xff2c          ; Binary data
F6CC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F6CE:	11-21       	and r17, r1           ; Logical AND
F6D0:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
F6D2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F6D4:	A3-FF       	sbrs r26, 3           ; Skip if Bit in Register is Set
F6D6:	00-28       	or r0, r0             ; Logical OR
F6D8:	47-D1       	rcall .+654           ; Relative Call to Subroutine
F6DA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F6DC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F6DE:	CA-FF       	.data 0xffca          ; Binary data
F6E0:	00-28       	or r0, r0             ; Logical OR
F6E2:	42-D0       	rcall .+132           ; Relative Call to Subroutine
F6E4:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
F6E6:	24-4A       	sbci r18, 0xa4        ; Subtract Immediate with Carry SBI
F6E8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F6EA:	24-4A       	sbci r18, 0xa4        ; Subtract Immediate with Carry SBI
F6EC:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F6EE:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F6F0:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F6F2:	06-F5       	brbc 6, .+64          ; Branch if Bit in SREG is Cleared
F6F4:	FD-7E       	andi r31, 0xed        ; Logical AND with Immediate
F6F6:	76-45       	sbci r23, 0x56        ; Subtract Immediate with Carry SBI
F6F8:	13-D2       	rcall .+1062          ; Relative Call to Subroutine
F6FA:	B0-1C       	adc r11, r0           ; Add with Carry
F6FC:	06-F5       	brbc 6, .+64          ; Branch if Bit in SREG is Cleared
F6FE:	FE-77       	andi r31, 0x7e        ; Logical AND with Immediate
F700:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
F702:	CB-6A       	ori r28, 0xab         ; Logical OR with Immediate
F704:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F706:	F0-0F       	add r31, r16          ; Add without Carry
F708:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
F70A:	4A-63       	ori r20, 0x3a         ; Logical OR with Immediate
F70C:	8B-6B       	ori r24, 0xbb         ; Logical OR with Immediate
F70E:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
F710:	07-25       	clr r263              ; Clear Register
F712:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
F714:	02-5C       	subi r16, 0xc2        ; Subtract Immediate
F716:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
F718:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
F71A:	02-30       	cpi r16, 0x02         ; Compare with Immediate
F71C:	B8-42       	sbci r27, 0x28        ; Subtract Immediate with Carry SBI
F71E:	F0-D1       	rcall .+992           ; Relative Call to Subroutine
F720:	00-E0       	ldi r16, 0x00         ; Load Immediate
F722:	B6-46       	sbci r27, 0x66        ; Subtract Immediate with Carry SBI
F724:	06-F5       	brbc 6, .+64          ; Branch if Bit in SREG is Cleared
F726:	00-76       	andi r16, 0x60        ; Logical AND with Immediate
F728:	76-45       	sbci r23, 0x56        ; Subtract Immediate with Carry SBI
F72A:	0D-D9       	rcall .+4634          ; Relative Call to Subroutine
F72C:	71-46       	sbci r23, 0x61        ; Subtract Immediate with Carry SBI
F72E:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
F730:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
F732:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F734:	F0-0F       	add r31, r16          ; Add without Carry
F736:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
F738:	93-6B       	ori r25, 0xb3         ; Logical OR with Immediate
F73A:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
F73C:	07-20       	and r0, r7            ; Logical AND
F73E:	08-70       	andi r16, 0x08        ; Logical AND with Immediate
F740:	4B-70       	andi r20, 0x0b        ; Logical AND with Immediate
F742:	02-31       	cpi r16, 0x12         ; Compare with Immediate
F744:	8E-42       	sbci r24, 0x2e        ; Subtract Immediate with Carry SBI
F746:	F3-D8       	rcall .+4582          ; Relative Call to Subroutine
F748:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
F74A:	0B-4A       	sbci r16, 0xab        ; Subtract Immediate with Carry SBI
F74C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F74E:	0B-4A       	sbci r16, 0xab        ; Subtract Immediate with Carry SBI
F750:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F752:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
F754:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
F756:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F758:	F0-0F       	add r31, r16          ; Add without Carry
F75A:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
F75C:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
F75E:	9B-6B       	ori r25, 0xbb         ; Logical OR with Immediate
F760:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F762:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F764:	AB-FE       	.data 0xfeab          ; Binary data
F766:	01-20       	and r0, r1            ; Logical AND
F768:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
F76A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F76C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F76E:	A6-FE       	sbrs r10, 6           ; Skip if Bit in Register is Set
F770:	00-20       	and r0, r0            ; Logical AND
F772:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
F774:	00-C0       	rjmp .+0              ; Relative Jump
F776:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
F778:	00-04       	cpc r0, r0            ; Compare with Carry
F77A:	1F-80       	ldd r1, Y+7           ; Load Indirect from Data Space to Register
F77C:	FF-FF       	.data 0xffff          ; Binary data
F77E:	00-90-F8-B5 	lds r0, 0xb5f8        ; Load Direct from Data Space (32-bit)
F782:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
F784:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
F786:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
F788:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
F78A:	80-60       	ori r24, 0x00         ; Logical OR with Immediate
F78C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
F78E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
F790:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
F792:	D8-62       	ori r29, 0x28         ; Logical OR with Immediate
F794:	59-63       	ori r21, 0x39         ; Logical OR with Immediate
F796:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
F798:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
F79A:	00-77       	andi r16, 0x70        ; Logical AND with Immediate
F79C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F79E:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
F7A0:	00-2A       	or r0, r16            ; Logical OR
F7A2:	08-DB       	rcall .+5648          ; Relative Call to Subroutine
F7A4:	FB-E7       	ldi r31, 0x7b         ; Load Immediate
F7A6:	DA-6A       	ori r29, 0xaa         ; Logical OR with Immediate
F7A8:	00-2A       	or r0, r16            ; Logical OR
F7AA:	0D-DB       	rcall .+5658          ; Relative Call to Subroutine
F7AC:	FB-E7       	ldi r31, 0x7b         ; Load Immediate
F7AE:	D3-6A       	ori r29, 0xa3         ; Logical OR with Immediate
F7B0:	00-2B       	or r16, r16           ; Logical OR
F7B2:	15-DB       	rcall .+5674          ; Relative Call to Subroutine
F7B4:	FB-E7       	ldi r31, 0x7b         ; Load Immediate
F7B6:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
F7B8:	0A-78       	andi r16, 0x8a        ; Logical AND with Immediate
F7BA:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
F7BC:	45-F4       	brbc 5, .+16          ; Branch if Bit in SREG is Cleared
F7BE:	80-65       	ori r24, 0x50         ; Logical OR with Immediate
F7C0:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
F7C2:	DC-62       	ori r29, 0x2c         ; Logical OR with Immediate
F7C4:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F7C6:	EE-E7       	ldi r30, 0x7e         ; Load Immediate
F7C8:	42-78       	andi r20, 0x82        ; Logical AND with Immediate
F7CA:	1D-68       	ori r17, 0x8d         ; Logical OR with Immediate
F7CC:	45-F4       	brbc 5, .+16          ; Branch if Bit in SREG is Cleared
F7CE:	80-65       	ori r24, 0x50         ; Logical OR with Immediate
F7D0:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
F7D2:	DC-62       	ori r29, 0x2c         ; Logical OR with Immediate
F7D4:	5A-63       	ori r21, 0x3a         ; Logical OR with Immediate
F7D6:	02-31       	cpi r16, 0x12         ; Compare with Immediate
F7D8:	B9-42       	sbci r27, 0x29        ; Subtract Immediate with Carry SBI
F7DA:	E0-D1       	rcall .+960           ; Relative Call to Subroutine
F7DC:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
F7DE:	E6-E7       	ldi r30, 0x76         ; Load Immediate
F7E0:	FF-20       	and r15, r15          ; Logical AND
F7E2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F7E4:	5B-FE       	.data 0xfe5b          ; Binary data
F7E6:	FF-20       	and r15, r15          ; Logical AND
F7E8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F7EA:	58-FE       	.data 0xfe58          ; Binary data
F7EC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F7EE:	42-FE       	sbrs r4, 2            ; Skip if Bit in Register is Set
F7F0:	70-70       	andi r23, 0x00        ; Logical AND with Immediate
F7F2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F7F4:	1F-00       	.data 0x001f          ; Binary data
F7F6:	05-28       	or r0, r5             ; Logical OR
F7F8:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
F7FA:	00-20       	and r0, r0            ; Logical AND
F7FC:	01-20       	and r0, r1            ; Logical AND
F7FE:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
F800:	00-C0       	rjmp .+0              ; Relative Jump
F802:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
F804:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
F806:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F808:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
F80A:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
F80C:	29-B3       	in r18, 0x19          ; Load an I/O Location to Register
F80E:	83-78       	andi r24, 0x83        ; Logical AND with Immediate
F810:	03-2B       	or r16, r19           ; Logical OR
F812:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
F814:	4D-02       	muls r20, r29         ; Multiply Signed
F816:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F818:	85-FE       	sbrs r8, 5            ; Skip if Bit in Register is Set
F81A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F81C:	18-21       	and r17, r8           ; Logical AND
F81E:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
F820:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F822:	FC-FE       	.data 0xfefc          ; Binary data
F824:	C8-B9       	out 0x08, r28         ; Store Register to I/O Location
F826:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F828:	FE-21       	and r31, r14          ; Logical AND
F82A:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
F82C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F82E:	A8-FF       	.data 0xffa8          ; Binary data
F830:	98-B1       	in r25, 0x08          ; Load an I/O Location to Register
F832:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F834:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
F836:	16-71       	andi r17, 0x16        ; Logical AND with Immediate
F838:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F83A:	D4-FE       	sbrs r13, 4           ; Skip if Bit in Register is Set
F83C:	68-B1       	in r22, 0x08          ; Load an I/O Location to Register
F83E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F840:	0D-21       	and r16, r13          ; Logical AND
F842:	00-22       	and r0, r16           ; Logical AND
F844:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F846:	EA-FE       	.data 0xfeea          ; Binary data
F848:	38-B9       	out 0x08, r19         ; Store Register to I/O Location
F84A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F84C:	13-FE       	sbrs r1, 3            ; Skip if Bit in Register is Set
F84E:	20-B9       	out 0x00, r18         ; Store Register to I/O Location
F850:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F852:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F854:	33-FE       	sbrs r3, 3            ; Skip if Bit in Register is Set
F856:	01-20       	and r0, r1            ; Logical AND
F858:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F85A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F85C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F85E:	2E-FE       	.data 0xfe2e          ; Binary data
F860:	00-20       	and r0, r0            ; Logical AND
F862:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
F864:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
F866:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
F868:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
F86A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
F86C:	01-10       	cpse r0, r1           ; Compare Skip if Equal
F86E:	01-38       	cpi r16, 0x81         ; Compare with Immediate
F870:	60-FD       	sbrc r22, 0           ; Skip if Bit in Register is Cleared
F872:	FF-1F       	adc r31, r31          ; Add with Carry
F874:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
F876:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F878:	00-6A       	ori r16, 0xa0         ; Logical OR with Immediate
F87A:	01-21       	and r16, r1           ; Logical AND
F87C:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
F87E:	08-02       	muls r16, r24         ; Multiply Signed
F880:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F882:	5C-FA       	.data 0xfa5c          ; Binary data
F884:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
F886:	50-B1       	in r21, 0x00          ; Load an I/O Location to Register
F888:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
F88A:	3B-B9       	out 0x0b, r19         ; Store Register to I/O Location
F88C:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
F88E:	E3-61       	ori r30, 0x13         ; Logical OR with Immediate
F890:	63-79       	andi r22, 0x93        ; Logical AND with Immediate
F892:	63-F0       	brbs 3, .+24          ; Branch if Bit in SREG is Set
F894:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
F896:	63-71       	andi r22, 0x13        ; Logical AND with Immediate
F898:	01-23       	and r16, r17          ; Logical AND
F89A:	00-E0       	ldi r16, 0x00         ; Load Immediate
F89C:	01-23       	and r16, r17          ; Logical AND
F89E:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
F8A0:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F8A2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F8A4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
F8A6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F8A8:	00-69       	ori r16, 0x90         ; Logical OR with Immediate
F8AA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F8AC:	A5-F9       	bld r26, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
F8AE:	20-B1       	in r18, 0x00          ; Load an I/O Location to Register
F8B0:	20-7D       	andi r18, 0xd0        ; Logical AND with Immediate
F8B2:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
F8B4:	03-EB       	ldi r16, 0xb3         ; Load Immediate
F8B6:	40-10       	cpse r4, r0           ; Compare Skip if Equal
F8B8:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F8BA:	00-20       	and r0, r0            ; Logical AND
F8BC:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
F8BE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F8C0:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
F8C2:	FF-1F       	adc r31, r31          ; Add with Carry
F8C4:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
F8C6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F8C8:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
F8CA:	83-79       	andi r24, 0x93        ; Logical AND with Immediate
F8CC:	7B-B3       	in r23, 0x1b          ; Load an I/O Location to Register
F8CE:	82-69       	ori r24, 0x92         ; Logical OR with Immediate
F8D0:	8A-42       	sbci r24, 0x2a        ; Subtract Immediate with Carry SBI
F8D2:	2B-D3       	rcall .+1622          ; Relative Call to Subroutine
F8D4:	02-2B       	or r16, r18           ; Logical OR
F8D6:	02-D1       	rcall .+516           ; Relative Call to Subroutine
F8D8:	E1-60       	ori r30, 0x01         ; Logical OR with Immediate
F8DA:	01-23       	and r16, r17          ; Logical AND
F8DC:	27-E0       	ldi r18, 0x07         ; Load Immediate
F8DE:	21-B9       	out 0x01, r18         ; Store Register to I/O Location
F8E0:	00-23       	and r16, r16          ; Logical AND
F8E2:	83-60       	ori r24, 0x03         ; Logical OR with Immediate
F8E4:	C3-60       	ori r28, 0x03         ; Logical OR with Immediate
F8E6:	01-23       	and r16, r17          ; Logical AND
F8E8:	21-E0       	ldi r18, 0x01         ; Load Immediate
F8EA:	C3-68       	ori r28, 0x83         ; Logical OR with Immediate
F8EC:	02-6A       	ori r16, 0xa2         ; Logical OR with Immediate
F8EE:	15-7C       	andi r17, 0xc5        ; Logical AND with Immediate
F8F0:	09-35       	cpi r16, 0x59         ; Compare with Immediate
F8F2:	5A-1E       	adc r5, r26           ; Add with Carry
F8F4:	EA-40       	sbci r30, 0x0a        ; Subtract Immediate with Carry SBI
F8F6:	01-39       	cpi r16, 0x91         ; Compare with Immediate
F8F8:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
F8FA:	05-F5       	brbc 5, .+64          ; Branch if Bit in SREG is Cleared
F8FC:	AA-42       	sbci r26, 0x2a        ; Subtract Immediate with Carry SBI
F8FE:	00-D8       	rcall .+4096          ; Relative Call to Subroutine
F900:	13-B9       	out 0x03, r17         ; Store Register to I/O Location
F902:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
F904:	A3-60       	ori r26, 0x03         ; Logical OR with Immediate
F906:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
F908:	AD-1A       	sub r10, r29          ; Subtract Without Carry
F90A:	08-E0       	ldi r16, 0x08         ; Load Immediate
F90C:	20-6A       	ori r18, 0xa0         ; Logical OR with Immediate
F90E:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
F910:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
F912:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F914:	95-F9       	bld r25, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
F916:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
F918:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
F91A:	10-B9       	out 0x00, r17         ; Store Register to I/O Location
F91C:	07-E0       	ldi r16, 0x07         ; Load Immediate
F91E:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
F920:	08-06       	cpc r0, r24           ; Compare with Carry
F922:	00-2D       	mov r16, r0           ; Copy Register
F924:	F2-D1       	rcall .+996           ; Relative Call to Subroutine
F926:	E7-60       	ori r30, 0x07         ; Logical OR with Immediate
F928:	01-23       	and r16, r17          ; Logical AND
F92A:	00-E0       	ldi r16, 0x00         ; Load Immediate
F92C:	00-23       	and r16, r16          ; Logical AND
F92E:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
F930:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
F932:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F934:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
F936:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F938:	80-79       	andi r24, 0x90        ; Logical AND with Immediate
F93A:	18-B3       	in r17, 0x18          ; Load an I/O Location to Register
F93C:	94-F9       	bld r25, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
F93E:	05-30       	cpi r16, 0x05         ; Compare with Immediate
F940:	00-2B       	or r16, r16           ; Logical OR
F942:	1B-DA       	rcall .+5174          ; Relative Call to Subroutine
F944:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F946:	01-21       	and r16, r1           ; Logical AND
F948:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F94A:	AC-FF       	.data 0xffac          ; Binary data
F94C:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
F94E:	C0-B1       	in r28, 0x00          ; Load an I/O Location to Register
F950:	A3-79       	andi r26, 0x93        ; Logical AND with Immediate
F952:	01-2B       	or r16, r17           ; Logical OR
F954:	9C-BF       	out 0x3c, r25         ; Store Register to I/O Location
F956:	A3-69       	ori r26, 0x93         ; Logical OR with Immediate
F958:	C3-61       	ori r28, 0x13         ; Logical OR with Immediate
F95A:	A3-8B       	std Y+19, r26         ; Store Indirect From Register to Data Space
F95C:	43-83       	std Y+3, r20          ; Store Indirect From Register to Data Space
F95E:	E3-8B       	std Y+19, r30         ; Store Indirect From Register to Data Space
F960:	83-82       	std Y+3, r8           ; Store Indirect From Register to Data Space
F962:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
F964:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
F966:	2B-B1       	in r18, 0x0b          ; Load an I/O Location to Register
F968:	18-30       	cpi r17, 0x08         ; Compare with Immediate
F96A:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
F96C:	16-01       	movw r2, r12          ; Copy Register Word
F96E:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
F970:	2B-8B       	std Y+19, r18         ; Store Indirect From Register to Data Space
F972:	6B-82       	std Y+3, r6           ; Store Indirect From Register to Data Space
F974:	63-79       	andi r22, 0x93        ; Logical AND with Immediate
F976:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
F978:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
F97A:	63-71       	andi r22, 0x13        ; Logical AND with Immediate
F97C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F97E:	10-F9       	bld r17, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
F980:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
F982:	00-20       	and r0, r0            ; Logical AND
F984:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
F986:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
F988:	68-FD       	.data 0xfd68          ; Binary data
F98A:	FF-1F       	adc r31, r31          ; Add with Carry
F98C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
F98E:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
F990:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
F992:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
F994:	88-46       	sbci r24, 0x68        ; Subtract Immediate with Carry SBI
F996:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
F998:	83-79       	andi r24, 0x93        ; Logical AND with Immediate
F99A:	01-2B       	or r16, r17           ; Logical OR
F99C:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
F99E:	BE-80       	ldd r11, Y+6          ; Load Indirect from Data Space to Register
F9A0:	43-79       	andi r20, 0x93        ; Logical AND with Immediate
F9A2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F9A4:	02-0F       	add r16, r18          ; Add without Carry
F9A6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F9A8:	B9-80       	ldd r11, Y+1          ; Load Indirect from Data Space to Register
F9AA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
F9AC:	04-0F       	add r16, r20          ; Add without Carry
F9AE:	08-D0       	rcall .+16            ; Relative Call to Subroutine
F9B0:	81-69       	ori r24, 0x91         ; Logical OR with Immediate
F9B2:	C3-68       	ori r28, 0x83         ; Logical OR with Immediate
F9B4:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
F9B6:	04-D0       	rcall .+8             ; Relative Call to Subroutine
F9B8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
F9BA:	84-FF       	sbrs r24, 4           ; Skip if Bit in Register is Set
F9BC:	00-28       	or r0, r0             ; Logical OR
F9BE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F9C0:	AD-80       	ldd r10, Y+5          ; Load Indirect from Data Space to Register
F9C2:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
F9C4:	00-2A       	or r0, r16            ; Logical OR
F9C6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
F9C8:	8C-80       	ldd r8, Y+4           ; Load Indirect from Data Space to Register
F9CA:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
F9CC:	DF-F8       	.data 0xf8df          ; Binary data
F9CE:	B0-A1       	ldd r27, Y+32         ; Load Indirect from Data Space to Register
F9D0:	DF-F8       	.data 0xf8df          ; Binary data
F9D2:	B0-B1       	in r27, 0x00          ; Load an I/O Location to Register
F9D4:	20-6A       	ori r18, 0xa0         ; Logical OR with Immediate
F9D6:	E7-68       	ori r30, 0x87         ; Logical OR with Immediate
F9D8:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
F9DA:	04-90       	lpm r0, Z             ; Load Program Memory
F9DC:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
F9DE:	FF-39       	cpi r31, 0x9f         ; Compare with Immediate
F9E0:	09-EA       	ldi r16, 0xa9         ; Load Immediate
F9E2:	57-29       	or r21, r7            ; Logical OR
F9E4:	C7-F3       	brbs 7, .-16          ; Branch if Bit in SREG is Set
F9E6:	08-07       	cpc r16, r24          ; Compare with Carry
F9E8:	19-F0       	brbs 1, .+6           ; Branch if Bit in SREG is Set
F9EA:	FF-09       	sbc r31, r15          ; Subtract with Carry
F9EC:	29-D1       	rcall .+594           ; Relative Call to Subroutine
F9EE:	00-2F       	mov r16, r16          ; Copy Register
F9F0:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
F9F2:	AA-80       	ldd r10, Y+2          ; Load Indirect from Data Space to Register
F9F4:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
F9F6:	51-B9       	out 0x01, r21         ; Store Register to I/O Location
F9F8:	E3-69       	ori r30, 0x93         ; Logical OR with Immediate
F9FA:	33-B9       	out 0x03, r19         ; Store Register to I/O Location
F9FC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
F9FE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FA00:	39-FF       	.data 0xff39          ; Binary data
FA02:	00-28       	or r0, r0             ; Logical OR
FA04:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
FA06:	8E-80       	ldd r8, Y+6           ; Load Indirect from Data Space to Register
FA08:	88-E0       	ldi r24, 0x08         ; Load Immediate
FA0A:	A3-60       	ori r26, 0x03         ; Logical OR with Immediate
FA0C:	8A-E0       	ldi r24, 0x0a         ; Load Immediate
FA0E:	03-AA       	std Y+51, r0          ; Store Indirect From Register to Data Space
FA10:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
FA12:	16-F9       	bld r17, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
FA14:	00-28       	or r0, r0             ; Logical OR
FA16:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
FA18:	A8-80       	ld r10, Y             ; Load Indirect from Data Space to Register
FA1A:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
FA1C:	22-6A       	ori r18, 0xa2         ; Logical OR with Immediate
FA1E:	92-F8       	bld r9, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
FA20:	20-00       	.data 0x0020          ; Binary data
FA22:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
FA24:	F8-71       	andi r31, 0x18        ; Logical AND with Immediate
FA26:	52-4A       	sbci r21, 0xa2        ; Subtract Immediate with Carry SBI
FA28:	10-28       	or r1, r0             ; Logical OR
FA2A:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
FA2C:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
FA2E:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
FA30:	05-D3       	rcall .+1546          ; Relative Call to Subroutine
FA32:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FA34:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FA36:	1E-FF       	.data 0xff1e          ; Binary data
FA38:	00-28       	or r0, r0             ; Logical OR
FA3A:	73-D1       	rcall .+742           ; Relative Call to Subroutine
FA3C:	6E-E0       	ldi r22, 0x0e         ; Load Immediate
FA3E:	A3-60       	ori r26, 0x03         ; Logical OR with Immediate
FA40:	70-E0       	ldi r23, 0x00         ; Load Immediate
FA42:	C7-F5       	brbc 7, .+112         ; Branch if Bit in SREG is Cleared
FA44:	00-75       	andi r16, 0x50        ; Logical AND with Immediate
FA46:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
FA48:	AE-42       	sbci r26, 0x2e        ; Subtract Immediate with Carry SBI
FA4A:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
FA4C:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
FA4E:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
FA50:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
FA52:	02-7C       	andi r16, 0xc2        ; Logical AND with Immediate
FA54:	93-40       	sbci r25, 0x03        ; Subtract Immediate with Carry SBI
FA56:	42-69       	ori r20, 0x92         ; Logical OR with Immediate
FA58:	13-44       	sbci r17, 0x43        ; Subtract Immediate with Carry SBI
FA5A:	99-44       	sbci r25, 0x49        ; Subtract Immediate with Carry SBI
FA5C:	B5-F5       	brbc 5, .+108         ; Branch if Bit in SREG is Cleared
FA5E:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
FA60:	12-D1       	rcall .+548           ; Relative Call to Subroutine
FA62:	DB-F8       	.data 0xf8db          ; Binary data
FA64:	00-30       	cpi r16, 0x00         ; Compare with Immediate
FA66:	4B-45       	sbci r20, 0x5b        ; Subtract Immediate with Carry SBI
FA68:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
FA6A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
FA6C:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
FA6E:	CB-F8       	.data 0xf8cb          ; Binary data
FA70:	00-30       	cpi r16, 0x00         ; Compare with Immediate
FA72:	40-4B       	sbci r20, 0xb0        ; Subtract Immediate with Carry SBI
FA74:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
FA76:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
FA78:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
FA7A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FA7C:	C3-FE       	sbrs r12, 3           ; Skip if Bit in Register is Set
FA7E:	00-28       	or r0, r0             ; Logical OR
FA80:	4C-D0       	rcall .+152           ; Relative Call to Subroutine
FA82:	08-F5       	brbc 0, .+66          ; Branch if Bit in SREG is Cleared
FA84:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
FA86:	24-E0       	ldi r18, 0x04         ; Load Immediate
FA88:	7F-B9       	out 0x0f, r23         ; Store Register to I/O Location
FA8A:	E2-68       	ori r30, 0x82         ; Logical OR with Immediate
FA8C:	A3-69       	ori r26, 0x93         ; Logical OR with Immediate
FA8E:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
FA90:	0B-D3       	rcall .+1558          ; Relative Call to Subroutine
FA92:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
FA94:	85-F8       	bld r8, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
FA96:	00-28       	or r0, r0             ; Logical OR
FA98:	40-D0       	rcall .+128           ; Relative Call to Subroutine
FA9A:	CB-F8       	.data 0xf8cb          ; Binary data
FA9C:	00-90-36-4A 	lds r0, 0x4a36        ; Load Direct from Data Space (32-bit)
FAA0:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
FAA2:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
FAA4:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
FAA6:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
FAA8:	05-E0       	ldi r16, 0x05         ; Load Immediate
FAAA:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
FAAC:	01-21       	and r16, r1           ; Logical AND
FAAE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
FAB0:	A3-F8       	bld r10, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
FAB2:	00-28       	or r0, r0             ; Logical OR
FAB4:	32-D0       	rcall .+100           ; Relative Call to Subroutine
FAB6:	57-44       	sbci r21, 0x47        ; Subtract Immediate with Carry SBI
FAB8:	78-19       	sub r23, r8           ; Subtract Without Carry
FABA:	87-42       	sbci r24, 0x27        ; Subtract Immediate with Carry SBI
FABC:	09-D0       	rcall .+18            ; Relative Call to Subroutine
FABE:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
FAC0:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
FAC2:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
FAC4:	01-1B       	sub r16, r17          ; Subtract Without Carry
FAC6:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
FAC8:	01-1B       	sub r16, r17          ; Subtract Without Carry
FACA:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
FACC:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
FACE:	C7-1B       	sub r28, r23          ; Subtract Without Carry
FAD0:	B8-44       	sbci r27, 0x48        ; Subtract Immediate with Carry SBI
FAD2:	76-1B       	sub r23, r22          ; Subtract Without Carry
FAD4:	B6-B2       	in r11, 0x16          ; Load an I/O Location to Register
FAD6:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
FAD8:	1D-44       	sbci r17, 0x4d        ; Subtract Immediate with Carry SBI
FADA:	E5-60       	ori r30, 0x05         ; Logical OR with Immediate
FADC:	00-2E       	mov r0, r16           ; Copy Register
FADE:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
FAE0:	79-AF       	std Y+57, r23         ; Store Indirect From Register to Data Space
FAE2:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
FAE4:	A2-69       	ori r26, 0x92         ; Logical OR with Immediate
FAE6:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
FAE8:	05-D9       	rcall .+4618          ; Relative Call to Subroutine
FAEA:	A3-61       	ori r26, 0x13         ; Logical OR with Immediate
FAEC:	63-79       	andi r22, 0x93        ; Logical AND with Immediate
FAEE:	63-F0       	brbs 3, .+24          ; Branch if Bit in SREG is Set
FAF0:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
FAF2:	63-71       	andi r22, 0x13        ; Logical AND with Immediate
FAF4:	08-E0       	ldi r16, 0x08         ; Load Immediate
FAF6:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
FAF8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
FAFA:	2B-B1       	in r18, 0x0b          ; Load an I/O Location to Register
FAFC:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
FAFE:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
FB00:	63-79       	andi r22, 0x93        ; Logical AND with Immediate
FB02:	63-F0       	brbs 3, .+24          ; Branch if Bit in SREG is Set
FB04:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
FB06:	63-71       	andi r22, 0x13        ; Logical AND with Immediate
FB08:	63-79       	andi r22, 0x93        ; Logical AND with Immediate
FB0A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
FB0C:	08-0F       	add r16, r24          ; Add without Carry
FB0E:	03-D0       	rcall .+6             ; Relative Call to Subroutine
FB10:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FB12:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FB14:	0F-FF       	.data 0xff0f          ; Binary data
FB16:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
FB18:	01-98       	cbi 0x00, 1           ; Clear Bit in I/O Register
FB1A:	26-E0       	ldi r18, 0x06         ; Load Immediate
FB1C:	01-23       	and r16, r17          ; Logical AND
FB1E:	23-71       	andi r18, 0x13        ; Logical AND with Immediate
FB20:	00-20       	and r0, r0            ; Logical AND
FB22:	22-E0       	ldi r18, 0x02         ; Load Immediate
FB24:	B6-F5       	brbc 6, .+108         ; Branch if Bit in SREG is Cleared
FB26:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
FB28:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
FB2A:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
FB2C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
FB2E:	00-75       	andi r16, 0x50        ; Logical AND with Immediate
FB30:	23-6A       	ori r18, 0xa3         ; Logical OR with Immediate
FB32:	A2-68       	ori r26, 0x82         ; Logical OR with Immediate
FB34:	02-3A       	cpi r16, 0xa2         ; Compare with Immediate
FB36:	19-7C       	andi r17, 0xc9        ; Logical AND with Immediate
FB38:	02-FA       	bst r0, 2             ; Bit Store from Bit in Register to T Flag in SREG
FB3A:	01-F9       	bld r16, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
FB3C:	5B-69       	ori r21, 0x9b         ; Logical OR with Immediate
FB3E:	99-44       	sbci r25, 0x49        ; Subtract Immediate with Carry SBI
FB40:	B5-F5       	brbc 5, .+108         ; Branch if Bit in SREG is Cleared
FB42:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
FB44:	A1-D1       	rcall .+834           ; Relative Call to Subroutine
FB46:	8C-E7       	ldi r24, 0x7c         ; Load Immediate
FB48:	C7-F5       	brbc 7, .+112         ; Branch if Bit in SREG is Cleared
FB4A:	00-75       	andi r16, 0x50        ; Logical AND with Immediate
FB4C:	AD-B2       	in r10, 0x1d          ; Load an I/O Location to Register
FB4E:	AE-42       	sbci r26, 0x2e        ; Subtract Immediate with Carry SBI
FB50:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
FB52:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
FB54:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
FB56:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
FB58:	02-7C       	andi r16, 0xc2        ; Logical AND with Immediate
FB5A:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
FB5C:	02-F9       	bld r16, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
FB5E:	43-69       	ori r20, 0x93         ; Logical OR with Immediate
FB60:	99-44       	sbci r25, 0x49        ; Subtract Immediate with Carry SBI
FB62:	B5-F5       	brbc 5, .+108         ; Branch if Bit in SREG is Cleared
FB64:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
FB66:	A0-D1       	rcall .+832           ; Relative Call to Subroutine
FB68:	7B-E7       	ldi r23, 0x7b         ; Load Immediate
FB6A:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
FB6C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
FB6E:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
FB70:	F8-FF       	.data 0xfff8          ; Binary data
FB72:	FF-0F       	add r31, r31          ; Add without Carry
FB74:	70-FD       	sbrc r23, 0           ; Skip if Bit in Register is Cleared
FB76:	FF-1F       	adc r31, r31          ; Add with Carry
FB78:	74-FF       	sbrs r23, 4           ; Skip if Bit in Register is Set
FB7A:	FF-1F       	adc r31, r31          ; Add with Carry
FB7C:	68-FD       	.data 0xfd68          ; Binary data
FB7E:	FF-1F       	adc r31, r31          ; Add with Carry
FB80:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
FB82:	FF-1F       	adc r31, r31          ; Add with Carry
FB84:	F8-92       	.data 0x92f8          ; Binary data
FB86:	FF-1F       	adc r31, r31          ; Add with Carry
FB88:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
FB8A:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
FB8C:	02-AB       	std Y+50, r16         ; Store Indirect From Register to Data Space
FB8E:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
FB90:	01-1D       	adc r16, r1           ; Add with Carry
FB92:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
FB94:	01-22       	and r0, r17           ; Logical AND
FB96:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FB98:	F9-FE       	.data 0xfef9          ; Binary data
FB9A:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
FB9C:	5D-F8       	.data 0xf85d          ; Binary data
FB9E:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
FBA0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
FBA2:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
FBA4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FBA6:	D3-B1       	in r29, 0x03          ; Load an I/O Location to Register
FBA8:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
FBAA:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
FBAC:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
FBAE:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
FBB0:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
FBB2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FBB4:	27-FE       	sbrs r2, 7            ; Skip if Bit in Register is Set
FBB6:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FBB8:	90-B1       	in r25, 0x00          ; Load an I/O Location to Register
FBBA:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
FBBC:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
FBBE:	49-B1       	in r20, 0x09          ; Load an I/O Location to Register
FBC0:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
FBC2:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
FBC4:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
FBC6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FBC8:	1D-FE       	.data 0xfe1d          ; Binary data
FBCA:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FBCC:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
FBCE:	00-22       	and r0, r16           ; Logical AND
FBD0:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
FBD2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FBD4:	00-22       	and r0, r16           ; Logical AND
FBD6:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
FBD8:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
FBDA:	01-23       	and r16, r17          ; Logical AND
FBDC:	00-E0       	ldi r16, 0x00         ; Load Immediate
FBDE:	01-23       	and r16, r17          ; Logical AND
FBE0:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
FBE2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
FBE4:	74-FF       	sbrs r23, 4           ; Skip if Bit in Register is Set
FBE6:	FF-1F       	adc r31, r31          ; Add with Carry
FBE8:	70-FD       	sbrc r23, 0           ; Skip if Bit in Register is Cleared
FBEA:	FF-1F       	adc r31, r31          ; Add with Carry
FBEC:	F8-92       	.data 0x92f8          ; Binary data
FBEE:	FF-1F       	adc r31, r31          ; Add with Carry
FBF0:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
FBF2:	FF-1F       	adc r31, r31          ; Add with Carry
FBF4:	6C-FD       	.data 0xfd6c          ; Binary data
FBF6:	FF-1F       	adc r31, r31          ; Add with Carry
FBF8:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
FBFA:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
FBFC:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
FBFE:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
FC00:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
FC02:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
FC04:	0D-D0       	rcall .+26            ; Relative Call to Subroutine
FC06:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FC08:	CB-FF       	.data 0xffcb          ; Binary data
FC0A:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FC0C:	70-B1       	in r23, 0x00          ; Load an I/O Location to Register
FC0E:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
FC10:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
FC12:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
FC14:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
FC16:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FC18:	4F-FD       	.data 0xfd4f          ; Binary data
FC1A:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FC1C:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
FC1E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
FC20:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
FC22:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
FC24:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
FC26:	15-43       	sbci r17, 0x35        ; Subtract Immediate with Carry SBI
FC28:	1D-70       	andi r17, 0x0d        ; Logical AND with Immediate
FC2A:	01-23       	and r16, r17          ; Logical AND
FC2C:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
FC2E:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
FC30:	F8-92       	.data 0x92f8          ; Binary data
FC32:	FF-1F       	adc r31, r31          ; Add with Carry
FC34:	70-FD       	sbrc r23, 0           ; Skip if Bit in Register is Cleared
FC36:	FF-1F       	adc r31, r31          ; Add with Carry
FC38:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
FC3A:	FF-1F       	adc r31, r31          ; Add with Carry
FC3C:	74-FF       	sbrs r23, 4           ; Skip if Bit in Register is Set
FC3E:	FF-1F       	adc r31, r31          ; Add with Carry
FC40:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
FC42:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
FC44:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
FC46:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
FC48:	C3-68       	ori r28, 0x83         ; Logical OR with Immediate
FC4A:	01-33       	cpi r16, 0x31         ; Compare with Immediate
FC4C:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
FC4E:	25-D3       	rcall .+1610          ; Relative Call to Subroutine
FC50:	C3-69       	ori r28, 0x93         ; Logical OR with Immediate
FC52:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
FC54:	20-20       	and r2, r0            ; Logical AND
FC56:	10-2A       	or r1, r16            ; Logical OR
FC58:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
FC5A:	08-0A       	sbc r0, r24           ; Subtract with Carry
FC5C:	C8-09       	sbc r28, r8           ; Subtract with Carry
FC5E:	18-44       	sbci r17, 0x48        ; Subtract Immediate with Carry SBI
FC60:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
FC62:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
FC64:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
FC66:	04-D0       	rcall .+8             ; Relative Call to Subroutine
FC68:	00-21       	and r16, r0           ; Logical AND
FC6A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FC6C:	C5-FF       	sbrs r28, 5           ; Skip if Bit in Register is Set
FC6E:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FC70:	A8-B1       	in r26, 0x08          ; Load an I/O Location to Register
FC72:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
FC74:	20-30       	cpi r18, 0x00         ; Compare with Immediate
FC76:	10-2B       	or r17, r16           ; Logical OR
FC78:	06-D1       	rcall .+524           ; Relative Call to Subroutine
FC7A:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
FC7C:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
FC7E:	33-F8       	bld r3, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
FC80:	15-30       	cpi r17, 0x05         ; Compare with Immediate
FC82:	33-60       	ori r19, 0x03         ; Logical OR with Immediate
FC84:	01-23       	and r16, r17          ; Logical AND
FC86:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
FC88:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
FC8A:	7F-05       	cpc r23, r15          ; Compare with Carry
FC8C:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
FC8E:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
FC90:	25-30       	cpi r18, 0x05         ; Compare with Immediate
FC92:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
FC94:	70-43       	sbci r23, 0x30        ; Subtract Immediate with Carry SBI
FC96:	33-60       	ori r19, 0x03         ; Logical OR with Immediate
FC98:	01-23       	and r16, r17          ; Logical AND
FC9A:	00-E0       	ldi r16, 0x00         ; Load Immediate
FC9C:	00-23       	and r16, r16          ; Logical AND
FC9E:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
FCA0:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
FCA2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
FCA4:	F8-92       	.data 0x92f8          ; Binary data
FCA6:	FF-1F       	adc r31, r31          ; Add with Carry
FCA8:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
FCAA:	FF-1F       	adc r31, r31          ; Add with Carry
FCAC:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
FCAE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
FCB0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
FCB2:	17-46       	sbci r17, 0x67        ; Subtract Immediate with Carry SBI
FCB4:	01-29       	or r16, r1            ; Logical OR
FCB6:	31-D9       	rcall .+4706          ; Relative Call to Subroutine
FCB8:	C3-68       	ori r28, 0x83         ; Logical OR with Immediate
FCBA:	01-33       	cpi r16, 0x31         ; Compare with Immediate
FCBC:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
FCBE:	2F-D8       	rcall .+4190          ; Relative Call to Subroutine
FCC0:	C3-69       	ori r28, 0x93         ; Logical OR with Immediate
FCC2:	90-F8       	bld r9, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
FCC4:	20-20       	and r2, r0            ; Logical AND
FCC6:	10-2A       	or r1, r16            ; Logical OR
FCC8:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
FCCA:	0E-0A       	sbc r0, r30           ; Subtract with Carry
FCCC:	CE-09       	sbc r28, r14          ; Subtract with Carry
FCCE:	1E-44       	sbci r17, 0x4e        ; Subtract Immediate with Carry SBI
FCD0:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
FCD2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
FCD4:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
FCD6:	05-D0       	rcall .+10            ; Relative Call to Subroutine
FCD8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
FCDA:	00-21       	and r16, r0           ; Logical AND
FCDC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FCDE:	8C-FF       	.data 0xff8c          ; Binary data
FCE0:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FCE2:	00-B3       	in r16, 0x10          ; Load an I/O Location to Register
FCE4:	94-F8       	bld r9, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
FCE6:	20-30       	cpi r18, 0x00         ; Compare with Immediate
FCE8:	10-2B       	or r17, r16           ; Logical OR
FCEA:	04-D1       	rcall .+520           ; Relative Call to Subroutine
FCEC:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
FCEE:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
FCF0:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
FCF2:	15-70       	andi r17, 0x05        ; Logical AND with Immediate
FCF4:	04-E0       	ldi r16, 0x04         ; Load Immediate
FCF6:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
FCF8:	7F-05       	cpc r23, r15          ; Compare with Carry
FCFA:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
FCFC:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
FCFE:	25-70       	andi r18, 0x05        ; Logical AND with Immediate
FD00:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
FD02:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
FD04:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
FD06:	01-02       	muls r16, r17         ; Multiply Signed
FD08:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
FD0A:	23-7E       	andi r18, 0xe3        ; Logical AND with Immediate
FD0C:	01-2B       	or r16, r17           ; Logical OR
FD0E:	09-D9       	rcall .+4626          ; Relative Call to Subroutine
FD10:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
FD12:	1E-44       	sbci r17, 0x4e        ; Subtract Immediate with Carry SBI
FD14:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
FD16:	1E-60       	ori r17, 0x0e         ; Logical OR with Immediate
FD18:	01-23       	and r16, r17          ; Logical AND
FD1A:	04-E0       	ldi r16, 0x04         ; Load Immediate
FD1C:	00-23       	and r16, r16          ; Logical AND
FD1E:	02-E0       	ldi r16, 0x02         ; Load Immediate
FD20:	00-23       	and r16, r16          ; Logical AND
FD22:	00-E0       	ldi r16, 0x00         ; Load Immediate
FD24:	01-23       	and r16, r17          ; Logical AND
FD26:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
FD28:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
FD2A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
FD2C:	F8-92       	.data 0x92f8          ; Binary data
FD2E:	FF-1F       	adc r31, r31          ; Add with Carry
FD30:	74-FD       	sbrc r23, 4           ; Skip if Bit in Register is Cleared
FD32:	FF-1F       	adc r31, r31          ; Add with Carry
FD34:	74-FF       	sbrs r23, 4           ; Skip if Bit in Register is Set
FD36:	FF-1F       	adc r31, r31          ; Add with Carry
FD38:	6C-FD       	.data 0xfd6c          ; Binary data
FD3A:	FF-1F       	adc r31, r31          ; Add with Carry
FD3C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
FD3E:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
FD40:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
FD42:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
FD44:	8A-46       	sbci r24, 0x6a        ; Subtract Immediate with Carry SBI
FD46:	00-92-17-68 	sts 0x6817, r0        ; Store Direct to Data Space
FD4A:	1F-B1       	in r17, 0x0f          ; Load an I/O Location to Register
FD4C:	01-37       	cpi r16, 0x71         ; Compare with Immediate
FD4E:	00-23       	and r16, r16          ; Logical AND
FD50:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
FD52:	05-E0       	ldi r16, 0x05         ; Load Immediate
FD54:	07-68       	ori r16, 0x87         ; Logical OR with Immediate
FD56:	01-29       	or r16, r1            ; Logical OR
FD58:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
FD5A:	00-23       	and r16, r16          ; Logical AND
FD5C:	01-23       	and r16, r17          ; Logical AND
FD5E:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
FD60:	F3-68       	ori r31, 0x83         ; Logical OR with Immediate
FD62:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
FD64:	01-08       	sbc r0, r1            ; Subtract with Carry
FD66:	DB-B1       	in r29, 0x0b          ; Load an I/O Location to Register
FD68:	3C-46       	sbci r19, 0x6c        ; Subtract Immediate with Carry SBI
FD6A:	00-25       	clr r256              ; Clear Register
FD6C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
FD6E:	02-09       	sbc r16, r2           ; Subtract with Carry
FD70:	CB-46       	sbci r28, 0x6b        ; Subtract Immediate with Carry SBI
FD72:	A0-45       	sbci r26, 0x50        ; Subtract Immediate with Carry SBI
FD74:	3C-BF       	out 0x3c, r19         ; Store Register to I/O Location
FD76:	4C-46       	sbci r20, 0x6c        ; Subtract Immediate with Carry SBI
FD78:	5F-46       	sbci r21, 0x6f        ; Subtract Immediate with Carry SBI
FD7A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
FD7C:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
FD7E:	03-AA       	std Y+51, r0          ; Store Indirect From Register to Data Space
FD80:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FD82:	5E-FF       	.data 0xff5e          ; Binary data
FD84:	60-B1       	in r22, 0x00          ; Load an I/O Location to Register
FD86:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
FD88:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
FD8A:	67-1C       	adc r6, r7            ; Add with Carry
FD8C:	03-E0       	ldi r16, 0x03         ; Load Immediate
FD8E:	63-1C       	adc r6, r3            ; Add with Carry
FD90:	DB-1B       	sub r29, r27          ; Subtract Without Carry
FD92:	53-45       	sbci r21, 0x53        ; Subtract Immediate with Carry SBI
FD94:	06-D0       	rcall .+12            ; Relative Call to Subroutine
FD96:	01-35       	cpi r16, 0x51         ; Compare with Immediate
FD98:	01-34       	cpi r16, 0x41         ; Compare with Immediate
FD9A:	F3-68       	ori r31, 0x83         ; Logical OR with Immediate
FD9C:	AB-42       	sbci r26, 0x2b        ; Subtract Immediate with Carry SBI
FD9E:	E8-D8       	rcall .+4560          ; Relative Call to Subroutine
FDA0:	00-23       	and r16, r16          ; Logical AND
FDA2:	2A-E0       	ldi r18, 0x0a         ; Load Immediate
FDA4:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
FDA6:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
FDA8:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
FDAA:	70-42       	sbci r23, 0x20        ; Subtract Immediate with Carry SBI
FDAC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FDAE:	7E-FF       	.data 0xff7e          ; Binary data
FDB0:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FDB2:	48-B9       	out 0x08, r20         ; Store Register to I/O Location
FDB4:	21-E0       	ldi r18, 0x01         ; Load Immediate
FDB6:	65-1E       	adc r6, r21           ; Add with Carry
FDB8:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
FDBA:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
FDBC:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
FDBE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FDC0:	75-FF       	sbrs r23, 5           ; Skip if Bit in Register is Set
FDC2:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FDC4:	18-B9       	out 0x08, r17         ; Store Register to I/O Location
FDC6:	18-E0       	ldi r17, 0x08         ; Load Immediate
FDC8:	BC-42       	sbci r27, 0x2c        ; Subtract Immediate with Carry SBI
FDCA:	F4-D8       	rcall .+4584          ; Relative Call to Subroutine
FDCC:	03-E0       	ldi r16, 0x03         ; Load Immediate
FDCE:	BD-42       	sbci r27, 0x2d        ; Subtract Immediate with Carry SBI
FDD0:	01-D9       	rcall .+4610          ; Relative Call to Subroutine
FDD2:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
FDD4:	EF-E7       	ldi r30, 0x7f         ; Load Immediate
FDD6:	00-9B       	sbis 0x00, 0          ; Skip if Bit in I/O Register is Set
FDD8:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
FDDA:	29-B1       	in r18, 0x09          ; Load an I/O Location to Register
FDDC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
FDDE:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
FDE0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FDE2:	64-FF       	sbrs r22, 4           ; Skip if Bit in Register is Set
FDE4:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
FDE6:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
FDE8:	00-9B       	sbis 0x00, 0          ; Skip if Bit in I/O Register is Set
FDEA:	1F-60       	ori r17, 0x0f         ; Logical OR with Immediate
FDEC:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
FDEE:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
FDF0:	01-37       	cpi r16, 0x71         ; Compare with Immediate
FDF2:	37-60       	ori r19, 0x07         ; Logical OR with Immediate
FDF4:	01-23       	and r16, r17          ; Logical AND
FDF6:	00-E0       	ldi r16, 0x00         ; Load Immediate
FDF8:	01-23       	and r16, r17          ; Logical AND
FDFA:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
FDFC:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
FDFE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
FE00:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
FE02:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
FE04:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
FE06:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
FE08:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
FE0A:	80-52       	subi r24, 0x20        ; Subtract Immediate
FE0C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FE0E:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
FE10:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
FE12:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FE14:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
FE16:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
FE18:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
FE1A:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
FE1C:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
FE1E:	16-4A       	sbci r17, 0xa6        ; Subtract Immediate with Carry SBI
FE20:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FE22:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
FE24:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FE26:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
FE28:	01-0F       	add r16, r17          ; Add without Carry
FE2A:	07-BF       	out 0x37, r16         ; Store Register to I/O Location
FE2C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
FE2E:	10-72       	andi r17, 0x20        ; Logical AND with Immediate
FE30:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
FE32:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
FE34:	00-72       	andi r16, 0x20        ; Logical AND with Immediate
FE36:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
FE38:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FE3A:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
FE3C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FE3E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
FE40:	02-0F       	add r16, r18          ; Add without Carry
FE42:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
FE44:	00-72       	andi r16, 0x20        ; Logical AND with Immediate
FE46:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
FE48:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
FE4A:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
FE4C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FE4E:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
FE50:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FE52:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
FE54:	04-0F       	add r16, r20          ; Add without Carry
FE56:	07-BF       	out 0x37, r16         ; Store Register to I/O Location
FE58:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
FE5A:	10-72       	andi r17, 0x20        ; Logical AND with Immediate
FE5C:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
FE5E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
FE60:	00-72       	andi r16, 0x20        ; Logical AND with Immediate
FE62:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
FE64:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
FE66:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FE68:	3C-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
FE6A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE6C:	00-C0       	rjmp .+0              ; Relative Jump
FE6E:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
FE70:	01-40       	sbci r16, 0x01        ; Subtract Immediate with Carry SBI
FE72:	1F-00       	.data 0x001f          ; Binary data
FE74:	01-10       	cpse r0, r1           ; Compare Skip if Equal
FE76:	00-38       	cpi r16, 0x80         ; Compare with Immediate
FE78:	00-00       	nop                   ; No Operation
FE7A:	1F-80       	ldd r1, Y+7           ; Load Indirect from Data Space to Register
FE7C:	AA-01       	movw r20, r20         ; Copy Register Word
FE7E:	00-20       	and r0, r0            ; Logical AND
FE80:	18-B0       	in r1, 0x08           ; Load an I/O Location to Register
FE82:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE84:	08-C0       	rjmp .+16             ; Relative Jump
FE86:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE88:	1C-B0       	in r1, 0x0c           ; Load an I/O Location to Register
FE8A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE8C:	0C-C0       	rjmp .+24             ; Relative Jump
FE8E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE90:	14-B0       	in r1, 0x04           ; Load an I/O Location to Register
FE92:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE94:	04-C0       	rjmp .+8              ; Relative Jump
FE96:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
FE98:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
FE9A:	41-24       	clr r65               ; Clear Register
FE9C:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
FE9E:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
FEA0:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
FEA2:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
FEA4:	80-20       	and r8, r0            ; Logical AND
FEA6:	06-3B       	cpi r16, 0xb6         ; Compare with Immediate
FEA8:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
FEAA:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
FEAC:	03-78       	andi r16, 0x83        ; Logical AND with Immediate
FEAE:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
FEB0:	80-0F       	add r24, r16          ; Add without Carry
FEB2:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
FEB4:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
FEB6:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FEB8:	8B-54       	subi r24, 0x4b        ; Subtract Immediate
FEBA:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
FEBC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FEBE:	11-44       	sbci r17, 0x41        ; Subtract Immediate with Carry SBI
FEC0:	4B-70       	andi r20, 0x0b        ; Logical AND with Immediate
FEC2:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
FEC4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FEC6:	8B-70       	andi r24, 0x0b        ; Logical AND with Immediate
FEC8:	5D-F8       	.data 0xf85d          ; Binary data
FECA:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
FECC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FECE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
FED0:	07-00       	.data 0x0007          ; Binary data
FED2:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
FED4:	0A-00       	.data 0x000a          ; Binary data
FED6:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
FED8:	09-00       	.data 0x0009          ; Binary data
FEDA:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
FEDC:	08-00       	.data 0x0008          ; Binary data
FEDE:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
FEE0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
FEE2:	06-4C       	sbci r16, 0xc6        ; Subtract Immediate with Carry SBI
FEE4:	0E-20       	and r0, r14           ; Logical AND
FEE6:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
FEE8:	00-22       	and r0, r16           ; Logical AND
FEEA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FEEC:	D5-FF       	sbrs r29, 5           ; Skip if Bit in Register is Set
FEEE:	0F-20       	and r0, r15           ; Logical AND
FEF0:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
FEF2:	03-22       	and r0, r19           ; Logical AND
FEF4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FEF6:	D0-FF       	sbrs r29, 0           ; Skip if Bit in Register is Set
FEF8:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
FEFA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
FEFC:	94-FF       	sbrs r25, 4           ; Skip if Bit in Register is Set
FEFE:	FF-1F       	adc r31, r31          ; Add with Carry
FF00:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
FF02:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
FF04:	01-27       	clr r769              ; Clear Register
FF06:	00-25       	clr r256              ; Clear Register
FF08:	1C-4C       	sbci r17, 0xcc        ; Subtract Immediate with Carry SBI
FF0A:	DF-F8       	.data 0xf8df          ; Binary data
FF0C:	74-80       	ldd r7, Y+4           ; Load Indirect from Data Space to Register
FF0E:	DF-F8       	.data 0xf8df          ; Binary data
FF10:	74-90       	lpm r7, Z             ; Load Program Memory
FF12:	02-E0       	ldi r16, 0x02         ; Load Immediate
FF14:	01-35       	cpi r16, 0x51         ; Compare with Immediate
FF16:	01-37       	cpi r16, 0x71         ; Compare with Immediate
FF18:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
FF1A:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
FF1C:	FF-0F       	add r31, r31          ; Add without Carry
FF1E:	1B-D0       	rcall .+54            ; Relative Call to Subroutine
FF20:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
FF22:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
FF24:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FF26:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
FF28:	01-22       	and r0, r17           ; Logical AND
FF2A:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
FF2C:	EE-B2       	in r14, 0x1e          ; Load an I/O Location to Register
FF2E:	18-F8       	.data 0xf818          ; Binary data
FF30:	06-10       	cpse r0, r6           ; Compare Skip if Equal
FF32:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FF34:	09-09       	sbc r16, r9           ; Subtract with Carry
FF36:	10-22       	and r1, r16           ; Logical AND
FF38:	00-23       	and r16, r16          ; Logical AND
FF3A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
FF3C:	23-FC       	sbrc r2, 3            ; Skip if Bit in Register is Cleared
FF3E:	18-F8       	.data 0xf818          ; Binary data
FF40:	06-10       	cpse r0, r6           ; Compare Skip if Equal
FF42:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FF44:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
FF46:	0F-01       	movw r0, r30          ; Copy Register Word
FF48:	10-22       	and r1, r16           ; Logical AND
FF4A:	00-23       	and r16, r16          ; Logical AND
FF4C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
FF4E:	1A-FC       	.data 0xfc1a          ; Binary data
FF50:	05-2F       	mov r16, r21          ; Copy Register
FF52:	DF-D9       	rcall .+5054          ; Relative Call to Subroutine
FF54:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
FF56:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
FF58:	98-F8       	.data 0xf898          ; Binary data
FF5A:	00-10       	cpse r0, r0           ; Compare Skip if Equal
FF5C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FF5E:	09-09       	sbc r16, r9           ; Subtract with Carry
FF60:	10-22       	and r1, r16           ; Logical AND
FF62:	00-23       	and r16, r16          ; Logical AND
FF64:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
FF66:	0E-FC       	.data 0xfc0e          ; Binary data
FF68:	98-F8       	.data 0xf898          ; Binary data
FF6A:	00-10       	cpse r0, r0           ; Compare Skip if Equal
FF6C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
FF6E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
FF70:	0F-01       	movw r0, r30          ; Copy Register Word
FF72:	10-22       	and r1, r16           ; Logical AND
FF74:	00-23       	and r16, r16          ; Logical AND
FF76:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
FF78:	05-FC       	sbrc r0, 5            ; Skip if Bit in Register is Cleared
FF7A:	CB-E7       	ldi r28, 0x7b         ; Load Immediate
FF7C:	C0-01       	movw r24, r0          ; Copy Register Word
FF7E:	00-20       	and r0, r0            ; Logical AND
FF80:	94-FF       	sbrs r25, 4           ; Skip if Bit in Register is Set
FF82:	FF-1F       	adc r31, r31          ; Add with Carry
FF84:	30-81       	ld r19, Z             ; Load Indirect from Data Space to Register
FF86:	01-00       	.data 0x0001          ; Binary data
FF88:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
FF8A:	D8-78       	andi r29, 0x88        ; Logical AND with Immediate
FF8C:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
FF8E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
FF90:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
FF92:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
FF94:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
FF96:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
FF98:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
FF9A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FF9C:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
FF9E:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
FFA0:	00-93-FF-1F 	sts 0x1fff, r16       ; Store Direct to Data Space
FFA4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
FFA6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
FFA8:	EF-FF       	.data 0xffef          ; Binary data
FFAA:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
FFAC:	02-0F       	add r16, r18          ; Add without Carry
FFAE:	FA-D0       	rcall .+500           ; Relative Call to Subroutine
FFB0:	02-22       	and r0, r18           ; Logical AND
FFB2:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
FFB4:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
FFB6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
FFB8:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
FFBA:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
FFBC:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
FFBE:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FFC0:	13-B9       	out 0x03, r17         ; Store Register to I/O Location
FFC2:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
FFC4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FFC6:	73-B1       	in r23, 0x03          ; Load an I/O Location to Register
FFC8:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
FFCA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
FFCC:	20-2B       	or r18, r16           ; Logical OR
FFCE:	03-D9       	rcall .+4614          ; Relative Call to Subroutine
FFD0:	01-23       	and r16, r17          ; Logical AND
FFD2:	03-71       	andi r16, 0x13        ; Logical AND with Immediate
FFD4:	00-20       	and r0, r0            ; Logical AND
FFD6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FFD8:	58-1C       	adc r5, r8            ; Add with Carry
FFDA:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
FFDC:	10-70       	andi r17, 0x00        ; Logical AND with Immediate
FFDE:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
FFE0:	D1-54       	subi r29, 0x41        ; Subtract Immediate
FFE2:	01-20       	and r0, r1            ; Logical AND
FFE4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FFE6:	00-20       	and r0, r0            ; Logical AND
FFE8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FFEA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
FFEC:	06-00       	.data 0x0006          ; Binary data
FFEE:	00-20       	and r0, r0            ; Logical AND
FFF0:	C8-FF       	.data 0xffc8          ; Binary data
FFF2:	FF-1F       	adc r31, r31          ; Add with Carry
FFF4:	07-00       	.data 0x0007          ; Binary data
FFF6:	00-20       	and r0, r0            ; Logical AND
FFF8:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
FFFA:	FF-1F       	adc r31, r31          ; Add with Carry
FFFC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
FFFE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10000:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
10002:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
10004:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
10006:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10008:	C0-1A       	sub r12, r16          ; Subtract Without Carry
1000A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1000C:	05-00       	.data 0x0005          ; Binary data
1000E:	00-20       	and r0, r0            ; Logical AND
10010:	04-00       	.data 0x0004          ; Binary data
10012:	00-20       	and r0, r0            ; Logical AND
10014:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
10016:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10018:	07-4A       	sbci r16, 0xa7        ; Subtract Immediate with Carry SBI
1001A:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
1001C:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
1001E:	05-D9       	rcall .+4618          ; Relative Call to Subroutine
10020:	59-1C       	adc r5, r9            ; Add with Carry
10022:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
10024:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
10026:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
10028:	D0-5C       	subi r29, 0xc0        ; Subtract Immediate
1002A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1002C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1002E:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
10030:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10032:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10034:	04-00       	.data 0x0004          ; Binary data
10036:	00-20       	and r0, r0            ; Logical AND
10038:	05-00       	.data 0x0005          ; Binary data
1003A:	00-20       	and r0, r0            ; Logical AND
1003C:	CC-FF       	.data 0xffcc          ; Binary data
1003E:	FF-1F       	adc r31, r31          ; Add with Carry
10040:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
10042:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10044:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
10046:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
10048:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
1004A:	86-BF       	out 0x36, r24         ; Store Register to I/O Location
1004C:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
1004E:	D0-5C       	subi r29, 0xc0        ; Subtract Immediate
10050:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
10052:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
10054:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10056:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10058:	04-00       	.data 0x0004          ; Binary data
1005A:	00-20       	and r0, r0            ; Logical AND
1005C:	05-00       	.data 0x0005          ; Binary data
1005E:	00-20       	and r0, r0            ; Logical AND
10060:	CC-FF       	.data 0xffcc          ; Binary data
10062:	FF-1F       	adc r31, r31          ; Add with Carry
10064:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
10066:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
10068:	DB-78       	andi r29, 0x8b        ; Logical AND with Immediate
1006A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1006C:	20-0F       	add r18, r16          ; Add without Carry
1006E:	0C-D1       	rcall .+536           ; Relative Call to Subroutine
10070:	12-20       	and r1, r2            ; Logical AND
10072:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
10074:	97-FC       	sbrc r9, 7            ; Skip if Bit in Register is Cleared
10076:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
10078:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1007A:	9B-B1       	in r25, 0x0b          ; Load an I/O Location to Register
1007C:	00-21       	and r16, r0           ; Logical AND
1007E:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
10080:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
10082:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
10084:	10-78       	andi r17, 0x80        ; Logical AND with Immediate
10086:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
10088:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1008A:	0B-4A       	sbci r16, 0xab        ; Subtract Immediate with Carry SBI
1008C:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
1008E:	01-33       	cpi r16, 0x31         ; Compare with Immediate
10090:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
10092:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10094:	01-2B       	or r16, r17           ; Logical OR
10096:	02-D8       	rcall .+4100          ; Relative Call to Subroutine
10098:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1009A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1009C:	13-B9       	out 0x03, r17         ; Store Register to I/O Location
1009E:	12-20       	and r1, r2            ; Logical AND
100A0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
100A2:	80-FC       	sbrc r8, 0            ; Skip if Bit in Register is Cleared
100A4:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
100A6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
100A8:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
100AA:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
100AC:	A0-FF       	sbrs r26, 0           ; Skip if Bit in Register is Set
100AE:	FF-1F       	adc r31, r31          ; Add with Carry
100B0:	04-00       	.data 0x0004          ; Binary data
100B2:	00-20       	and r0, r0            ; Logical AND
100B4:	05-00       	.data 0x0005          ; Binary data
100B6:	00-20       	and r0, r0            ; Logical AND
100B8:	F0-FF       	sbrs r31, 0           ; Skip if Bit in Register is Set
100BA:	FF-1F       	adc r31, r31          ; Add with Carry
100BC:	C8-FF       	.data 0xffc8          ; Binary data
100BE:	FF-1F       	adc r31, r31          ; Add with Carry
100C0:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
100C2:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
100C4:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
100C6:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
100C8:	13-B9       	out 0x03, r17         ; Store Register to I/O Location
100CA:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
100CC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
100CE:	93-B1       	in r25, 0x03          ; Load an I/O Location to Register
100D0:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
100D2:	1D-78       	andi r17, 0x8d        ; Logical AND with Immediate
100D4:	C5-F1       	brbs 5, .+112         ; Branch if Bit in SREG is Set
100D6:	21-03       	mulsu r18, r17        ; Multiply Signed with Unsigned
100D8:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
100DA:	02-D2       	rcall .+1028          ; Relative Call to Subroutine
100DC:	01-22       	and r0, r17           ; Logical AND
100DE:	02-71       	andi r16, 0x12        ; Logical AND with Immediate
100E0:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
100E2:	09-48       	sbci r16, 0x89        ; Subtract Immediate with Carry SBI
100E4:	28-44       	sbci r18, 0x48        ; Subtract Immediate with Carry SBI
100E6:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
100E8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
100EA:	52-FA       	bst r5, 2             ; Bit Store from Bit in Register to T Flag in SREG
100EC:	25-44       	sbci r18, 0x45        ; Subtract Immediate with Carry SBI
100EE:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
100F0:	1D-70       	andi r17, 0x0d        ; Logical AND with Immediate
100F2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
100F4:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
100F6:	00-20       	and r0, r0            ; Logical AND
100F8:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
100FA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
100FC:	06-00       	.data 0x0006          ; Binary data
100FE:	00-20       	and r0, r0            ; Logical AND
10100:	C8-FF       	.data 0xffc8          ; Binary data
10102:	FF-1F       	adc r31, r31          ; Add with Carry
10104:	07-00       	.data 0x0007          ; Binary data
10106:	00-20       	and r0, r0            ; Logical AND
10108:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
1010A:	FF-1F       	adc r31, r31          ; Add with Carry
1010C:	00-22       	and r0, r16           ; Logical AND
1010E:	02-71       	andi r16, 0x12        ; Logical AND with Immediate
10110:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10112:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
10114:	81-60       	ori r24, 0x01         ; Logical OR with Immediate
10116:	02-73       	andi r16, 0x32        ; Logical AND with Immediate
10118:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
1011A:	02-60       	ori r16, 0x02         ; Logical OR with Immediate
1011C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1011E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10120:	40-81       	ld r20, Z             ; Load Indirect from Data Space to Register
10122:	01-00       	.data 0x0001          ; Binary data
10124:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
10126:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
10128:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1012A:	40-0F       	add r20, r16          ; Add without Carry
1012C:	10-D0       	rcall .+32            ; Relative Call to Subroutine
1012E:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
10130:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
10132:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
10134:	27-22       	and r2, r23           ; Logical AND
10136:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
10138:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
1013A:	06-E0       	ldi r16, 0x06         ; Load Immediate
1013C:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1013E:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
10140:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
10142:	1A-22       	and r1, r26           ; Logical AND
10144:	0D-22       	and r0, r29           ; Logical AND
10146:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
10148:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
1014A:	04-22       	and r0, r20           ; Logical AND
1014C:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
1014E:	9A-71       	andi r25, 0x1a        ; Logical AND with Immediate
10150:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10152:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10154:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
10156:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10158:	7F-1A       	sub r7, r31           ; Subtract Without Carry
1015A:	06-00       	.data 0x0006          ; Binary data
1015C:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
1015E:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
10160:	3F-42       	sbci r19, 0x2f        ; Subtract Immediate with Carry SBI
10162:	0F-00       	.data 0x000f          ; Binary data
10164:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
10166:	00-23       	and r16, r16          ; Logical AND
10168:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
1016A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1016C:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
1016E:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
10170:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
10172:	40-01       	movw r8, r0           ; Copy Register Word
10174:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
10176:	16-4A       	sbci r17, 0xa6        ; Subtract Immediate with Carry SBI
10178:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
1017A:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
1017C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1017E:	12-2B       	or r17, r18           ; Logical OR
10180:	04-D1       	rcall .+520           ; Relative Call to Subroutine
10182:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10184:	19-72       	andi r17, 0x29        ; Logical AND with Immediate
10186:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
10188:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1018A:	05-E0       	ldi r16, 0x05         ; Load Immediate
1018C:	11-2B       	or r17, r17           ; Logical OR
1018E:	03-D1       	rcall .+518           ; Relative Call to Subroutine
10190:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10192:	19-72       	andi r17, 0x29        ; Logical AND with Immediate
10194:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
10196:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10198:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
1019A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1019C:	13-2B       	or r17, r19           ; Logical OR
1019E:	04-D1       	rcall .+520           ; Relative Call to Subroutine
101A0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
101A2:	19-72       	andi r17, 0x29        ; Logical AND with Immediate
101A4:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
101A6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
101A8:	05-E0       	ldi r16, 0x05         ; Load Immediate
101AA:	10-2B       	or r17, r16           ; Logical OR
101AC:	03-D1       	rcall .+518           ; Relative Call to Subroutine
101AE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
101B0:	19-72       	andi r17, 0x29        ; Logical AND with Immediate
101B2:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
101B4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
101B6:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
101B8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
101BA:	B4-FF       	sbrs r27, 4           ; Skip if Bit in Register is Set
101BC:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
101BE:	20-22       	and r2, r16           ; Logical AND
101C0:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
101C2:	80-22       	and r8, r16           ; Logical AND
101C4:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
101C6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
101C8:	C8-FF       	.data 0xffc8          ; Binary data
101CA:	FF-1F       	adc r31, r31          ; Add with Carry
101CC:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
101CE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
101D0:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
101D2:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
101D4:	FC-92       	st X, r15             ; Store Indirect From Register to Data Space
101D6:	FF-1F       	adc r31, r31          ; Add with Carry
101D8:	0C-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
101DA:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
101DC:	04-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
101DE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
101E0:	04-93       	xch Z, r16            ; Exchange
101E2:	FF-1F       	adc r31, r31          ; Add with Carry
101E4:	08-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
101E6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
101E8:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
101EA:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
101EC:	A0-86       	std Y+8, r10          ; Store Indirect From Register to Data Space
101EE:	01-00       	.data 0x0001          ; Binary data
101F0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
101F2:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
101F4:	DB-78       	andi r29, 0x8b        ; Logical AND with Immediate
101F6:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
101F8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
101FA:	10-0F       	add r17, r16          ; Add without Carry
101FC:	06-D0       	rcall .+12            ; Relative Call to Subroutine
101FE:	10-21       	and r17, r0           ; Logical AND
10200:	39-4A       	sbci r19, 0xa9        ; Subtract Immediate with Carry SBI
10202:	D1-70       	andi r29, 0x01        ; Logical AND with Immediate
10204:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10206:	40-0F       	add r20, r16          ; Add without Carry
10208:	03-D1       	rcall .+518           ; Relative Call to Subroutine
1020A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1020C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1020E:	40-0F       	add r20, r16          ; Add without Carry
10210:	2C-D0       	rcall .+88            ; Relative Call to Subroutine
10212:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10214:	04-0F       	add r16, r20          ; Add without Carry
10216:	1B-D0       	rcall .+54            ; Relative Call to Subroutine
10218:	00-23       	and r16, r16          ; Logical AND
1021A:	34-4A       	sbci r19, 0xa4        ; Subtract Immediate with Carry SBI
1021C:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1021E:	34-4A       	sbci r19, 0xa4        ; Subtract Immediate with Carry SBI
10220:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10222:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
10224:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
10226:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
10228:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1022A:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
1022C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1022E:	2B-B9       	out 0x0b, r18         ; Store Register to I/O Location
10230:	01-22       	and r0, r17           ; Logical AND
10232:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
10234:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10236:	00-22       	and r0, r16           ; Logical AND
10238:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
1023A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1023C:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
1023E:	D0-22       	and r13, r16          ; Logical AND
10240:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10242:	2D-4A       	sbci r18, 0xad        ; Subtract Immediate with Carry SBI
10244:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
10246:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
10248:	01-22       	and r0, r17           ; Logical AND
1024A:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
1024C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1024E:	09-E0       	ldi r16, 0x09         ; Load Immediate
10250:	01-22       	and r0, r17           ; Logical AND
10252:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
10254:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10256:	00-22       	and r0, r16           ; Logical AND
10258:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
1025A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1025C:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
1025E:	C0-22       	and r12, r16          ; Logical AND
10260:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10262:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
10264:	02-22       	and r0, r18           ; Logical AND
10266:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
10268:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
1026A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1026C:	1E-4A       	sbci r17, 0xae        ; Subtract Immediate with Carry SBI
1026E:	92-78       	andi r25, 0x82        ; Logical AND with Immediate
10270:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
10272:	10-0F       	add r17, r16          ; Add without Carry
10274:	1C-D0       	rcall .+56            ; Relative Call to Subroutine
10276:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10278:	01-0F       	add r16, r17          ; Add without Carry
1027A:	14-D1       	rcall .+552           ; Relative Call to Subroutine
1027C:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
1027E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10280:	1B-4A       	sbci r17, 0xab        ; Subtract Immediate with Carry SBI
10282:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
10284:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
10286:	07-D9       	rcall .+4622          ; Relative Call to Subroutine
10288:	59-1C       	adc r5, r9            ; Add with Carry
1028A:	1C-4A       	sbci r17, 0xac        ; Subtract Immediate with Carry SBI
1028C:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
1028E:	1A-4A       	sbci r17, 0xaa        ; Subtract Immediate with Carry SBI
10290:	D2-5C       	subi r29, 0xc2        ; Subtract Immediate
10292:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
10294:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
10296:	02-E0       	ldi r16, 0x02         ; Load Immediate
10298:	00-22       	and r0, r16           ; Logical AND
1029A:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
1029C:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
1029E:	D0-22       	and r13, r16          ; Logical AND
102A0:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
102A2:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
102A4:	1B-E0       	ldi r17, 0x0b         ; Load Immediate
102A6:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
102A8:	C0-22       	and r12, r16          ; Logical AND
102AA:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
102AC:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
102AE:	16-E0       	ldi r17, 0x06         ; Load Immediate
102B0:	00-22       	and r0, r16           ; Logical AND
102B2:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
102B4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
102B6:	12-20       	and r1, r2            ; Logical AND
102B8:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
102BA:	03-22       	and r0, r19           ; Logical AND
102BC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
102BE:	3E-FC       	.data 0xfc3e          ; Binary data
102C0:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
102C2:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
102C4:	DA-B2       	in r13, 0x1a          ; Load an I/O Location to Register
102C6:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
102C8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
102CA:	1F-2B       	or r17, r31           ; Logical OR
102CC:	07-D8       	rcall .+4110          ; Relative Call to Subroutine
102CE:	07-49       	sbci r16, 0x97        ; Subtract Immediate with Carry SBI
102D0:	09-78       	andi r16, 0x89        ; Logical AND with Immediate
102D2:	21-B1       	in r18, 0x01          ; Load an I/O Location to Register
102D4:	58-1C       	adc r5, r8            ; Add with Carry
102D6:	0A-49       	sbci r16, 0x9a        ; Subtract Immediate with Carry SBI
102D8:	08-70       	andi r16, 0x08        ; Logical AND with Immediate
102DA:	0C-49       	sbci r16, 0x9c        ; Subtract Immediate with Carry SBI
102DC:	CA-54       	subi r28, 0x4a        ; Subtract Immediate
102DE:	02-22       	and r0, r18           ; Logical AND
102E0:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
102E2:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
102E4:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
102E6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
102E8:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
102EA:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
102EC:	9C-FF       	.data 0xff9c          ; Binary data
102EE:	FF-1F       	adc r31, r31          ; Add with Carry
102F0:	07-00       	.data 0x0007          ; Binary data
102F2:	00-20       	and r0, r0            ; Logical AND
102F4:	EC-FF       	.data 0xffec          ; Binary data
102F6:	FF-1F       	adc r31, r31          ; Add with Carry
102F8:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
102FA:	FF-1F       	adc r31, r31          ; Add with Carry
102FC:	08-00       	.data 0x0008          ; Binary data
102FE:	00-20       	and r0, r0            ; Logical AND
10300:	05-00       	.data 0x0005          ; Binary data
10302:	00-20       	and r0, r0            ; Logical AND
10304:	F0-FF       	sbrs r31, 0           ; Skip if Bit in Register is Set
10306:	FF-1F       	adc r31, r31          ; Add with Carry
10308:	65-00       	.data 0x0065          ; Binary data
1030A:	01-00       	.data 0x0001          ; Binary data
1030C:	CC-FF       	.data 0xffcc          ; Binary data
1030E:	FF-1F       	adc r31, r31          ; Add with Carry
10310:	49-00       	.data 0x0049          ; Binary data
10312:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
10314:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
10316:	01-23       	and r16, r17          ; Logical AND
10318:	03-4A       	sbci r16, 0xa3        ; Subtract Immediate with Carry SBI
1031A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1031C:	03-4A       	sbci r16, 0xa3        ; Subtract Immediate with Carry SBI
1031E:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10320:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10322:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10324:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
10326:	FF-1F       	adc r31, r31          ; Add with Carry
10328:	06-00       	.data 0x0006          ; Binary data
1032A:	00-20       	and r0, r0            ; Logical AND
1032C:	07-00       	.data 0x0007          ; Binary data
1032E:	00-20       	and r0, r0            ; Logical AND
10330:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
10332:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
10334:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
10336:	88-46       	sbci r24, 0x68        ; Subtract Immediate with Carry SBI
10338:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
1033A:	12-22       	and r1, r18           ; Logical AND
1033C:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
1033E:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
10340:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10342:	20-0F       	add r18, r16          ; Add without Carry
10344:	03-D0       	rcall .+6             ; Relative Call to Subroutine
10346:	B4-22       	and r11, r20          ; Logical AND
10348:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
1034A:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
1034C:	1D-E0       	ldi r17, 0x0d         ; Load Immediate
1034E:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
10350:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
10352:	00-93-00-9D 	sts 0x9d00, r16       ; Store Direct to Data Space
10356:	31-4C       	sbci r19, 0xc1        ; Subtract Immediate with Carry SBI
10358:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
1035A:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1035C:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
1035E:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
10360:	5B-1B       	sub r21, r27          ; Subtract Without Carry
10362:	0F-2B       	or r16, r31           ; Logical OR
10364:	06-D9       	rcall .+4620          ; Relative Call to Subroutine
10366:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
10368:	00-22       	and r0, r16           ; Logical AND
1036A:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
1036C:	80-22       	and r8, r16           ; Logical AND
1036E:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10370:	04-20       	and r0, r4            ; Logical AND
10372:	4E-E0       	ldi r20, 0x0e         ; Load Immediate
10374:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10376:	08-FE       	.data 0xfe08          ; Binary data
10378:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
1037A:	20-0F       	add r18, r16          ; Add without Carry
1037C:	ED-D1       	rcall .+986           ; Relative Call to Subroutine
1037E:	00-22       	and r0, r16           ; Logical AND
10380:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
10382:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10384:	B0-22       	and r11, r16          ; Logical AND
10386:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
10388:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
1038A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1038C:	FD-FD       	.data 0xfdfd          ; Binary data
1038E:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10390:	20-0F       	add r18, r16          ; Add without Carry
10392:	FA-D0       	rcall .+500           ; Relative Call to Subroutine
10394:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
10396:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10398:	7B-B3       	in r23, 0x1b          ; Load an I/O Location to Register
1039A:	00-24       	clr r0                ; Clear Register
1039C:	22-4E       	sbci r18, 0xe2        ; Subtract Immediate with Carry SBI
1039E:	1E-4D       	sbci r17, 0xde        ; Subtract Immediate with Carry SBI
103A0:	20-4F       	sbci r18, 0xf0        ; Subtract Immediate with Carry SBI
103A2:	33-5D       	subi r19, 0xd3        ; Subtract Immediate
103A4:	2B-71       	andi r18, 0x1b        ; Logical AND with Immediate
103A6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
103A8:	EF-FD       	.data 0xfdef          ; Binary data
103AA:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
103AC:	02-0F       	add r16, r18          ; Add without Carry
103AE:	02-D1       	rcall .+516           ; Relative Call to Subroutine
103B0:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
103B2:	20-0F       	add r18, r16          ; Add without Carry
103B4:	F7-D1       	rcall .+1006          ; Relative Call to Subroutine
103B6:	02-23       	and r16, r18          ; Logical AND
103B8:	EB-70       	andi r30, 0x0b        ; Logical AND with Immediate
103BA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
103BC:	E5-FD       	sbrc r30, 5           ; Skip if Bit in Register is Cleared
103BE:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
103C0:	10-0F       	add r17, r16          ; Add without Carry
103C2:	04-D0       	rcall .+8             ; Relative Call to Subroutine
103C4:	80-22       	and r8, r16           ; Logical AND
103C6:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
103C8:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
103CA:	04-20       	and r0, r4            ; Logical AND
103CC:	18-E0       	ldi r17, 0x08         ; Load Immediate
103CE:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
103D0:	20-0F       	add r18, r16          ; Add without Carry
103D2:	04-D1       	rcall .+520           ; Relative Call to Subroutine
103D4:	80-22       	and r8, r16           ; Logical AND
103D6:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
103D8:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
103DA:	04-20       	and r0, r4            ; Logical AND
103DC:	10-E0       	ldi r17, 0x00         ; Load Immediate
103DE:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
103E0:	01-0F       	add r16, r17          ; Add without Carry
103E2:	04-D0       	rcall .+8             ; Relative Call to Subroutine
103E4:	00-2C       	mov r0, r0            ; Copy Register
103E6:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
103E8:	02-20       	and r0, r2            ; Logical AND
103EA:	03-20       	and r0, r3            ; Logical AND
103EC:	0B-E0       	ldi r16, 0x0b         ; Load Immediate
103EE:	01-34       	cpi r16, 0x41         ; Compare with Immediate
103F0:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
103F2:	3B-78       	andi r19, 0x8b        ; Logical AND with Immediate
103F4:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
103F6:	D4-D8       	rcall .+4520          ; Relative Call to Subroutine
103F8:	01-E0       	ldi r16, 0x01         ; Load Immediate
103FA:	00-20       	and r0, r0            ; Logical AND
103FC:	00-E0       	ldi r16, 0x00         ; Load Immediate
103FE:	00-20       	and r0, r0            ; Logical AND
10400:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
10402:	00-0F       	add r16, r16          ; Add without Carry
10404:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10406:	80-22       	and r8, r16           ; Logical AND
10408:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
1040A:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
1040C:	00-22       	and r0, r16           ; Logical AND
1040E:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
10410:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10412:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
10414:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
10416:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
10418:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
1041A:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
1041C:	0C-00       	.data 0x000c          ; Binary data
1041E:	00-20       	and r0, r0            ; Logical AND
10420:	C8-FF       	.data 0xffc8          ; Binary data
10422:	FF-1F       	adc r31, r31          ; Add with Carry
10424:	07-00       	.data 0x0007          ; Binary data
10426:	00-20       	and r0, r0            ; Logical AND
10428:	A4-FF       	sbrs r26, 4           ; Skip if Bit in Register is Set
1042A:	FF-1F       	adc r31, r31          ; Add with Carry
1042C:	06-00       	.data 0x0006          ; Binary data
1042E:	00-20       	and r0, r0            ; Logical AND
10430:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
10432:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
10434:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
10436:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
10438:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
1043A:	00-23       	and r16, r16          ; Logical AND
1043C:	3E-4A       	sbci r19, 0xae        ; Subtract Immediate with Carry SBI
1043E:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10440:	3E-4A       	sbci r19, 0xae        ; Subtract Immediate with Carry SBI
10442:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10444:	3E-4B       	sbci r19, 0xbe        ; Subtract Immediate with Carry SBI
10446:	12-22       	and r1, r18           ; Logical AND
10448:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
1044A:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
1044C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1044E:	20-0F       	add r18, r16          ; Add without Carry
10450:	03-D0       	rcall .+6             ; Relative Call to Subroutine
10452:	B4-22       	and r11, r20          ; Logical AND
10454:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
10456:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10458:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
1045A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1045C:	95-FD       	sbrc r25, 5           ; Skip if Bit in Register is Cleared
1045E:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10460:	20-0F       	add r18, r16          ; Add without Carry
10462:	FA-D1       	rcall .+1012          ; Relative Call to Subroutine
10464:	00-22       	and r0, r16           ; Logical AND
10466:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
10468:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1046A:	B0-22       	and r11, r16          ; Logical AND
1046C:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
1046E:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10470:	6D-00       	.data 0x006d          ; Binary data
10472:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
10474:	01-05       	cpc r16, r1           ; Compare with Carry
10476:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
10478:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
1047A:	1D-71       	andi r17, 0x1d        ; Logical AND with Immediate
1047C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1047E:	92-FD       	sbrc r25, 2           ; Skip if Bit in Register is Cleared
10480:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10482:	82-FD       	sbrc r24, 2           ; Skip if Bit in Register is Cleared
10484:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10486:	11-00       	.data 0x0011          ; Binary data
10488:	05-D0       	rcall .+10            ; Relative Call to Subroutine
1048A:	80-22       	and r8, r16           ; Logical AND
1048C:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
1048E:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10490:	00-20       	and r0, r0            ; Logical AND
10492:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
10494:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
10496:	44-B9       	out 0x04, r20         ; Store Register to I/O Location
10498:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
1049A:	00-0F       	add r16, r16          ; Add without Carry
1049C:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
1049E:	A0-22       	and r10, r16          ; Logical AND
104A0:	80-22       	and r8, r16           ; Logical AND
104A2:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
104A4:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
104A6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
104A8:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
104AA:	01-2C       	mov r0, r1            ; Copy Register
104AC:	04-D1       	rcall .+520           ; Relative Call to Subroutine
104AE:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
104B0:	A8-22       	and r10, r24          ; Logical AND
104B2:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
104B4:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
104B6:	38-E0       	ldi r19, 0x08         ; Load Immediate
104B8:	21-4B       	sbci r18, 0xb1        ; Subtract Immediate with Carry SBI
104BA:	A0-22       	and r10, r16          ; Logical AND
104BC:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
104BE:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
104C0:	01-2C       	mov r0, r1            ; Copy Register
104C2:	32-D9       	rcall .+4708          ; Relative Call to Subroutine
104C4:	00-25       	clr r256              ; Clear Register
104C6:	1E-4E       	sbci r17, 0xee        ; Subtract Immediate with Carry SBI
104C8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
104CA:	A8-09       	sbc r26, r8           ; Subtract with Carry
104CC:	1E-4F       	sbci r17, 0xfe        ; Subtract Immediate with Carry SBI
104CE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
104D0:	69-FD       	.data 0xfd69          ; Binary data
104D2:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
104D4:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
104D6:	01-2C       	mov r0, r1            ; Copy Register
104D8:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
104DA:	86-F8       	bld r8, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
104DC:	02-90       	ld r0, -Z             ; Load Indirect from Data Space to Register
104DE:	1F-2D       	mov r17, r15          ; Copy Register
104E0:	04-D8       	rcall .+4104          ; Relative Call to Subroutine
104E2:	6A-1C       	adc r6, r10           ; Add with Carry
104E4:	33-79       	andi r19, 0x93        ; Logical AND with Immediate
104E6:	7B-55       	subi r23, 0x5b        ; Subtract Immediate
104E8:	D5-B2       	in r13, 0x15          ; Load an I/O Location to Register
104EA:	00-E0       	ldi r16, 0x00         ; Load Immediate
104EC:	33-79       	andi r19, 0x93        ; Logical AND with Immediate
104EE:	01-2C       	mov r0, r1            ; Copy Register
104F0:	ED-D1       	rcall .+986           ; Relative Call to Subroutine
104F2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
104F4:	57-FD       	sbrc r21, 7           ; Skip if Bit in Register is Cleared
104F6:	B0-22       	and r11, r16          ; Logical AND
104F8:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
104FA:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
104FC:	1F-2D       	mov r17, r15          ; Copy Register
104FE:	07-D8       	rcall .+4110          ; Relative Call to Subroutine
10500:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
10502:	5D-1C       	adc r5, r13           ; Add with Carry
10504:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
10506:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
10508:	11-79       	andi r17, 0x91        ; Logical AND with Immediate
1050A:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
1050C:	D1-54       	subi r29, 0x41        ; Subtract Immediate
1050E:	01-E0       	ldi r16, 0x01         ; Load Immediate
10510:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
10512:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
10514:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
10516:	00-0F       	add r16, r16          ; Add without Carry
10518:	02-D0       	rcall .+4             ; Relative Call to Subroutine
1051A:	80-22       	and r8, r16           ; Logical AND
1051C:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1051E:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10520:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
10522:	1D-70       	andi r17, 0x0d        ; Logical AND with Immediate
10524:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
10526:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
10528:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
1052A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1052C:	3B-FD       	.data 0xfd3b          ; Binary data
1052E:	B0-22       	and r11, r16          ; Logical AND
10530:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
10532:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10534:	00-23       	and r16, r16          ; Logical AND
10536:	E4-E7       	ldi r30, 0x74         ; Load Immediate
10538:	04-00       	.data 0x0004          ; Binary data
1053A:	00-20       	and r0, r0            ; Logical AND
1053C:	05-00       	.data 0x0005          ; Binary data
1053E:	00-20       	and r0, r0            ; Logical AND
10540:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
10542:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
10544:	C8-FF       	.data 0xffc8          ; Binary data
10546:	FF-1F       	adc r31, r31          ; Add with Carry
10548:	CC-FF       	.data 0xffcc          ; Binary data
1054A:	FF-1F       	adc r31, r31          ; Add with Carry
1054C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1054E:	01-23       	and r16, r17          ; Logical AND
10550:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10552:	6E-FF       	.data 0xff6e          ; Binary data
10554:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
10556:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10558:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1055A:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1055C:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
1055E:	01-23       	and r16, r17          ; Logical AND
10560:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10562:	66-FF       	sbrs r22, 6           ; Skip if Bit in Register is Set
10564:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
10566:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10568:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1056A:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1056C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1056E:	D0-FE       	sbrs r13, 0           ; Skip if Bit in Register is Set
10570:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
10572:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10574:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
10576:	01-21       	and r16, r1           ; Logical AND
10578:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1057A:	DA-FE       	.data 0xfeda          ; Binary data
1057C:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1057E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10580:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
10582:	02-48       	sbci r16, 0x82        ; Subtract Immediate with Carry SBI
10584:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10586:	C2-FD       	sbrc r28, 2           ; Skip if Bit in Register is Cleared
10588:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1058A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1058C:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
1058E:	FF-1F       	adc r31, r31          ; Add with Carry
10590:	84-46       	sbci r24, 0x64        ; Subtract Immediate with Carry SBI
10592:	41-EA       	ldi r20, 0xa1         ; Load Immediate
10594:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
10596:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10598:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
1059A:	6D-D1       	rcall .+730           ; Relative Call to Subroutine
1059C:	40-3A       	cpi r20, 0xa0         ; Compare with Immediate
1059E:	41-D3       	rcall .+1666          ; Relative Call to Subroutine
105A0:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105A2:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105A4:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105A6:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105A8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105AA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105AC:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105AE:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105B0:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105B2:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105B4:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105B6:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105B8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105BA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105BC:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105BE:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105C0:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105C2:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105C4:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105C6:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105C8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105CA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105CC:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105CE:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105D0:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105D2:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105D4:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105D6:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105D8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105DA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105DC:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105DE:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105E0:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105E2:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105E4:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105E6:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105E8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105EA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105EC:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105EE:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105F0:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105F2:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105F4:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105F6:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105F8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
105FA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
105FC:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
105FE:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10600:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10602:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10604:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
10606:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10608:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1060A:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1060C:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
1060E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10610:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10612:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10614:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
10616:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10618:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1061A:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1061C:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
1061E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10620:	40-3A       	cpi r20, 0xa0         ; Compare with Immediate
10622:	BD-D2       	rcall .+1402          ; Relative Call to Subroutine
10624:	30-32       	cpi r19, 0x20         ; Compare with Immediate
10626:	11-D3       	rcall .+1570          ; Relative Call to Subroutine
10628:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1062A:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1062C:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
1062E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10630:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10632:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10634:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
10636:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10638:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1063A:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1063C:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
1063E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10640:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10642:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10644:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
10646:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10648:	10-3A       	cpi r17, 0xa0         ; Compare with Immediate
1064A:	ED-D2       	rcall .+1498          ; Relative Call to Subroutine
1064C:	0C-32       	cpi r16, 0x2c         ; Compare with Immediate
1064E:	05-D3       	rcall .+1546          ; Relative Call to Subroutine
10650:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10652:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10654:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
10656:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
10658:	04-3A       	cpi r16, 0xa4         ; Compare with Immediate
1065A:	F9-D2       	rcall .+1522          ; Relative Call to Subroutine
1065C:	04-32       	cpi r16, 0x24         ; Compare with Immediate
1065E:	08-D0       	rcall .+16            ; Relative Call to Subroutine
10660:	D2-07       	cpc r29, r18          ; Compare with Carry
10662:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
10664:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10666:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
10668:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
1066A:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
1066C:	01-D3       	rcall .+1538          ; Relative Call to Subroutine
1066E:	0B-88       	std Y+19, r0          ; Store Indirect From Register to Data Space
10670:	03-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
10672:	60-46       	sbci r22, 0x60        ; Subtract Immediate with Carry SBI
10674:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10676:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10678:	08-2A       	or r0, r24            ; Logical OR
1067A:	13-D3       	rcall .+1574          ; Relative Call to Subroutine
1067C:	8B-07       	cpc r24, r27          ; Compare with Carry
1067E:	8D-D0       	rcall .+282           ; Relative Call to Subroutine
10680:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10682:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
10684:	8A-D0       	rcall .+276           ; Relative Call to Subroutine
10686:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
10688:	04-03       	mulsu r16, r20        ; Multiply Signed with Unsigned
1068A:	D2-1A       	sub r13, r18          ; Subtract Without Carry
1068C:	DB-07       	cpc r29, r27          ; Compare with Carry
1068E:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
10690:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10692:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
10694:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
10696:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
10698:	80-D3       	rcall .+1792          ; Relative Call to Subroutine
1069A:	31-F8       	bld r3, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1069C:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
1069E:	20-F8       	bld r2, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
106A0:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
106A2:	7B-E7       	ldi r23, 0x7b         ; Load Immediate
106A4:	04-3A       	cpi r16, 0xa4         ; Compare with Immediate
106A6:	D9-D3       	rcall .+1970          ; Relative Call to Subroutine
106A8:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
106AA:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
106AC:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
106AE:	00-F8       	bld r0, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
106B0:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
106B2:	F9-D2       	rcall .+1522          ; Relative Call to Subroutine
106B4:	0B-78       	andi r16, 0x8b        ; Logical AND with Immediate
106B6:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
106B8:	4B-78       	andi r20, 0x8b        ; Logical AND with Immediate
106BA:	43-70       	andi r20, 0x03        ; Logical AND with Immediate
106BC:	8B-78       	andi r24, 0x8b        ; Logical AND with Immediate
106BE:	83-70       	andi r24, 0x03        ; Logical AND with Immediate
106C0:	60-46       	sbci r22, 0x60        ; Subtract Immediate with Carry SBI
106C2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
106C4:	60-22       	and r6, r16           ; Logical AND
106C6:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
106C8:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
106CA:	E1-22       	and r14, r17          ; Logical AND
106CC:	01-33       	cpi r16, 0x31         ; Compare with Immediate
106CE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
106D0:	38-4B       	sbci r19, 0xb8        ; Subtract Immediate with Carry SBI
106D2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
106D4:	08-2B       	or r16, r24           ; Logical OR
106D6:	10-D1       	rcall .+544           ; Relative Call to Subroutine
106D8:	01-22       	and r0, r17           ; Logical AND
106DA:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
106DC:	80-43       	sbci r24, 0x30        ; Subtract Immediate with Carry SBI
106DE:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
106E0:	6C-33       	cpi r22, 0x3c         ; Compare with Immediate
106E2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
106E4:	13-23       	and r17, r19          ; Logical AND
106E6:	34-49       	sbci r19, 0x94        ; Subtract Immediate with Carry SBI
106E8:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
106EA:	01-F5       	brbc 1, .+64          ; Branch if Bit in SREG is Cleared
106EC:	FF-21       	and r31, r15          ; Logical AND
106EE:	01-F2       	brbs 1, .-128         ; Branch if Bit in SREG is Set
106F0:	FC-71       	andi r31, 0x1c        ; Logical AND with Immediate
106F2:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
106F4:	31-4A       	sbci r19, 0xa1        ; Subtract Immediate with Carry SBI
106F6:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
106F8:	1F-E0       	ldi r17, 0x0f         ; Load Immediate
106FA:	0A-2B       	or r16, r26           ; Logical OR
106FC:	0D-D1       	rcall .+538           ; Relative Call to Subroutine
106FE:	39-22       	and r3, r25           ; Logical AND
10700:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
10702:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10704:	13-23       	and r17, r19          ; Logical AND
10706:	2C-49       	sbci r18, 0x9c        ; Subtract Immediate with Carry SBI
10708:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
1070A:	01-F5       	brbc 1, .+64          ; Branch if Bit in SREG is Cleared
1070C:	FF-21       	and r31, r15          ; Logical AND
1070E:	01-F2       	brbs 1, .-128         ; Branch if Bit in SREG is Set
10710:	FC-71       	andi r31, 0x1c        ; Logical AND with Immediate
10712:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
10714:	29-4A       	sbci r18, 0xa9        ; Subtract Immediate with Carry SBI
10716:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10718:	0F-E0       	ldi r16, 0x0f         ; Load Immediate
1071A:	0C-2B       	or r16, r28           ; Logical OR
1071C:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
1071E:	35-22       	and r3, r21           ; Logical AND
10720:	3D-22       	and r3, r29           ; Logical AND
10722:	27-4B       	sbci r18, 0xb7        ; Subtract Immediate with Carry SBI
10724:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10726:	12-23       	and r17, r18          ; Logical AND
10728:	23-49       	sbci r18, 0x93        ; Subtract Immediate with Carry SBI
1072A:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
1072C:	01-F5       	brbc 1, .+64          ; Branch if Bit in SREG is Cleared
1072E:	FF-21       	and r31, r15          ; Logical AND
10730:	01-F2       	brbs 1, .-128         ; Branch if Bit in SREG is Set
10732:	FC-71       	andi r31, 0x1c        ; Logical AND with Immediate
10734:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
10736:	21-4A       	sbci r18, 0xa1        ; Subtract Immediate with Carry SBI
10738:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
1073A:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
1073C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1073E:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
10740:	01-23       	and r16, r17          ; Logical AND
10742:	21-4A       	sbci r18, 0xa1        ; Subtract Immediate with Carry SBI
10744:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10746:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
10748:	00-22       	and r0, r16           ; Logical AND
1074A:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
1074C:	05-E0       	ldi r16, 0x05         ; Load Immediate
1074E:	00-23       	and r16, r16          ; Logical AND
10750:	1D-4A       	sbci r17, 0xad        ; Subtract Immediate with Carry SBI
10752:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10754:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
10756:	00-22       	and r0, r16           ; Logical AND
10758:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
1075A:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
1075C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1075E:	01-2B       	or r16, r17           ; Logical OR
10760:	06-D8       	rcall .+4108          ; Relative Call to Subroutine
10762:	80-23       	and r24, r16          ; Logical AND
10764:	1A-4A       	sbci r17, 0xaa        ; Subtract Immediate with Carry SBI
10766:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10768:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
1076A:	00-22       	and r0, r16           ; Logical AND
1076C:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
1076E:	1A-E0       	ldi r17, 0x0a         ; Load Immediate
10770:	04-2B       	or r16, r20           ; Logical OR
10772:	06-D8       	rcall .+4108          ; Relative Call to Subroutine
10774:	84-23       	and r24, r20          ; Logical AND
10776:	16-4A       	sbci r17, 0xa6        ; Subtract Immediate with Carry SBI
10778:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
1077A:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
1077C:	00-22       	and r0, r16           ; Logical AND
1077E:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10780:	11-E0       	ldi r17, 0x01         ; Load Immediate
10782:	08-2B       	or r16, r24           ; Logical OR
10784:	06-D8       	rcall .+4108          ; Relative Call to Subroutine
10786:	85-23       	and r24, r21          ; Logical AND
10788:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
1078A:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
1078C:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
1078E:	00-22       	and r0, r16           ; Logical AND
10790:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10792:	08-E0       	ldi r16, 0x08         ; Load Immediate
10794:	10-2B       	or r17, r16           ; Logical OR
10796:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
10798:	86-23       	and r24, r22          ; Logical AND
1079A:	87-23       	and r24, r23          ; Logical AND
1079C:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
1079E:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
107A0:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
107A2:	00-22       	and r0, r16           ; Logical AND
107A4:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
107A6:	01-22       	and r0, r17           ; Logical AND
107A8:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
107AA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
107AC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
107AE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
107B0:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
107B2:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
107B4:	05-93       	las Z, r16            ; Load and Set
107B6:	FF-1F       	adc r31, r31          ; Add with Carry
107B8:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
107BA:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
107BC:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
107BE:	0B-40       	sbci r16, 0x0b        ; Subtract Immediate with Carry SBI
107C0:	08-B0       	in r0, 0x08           ; Load an I/O Location to Register
107C2:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
107C4:	0A-00       	.data 0x000a          ; Binary data
107C6:	00-20       	and r0, r0            ; Logical AND
107C8:	20-B0       	in r2, 0x00           ; Load an I/O Location to Register
107CA:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
107CC:	06-93       	lac Z, r16            ; Load and Clear
107CE:	FF-1F       	adc r31, r31          ; Add with Carry
107D0:	24-B0       	in r2, 0x04           ; Load an I/O Location to Register
107D2:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
107D4:	09-00       	.data 0x0009          ; Binary data
107D6:	00-20       	and r0, r0            ; Logical AND
107D8:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
107DA:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
107DC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
107DE:	01-0F       	add r16, r17          ; Add without Carry
107E0:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
107E2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
107E4:	01-00       	.data 0x0001          ; Binary data
107E6:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
107E8:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
107EA:	84-B0       	in r8, 0x04           ; Load an I/O Location to Register
107EC:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
107EE:	6C-46       	sbci r22, 0x6c        ; Subtract Immediate with Carry SBI
107F0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
107F2:	59-68       	ori r21, 0x89         ; Logical OR with Immediate
107F4:	9A-68       	ori r25, 0x8a         ; Logical OR with Immediate
107F6:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
107F8:	0F-C4       	rjmp .+2078           ; Relative Jump
107FA:	19-4B       	sbci r17, 0xb9        ; Subtract Immediate with Carry SBI
107FC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
107FE:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10800:	02-0F       	add r16, r18          ; Add without Carry
10802:	23-D0       	rcall .+70            ; Relative Call to Subroutine
10804:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
10806:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10808:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1080A:	70-03       	mulsu r23, r16        ; Multiply Signed with Unsigned
1080C:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
1080E:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
10810:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10812:	80-22       	and r8, r16           ; Logical AND
10814:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
10816:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10818:	00-22       	and r0, r16           ; Logical AND
1081A:	03-3B       	cpi r16, 0xb3         ; Compare with Immediate
1081C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1081E:	33-22       	and r3, r19           ; Logical AND
10820:	07-33       	cpi r16, 0x37         ; Compare with Immediate
10822:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10824:	03-22       	and r0, r19           ; Logical AND
10826:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
10828:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1082A:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
1082C:	6B-46       	sbci r22, 0x6b        ; Subtract Immediate with Carry SBI
1082E:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
10830:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
10832:	0C-4C       	sbci r16, 0xcc        ; Subtract Immediate with Carry SBI
10834:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10836:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
10838:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
1083A:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
1083C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1083E:	70-03       	mulsu r23, r16        ; Multiply Signed with Unsigned
10840:	04-D0       	rcall .+8             ; Relative Call to Subroutine
10842:	23-70       	andi r18, 0x03        ; Logical AND with Immediate
10844:	08-E0       	ldi r16, 0x08         ; Load Immediate
10846:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
10848:	02-D1       	rcall .+516           ; Relative Call to Subroutine
1084A:	05-E0       	ldi r16, 0x05         ; Load Immediate
1084C:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
1084E:	04-49       	sbci r16, 0x94        ; Subtract Immediate with Carry SBI
10850:	0A-78       	andi r16, 0x8a        ; Logical AND with Immediate
10852:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
10854:	01-0F       	add r16, r17          ; Add without Carry
10856:	F6-D0       	rcall .+492           ; Relative Call to Subroutine
10858:	04-B0       	in r0, 0x04           ; Load an I/O Location to Register
1085A:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
1085C:	58-81       	ld r21, Y             ; Load Indirect from Data Space to Register
1085E:	01-00       	.data 0x0001          ; Binary data
10860:	01-00       	.data 0x0001          ; Binary data
10862:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
10864:	00-00       	nop                   ; No Operation
10866:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
10868:	07-00       	.data 0x0007          ; Binary data
1086A:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
1086C:	41-0D       	add r20, r1           ; Add without Carry
1086E:	03-00       	.data 0x0003          ; Binary data
10870:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
10872:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
10874:	B0-F5       	brbc 0, .+108         ; Branch if Bit in SREG is Cleared
10876:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
10878:	0B-D2       	rcall .+1046          ; Relative Call to Subroutine
1087A:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
1087C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1087E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10880:	01-0F       	add r16, r17          ; Add without Carry
10882:	01-D1       	rcall .+514           ; Relative Call to Subroutine
10884:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10886:	B0-FF       	sbrs r27, 0           ; Skip if Bit in Register is Set
10888:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1088A:	A0-54       	subi r26, 0x40        ; Subtract Immediate
1088C:	20-78       	andi r18, 0x80        ; Logical AND with Immediate
1088E:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
10890:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
10892:	00-20       	and r0, r0            ; Logical AND
10894:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
10896:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10898:	01-00       	.data 0x0001          ; Binary data
1089A:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
1089C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1089E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
108A0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
108A2:	B0-F5       	brbc 0, .+108         ; Branch if Bit in SREG is Cleared
108A4:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
108A6:	16-D2       	rcall .+1068          ; Relative Call to Subroutine
108A8:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
108AA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
108AC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
108AE:	01-0F       	add r16, r17          ; Add without Carry
108B0:	01-D1       	rcall .+514           ; Relative Call to Subroutine
108B2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
108B4:	99-FF       	.data 0xff99          ; Binary data
108B6:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
108B8:	A0-54       	subi r26, 0x40        ; Subtract Immediate
108BA:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
108BC:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
108BE:	AB-42       	sbci r26, 0x2b        ; Subtract Immediate with Carry SBI
108C0:	09-D0       	rcall .+18            ; Relative Call to Subroutine
108C2:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
108C4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
108C6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
108C8:	70-03       	mulsu r23, r16        ; Multiply Signed with Unsigned
108CA:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
108CC:	03-4A       	sbci r16, 0xa3        ; Subtract Immediate with Carry SBI
108CE:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
108D0:	25-70       	andi r18, 0x05        ; Logical AND with Immediate
108D2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
108D4:	81-FF       	sbrs r24, 1           ; Skip if Bit in Register is Set
108D6:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
108D8:	01-00       	.data 0x0001          ; Binary data
108DA:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
108DC:	00-00       	nop                   ; No Operation
108DE:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
108E0:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
108E2:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
108E4:	01-32       	cpi r16, 0x21         ; Compare with Immediate
108E6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
108E8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
108EA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
108EC:	0C-00       	.data 0x000c          ; Binary data
108EE:	00-20       	and r0, r0            ; Logical AND
108F0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
108F2:	0D-4C       	sbci r16, 0xcd        ; Subtract Immediate with Carry SBI
108F4:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
108F6:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
108F8:	80-2F       	mov r24, r16          ; Copy Register
108FA:	01-D0       	rcall .+2             ; Relative Call to Subroutine
108FC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
108FE:	CA-FE       	.data 0xfeca          ; Binary data
10900:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
10902:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
10904:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
10906:	01-D0       	rcall .+2             ; Relative Call to Subroutine
10908:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
1090A:	A4-FC       	sbrc r10, 4           ; Skip if Bit in Register is Cleared
1090C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1090E:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
10910:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
10912:	01-D0       	rcall .+2             ; Relative Call to Subroutine
10914:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
10916:	4A-FD       	.data 0xfd4a          ; Binary data
10918:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1091A:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
1091C:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
1091E:	E9-D0       	rcall .+466           ; Relative Call to Subroutine
10920:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
10922:	56-FF       	sbrs r21, 6           ; Skip if Bit in Register is Set
10924:	E6-E7       	ldi r30, 0x76         ; Load Immediate
10926:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10928:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1092A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1092C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1092E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10930:	DF-FF       	.data 0xffdf          ; Binary data
10932:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10934:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10936:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10938:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
1093A:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
1093C:	18-44       	sbci r17, 0x48        ; Subtract Immediate with Carry SBI
1093E:	10-60       	ori r17, 0x00         ; Logical OR with Immediate
10940:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
10942:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10944:	08-93       	.data 0x9308          ; Binary data
10946:	FF-1F       	adc r31, r31          ; Add with Carry
10948:	FE-E7       	ldi r31, 0x7e         ; Load Immediate
1094A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1094C:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
1094E:	D0-F1       	brbs 0, .+116         ; Branch if Bit in SREG is Set
10950:	01-00       	.data 0x0001          ; Binary data
10952:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
10954:	00-20       	and r0, r0            ; Logical AND
10956:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10958:	01-23       	and r16, r17          ; Logical AND
1095A:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
1095C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1095E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10960:	EF-F3       	brbs 7, .-6           ; Branch if Bit in SREG is Set
10962:	13-83       	std Y+3, r17          ; Store Indirect From Register to Data Space
10964:	AB-B9       	out 0x0b, r26         ; Store Register to I/O Location
10966:	EF-F3       	brbs 7, .-6           ; Branch if Bit in SREG is Set
10968:	10-83       	st Z, r17             ; Store Indirect From Register to Data Space
1096A:	AB-B9       	out 0x0b, r26         ; Store Register to I/O Location
1096C:	EF-F3       	brbs 7, .-6           ; Branch if Bit in SREG is Set
1096E:	05-83       	std Y+5, r16          ; Store Indirect From Register to Data Space
10970:	23-B1       	in r18, 0x03          ; Load an I/O Location to Register
10972:	0F-2B       	or r16, r31           ; Logical OR
10974:	05-D9       	rcall .+4618          ; Relative Call to Subroutine
10976:	09-4A       	sbci r16, 0xa9        ; Subtract Immediate with Carry SBI
10978:	98-5C       	subi r25, 0xc8        ; Subtract Immediate
1097A:	03-E0       	ldi r16, 0x03         ; Load Immediate
1097C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1097E:	80-70       	andi r24, 0x00        ; Logical AND with Immediate
10980:	00-E0       	ldi r16, 0x00         ; Load Immediate
10982:	00-20       	and r0, r0            ; Logical AND
10984:	EF-F3       	brbs 7, .-6           ; Branch if Bit in SREG is Set
10986:	11-83       	std Y+1, r17          ; Store Indirect From Register to Data Space
10988:	3B-B1       	in r19, 0x0b          ; Load an I/O Location to Register
1098A:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
1098C:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
1098E:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
10990:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10992:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
10994:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
10996:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10998:	00-20       	and r0, r0            ; Logical AND
1099A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1099C:	F0-E3       	ldi r31, 0x30         ; Load Immediate
1099E:	00-E0       	ldi r16, 0x00         ; Load Immediate
109A0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
109A2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
109A4:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
109A6:	03-EB       	ldi r16, 0xb3         ; Load Immediate
109A8:	C0-00       	.data 0x00c0          ; Binary data
109AA:	43-68       	ori r20, 0x83         ; Logical OR with Immediate
109AC:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
109AE:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
109B0:	A2-F5       	brbc 2, .+104         ; Branch if Bit in SREG is Cleared
109B2:	92-22       	and r9, r18           ; Logical AND
109B4:	7C-2A       	or r7, r28            ; Logical OR
109B6:	18-D9       	rcall .+4656          ; Relative Call to Subroutine
109B8:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
109BA:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
109BC:	A2-F5       	brbc 2, .+104         ; Branch if Bit in SREG is Cleared
109BE:	94-22       	and r9, r20           ; Logical AND
109C0:	7C-2A       	or r7, r28            ; Logical OR
109C2:	14-D9       	rcall .+4648          ; Relative Call to Subroutine
109C4:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
109C6:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
109C8:	A2-F5       	brbc 2, .+104         ; Branch if Bit in SREG is Cleared
109CA:	96-22       	and r9, r22           ; Logical AND
109CC:	7C-2A       	or r7, r28            ; Logical OR
109CE:	10-D9       	rcall .+4640          ; Relative Call to Subroutine
109D0:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
109D2:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
109D4:	A2-F5       	brbc 2, .+104         ; Branch if Bit in SREG is Cleared
109D6:	98-22       	and r9, r24           ; Logical AND
109D8:	7C-2A       	or r7, r28            ; Logical OR
109DA:	0C-D9       	rcall .+4632          ; Relative Call to Subroutine
109DC:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
109DE:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
109E0:	A2-F5       	brbc 2, .+104         ; Branch if Bit in SREG is Cleared
109E2:	9A-22       	and r9, r26           ; Logical AND
109E4:	7C-2A       	or r7, r28            ; Logical OR
109E6:	08-D9       	rcall .+4624          ; Relative Call to Subroutine
109E8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
109EA:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
109EC:	06-E0       	ldi r16, 0x06         ; Load Immediate
109EE:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
109F0:	04-E0       	ldi r16, 0x04         ; Load Immediate
109F2:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
109F4:	02-E0       	ldi r16, 0x02         ; Load Immediate
109F6:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
109F8:	00-E0       	ldi r16, 0x00         ; Load Immediate
109FA:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
109FC:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
109FE:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
10A00:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
10A02:	87-72       	andi r24, 0x27        ; Logical AND with Immediate
10A04:	22-F4       	brbc 2, .+8           ; Branch if Bit in SREG is Cleared
10A06:	80-32       	cpi r24, 0x20         ; Compare with Immediate
10A08:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
10A0A:	80-72       	andi r24, 0x20        ; Logical AND with Immediate
10A0C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10A0E:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
10A10:	84-03       	fmuls r16, r20        ; Fractional Multiply Signed
10A12:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
10A14:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10A16:	23-20       	and r2, r3            ; Logical AND
10A18:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
10A1A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10A1C:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
10A1E:	01-00       	.data 0x0001          ; Binary data
10A20:	0C-93       	st X, r16             ; Store Indirect From Register to Data Space
10A22:	FF-1F       	adc r31, r31          ; Add with Carry
10A24:	44-93       	xch Z, r20            ; Exchange
10A26:	FF-1F       	adc r31, r31          ; Add with Carry
10A28:	94-93       	xch Z, r25            ; Exchange
10A2A:	FF-1F       	adc r31, r31          ; Add with Carry
10A2C:	C4-93       	xch Z, r28            ; Exchange
10A2E:	FF-1F       	adc r31, r31          ; Add with Carry
10A30:	E4-93       	xch Z, r30            ; Exchange
10A32:	FF-1F       	adc r31, r31          ; Add with Carry
10A34:	A1-09       	sbc r26, r1           ; Subtract with Carry
10A36:	01-00       	.data 0x0001          ; Binary data
10A38:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
10A3A:	00-22       	and r0, r16           ; Logical AND
10A3C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10A3E:	04-49       	sbci r16, 0x94        ; Subtract Immediate with Carry SBI
10A40:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
10A42:	04-4A       	sbci r16, 0xa4        ; Subtract Immediate with Carry SBI
10A44:	10-60       	ori r17, 0x00         ; Logical OR with Immediate
10A46:	10-22       	and r1, r16           ; Logical AND
10A48:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10A4A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10A4C:	14-D0       	rcall .+40            ; Relative Call to Subroutine
10A4E:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
10A50:	04-D0       	rcall .+8             ; Relative Call to Subroutine
10A52:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
10A54:	00-D0       	rcall .+0             ; Relative Call to Subroutine
10A56:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
10A58:	21-28       	or r2, r1             ; Logical OR
10A5A:	1E-D8       	rcall .+4156          ; Relative Call to Subroutine
10A5C:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
10A5E:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10A60:	30-30       	cpi r19, 0x00         ; Compare with Immediate
10A62:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10A64:	80-22       	and r8, r16           ; Logical AND
10A66:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
10A68:	FF-0F       	add r31, r31          ; Add without Carry
10A6A:	08-D0       	rcall .+16            ; Relative Call to Subroutine
10A6C:	19-B1       	in r17, 0x09          ; Load an I/O Location to Register
10A6E:	01-22       	and r0, r17           ; Logical AND
10A70:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10A72:	80-20       	and r8, r0            ; Logical AND
10A74:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10A76:	01-22       	and r0, r17           ; Logical AND
10A78:	83-F8       	bld r8, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10A7A:	00-21       	and r16, r0           ; Logical AND
10A7C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10A7E:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
10A80:	03-EB       	ldi r16, 0xb3         ; Load Immediate
10A82:	C0-00       	.data 0x00c0          ; Binary data
10A84:	43-68       	ori r20, 0x83         ; Logical OR with Immediate
10A86:	21-B1       	in r18, 0x01          ; Load an I/O Location to Register
10A88:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
10A8A:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
10A8C:	03-02       	muls r16, r19         ; Multiply Signed
10A8E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10A90:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10A92:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
10A94:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
10A96:	02-02       	muls r16, r18         ; Multiply Signed
10A98:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10A9A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10A9C:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
10A9E:	01-00       	.data 0x0001          ; Binary data
10AA0:	21-28       	or r2, r1             ; Logical OR
10AA2:	06-D8       	rcall .+4108          ; Relative Call to Subroutine
10AA4:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
10AA6:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10AA8:	30-30       	cpi r19, 0x00         ; Compare with Immediate
10AAA:	93-F8       	bld r9, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10AAC:	00-02       	muls r16, r16         ; Multiply Signed
10AAE:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
10AB0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10AB2:	00-20       	and r0, r0            ; Logical AND
10AB4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10AB6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10AB8:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
10ABA:	01-00       	.data 0x0001          ; Binary data
10ABC:	21-28       	or r2, r1             ; Logical OR
10ABE:	3A-D8       	rcall .+4212          ; Relative Call to Subroutine
10AC0:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
10AC2:	03-EB       	ldi r16, 0xb3         ; Load Immediate
10AC4:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
10AC6:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
10AC8:	01-29       	or r16, r1            ; Logical OR
10ACA:	19-D0       	rcall .+50            ; Relative Call to Subroutine
10ACC:	04-29       	or r16, r4            ; Logical OR
10ACE:	25-D0       	rcall .+74            ; Relative Call to Subroutine
10AD0:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
10AD2:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
10AD4:	30-20       	and r3, r0            ; Logical AND
10AD6:	00-20       	and r0, r0            ; Logical AND
10AD8:	82-F8       	bld r8, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
10ADA:	80-02       	muls r24, r16         ; Multiply Signed
10ADC:	19-B9       	out 0x09, r17         ; Store Register to I/O Location
10ADE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10AE0:	80-72       	andi r24, 0x20        ; Logical AND with Immediate
10AE2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10AE4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10AE6:	02-29       	or r16, r2            ; Logical OR
10AE8:	03-D1       	rcall .+518           ; Relative Call to Subroutine
10AEA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10AEC:	03-12       	cpse r0, r19          ; Compare Skip if Equal
10AEE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10AF0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10AF2:	03-29       	or r16, r3            ; Logical OR
10AF4:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
10AF6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10AF8:	81-72       	andi r24, 0x21        ; Logical AND with Immediate
10AFA:	00-22       	and r0, r16           ; Logical AND
10AFC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10AFE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10B00:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
10B02:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
10B04:	30-20       	and r3, r0            ; Logical AND
10B06:	01-21       	and r16, r1           ; Logical AND
10B08:	82-F8       	bld r8, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
10B0A:	80-12       	cpse r8, r16          ; Compare Skip if Equal
10B0C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10B0E:	A2-72       	andi r26, 0x22        ; Logical AND with Immediate
10B10:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10B12:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
10B14:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
10B16:	20-02       	muls r18, r16         ; Multiply Signed
10B18:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10B1A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10B1C:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
10B1E:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
10B20:	30-20       	and r3, r0            ; Logical AND
10B22:	01-21       	and r16, r1           ; Logical AND
10B24:	82-F8       	bld r8, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
10B26:	80-12       	cpse r8, r16          ; Compare Skip if Equal
10B28:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10B2A:	A2-72       	andi r26, 0x22        ; Logical AND with Immediate
10B2C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10B2E:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
10B30:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
10B32:	20-02       	muls r18, r16         ; Multiply Signed
10B34:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10B36:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10B38:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
10B3A:	01-00       	.data 0x0001          ; Binary data
10B3C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
10B3E:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
10B40:	21-28       	or r2, r1             ; Logical OR
10B42:	61-D8       	rcall .+4290          ; Relative Call to Subroutine
10B44:	04-2A       	or r0, r20            ; Logical OR
10B46:	5F-D8       	rcall .+4286          ; Relative Call to Subroutine
10B48:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
10B4A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
10B4C:	07-09       	sbc r16, r7           ; Subtract with Carry
10B4E:	05-0B       	sbc r16, r21          ; Subtract with Carry
10B50:	03-00       	.data 0x0003          ; Binary data
10B52:	0B-23       	and r16, r27          ; Logical AND
10B54:	06-E0       	ldi r16, 0x06         ; Load Immediate
10B56:	0A-23       	and r16, r26          ; Logical AND
10B58:	04-E0       	ldi r16, 0x04         ; Load Immediate
10B5A:	08-23       	and r16, r24          ; Logical AND
10B5C:	02-E0       	ldi r16, 0x02         ; Load Immediate
10B5E:	0C-23       	and r16, r28          ; Logical AND
10B60:	00-E0       	ldi r16, 0x00         ; Load Immediate
10B62:	09-23       	and r16, r25          ; Logical AND
10B64:	1E-04       	cpc r1, r14           ; Compare with Carry
10B66:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
10B68:	03-EB       	ldi r16, 0xb3         ; Load Immediate
10B6A:	C0-03       	fmuls r20, r16        ; Fractional Multiply Signed
10B6C:	5C-68       	ori r21, 0x8c         ; Logical OR with Immediate
10B6E:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
10B70:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
10B72:	E0-6F       	ori r30, 0xf0         ; Logical OR with Immediate
10B74:	02-D1       	rcall .+516           ; Relative Call to Subroutine
10B76:	00-21       	and r16, r0           ; Logical AND
10B78:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10B7A:	A0-FF       	sbrs r26, 0           ; Skip if Bit in Register is Set
10B7C:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
10B7E:	25-4A       	sbci r18, 0xa5        ; Subtract Immediate with Carry SBI
10B80:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
10B82:	9C-21       	and r25, r12          ; Logical AND
10B84:	24-4A       	sbci r18, 0xa4        ; Subtract Immediate with Carry SBI
10B86:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
10B88:	A0-21       	and r26, r0           ; Logical AND
10B8A:	24-4A       	sbci r18, 0xa4        ; Subtract Immediate with Carry SBI
10B8C:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
10B8E:	A4-21       	and r26, r4           ; Logical AND
10B90:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10B92:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
10B94:	A8-21       	and r26, r8           ; Logical AND
10B96:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10B98:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
10B9A:	AC-21       	and r26, r12          ; Logical AND
10B9C:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
10B9E:	40-43       	sbci r20, 0x30        ; Subtract Immediate with Carry SBI
10BA0:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
10BA2:	92-23       	and r25, r18          ; Logical AND
10BA4:	7C-2B       	or r23, r28           ; Logical OR
10BA6:	18-D9       	rcall .+4656          ; Relative Call to Subroutine
10BA8:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
10BAA:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
10BAC:	A2-F5       	brbc 2, .+104         ; Branch if Bit in SREG is Cleared
10BAE:	94-22       	and r9, r20           ; Logical AND
10BB0:	7C-2A       	or r7, r28            ; Logical OR
10BB2:	14-D9       	rcall .+4648          ; Relative Call to Subroutine
10BB4:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
10BB6:	40-43       	sbci r20, 0x30        ; Subtract Immediate with Carry SBI
10BB8:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
10BBA:	96-23       	and r25, r22          ; Logical AND
10BBC:	7C-2B       	or r23, r28           ; Logical OR
10BBE:	10-D9       	rcall .+4640          ; Relative Call to Subroutine
10BC0:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
10BC2:	40-43       	sbci r20, 0x30        ; Subtract Immediate with Carry SBI
10BC4:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
10BC6:	98-23       	and r25, r24          ; Logical AND
10BC8:	7C-2B       	or r23, r28           ; Logical OR
10BCA:	0C-D9       	rcall .+4632          ; Relative Call to Subroutine
10BCC:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
10BCE:	40-43       	sbci r20, 0x30        ; Subtract Immediate with Carry SBI
10BD0:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
10BD2:	9A-23       	and r25, r26          ; Logical AND
10BD4:	7C-2B       	or r23, r28           ; Logical OR
10BD6:	08-D9       	rcall .+4624          ; Relative Call to Subroutine
10BD8:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
10BDA:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
10BDC:	06-E0       	ldi r16, 0x06         ; Load Immediate
10BDE:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
10BE0:	04-E0       	ldi r16, 0x04         ; Load Immediate
10BE2:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
10BE4:	02-E0       	ldi r16, 0x02         ; Load Immediate
10BE6:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
10BE8:	00-E0       	ldi r16, 0x00         ; Load Immediate
10BEA:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
10BEC:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
10BEE:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
10BF0:	23-F4       	brbc 3, .+8           ; Branch if Bit in SREG is Cleared
10BF2:	70-23       	and r23, r16          ; Logical AND
10BF4:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
10BF6:	C4-F3       	brbs 4, .-16          ; Branch if Bit in SREG is Set
10BF8:	84-02       	muls r24, r20         ; Multiply Signed
10BFA:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
10BFC:	22-50       	subi r18, 0x02        ; Subtract Immediate
10BFE:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
10C00:	80-73       	andi r24, 0x30        ; Logical AND with Immediate
10C02:	1E-43       	sbci r17, 0x3e        ; Subtract Immediate with Carry SBI
10C04:	26-60       	ori r18, 0x06         ; Logical OR with Immediate
10C06:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
10C08:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
10C0A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10C0C:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
10C0E:	01-00       	.data 0x0001          ; Binary data
10C10:	00-8C       	std Y+24, r0          ; Store Indirect From Register to Data Space
10C12:	FF-1F       	adc r31, r31          ; Add with Carry
10C14:	11-92       	st Z+, r1             ; Store Indirect From Register to Data Space
10C16:	FF-1F       	adc r31, r31          ; Add with Carry
10C18:	E5-91       	lpm r30, Z+           ; Load Program Memory
10C1A:	FF-1F       	adc r31, r31          ; Add with Carry
10C1C:	B9-91       	ld r27, Y+            ; Load Indirect from Data Space to Register
10C1E:	FF-1F       	adc r31, r31          ; Add with Carry
10C20:	8D-91       	ld r24, X+            ; Load Indirect from Data Space to Register
10C22:	FF-1F       	adc r31, r31          ; Add with Carry
10C24:	61-91       	ld r22, Z+            ; Load Indirect from Data Space to Register
10C26:	FF-1F       	adc r31, r31          ; Add with Carry
10C28:	0C-93       	st X, r16             ; Store Indirect From Register to Data Space
10C2A:	FF-1F       	adc r31, r31          ; Add with Carry
10C2C:	44-93       	xch Z, r20            ; Exchange
10C2E:	FF-1F       	adc r31, r31          ; Add with Carry
10C30:	94-93       	xch Z, r25            ; Exchange
10C32:	FF-1F       	adc r31, r31          ; Add with Carry
10C34:	C4-93       	xch Z, r28            ; Exchange
10C36:	FF-1F       	adc r31, r31          ; Add with Carry
10C38:	E4-93       	xch Z, r30            ; Exchange
10C3A:	FF-1F       	adc r31, r31          ; Add with Carry
10C3C:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
10C3E:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
10C40:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
10C42:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
10C44:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
10C46:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
10C48:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
10C4A:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
10C4C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
10C4E:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
10C50:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10C52:	32-2B       	or r19, r18           ; Logical OR
10C54:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
10C56:	01-32       	cpi r16, 0x21         ; Compare with Immediate
10C58:	C3-F5       	brbc 3, .+112         ; Branch if Bit in SREG is Cleared
10C5A:	0C-33       	cpi r16, 0x3c         ; Compare with Immediate
10C5C:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
10C5E:	7F-23       	and r23, r31          ; Logical AND
10C60:	07-49       	sbci r16, 0x97        ; Subtract Immediate with Carry SBI
10C62:	A1-FB       	bst r26, 1            ; Bit Store from Bit in Register to T Flag in SREG
10C64:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
10C66:	5B-09       	sbc r21, r11          ; Subtract with Carry
10C68:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10C6A:	7A-70       	andi r23, 0x0a        ; Logical AND with Immediate
10C6C:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
10C6E:	02-30       	cpi r16, 0x02         ; Compare with Immediate
10C70:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10C72:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10C74:	18-E0       	ldi r17, 0x08         ; Load Immediate
10C76:	00-E0       	ldi r16, 0x00         ; Load Immediate
10C78:	0C-00       	.data 0x000c          ; Binary data
10C7A:	00-20       	and r0, r0            ; Logical AND
10C7C:	04-ED       	ldi r16, 0xd4         ; Load Immediate
10C7E:	00-E0       	ldi r16, 0x00         ; Load Immediate
10C80:	39-8E       	std Y+25, r3          ; Store Indirect From Register to Data Space
10C82:	E3-38       	cpi r30, 0x83         ; Compare with Immediate
10C84:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
10C86:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
10C88:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10C8A:	D8-FF       	.data 0xffd8          ; Binary data
10C8C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
10C8E:	25-B9       	out 0x05, r18         ; Store Register to I/O Location
10C90:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
10C92:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
10C94:	0A-D0       	rcall .+20            ; Relative Call to Subroutine
10C96:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
10C98:	7A-74       	andi r23, 0x4a        ; Logical AND with Immediate
10C9A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10C9C:	CF-FF       	.data 0xffcf          ; Binary data
10C9E:	00-1B       	sub r16, r16          ; Subtract Without Carry
10CA0:	B0-F5       	brbc 0, .+108         ; Branch if Bit in SREG is Cleared
10CA2:	7A-7F       	andi r23, 0xfa        ; Logical AND with Immediate
10CA4:	F5-D2       	rcall .+1514          ; Relative Call to Subroutine
10CA6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
10CA8:	8D-FF       	.data 0xff8d          ; Binary data
10CAA:	F6-E7       	ldi r31, 0x76         ; Load Immediate
10CAC:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
10CAE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10CB0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
10CB2:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
10CB4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10CB6:	00-02       	muls r16, r16         ; Multiply Signed
10CB8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10CBA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
10CBC:	80-72       	andi r24, 0x20        ; Logical AND with Immediate
10CBE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10CC0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
10CC2:	00-72       	andi r16, 0x20        ; Logical AND with Immediate
10CC4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10CC6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
10CC8:	80-62       	ori r24, 0x20         ; Logical OR with Immediate
10CCA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10CCC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
10CCE:	00-62       	ori r16, 0x20         ; Logical OR with Immediate
10CD0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10CD2:	00-20       	and r0, r0            ; Logical AND
10CD4:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
10CD6:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
10CD8:	4B-F6       	brbc 3, .-110         ; Branch if Bit in SREG is Cleared
10CDA:	FF-71       	andi r31, 0x1f        ; Logical AND with Immediate
10CDC:	04-33       	cpi r16, 0x34         ; Compare with Immediate
10CDE:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
10CE0:	28-23       	and r18, r24          ; Logical AND
10CE2:	1C-4A       	sbci r17, 0xac        ; Subtract Immediate with Carry SBI
10CE4:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CE6:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10CE8:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CEA:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10CEC:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CEE:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10CF0:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CF2:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10CF4:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CF6:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10CF8:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CFA:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10CFC:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10CFE:	08-32       	cpi r16, 0x28         ; Compare with Immediate
10D00:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
10D02:	09-22       	and r0, r25           ; Logical AND
10D04:	14-4C       	sbci r17, 0xc4        ; Subtract Immediate with Carry SBI
10D06:	22-60       	ori r18, 0x02         ; Logical OR with Immediate
10D08:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
10D0A:	80-54       	subi r24, 0x40        ; Subtract Immediate
10D0C:	04-34       	cpi r16, 0x44         ; Compare with Immediate
10D0E:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
10D10:	04-34       	cpi r16, 0x44         ; Compare with Immediate
10D12:	21-60       	ori r18, 0x01         ; Logical OR with Immediate
10D14:	04-34       	cpi r16, 0x44         ; Compare with Immediate
10D16:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
10D18:	08-34       	cpi r16, 0x48         ; Compare with Immediate
10D1A:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
10D1C:	14-3C       	cpi r17, 0xc4         ; Compare with Immediate
10D1E:	22-60       	ori r18, 0x02         ; Logical OR with Immediate
10D20:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
10D22:	FE-24       	clr r254              ; Clear Register
10D24:	04-34       	cpi r16, 0x44         ; Compare with Immediate
10D26:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
10D28:	0C-48       	sbci r16, 0x8c        ; Subtract Immediate with Carry SBI
10D2A:	01-60       	ori r16, 0x01         ; Logical OR with Immediate
10D2C:	0C-49       	sbci r16, 0x9c        ; Subtract Immediate with Carry SBI
10D2E:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
10D30:	08-31       	cpi r16, 0x18         ; Compare with Immediate
10D32:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
10D34:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
10D36:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10D38:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10D3A:	C4-FC       	sbrc r12, 4           ; Skip if Bit in Register is Cleared
10D3C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10D3E:	C8-70       	andi r28, 0x08        ; Logical AND with Immediate
10D40:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10D42:	A0-FF       	sbrs r26, 0           ; Skip if Bit in Register is Set
10D44:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
10D46:	26-F8       	bld r2, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
10D48:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
10D4A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10D4C:	08-E1       	ldi r16, 0x18         ; Load Immediate
10D4E:	00-E0       	ldi r16, 0x00         ; Load Immediate
10D50:	04-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
10D52:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
10D54:	0C-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
10D56:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
10D58:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
10D5A:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
10D5C:	08-80       	ld r0, Y              ; Load Indirect from Data Space to Register
10D5E:	0B-40       	sbci r16, 0x0b        ; Subtract Immediate with Carry SBI
10D60:	0C-80       	ldd r0, Y+4           ; Load Indirect from Data Space to Register
10D62:	0B-40       	sbci r16, 0x0b        ; Subtract Immediate with Carry SBI
10D64:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
10D66:	0B-40       	sbci r16, 0x0b        ; Subtract Immediate with Carry SBI
10D68:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
10D6A:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
10D6C:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
10D6E:	00-62       	ori r16, 0x20         ; Logical OR with Immediate
10D70:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10D72:	00-23       	and r16, r16          ; Logical AND
10D74:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10D76:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10D78:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10D7A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10D7C:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10D7E:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10D80:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10D82:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10D84:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
10D86:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10D88:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
10D8A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10D8C:	09-2B       	or r16, r25           ; Logical OR
10D8E:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10D90:	1A-2B       	or r17, r26           ; Logical OR
10D92:	05-D0       	rcall .+10            ; Relative Call to Subroutine
10D94:	08-E0       	ldi r16, 0x08         ; Load Immediate
10D96:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10D98:	13-32       	cpi r17, 0x23         ; Compare with Immediate
10D9A:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
10D9C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10D9E:	03-E0       	ldi r16, 0x03         ; Load Immediate
10DA0:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10DA2:	13-32       	cpi r17, 0x23         ; Compare with Immediate
10DA4:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
10DA6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10DA8:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
10DAA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10DAC:	0A-2B       	or r16, r26           ; Logical OR
10DAE:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10DB0:	1F-2B       	or r17, r31           ; Logical OR
10DB2:	05-D0       	rcall .+10            ; Relative Call to Subroutine
10DB4:	08-E0       	ldi r16, 0x08         ; Load Immediate
10DB6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10DB8:	51-72       	andi r21, 0x21        ; Logical AND with Immediate
10DBA:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
10DBC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10DBE:	03-E0       	ldi r16, 0x03         ; Load Immediate
10DC0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10DC2:	51-72       	andi r21, 0x21        ; Logical AND with Immediate
10DC4:	19-4B       	sbci r17, 0xb9        ; Subtract Immediate with Carry SBI
10DC6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10DC8:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
10DCA:	44-32       	cpi r20, 0x24         ; Compare with Immediate
10DCC:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
10DCE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10DD0:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
10DD2:	47-12       	cpse r4, r23          ; Compare Skip if Equal
10DD4:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
10DD6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
10DD8:	1F-00       	.data 0x001f          ; Binary data
10DDA:	98-72       	andi r25, 0x28        ; Logical AND with Immediate
10DDC:	04-22       	and r0, r20           ; Logical AND
10DDE:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
10DE0:	02-21       	and r16, r2           ; Logical AND
10DE2:	D9-74       	andi r29, 0x49        ; Logical AND with Immediate
10DE4:	5A-75       	andi r21, 0x5a        ; Logical AND with Immediate
10DE6:	88-22       	and r8, r24           ; Logical AND
10DE8:	1A-74       	andi r17, 0x4a        ; Logical AND with Immediate
10DEA:	3C-22       	and r3, r28           ; Logical AND
10DEC:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
10DEE:	40-22       	and r4, r16           ; Logical AND
10DF0:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
10DF2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10DF4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10DF6:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
10DF8:	A3-F2       	brbs 3, .-88          ; Branch if Bit in SREG is Set
10DFA:	2B-33       	cpi r18, 0x3b         ; Compare with Immediate
10DFC:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10DFE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10E00:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
10E02:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10E04:	80-00       	.data 0x0080          ; Binary data
10E06:	00-20       	and r0, r0            ; Logical AND
10E08:	15-00       	.data 0x0015          ; Binary data
10E0A:	00-20       	and r0, r0            ; Logical AND
10E0C:	88-00       	.data 0x0088          ; Binary data
10E0E:	00-20       	and r0, r0            ; Logical AND
10E10:	81-00       	.data 0x0081          ; Binary data
10E12:	00-20       	and r0, r0            ; Logical AND
10E14:	14-00       	.data 0x0014          ; Binary data
10E16:	00-20       	and r0, r0            ; Logical AND
10E18:	EC-93       	st X, r30             ; Store Indirect From Register to Data Space
10E1A:	FF-1F       	adc r31, r31          ; Add with Carry
10E1C:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
10E1E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10E20:	04-D0       	rcall .+8             ; Relative Call to Subroutine
10E22:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10E24:	ED-93       	st X+, r30            ; Store Indirect From Register to Data Space
10E26:	FF-1F       	adc r31, r31          ; Add with Carry
10E28:	10-B0       	in r1, 0x00           ; Load an I/O Location to Register
10E2A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10E2C:	00-D0       	rcall .+0             ; Relative Call to Subroutine
10E2E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10E30:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
10E32:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
10E34:	2F-E4       	ldi r18, 0x4f         ; Load Immediate
10E36:	00-E0       	ldi r16, 0x00         ; Load Immediate
10E38:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
10E3A:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
10E3C:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
10E3E:	EC-03       	fmulsu r22, r20       ; Fractional Multiply Signed with Unsigned
10E40:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
10E42:	03-02       	muls r16, r19         ; Multiply Signed
10E44:	13-43       	sbci r17, 0x33        ; Subtract Immediate with Carry SBI
10E46:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10E48:	04-0F       	add r16, r20          ; Add without Carry
10E4A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
10E4C:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
10E4E:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
10E50:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
10E52:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
10E54:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
10E56:	0F-03       	fmul r16, r23         ; Fractional Multiply Unsigned
10E58:	04-2B       	or r16, r20           ; Logical OR
10E5A:	04-D1       	rcall .+520           ; Relative Call to Subroutine
10E5C:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
10E5E:	92-79       	andi r25, 0x92        ; Logical AND with Immediate
10E60:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
10E62:	40-02       	muls r20, r16         ; Multiply Signed
10E64:	9A-71       	andi r25, 0x1a        ; Logical AND with Immediate
10E66:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
10E68:	5A-79       	andi r21, 0x9a        ; Logical AND with Immediate
10E6A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
10E6C:	EF-02       	muls r30, r31         ; Multiply Signed
10E6E:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10E70:	10-0F       	add r17, r16          ; Add without Carry
10E72:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
10E74:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
10E76:	10-02       	muls r17, r16         ; Multiply Signed
10E78:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
10E7A:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
10E7C:	9B-79       	andi r25, 0x9b        ; Logical AND with Immediate
10E7E:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
10E80:	EF-03       	fmulsu r22, r23       ; Fractional Multiply Signed with Unsigned
10E82:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
10E84:	20-0F       	add r18, r16          ; Add without Carry
10E86:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
10E88:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
10E8A:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
10E8C:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
10E8E:	93-71       	andi r25, 0x13        ; Logical AND with Immediate
10E90:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10E92:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10E94:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
10E96:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
10E98:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
10E9A:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
10E9C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
10E9E:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
10EA0:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
10EA2:	3E-D0       	rcall .+124           ; Relative Call to Subroutine
10EA4:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
10EA6:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10EA8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10EAA:	FF-0F       	add r31, r31          ; Add without Carry
10EAC:	06-D0       	rcall .+12            ; Relative Call to Subroutine
10EAE:	1E-4C       	sbci r17, 0xce        ; Subtract Immediate with Carry SBI
10EB0:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
10EB2:	88-FE       	.data 0xfe88          ; Binary data
10EB4:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
10EB6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10EB8:	FF-0F       	add r31, r31          ; Add without Carry
10EBA:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
10EBC:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
10EBE:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
10EC0:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
10EC2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10EC4:	00-22       	and r0, r16           ; Logical AND
10EC6:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
10EC8:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
10ECA:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
10ECC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10ECE:	09-2B       	or r16, r25           ; Logical OR
10ED0:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10ED2:	1A-2B       	or r17, r26           ; Logical OR
10ED4:	05-D0       	rcall .+10            ; Relative Call to Subroutine
10ED6:	08-E0       	ldi r16, 0x08         ; Load Immediate
10ED8:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10EDA:	03-12       	cpse r0, r19          ; Compare Skip if Equal
10EDC:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
10EDE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10EE0:	03-E0       	ldi r16, 0x03         ; Load Immediate
10EE2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10EE4:	03-12       	cpse r0, r19          ; Compare Skip if Equal
10EE6:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
10EE8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10EEA:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
10EEC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10EEE:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
10EF0:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
10EF2:	0A-2B       	or r16, r26           ; Logical OR
10EF4:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10EF6:	1F-2B       	or r17, r31           ; Logical OR
10EF8:	05-D0       	rcall .+10            ; Relative Call to Subroutine
10EFA:	08-E0       	ldi r16, 0x08         ; Load Immediate
10EFC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10EFE:	03-12       	cpse r0, r19          ; Compare Skip if Equal
10F00:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
10F02:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10F04:	03-E0       	ldi r16, 0x03         ; Load Immediate
10F06:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
10F08:	03-12       	cpse r0, r19          ; Compare Skip if Equal
10F0A:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
10F0C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10F0E:	00-23       	and r16, r16          ; Logical AND
10F10:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
10F12:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10F14:	0E-4A       	sbci r16, 0xae        ; Subtract Immediate with Carry SBI
10F16:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
10F18:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
10F1A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
10F1C:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
10F1E:	01-22       	and r0, r17           ; Logical AND
10F20:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
10F22:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
10F24:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
10F26:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10F28:	14-00       	.data 0x0014          ; Binary data
10F2A:	00-20       	and r0, r0            ; Logical AND
10F2C:	84-E1       	ldi r24, 0x14         ; Load Immediate
10F2E:	00-E0       	ldi r16, 0x00         ; Load Immediate
10F30:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
10F32:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
10F34:	EC-93       	st X, r30             ; Store Indirect From Register to Data Space
10F36:	FF-1F       	adc r31, r31          ; Add with Carry
10F38:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
10F3A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10F3C:	04-D0       	rcall .+8             ; Relative Call to Subroutine
10F3E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10F40:	ED-93       	st X+, r30            ; Store Indirect From Register to Data Space
10F42:	FF-1F       	adc r31, r31          ; Add with Carry
10F44:	10-B0       	in r1, 0x00           ; Load an I/O Location to Register
10F46:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10F48:	00-D0       	rcall .+0             ; Relative Call to Subroutine
10F4A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
10F4C:	80-00       	.data 0x0080          ; Binary data
10F4E:	00-20       	and r0, r0            ; Logical AND
10F50:	15-00       	.data 0x0015          ; Binary data
10F52:	00-20       	and r0, r0            ; Logical AND
10F54:	10-00       	.data 0x0010          ; Binary data
10F56:	00-20       	and r0, r0            ; Logical AND
10F58:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
10F5A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
10F5C:	09-4A       	sbci r16, 0xa9        ; Subtract Immediate with Carry SBI
10F5E:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
10F60:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
10F62:	FF-0F       	add r31, r31          ; Add without Carry
10F64:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
10F66:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10F68:	01-21       	and r16, r1           ; Logical AND
10F6A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10F6C:	A7-FD       	sbrc r26, 7           ; Skip if Bit in Register is Cleared
10F6E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
10F70:	00-21       	and r16, r0           ; Logical AND
10F72:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
10F74:	71-FD       	sbrc r23, 1           ; Skip if Bit in Register is Cleared
10F76:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
10F78:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
10F7A:	34-20       	and r3, r4            ; Logical AND
10F7C:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
10F7E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10F80:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
10F82:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10F84:	14-00       	.data 0x0014          ; Binary data
10F86:	00-20       	and r0, r0            ; Logical AND
10F88:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
10F8A:	01-00       	.data 0x0001          ; Binary data
10F8C:	84-00       	.data 0x0084          ; Binary data
10F8E:	00-20       	and r0, r0            ; Logical AND
10F90:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
10F92:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
10F94:	09-B1       	in r16, 0x09          ; Load an I/O Location to Register
10F96:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
10F98:	80-00       	.data 0x0080          ; Binary data
10F9A:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
10F9C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
10F9E:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
10FA0:	28-D0       	rcall .+80            ; Relative Call to Subroutine
10FA2:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
10FA4:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
10FA6:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
10FA8:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
10FAA:	21-D0       	rcall .+66            ; Relative Call to Subroutine
10FAC:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
10FAE:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
10FB0:	0A-2B       	or r16, r26           ; Logical OR
10FB2:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10FB4:	1F-2B       	or r17, r31           ; Logical OR
10FB6:	04-D0       	rcall .+8             ; Relative Call to Subroutine
10FB8:	06-E0       	ldi r16, 0x06         ; Load Immediate
10FBA:	00-22       	and r0, r16           ; Logical AND
10FBC:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
10FBE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10FC0:	02-E0       	ldi r16, 0x02         ; Load Immediate
10FC2:	00-22       	and r0, r16           ; Logical AND
10FC4:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
10FC6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10FC8:	00-2C       	mov r0, r0            ; Copy Register
10FCA:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
10FCC:	44-22       	and r4, r20           ; Logical AND
10FCE:	60-22       	and r6, r16           ; Logical AND
10FD0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
10FD2:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
10FD4:	0A-2B       	or r16, r26           ; Logical OR
10FD6:	02-D0       	rcall .+4             ; Relative Call to Subroutine
10FD8:	1F-2B       	or r17, r31           ; Logical OR
10FDA:	05-D0       	rcall .+10            ; Relative Call to Subroutine
10FDC:	08-E0       	ldi r16, 0x08         ; Load Immediate
10FDE:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
10FE0:	40-72       	andi r20, 0x20        ; Logical AND with Immediate
10FE2:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
10FE4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10FE6:	03-E0       	ldi r16, 0x03         ; Load Immediate
10FE8:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
10FEA:	40-72       	andi r20, 0x20        ; Logical AND with Immediate
10FEC:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
10FEE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
10FF0:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
10FF2:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
10FF4:	5D-F8       	.data 0xf85d          ; Binary data
10FF6:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
10FF8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
10FFA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
10FFC:	ED-93       	st X+, r30            ; Store Indirect From Register to Data Space
10FFE:	FF-1F       	adc r31, r31          ; Add with Carry
11000:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
11002:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11004:	10-B0       	in r1, 0x00           ; Load an I/O Location to Register
11006:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11008:	00-D0       	rcall .+0             ; Relative Call to Subroutine
1100A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1100C:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
1100E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11010:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
11012:	20-D0       	rcall .+64            ; Relative Call to Subroutine
11014:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
11016:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
11018:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
1101A:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
1101C:	19-D0       	rcall .+50            ; Relative Call to Subroutine
1101E:	09-2B       	or r16, r25           ; Logical OR
11020:	02-D0       	rcall .+4             ; Relative Call to Subroutine
11022:	1A-2B       	or r17, r26           ; Logical OR
11024:	04-D0       	rcall .+8             ; Relative Call to Subroutine
11026:	06-E0       	ldi r16, 0x06         ; Load Immediate
11028:	00-22       	and r0, r16           ; Logical AND
1102A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
1102C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1102E:	02-E0       	ldi r16, 0x02         ; Load Immediate
11030:	00-22       	and r0, r16           ; Logical AND
11032:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
11034:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11036:	09-28       	or r0, r9             ; Logical OR
11038:	02-D0       	rcall .+4             ; Relative Call to Subroutine
1103A:	1A-28       	or r1, r10            ; Logical OR
1103C:	05-D0       	rcall .+10            ; Relative Call to Subroutine
1103E:	08-E0       	ldi r16, 0x08         ; Load Immediate
11040:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
11042:	13-32       	cpi r17, 0x23         ; Compare with Immediate
11044:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
11046:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11048:	03-E0       	ldi r16, 0x03         ; Load Immediate
1104A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
1104C:	13-32       	cpi r17, 0x23         ; Compare with Immediate
1104E:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
11050:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11052:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
11054:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
11056:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11058:	EC-93       	st X, r30             ; Store Indirect From Register to Data Space
1105A:	FF-1F       	adc r31, r31          ; Add with Carry
1105C:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1105E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11060:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
11062:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11064:	04-D0       	rcall .+8             ; Relative Call to Subroutine
11066:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11068:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
1106A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
1106C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1106E:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
11070:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
11072:	12-D0       	rcall .+36            ; Relative Call to Subroutine
11074:	21-28       	or r2, r1             ; Logical OR
11076:	0C-D8       	rcall .+4120          ; Relative Call to Subroutine
11078:	0A-4C       	sbci r16, 0xca        ; Subtract Immediate with Carry SBI
1107A:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
1107C:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
1107E:	30-30       	cpi r19, 0x00         ; Compare with Immediate
11080:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
11082:	01-21       	and r16, r1           ; Logical AND
11084:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11086:	1A-FD       	.data 0xfd1a          ; Binary data
11088:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1108A:	00-22       	and r0, r16           ; Logical AND
1108C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1108E:	01-20       	and r0, r1            ; Logical AND
11090:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11092:	00-20       	and r0, r0            ; Logical AND
11094:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
11096:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
11098:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
1109A:	00-20       	and r0, r0            ; Logical AND
1109C:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
1109E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
110A0:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
110A2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
110A4:	10-00       	.data 0x0010          ; Binary data
110A6:	00-20       	and r0, r0            ; Logical AND
110A8:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
110AA:	01-00       	.data 0x0001          ; Binary data
110AC:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
110AE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
110B0:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
110B2:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
110B4:	13-D0       	rcall .+38            ; Relative Call to Subroutine
110B6:	17-28       	or r1, r7             ; Logical OR
110B8:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
110BA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
110BC:	02-32       	cpi r16, 0x22         ; Compare with Immediate
110BE:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
110C0:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
110C2:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
110C4:	5A-7B       	andi r21, 0xba        ; Logical AND with Immediate
110C6:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
110C8:	01-02       	muls r16, r17         ; Multiply Signed
110CA:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
110CC:	01-20       	and r0, r1            ; Logical AND
110CE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
110D0:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
110D2:	5A-7B       	andi r21, 0xba        ; Logical AND with Immediate
110D4:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
110D6:	FE-02       	muls r31, r30         ; Multiply Signed
110D8:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
110DA:	00-20       	and r0, r0            ; Logical AND
110DC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
110DE:	00-20       	and r0, r0            ; Logical AND
110E0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
110E2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
110E4:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
110E6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
110E8:	08-B0       	in r0, 0x08           ; Load an I/O Location to Register
110EA:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
110EC:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
110EE:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
110F0:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
110F2:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
110F4:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
110F6:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
110F8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
110FA:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
110FC:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
110FE:	37-D0       	rcall .+110           ; Relative Call to Subroutine
11100:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
11102:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11104:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
11106:	01-22       	and r0, r17           ; Logical AND
11108:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1110A:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
1110C:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
1110E:	01-34       	cpi r16, 0x41         ; Compare with Immediate
11110:	28-2C       	mov r2, r8            ; Copy Register
11112:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
11114:	00-24       	clr r0                ; Clear Register
11116:	1A-4D       	sbci r17, 0xda        ; Subtract Immediate with Carry SBI
11118:	1A-4E       	sbci r17, 0xea        ; Subtract Immediate with Carry SBI
1111A:	DF-F8       	.data 0xf8df          ; Binary data
1111C:	6C-80       	ldd r6, Y+4           ; Load Indirect from Data Space to Register
1111E:	17-E0       	ldi r17, 0x07         ; Load Immediate
11120:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11122:	1E-FC       	.data 0xfc1e          ; Binary data
11124:	40-28       	or r4, r0             ; Logical OR
11126:	0F-DC       	rcall .+6174          ; Relative Call to Subroutine
11128:	33-79       	andi r19, 0x93        ; Logical AND with Immediate
1112A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1112C:	80-0F       	add r24, r16          ; Add without Carry
1112E:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
11130:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
11132:	01-33       	cpi r16, 0x31         ; Compare with Immediate
11134:	28-2B       	or r18, r24           ; Logical OR
11136:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
11138:	00-23       	and r16, r16          ; Logical AND
1113A:	18-F8       	.data 0xf818          ; Binary data
1113C:	03-20       	and r0, r3            ; Logical AND
1113E:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
11140:	F2-71       	andi r31, 0x12        ; Logical AND with Immediate
11142:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11144:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
11146:	03-E0       	ldi r16, 0x03         ; Load Immediate
11148:	FF-28       	or r15, r15           ; Logical OR
1114A:	01-DD       	rcall .+6658          ; Relative Call to Subroutine
1114C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1114E:	3A-FD       	.data 0xfd3a          ; Binary data
11150:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
11152:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11154:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
11156:	E3-D0       	rcall .+454           ; Relative Call to Subroutine
11158:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
1115A:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
1115C:	1F-55       	subi r17, 0x5f        ; Subtract Immediate
1115E:	01-22       	and r0, r17           ; Logical AND
11160:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
11162:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11164:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
11166:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
11168:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
1116A:	BC-22       	and r11, r28          ; Logical AND
1116C:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1116E:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
11170:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
11172:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
11174:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
11176:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11178:	84-00       	.data 0x0084          ; Binary data
1117A:	00-20       	and r0, r0            ; Logical AND
1117C:	88-00       	.data 0x0088          ; Binary data
1117E:	00-20       	and r0, r0            ; Logical AND
11180:	81-00       	.data 0x0081          ; Binary data
11182:	00-20       	and r0, r0            ; Logical AND
11184:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
11186:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
11188:	18-00       	.data 0x0018          ; Binary data
1118A:	00-20       	and r0, r0            ; Logical AND
1118C:	14-00       	.data 0x0014          ; Binary data
1118E:	00-20       	and r0, r0            ; Logical AND
11190:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
11192:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
11194:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
11196:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
11198:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1119A:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
1119C:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
1119E:	49-D0       	rcall .+146           ; Relative Call to Subroutine
111A0:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
111A2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
111A4:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
111A6:	01-22       	and r0, r17           ; Logical AND
111A8:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
111AA:	07-EB       	ldi r16, 0xb7         ; Load Immediate
111AC:	01-0B       	sbc r16, r17          ; Subtract with Carry
111AE:	5F-45       	sbci r21, 0x5f        ; Subtract Immediate with Carry SBI
111B0:	3D-D2       	rcall .+1146          ; Relative Call to Subroutine
111B2:	DF-F8       	.data 0xf8df          ; Binary data
111B4:	98-90       	.data 0x9098          ; Binary data
111B6:	22-4E       	sbci r18, 0xe2        ; Subtract Immediate with Carry SBI
111B8:	DF-F8       	.data 0xf8df          ; Binary data
111BA:	8C-80       	ldd r8, Y+4           ; Load Indirect from Data Space to Register
111BC:	DF-F8       	.data 0xf8df          ; Binary data
111BE:	90-A0       	ldd r9, Y+32          ; Load Indirect from Data Space to Register
111C0:	99-F8       	.data 0xf899          ; Binary data
111C2:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
111C4:	01-34       	cpi r16, 0x41         ; Compare with Immediate
111C6:	28-2C       	mov r2, r8            ; Copy Register
111C8:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
111CA:	00-24       	clr r0                ; Clear Register
111CC:	35-78       	andi r19, 0x85        ; Logical AND with Immediate
111CE:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
111D0:	A5-42       	sbci r26, 0x25        ; Subtract Immediate with Carry SBI
111D2:	20-D1       	rcall .+576           ; Relative Call to Subroutine
111D4:	BC-23       	and r27, r28          ; Logical AND
111D6:	88-F8       	.data 0xf888          ; Binary data
111D8:	03-30       	cpi r16, 0x03         ; Compare with Immediate
111DA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
111DC:	C1-FB       	bst r28, 1            ; Bit Store from Bit in Register to T Flag in SREG
111DE:	40-28       	or r4, r0             ; Logical OR
111E0:	11-DC       	rcall .+6178          ; Relative Call to Subroutine
111E2:	98-F8       	.data 0xf898          ; Binary data
111E4:	04-30       	cpi r16, 0x04         ; Compare with Immediate
111E6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
111E8:	80-0F       	add r24, r16          ; Add without Carry
111EA:	10-D0       	rcall .+32            ; Relative Call to Subroutine
111EC:	33-78       	andi r19, 0x83        ; Logical AND with Immediate
111EE:	01-33       	cpi r16, 0x31         ; Compare with Immediate
111F0:	28-2B       	or r18, r24           ; Logical OR
111F2:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
111F4:	00-23       	and r16, r16          ; Logical AND
111F6:	1A-F8       	.data 0xf81a          ; Binary data
111F8:	03-20       	and r0, r3            ; Logical AND
111FA:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
111FC:	88-F8       	.data 0xf888          ; Binary data
111FE:	07-20       	and r0, r7            ; Logical AND
11200:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11202:	33-70       	andi r19, 0x03        ; Logical AND with Immediate
11204:	03-E0       	ldi r16, 0x03         ; Load Immediate
11206:	FF-28       	or r15, r15           ; Logical OR
11208:	01-DD       	rcall .+6658          ; Relative Call to Subroutine
1120A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1120C:	DB-FC       	.data 0xfcdb          ; Binary data
1120E:	33-78       	andi r19, 0x83        ; Logical AND with Immediate
11210:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11212:	9D-42       	sbci r25, 0x2d        ; Subtract Immediate with Carry SBI
11214:	E1-D0       	rcall .+450           ; Relative Call to Subroutine
11216:	17-F8       	bld r1, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
11218:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
1121A:	0A-F8       	.data 0xf80a          ; Binary data
1121C:	04-30       	cpi r16, 0x04         ; Compare with Immediate
1121E:	01-22       	and r0, r17           ; Logical AND
11220:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
11222:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11224:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
11226:	89-F8       	.data 0xf889          ; Binary data
11228:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1122A:	5F-45       	sbci r21, 0x5f        ; Subtract Immediate with Carry SBI
1122C:	C8-D1       	rcall .+912           ; Relative Call to Subroutine
1122E:	BC-22       	and r11, r28          ; Logical AND
11230:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
11232:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
11234:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
11236:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
11238:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1123A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1123C:	84-00       	.data 0x0084          ; Binary data
1123E:	00-20       	and r0, r0            ; Logical AND
11240:	81-00       	.data 0x0081          ; Binary data
11242:	00-20       	and r0, r0            ; Logical AND
11244:	14-00       	.data 0x0014          ; Binary data
11246:	00-20       	and r0, r0            ; Logical AND
11248:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
1124A:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
1124C:	88-00       	.data 0x0088          ; Binary data
1124E:	00-20       	and r0, r0            ; Logical AND
11250:	18-00       	.data 0x0018          ; Binary data
11252:	00-20       	and r0, r0            ; Logical AND
11254:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
11256:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
11258:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1125A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1125C:	FF-0F       	add r31, r31          ; Add without Carry
1125E:	06-D0       	rcall .+12            ; Relative Call to Subroutine
11260:	03-4C       	sbci r16, 0xc3        ; Subtract Immediate with Carry SBI
11262:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
11264:	AF-FC       	.data 0xfcaf          ; Binary data
11266:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
11268:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1126A:	FF-0F       	add r31, r31          ; Add without Carry
1126C:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
1126E:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11270:	14-00       	.data 0x0014          ; Binary data
11272:	00-20       	and r0, r0            ; Logical AND
11274:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
11276:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11278:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
1127A:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
1127C:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
1127E:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
11280:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
11282:	2C-BF       	out 0x3c, r18         ; Store Register to I/O Location
11284:	27-32       	cpi r18, 0x27         ; Compare with Immediate
11286:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
11288:	FF-32       	cpi r31, 0x2f         ; Compare with Immediate
1128A:	D0-1A       	sub r13, r16          ; Subtract Without Carry
1128C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1128E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11290:	88-00       	.data 0x0088          ; Binary data
11292:	00-20       	and r0, r0            ; Logical AND
11294:	81-00       	.data 0x0081          ; Binary data
11296:	00-20       	and r0, r0            ; Logical AND
11298:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1129A:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
1129C:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1129E:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
112A0:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
112A2:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
112A4:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
112A6:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
112A8:	40-30       	cpi r20, 0x00         ; Compare with Immediate
112AA:	C0-1A       	sub r12, r16          ; Subtract Without Carry
112AC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
112AE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
112B0:	80-00       	.data 0x0080          ; Binary data
112B2:	00-20       	and r0, r0            ; Logical AND
112B4:	15-00       	.data 0x0015          ; Binary data
112B6:	00-20       	and r0, r0            ; Logical AND
112B8:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
112BA:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
112BC:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
112BE:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
112C0:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
112C2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
112C4:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
112C6:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
112C8:	18-D0       	rcall .+48            ; Relative Call to Subroutine
112CA:	01-33       	cpi r16, 0x31         ; Compare with Immediate
112CC:	3F-2B       	or r19, r31           ; Logical OR
112CE:	18-D8       	rcall .+4144          ; Relative Call to Subroutine
112D0:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
112D2:	C8-5C       	subi r28, 0xc8        ; Subtract Immediate
112D4:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
112D6:	DC-B2       	in r13, 0x1c          ; Load an I/O Location to Register
112D8:	11-49       	sbci r17, 0x91        ; Subtract Immediate with Carry SBI
112DA:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
112DC:	12-49       	sbci r17, 0x92        ; Subtract Immediate with Carry SBI
112DE:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
112E0:	C9-B1       	in r28, 0x09          ; Load an I/O Location to Register
112E2:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
112E4:	03-D3       	rcall .+1542          ; Relative Call to Subroutine
112E6:	00-E0       	ldi r16, 0x00         ; Load Immediate
112E8:	00-23       	and r16, r16          ; Logical AND
112EA:	D3-1A       	sub r13, r19          ; Subtract Without Carry
112EC:	01-E0       	ldi r16, 0x01         ; Load Immediate
112EE:	40-32       	cpi r20, 0x20         ; Compare with Immediate
112F0:	D3-1A       	sub r13, r19          ; Subtract Without Carry
112F2:	1A-2B       	or r17, r26           ; Logical OR
112F4:	0F-DC       	rcall .+6174          ; Relative Call to Subroutine
112F6:	00-23       	and r16, r16          ; Logical AND
112F8:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
112FA:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
112FC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
112FE:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11300:	09-E0       	ldi r16, 0x09         ; Load Immediate
11302:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
11304:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
11306:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
11308:	00-21       	and r16, r0           ; Logical AND
1130A:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1130C:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
1130E:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
11310:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
11312:	00-29       	or r16, r0            ; Logical OR
11314:	E8-D1       	rcall .+976           ; Relative Call to Subroutine
11316:	5D-F8       	.data 0xf85d          ; Binary data
11318:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
1131A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1131C:	80-00       	.data 0x0080          ; Binary data
1131E:	00-20       	and r0, r0            ; Logical AND
11320:	15-00       	.data 0x0015          ; Binary data
11322:	00-20       	and r0, r0            ; Logical AND
11324:	40-00       	.data 0x0040          ; Binary data
11326:	00-20       	and r0, r0            ; Logical AND
11328:	10-00       	.data 0x0010          ; Binary data
1132A:	00-20       	and r0, r0            ; Logical AND
1132C:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
1132E:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
11330:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
11332:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
11334:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11336:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11338:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
1133A:	07-D0       	rcall .+14            ; Relative Call to Subroutine
1133C:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1133E:	40-2B       	or r20, r16           ; Logical OR
11340:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
11342:	00-23       	and r16, r16          ; Logical AND
11344:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
11346:	D0-5C       	subi r29, 0xc0        ; Subtract Immediate
11348:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1134A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1134C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1134E:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11350:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11352:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11354:	80-00       	.data 0x0080          ; Binary data
11356:	00-20       	and r0, r0            ; Logical AND
11358:	15-00       	.data 0x0015          ; Binary data
1135A:	00-20       	and r0, r0            ; Logical AND
1135C:	40-00       	.data 0x0040          ; Binary data
1135E:	00-20       	and r0, r0            ; Logical AND
11360:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
11362:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11364:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
11366:	00-6F       	ori r16, 0xf0         ; Logical OR with Immediate
11368:	14-D0       	rcall .+40            ; Relative Call to Subroutine
1136A:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
1136C:	DA-78       	andi r29, 0x8a        ; Logical AND with Immediate
1136E:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
11370:	CB-02       	muls r28, r27         ; Multiply Signed
11372:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
11374:	40-22       	and r4, r16           ; Logical AND
11376:	5A-74       	andi r21, 0x4a        ; Logical AND with Immediate
11378:	DA-78       	andi r29, 0x8a        ; Logical AND with Immediate
1137A:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
1137C:	34-02       	muls r19, r20         ; Multiply Signed
1137E:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
11380:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
11382:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
11384:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
11386:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
11388:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1138A:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
1138C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1138E:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
11390:	00-22       	and r0, r16           ; Logical AND
11392:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11394:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11396:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11398:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1139A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1139C:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
1139E:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
113A0:	15-00       	.data 0x0015          ; Binary data
113A2:	00-20       	and r0, r0            ; Logical AND
113A4:	80-00       	.data 0x0080          ; Binary data
113A6:	00-20       	and r0, r0            ; Logical AND
113A8:	10-00       	.data 0x0010          ; Binary data
113AA:	00-20       	and r0, r0            ; Logical AND
113AC:	70-B4       	in r7, 0x20           ; Load an I/O Location to Register
113AE:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
113B0:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
113B2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
113B4:	30-0F       	add r19, r16          ; Add without Carry
113B6:	33-D0       	rcall .+102           ; Relative Call to Subroutine
113B8:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
113BA:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
113BC:	9B-7D       	andi r25, 0xdb        ; Logical AND with Immediate
113BE:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
113C0:	FF-02       	muls r31, r31         ; Multiply Signed
113C2:	2B-B9       	out 0x0b, r18         ; Store Register to I/O Location
113C4:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
113C6:	DA-79       	andi r29, 0x9a        ; Logical AND with Immediate
113C8:	40-22       	and r4, r16           ; Logical AND
113CA:	5A-74       	andi r21, 0x4a        ; Logical AND with Immediate
113CC:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
113CE:	27-E0       	ldi r18, 0x07         ; Load Immediate
113D0:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
113D2:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
113D4:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
113D6:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
113D8:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
113DA:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
113DC:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
113DE:	31-4D       	sbci r19, 0xd1        ; Subtract Immediate with Carry SBI
113E0:	33-4E       	sbci r19, 0xe3        ; Subtract Immediate with Carry SBI
113E2:	EB-79       	andi r30, 0x9b        ; Logical AND with Immediate
113E4:	D8-B2       	in r13, 0x18          ; Load an I/O Location to Register
113E6:	4B-1C       	adc r4, r11           ; Add with Carry
113E8:	40-2B       	or r20, r16           ; Logical OR
113EA:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
113EC:	00-23       	and r16, r16          ; Logical AND
113EE:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
113F0:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
113F2:	F0-54       	subi r31, 0x40        ; Subtract Immediate
113F4:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
113F6:	53-1E       	adc r5, r19           ; Add with Carry
113F8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
113FA:	FF-02       	muls r31, r31         ; Multiply Signed
113FC:	F1-D1       	rcall .+994           ; Relative Call to Subroutine
113FE:	CA-B2       	in r12, 0x1a          ; Load an I/O Location to Register
11400:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
11402:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11404:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
11406:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11408:	53-B1       	in r21, 0x03          ; Load an I/O Location to Register
1140A:	A1-42       	sbci r26, 0x21        ; Subtract Immediate with Carry SBI
1140C:	2E-BF       	out 0x3e, r18         ; Store Register to I/O Location
1140E:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
11410:	01-01       	movw r0, r2           ; Copy Register Word
11412:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
11414:	40-04       	cpc r4, r0            ; Compare with Carry
11416:	09-19       	sub r16, r9           ; Subtract Without Carry
11418:	27-29       	or r18, r7            ; Logical OR
1141A:	C4-BF       	out 0x34, r28         ; Store Register to I/O Location
1141C:	01-22       	and r0, r17           ; Logical AND
1141E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11420:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
11422:	DA-78       	andi r29, 0x8a        ; Logical AND with Immediate
11424:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
11426:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
11428:	80-0F       	add r24, r16          ; Add without Carry
1142A:	27-D0       	rcall .+78            ; Relative Call to Subroutine
1142C:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
1142E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11430:	80-0F       	add r24, r16          ; Add without Carry
11432:	23-D0       	rcall .+70            ; Relative Call to Subroutine
11434:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
11436:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
11438:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
1143A:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
1143C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1143E:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11440:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
11442:	10-D0       	rcall .+32            ; Relative Call to Subroutine
11444:	17-49       	sbci r17, 0x97        ; Subtract Immediate with Carry SBI
11446:	1E-4D       	sbci r17, 0xde        ; Subtract Immediate with Carry SBI
11448:	01-E0       	ldi r16, 0x01         ; Load Immediate
1144A:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
1144C:	0B-D0       	rcall .+22            ; Relative Call to Subroutine
1144E:	01-33       	cpi r16, 0x31         ; Compare with Immediate
11450:	28-2B       	or r18, r24           ; Logical OR
11452:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
11454:	00-23       	and r16, r16          ; Logical AND
11456:	08-79       	andi r16, 0x98        ; Logical AND with Immediate
11458:	E8-5C       	subi r30, 0xc8        ; Subtract Immediate
1145A:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1145C:	C8-71       	andi r28, 0x18        ; Logical AND with Immediate
1145E:	08-7D       	andi r16, 0xd8        ; Logical AND with Immediate
11460:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
11462:	07-28       	or r0, r7             ; Logical OR
11464:	F1-D9       	rcall .+5090          ; Relative Call to Subroutine
11466:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
11468:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
1146A:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
1146C:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
1146E:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
11470:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11472:	80-0F       	add r24, r16          ; Add without Carry
11474:	02-D0       	rcall .+4             ; Relative Call to Subroutine
11476:	7C-21       	and r23, r12          ; Logical AND
11478:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
1147A:	D9-70       	andi r29, 0x09        ; Logical AND with Immediate
1147C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
1147E:	40-0F       	add r20, r16          ; Add without Carry
11480:	0E-D0       	rcall .+28            ; Relative Call to Subroutine
11482:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
11484:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
11486:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11488:	40-0F       	add r20, r16          ; Add without Carry
1148A:	09-D0       	rcall .+18            ; Relative Call to Subroutine
1148C:	00-22       	and r0, r16           ; Logical AND
1148E:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
11490:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11492:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
11494:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11496:	03-B1       	in r16, 0x03          ; Load an I/O Location to Register
11498:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1149A:	3C-22       	and r3, r28           ; Logical AND
1149C:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
1149E:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
114A0:	70-BC       	out 0x20, r7          ; Store Register to I/O Location
114A2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
114A4:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
114A6:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
114A8:	80-00       	.data 0x0080          ; Binary data
114AA:	00-20       	and r0, r0            ; Logical AND
114AC:	15-00       	.data 0x0015          ; Binary data
114AE:	00-20       	and r0, r0            ; Logical AND
114B0:	40-00       	.data 0x0040          ; Binary data
114B2:	00-20       	and r0, r0            ; Logical AND
114B4:	10-00       	.data 0x0010          ; Binary data
114B6:	00-20       	and r0, r0            ; Logical AND
114B8:	88-00       	.data 0x0088          ; Binary data
114BA:	00-20       	and r0, r0            ; Logical AND
114BC:	81-00       	.data 0x0081          ; Binary data
114BE:	00-20       	and r0, r0            ; Logical AND
114C0:	18-00       	.data 0x0018          ; Binary data
114C2:	00-20       	and r0, r0            ; Logical AND
114C4:	14-00       	.data 0x0014          ; Binary data
114C6:	00-20       	and r0, r0            ; Logical AND
114C8:	84-00       	.data 0x0084          ; Binary data
114CA:	00-20       	and r0, r0            ; Logical AND
114CC:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
114CE:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
114D0:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
114D2:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
114D4:	02-02       	muls r16, r18         ; Multiply Signed
114D6:	0D-4C       	sbci r16, 0xcd        ; Subtract Immediate with Carry SBI
114D8:	04-EB       	ldi r16, 0xb4         ; Load Immediate
114DA:	C2-04       	cpc r12, r2           ; Compare with Carry
114DC:	60-60       	ori r22, 0x00         ; Logical OR with Immediate
114DE:	0C-48       	sbci r16, 0x8c        ; Subtract Immediate with Carry SBI
114E0:	00-78       	andi r16, 0x80        ; Logical AND with Immediate
114E2:	00-28       	or r0, r0             ; Logical OR
114E4:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
114E6:	88-24       	clr r136              ; Clear Register
114E8:	C8-24       	clr r200              ; Clear Register
114EA:	44-EA       	ldi r20, 0xa4         ; Load Immediate
114EC:	01-41       	sbci r16, 0x11        ; Subtract Immediate with Carry SBI
114EE:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
114F0:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
114F2:	32-10       	cpse r3, r2           ; Compare Skip if Equal
114F4:	80-F0       	brbs 0, .+32          ; Branch if Bit in SREG is Set
114F6:	01-00       	.data 0x0001          ; Binary data
114F8:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
114FA:	10-70       	andi r17, 0x00        ; Logical AND with Immediate
114FC:	83-F0       	brbs 3, .+32          ; Branch if Bit in SREG is Set
114FE:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
11500:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
11502:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11504:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
11506:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11508:	F4-00       	.data 0x00f4          ; Binary data
1150A:	00-20       	and r0, r0            ; Logical AND
1150C:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
1150E:	FF-1F       	adc r31, r31          ; Add with Carry
11510:	6D-01       	movw r12, r26         ; Copy Register Word
11512:	00-20       	and r0, r0            ; Logical AND
11514:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
11516:	43-1E       	adc r4, r19           ; Add with Carry
11518:	03-2B       	or r16, r19           ; Logical OR
1151A:	11-D8       	rcall .+4130          ; Relative Call to Subroutine
1151C:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
1151E:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
11520:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11522:	23-00       	.data 0x0023          ; Binary data
11524:	50-B1       	in r21, 0x00          ; Load an I/O Location to Register
11526:	42-68       	ori r20, 0x82         ; Logical OR with Immediate
11528:	07-49       	sbci r16, 0x97        ; Subtract Immediate with Carry SBI
1152A:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1152C:	23-20       	and r2, r3            ; Logical AND
1152E:	07-4A       	sbci r16, 0xa7        ; Subtract Immediate with Carry SBI
11530:	32-F8       	bld r3, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11532:	13-40       	sbci r17, 0x03        ; Subtract Immediate with Carry SBI
11534:	01-88       	std Y+17, r0          ; Store Indirect From Register to Data Space
11536:	61-1A       	sub r6, r17           ; Subtract Without Carry
11538:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
1153A:	13-10       	cpse r1, r3           ; Compare Skip if Equal
1153C:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
1153E:	00-E0       	ldi r16, 0x00         ; Load Immediate
11540:	00-20       	and r0, r0            ; Logical AND
11542:	5D-F8       	.data 0xf85d          ; Binary data
11544:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
11546:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11548:	E4-00       	.data 0x00e4          ; Binary data
1154A:	00-20       	and r0, r0            ; Logical AND
1154C:	40-03       	mulsu r20, r16        ; Multiply Signed with Unsigned
1154E:	00-20       	and r0, r0            ; Logical AND
11550:	01-38       	cpi r16, 0x81         ; Compare with Immediate
11552:	03-28       	or r0, r3             ; Logical OR
11554:	0D-D8       	rcall .+4122          ; Relative Call to Subroutine
11556:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
11558:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
1155A:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
1155C:	20-30       	cpi r18, 0x00         ; Compare with Immediate
1155E:	2B-B1       	in r18, 0x0b          ; Load an I/O Location to Register
11560:	00-20       	and r0, r0            ; Logical AND
11562:	01-30       	cpi r16, 0x01         ; Compare with Immediate
11564:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
11566:	00-2B       	or r16, r16           ; Logical OR
11568:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
1156A:	00-E0       	ldi r16, 0x00         ; Load Immediate
1156C:	00-20       	and r0, r0            ; Logical AND
1156E:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
11570:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11572:	00-20       	and r0, r0            ; Logical AND
11574:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11576:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11578:	38-01       	movw r6, r16          ; Copy Register Word
1157A:	00-20       	and r0, r0            ; Logical AND
1157C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1157E:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
11580:	01-23       	and r16, r17          ; Logical AND
11582:	1B-49       	sbci r17, 0x9b        ; Subtract Immediate with Carry SBI
11584:	1B-4C       	sbci r17, 0xcb        ; Subtract Immediate with Carry SBI
11586:	5A-18       	sub r5, r10           ; Subtract Without Carry
11588:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
1158A:	01-2C       	mov r0, r1            ; Copy Register
1158C:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
1158E:	08-0F       	add r16, r24          ; Add without Carry
11590:	24-D0       	rcall .+72            ; Relative Call to Subroutine
11592:	9A-00       	.data 0x009a          ; Binary data
11594:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
11596:	32-50       	subi r19, 0x02        ; Subtract Immediate
11598:	6D-B9       	out 0x0d, r22         ; Store Register to I/O Location
1159A:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
1159C:	03-EB       	ldi r16, 0xb3         ; Load Immediate
1159E:	C2-01       	movw r24, r4          ; Copy Register Word
115A0:	08-30       	cpi r16, 0x08         ; Compare with Immediate
115A2:	48-60       	ori r20, 0x08         ; Logical OR with Immediate
115A4:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
115A6:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
115A8:	32-10       	cpse r3, r2           ; Compare Skip if Equal
115AA:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
115AC:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
115AE:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
115B0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
115B2:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
115B4:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
115B6:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
115B8:	01-02       	muls r16, r17         ; Multiply Signed
115BA:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
115BC:	32-50       	subi r19, 0x02        ; Subtract Immediate
115BE:	6D-B9       	out 0x0d, r22         ; Store Register to I/O Location
115C0:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
115C2:	03-EB       	ldi r16, 0xb3         ; Load Immediate
115C4:	C2-01       	movw r24, r4          ; Copy Register Word
115C6:	08-30       	cpi r16, 0x08         ; Compare with Immediate
115C8:	48-60       	ori r20, 0x08         ; Logical OR with Immediate
115CA:	0D-49       	sbci r16, 0x9d        ; Subtract Immediate with Carry SBI
115CC:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
115CE:	32-10       	cpse r3, r2           ; Compare Skip if Equal
115D0:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
115D2:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
115D4:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
115D6:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
115D8:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
115DA:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
115DC:	01-33       	cpi r16, 0x31         ; Compare with Immediate
115DE:	05-2B       	or r16, r21           ; Logical OR
115E0:	D1-D1       	rcall .+930           ; Relative Call to Subroutine
115E2:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
115E4:	00-22       	and r0, r16           ; Logical AND
115E6:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
115E8:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
115EA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
115EC:	37-FC       	sbrc r3, 7            ; Skip if Bit in Register is Cleared
115EE:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
115F0:	10-83       	st Z, r17             ; Store Indirect From Register to Data Space
115F2:	01-00       	.data 0x0001          ; Binary data
115F4:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
115F6:	FF-1F       	adc r31, r31          ; Add with Carry
115F8:	88-00       	.data 0x0088          ; Binary data
115FA:	40-00       	.data 0x0040          ; Binary data
115FC:	62-01       	movw r12, r4          ; Copy Register Word
115FE:	00-20       	and r0, r0            ; Logical AND
11600:	C8-00       	.data 0x00c8          ; Binary data
11602:	40-00       	.data 0x0040          ; Binary data
11604:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
11606:	43-1E       	adc r4, r19           ; Add with Carry
11608:	03-2B       	or r16, r19           ; Logical OR
1160A:	37-D8       	rcall .+4206          ; Relative Call to Subroutine
1160C:	40-01       	movw r8, r0           ; Copy Register Word
1160E:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
11610:	10-00       	.data 0x0010          ; Binary data
11612:	1C-4A       	sbci r17, 0xac        ; Subtract Immediate with Carry SBI
11614:	10-44       	sbci r17, 0x40        ; Subtract Immediate with Carry SBI
11616:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
11618:	1B-4A       	sbci r17, 0xab        ; Subtract Immediate with Carry SBI
1161A:	D2-5C       	subi r29, 0xc2        ; Subtract Immediate
1161C:	03-2A       	or r0, r19            ; Logical OR
1161E:	09-D8       	rcall .+4114          ; Relative Call to Subroutine
11620:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
11622:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
11624:	19-02       	muls r17, r25         ; Multiply Signed
11626:	1B-05       	cpc r17, r11          ; Compare with Carry
11628:	08-30       	cpi r16, 0x08         ; Compare with Immediate
1162A:	02-22       	and r0, r18           ; Logical AND
1162C:	16-E0       	ldi r17, 0x06         ; Load Immediate
1162E:	08-30       	cpi r16, 0x08         ; Compare with Immediate
11630:	04-22       	and r0, r20           ; Logical AND
11632:	13-E0       	ldi r17, 0x03         ; Load Immediate
11634:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
11636:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11638:	23-20       	and r2, r3            ; Logical AND
1163A:	1A-B9       	out 0x0a, r17         ; Store Register to I/O Location
1163C:	13-4A       	sbci r17, 0xa3        ; Subtract Immediate with Carry SBI
1163E:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11640:	23-10       	cpse r2, r3           ; Compare Skip if Equal
11642:	03-E0       	ldi r16, 0x03         ; Load Immediate
11644:	12-4A       	sbci r17, 0xa2        ; Subtract Immediate with Carry SBI
11646:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11648:	23-20       	and r2, r3            ; Logical AND
1164A:	51-60       	ori r21, 0x01         ; Logical OR with Immediate
1164C:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
1164E:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11650:	23-10       	cpse r2, r3           ; Compare Skip if Equal
11652:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
11654:	12-E0       	ldi r17, 0x02         ; Load Immediate
11656:	03-22       	and r0, r19           ; Logical AND
11658:	00-E0       	ldi r16, 0x00         ; Load Immediate
1165A:	05-22       	and r0, r21           ; Logical AND
1165C:	0A-4C       	sbci r16, 0xca        ; Subtract Immediate with Carry SBI
1165E:	E2-54       	subi r30, 0x42        ; Subtract Immediate
11660:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
11662:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
11664:	43-60       	ori r20, 0x03         ; Logical OR with Immediate
11666:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11668:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
1166A:	00-2B       	or r16, r16           ; Logical OR
1166C:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
1166E:	88-23       	and r24, r24          ; Logical AND
11670:	C8-23       	and r28, r24          ; Logical AND
11672:	0A-88       	std Y+18, r0          ; Store Indirect From Register to Data Space
11674:	43-EA       	ldi r20, 0xa3         ; Load Immediate
11676:	02-43       	sbci r16, 0x32        ; Subtract Immediate with Carry SBI
11678:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
1167A:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
1167C:	5D-F8       	.data 0xf85d          ; Binary data
1167E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
11680:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11682:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11684:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
11686:	FF-1F       	adc r31, r31          ; Add with Carry
11688:	A0-00       	.data 0x00a0          ; Binary data
1168A:	00-20       	and r0, r0            ; Logical AND
1168C:	38-01       	movw r6, r16          ; Copy Register Word
1168E:	00-20       	and r0, r0            ; Logical AND
11690:	48-01       	movw r8, r16          ; Copy Register Word
11692:	00-20       	and r0, r0            ; Logical AND
11694:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
11696:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
11698:	A3-4C       	sbci r26, 0xc3        ; Subtract Immediate with Carry SBI
1169A:	DF-F8       	.data 0xf8df          ; Binary data
1169C:	E0-92-DF-F8 	sts 0xf8df, r14       ; Store Direct to Data Space
116A0:	E0-A2       	std Y+32, r14         ; Store Indirect From Register to Data Space
116A2:	DF-F8       	.data 0xf8df          ; Binary data
116A4:	E0-B2       	in r14, 0x10          ; Load an I/O Location to Register
116A6:	25-78       	andi r18, 0x85        ; Logical AND with Immediate
116A8:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
116AA:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
116AC:	04-0F       	add r16, r20          ; Add without Carry
116AE:	1D-D0       	rcall .+58            ; Relative Call to Subroutine
116B0:	9E-4B       	sbci r25, 0xbe        ; Subtract Immediate with Carry SBI
116B2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
116B4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
116B6:	FF-0F       	add r31, r31          ; Add without Carry
116B8:	16-D0       	rcall .+44            ; Relative Call to Subroutine
116BA:	9D-4B       	sbci r25, 0xbd        ; Subtract Immediate with Carry SBI
116BC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
116BE:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
116C0:	FF-02       	muls r31, r31         ; Multiply Signed
116C2:	2B-B1       	in r18, 0x0b          ; Load an I/O Location to Register
116C4:	53-1E       	adc r5, r19           ; Add with Carry
116C6:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
116C8:	99-4A       	sbci r25, 0xa9        ; Subtract Immediate with Carry SBI
116CA:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
116CC:	03-B9       	out 0x03, r16         ; Store Register to I/O Location
116CE:	00-BE       	out 0x30, r0          ; Store Register to I/O Location
116D0:	98-4B       	sbci r25, 0xb8        ; Subtract Immediate with Carry SBI
116D2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
116D4:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
116D6:	FF-02       	muls r31, r31         ; Multiply Signed
116D8:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
116DA:	53-1E       	adc r5, r19           ; Add with Carry
116DC:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
116DE:	95-4A       	sbci r25, 0xa5        ; Subtract Immediate with Carry SBI
116E0:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
116E2:	0B-B9       	out 0x0b, r16         ; Store Register to I/O Location
116E4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
116E6:	18-FD       	.data 0xfd18          ; Binary data
116E8:	04-23       	and r16, r20          ; Logical AND
116EA:	23-70       	andi r18, 0x03        ; Logical AND with Immediate
116EC:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
116EE:	08-0F       	add r16, r24          ; Add without Carry
116F0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
116F2:	E4-82       	std Y+4, r14          ; Store Indirect From Register to Data Space
116F4:	99-F8       	.data 0xf899          ; Binary data
116F6:	00-30       	cpi r16, 0x00         ; Compare with Immediate
116F8:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
116FA:	1D-09       	sbc r17, r13          ; Subtract with Carry
116FC:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
116FE:	21-82       	std Y+1, r2           ; Store Indirect From Register to Data Space
11700:	8D-4D       	sbci r24, 0xdd        ; Subtract Immediate with Carry SBI
11702:	9E-08       	sbc r9, r14           ; Subtract with Carry
11704:	05-EB       	ldi r16, 0xb5         ; Load Immediate
11706:	C6-03       	fmuls r20, r22        ; Fractional Multiply Signed
11708:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
1170A:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
1170C:	36-30       	cpi r19, 0x06         ; Compare with Immediate
1170E:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
11710:	83-03       	fmuls r16, r19        ; Fractional Multiply Signed
11712:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
11714:	0C-2B       	or r16, r28           ; Logical OR
11716:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
11718:	10-82       	st Z, r1              ; Store Indirect From Register to Data Space
1171A:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
1171C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1171E:	CB-01       	movw r24, r22         ; Copy Register Word
11720:	CB-01       	movw r24, r22         ; Copy Register Word
11722:	0E-02       	muls r16, r30         ; Multiply Signed
11724:	0E-02       	muls r16, r30         ; Multiply Signed
11726:	0E-02       	muls r16, r30         ; Multiply Signed
11728:	0E-02       	muls r16, r30         ; Multiply Signed
1172A:	0E-02       	muls r16, r30         ; Multiply Signed
1172C:	0E-02       	muls r16, r30         ; Multiply Signed
1172E:	E8-01       	movw r28, r16         ; Copy Register Word
11730:	0E-02       	muls r16, r30         ; Multiply Signed
11732:	0E-02       	muls r16, r30         ; Multiply Signed
11734:	0E-02       	muls r16, r30         ; Multiply Signed
11736:	0D-00       	.data 0x000d          ; Binary data
11738:	80-49       	sbci r24, 0x90        ; Subtract Immediate with Carry SBI
1173A:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
1173C:	0B-60       	ori r16, 0x0b         ; Logical OR with Immediate
1173E:	52-68       	ori r21, 0x82         ; Logical OR with Immediate
11740:	4A-60       	ori r20, 0x0a         ; Logical OR with Immediate
11742:	7F-4A       	sbci r23, 0xaf        ; Subtract Immediate with Carry SBI
11744:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
11746:	36-20       	and r3, r6            ; Logical AND
11748:	00-22       	and r0, r16           ; Logical AND
1174A:	7E-49       	sbci r23, 0x9e        ; Subtract Immediate with Carry SBI
1174C:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
1174E:	7A-49       	sbci r23, 0x9a        ; Subtract Immediate with Carry SBI
11750:	0A-61       	ori r16, 0x1a         ; Logical OR with Immediate
11752:	8A-61       	ori r24, 0x1a         ; Logical OR with Immediate
11754:	01-21       	and r16, r1           ; Logical AND
11756:	7C-4A       	sbci r23, 0xac        ; Subtract Immediate with Carry SBI
11758:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
1175A:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
1175C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
1175E:	81-62       	ori r24, 0x21         ; Logical OR with Immediate
11760:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
11762:	18-D8       	rcall .+4144          ; Relative Call to Subroutine
11764:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
11766:	D0-6F       	ori r29, 0xf0         ; Logical OR with Immediate
11768:	2E-D2       	rcall .+1116          ; Relative Call to Subroutine
1176A:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
1176C:	81-7F       	andi r24, 0xf1        ; Logical AND with Immediate
1176E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11770:	1E-81       	ldd r17, Y+6          ; Load Indirect from Data Space to Register
11772:	06-D8       	rcall .+4108          ; Relative Call to Subroutine
11774:	80-2B       	or r24, r16           ; Logical OR
11776:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11778:	C9-80       	ldd r12, Y+1          ; Load Indirect from Data Space to Register
1177A:	82-2B       	or r24, r18           ; Logical OR
1177C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1177E:	CC-80       	ldd r12, Y+4          ; Load Indirect from Data Space to Register
11780:	66-E1       	ldi r22, 0x16         ; Load Immediate
11782:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
11784:	02-32       	cpi r16, 0x22         ; Compare with Immediate
11786:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
11788:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1178A:	26-81       	ldd r18, Y+6          ; Load Indirect from Data Space to Register
1178C:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
1178E:	A0-6F       	ori r26, 0xf0         ; Logical OR with Immediate
11790:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11792:	62-81       	ldd r22, Y+2          ; Load Indirect from Data Space to Register
11794:	5C-E1       	ldi r21, 0x1c         ; Load Immediate
11796:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
11798:	21-02       	muls r18, r17         ; Multiply Signed
1179A:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
1179C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1179E:	86-81       	ldd r24, Y+6          ; Load Indirect from Data Space to Register
117A0:	07-D8       	rcall .+4110          ; Relative Call to Subroutine
117A2:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
117A4:	08-6F       	ori r16, 0xf8         ; Logical OR with Immediate
117A6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
117A8:	AB-80       	ldd r10, Y+3          ; Load Indirect from Data Space to Register
117AA:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
117AC:	10-6F       	ori r17, 0xf0         ; Logical OR with Immediate
117AE:	11-D0       	rcall .+34            ; Relative Call to Subroutine
117B0:	4E-E1       	ldi r20, 0x1e         ; Load Immediate
117B2:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
117B4:	21-22       	and r2, r17           ; Logical AND
117B6:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
117B8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
117BA:	41-81       	ldd r20, Y+1          ; Load Indirect from Data Space to Register
117BC:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
117BE:	21-32       	cpi r18, 0x21         ; Compare with Immediate
117C0:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
117C2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
117C4:	49-81       	ldd r20, Y+1          ; Load Indirect from Data Space to Register
117C6:	43-E1       	ldi r20, 0x13         ; Load Immediate
117C8:	60-4B       	sbci r22, 0xb0        ; Subtract Immediate with Carry SBI
117CA:	5D-68       	ori r21, 0x8d         ; Logical OR with Immediate
117CC:	00-2D       	mov r16, r0           ; Copy Register
117CE:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
117D0:	18-81       	ld r17, Y             ; Load Indirect from Data Space to Register
117D2:	30-E1       	ldi r19, 0x10         ; Load Immediate
117D4:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
117D6:	9A-78       	andi r25, 0x8a        ; Logical AND with Immediate
117D8:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
117DA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
117DC:	56-4D       	sbci r21, 0xd6        ; Subtract Immediate with Carry SBI
117DE:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
117E0:	80-06       	cpc r8, r16           ; Compare with Carry
117E2:	2B-6A       	ori r18, 0xab         ; Logical OR with Immediate
117E4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
117E6:	80-0F       	add r24, r16          ; Add without Carry
117E8:	03-D0       	rcall .+6             ; Relative Call to Subroutine
117EA:	68-6A       	ori r22, 0xa8         ; Logical OR with Immediate
117EC:	08-38       	cpi r16, 0x88         ; Compare with Immediate
117EE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
117F0:	35-FB       	bst r19, 5            ; Bit Store from Bit in Register to T Flag in SREG
117F2:	08-35       	cpi r16, 0x58         ; Compare with Immediate
117F4:	B5-42       	sbci r27, 0x25        ; Subtract Immediate with Carry SBI
117F6:	F4-D1       	rcall .+1000          ; Relative Call to Subroutine
117F8:	DF-F8       	.data 0xf8df          ; Binary data
117FA:	8C-81       	ldd r24, Y+4          ; Load Indirect from Data Space to Register
117FC:	00-26       	clr r512              ; Clear Register
117FE:	37-46       	sbci r19, 0x67        ; Subtract Immediate with Carry SBI
11800:	53-4A       	sbci r21, 0xa3        ; Subtract Immediate with Carry SBI
11802:	B0-58       	subi r27, 0x80        ; Subtract Immediate
11804:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
11806:	45-68       	ori r20, 0x85         ; Logical OR with Immediate
11808:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1180A:	28-FB       	.data 0xfb28          ; Binary data
1180C:	0D-B1       	in r16, 0x0d          ; Load an I/O Location to Register
1180E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
11810:	F9-E7       	ldi r31, 0x79         ; Load Immediate
11812:	00-23       	and r16, r16          ; Logical AND
11814:	4E-49       	sbci r20, 0x9e        ; Subtract Immediate with Carry SBI
11816:	73-50       	subi r23, 0x03        ; Subtract Immediate
11818:	4E-4A       	sbci r20, 0xae        ; Subtract Immediate with Carry SBI
1181A:	B3-50       	subi r27, 0x03        ; Subtract Immediate
1181C:	4E-4B       	sbci r20, 0xbe        ; Subtract Immediate with Carry SBI
1181E:	F0-58       	subi r31, 0x80        ; Subtract Immediate
11820:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
11822:	45-68       	ori r20, 0x85         ; Logical OR with Immediate
11824:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11826:	1A-FB       	.data 0xfb1a          ; Binary data
11828:	0D-B1       	in r16, 0x0d          ; Load an I/O Location to Register
1182A:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1182C:	F9-E7       	ldi r31, 0x79         ; Load Immediate
1182E:	00-23       	and r16, r16          ; Logical AND
11830:	49-49       	sbci r20, 0x99        ; Subtract Immediate with Carry SBI
11832:	73-50       	subi r23, 0x03        ; Subtract Immediate
11834:	49-4A       	sbci r20, 0xa9        ; Subtract Immediate with Carry SBI
11836:	B3-50       	subi r27, 0x03        ; Subtract Immediate
11838:	28-F8       	.data 0xf828          ; Binary data
1183A:	02-3F       	cpi r16, 0xf2         ; Compare with Immediate
1183C:	48-4B       	sbci r20, 0xb8        ; Subtract Immediate with Carry SBI
1183E:	FB-5C       	subi r31, 0xcb        ; Subtract Immediate
11840:	02-3B       	cpi r16, 0xb2         ; Compare with Immediate
11842:	03-2B       	or r16, r19           ; Logical OR
11844:	0A-D8       	rcall .+4116          ; Relative Call to Subroutine
11846:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
11848:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1184A:	02-06       	cpc r0, r18           ; Compare with Carry
1184C:	02-06       	cpc r0, r18           ; Compare with Carry
1184E:	00-22       	and r0, r16           ; Logical AND
11850:	43-4B       	sbci r20, 0xb3        ; Subtract Immediate with Carry SBI
11852:	DA-55       	subi r29, 0x5a        ; Subtract Immediate
11854:	02-E0       	ldi r16, 0x02         ; Load Immediate
11856:	01-22       	and r0, r17           ; Logical AND
11858:	41-4B       	sbci r20, 0xb1        ; Subtract Immediate with Carry SBI
1185A:	DA-55       	subi r29, 0x5a        ; Subtract Immediate
1185C:	01-37       	cpi r16, 0x71         ; Compare with Immediate
1185E:	04-36       	cpi r16, 0x64         ; Compare with Immediate
11860:	10-2E       	mov r1, r16           ; Copy Register
11862:	CD-D1       	rcall .+922           ; Relative Call to Subroutine
11864:	00-22       	and r0, r16           ; Logical AND
11866:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
11868:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1186A:	01-25       	clr r257              ; Clear Register
1186C:	3E-4E       	sbci r19, 0xee        ; Subtract Immediate with Carry SBI
1186E:	DF-F8       	.data 0xf8df          ; Binary data
11870:	1C-81       	ldd r17, Y+4          ; Load Indirect from Data Space to Register
11872:	31-4F       	sbci r19, 0xf1        ; Subtract Immediate with Carry SBI
11874:	05-EB       	ldi r16, 0xb5         ; Load Immediate
11876:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
11878:	13-F8       	bld r1, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
1187A:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
1187C:	06-F8       	bld r0, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
1187E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
11880:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11882:	08-0F       	add r16, r24          ; Add without Carry
11884:	2D-D0       	rcall .+90            ; Relative Call to Subroutine
11886:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11888:	C9-FA       	.data 0xfac9          ; Binary data
1188A:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
1188C:	A9-00       	.data 0x00a9          ; Binary data
1188E:	07-EB       	ldi r16, 0xb7         ; Load Immediate
11890:	45-12       	cpse r4, r21          ; Compare Skip if Equal
11892:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
11894:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
11896:	53-60       	ori r21, 0x03         ; Logical OR with Immediate
11898:	34-4A       	sbci r19, 0xa4        ; Subtract Immediate with Carry SBI
1189A:	47-F8       	bld r4, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
1189C:	31-20       	and r3, r1            ; Logical AND
1189E:	07-E0       	ldi r16, 0x07         ; Load Immediate
118A0:	AB-00       	.data 0x00ab          ; Binary data
118A2:	00-22       	and r0, r16           ; Logical AND
118A4:	47-F8       	bld r4, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
118A6:	33-20       	and r3, r3            ; Logical AND
118A8:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
118AA:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
118AC:	01-32       	cpi r16, 0x21         ; Compare with Immediate
118AE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
118B0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
118B2:	B4-FA       	bst r11, 4            ; Bit Store from Bit in Register to T Flag in SREG
118B4:	58-B1       	in r21, 0x08          ; Load an I/O Location to Register
118B6:	AB-00       	.data 0x00ab          ; Binary data
118B8:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
118BA:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
118BC:	07-EB       	ldi r16, 0xb7         ; Load Immediate
118BE:	C3-01       	movw r24, r6          ; Copy Register Word
118C0:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
118C2:	08-02       	muls r16, r24         ; Multiply Signed
118C4:	4A-60       	ori r20, 0x0a         ; Logical OR with Immediate
118C6:	1E-4A       	sbci r17, 0xae        ; Subtract Immediate with Carry SBI
118C8:	47-F8       	bld r4, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
118CA:	33-20       	and r3, r3            ; Logical AND
118CC:	09-E0       	ldi r16, 0x09         ; Load Immediate
118CE:	AB-00       	.data 0x00ab          ; Binary data
118D0:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
118D2:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
118D4:	00-22       	and r0, r16           ; Logical AND
118D6:	47-F8       	bld r4, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
118D8:	33-20       	and r3, r3            ; Logical AND
118DA:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
118DC:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
118DE:	01-32       	cpi r16, 0x21         ; Compare with Immediate
118E0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
118E2:	AA-00       	.data 0x00aa          ; Binary data
118E4:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
118E6:	02-01       	movw r0, r4           ; Copy Register Word
118E8:	00-23       	and r16, r16          ; Logical AND
118EA:	47-F8       	bld r4, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
118EC:	31-30       	cpi r19, 0x01         ; Compare with Immediate
118EE:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
118F0:	03-02       	muls r16, r19         ; Multiply Signed
118F2:	47-F8       	bld r4, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
118F4:	32-30       	cpi r19, 0x02         ; Compare with Immediate
118F6:	01-35       	cpi r16, 0x51         ; Compare with Immediate
118F8:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
118FA:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
118FC:	BA-D1       	rcall .+884           ; Relative Call to Subroutine
118FE:	1E-E2       	ldi r17, 0x2e         ; Load Immediate
11900:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
11902:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11904:	1B-4D       	sbci r17, 0xdb        ; Subtract Immediate with Carry SBI
11906:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
11908:	01-27       	clr r769              ; Clear Register
1190A:	AA-E0       	ldi r26, 0x0a         ; Load Immediate
1190C:	19-4D       	sbci r17, 0xd9        ; Subtract Immediate with Carry SBI
1190E:	00-23       	and r16, r16          ; Logical AND
11910:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
11912:	6B-70       	andi r22, 0x0b        ; Logical AND with Immediate
11914:	02-27       	clr r770              ; Clear Register
11916:	A4-E0       	ldi r26, 0x04         ; Load Immediate
11918:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1191A:	9B-88       	std Y+19, r9          ; Store Indirect From Register to Data Space
1191C:	04-2B       	or r16, r20           ; Logical OR
1191E:	37-D9       	rcall .+4718          ; Relative Call to Subroutine
11920:	0F-22       	and r0, r31           ; Logical AND
11922:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
11924:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11926:	C1-E0       	ldi r28, 0x01         ; Load Immediate
11928:	80-20       	and r8, r0            ; Logical AND
1192A:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
1192C:	6C-01       	movw r12, r24         ; Copy Register Word
1192E:	00-20       	and r0, r0            ; Logical AND
11930:	F5-00       	.data 0x00f5          ; Binary data
11932:	00-20       	and r0, r0            ; Logical AND
11934:	6E-01       	movw r12, r28         ; Copy Register Word
11936:	00-20       	and r0, r0            ; Logical AND
11938:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
1193A:	FF-1F       	adc r31, r31          ; Add with Carry
1193C:	58-01       	movw r10, r16         ; Copy Register Word
1193E:	00-20       	and r0, r0            ; Logical AND
11940:	C8-00       	.data 0x00c8          ; Binary data
11942:	40-00       	.data 0x0040          ; Binary data
11944:	8C-00       	.data 0x008c          ; Binary data
11946:	00-20       	and r0, r0            ; Logical AND
11948:	6D-01       	movw r12, r26         ; Copy Register Word
1194A:	00-20       	and r0, r0            ; Logical AND
1194C:	14-83       	std Y+4, r17          ; Store Indirect From Register to Data Space
1194E:	01-00       	.data 0x0001          ; Binary data
11950:	E4-00       	.data 0x00e4          ; Binary data
11952:	00-20       	and r0, r0            ; Logical AND
11954:	90-00       	.data 0x0090          ; Binary data
11956:	00-20       	and r0, r0            ; Logical AND
11958:	38-01       	movw r6, r16          ; Copy Register Word
1195A:	00-20       	and r0, r0            ; Logical AND
1195C:	48-01       	movw r8, r16          ; Copy Register Word
1195E:	00-20       	and r0, r0            ; Logical AND
11960:	A0-00       	.data 0x00a0          ; Binary data
11962:	00-20       	and r0, r0            ; Logical AND
11964:	62-01       	movw r12, r4          ; Copy Register Word
11966:	00-20       	and r0, r0            ; Logical AND
11968:	C4-20       	and r12, r4           ; Logical AND
1196A:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
1196C:	88-00       	.data 0x0088          ; Binary data
1196E:	40-00       	.data 0x0040          ; Binary data
11970:	D4-20       	and r13, r4           ; Logical AND
11972:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11974:	64-01       	movw r12, r8          ; Copy Register Word
11976:	00-20       	and r0, r0            ; Logical AND
11978:	C0-20       	and r12, r0           ; Logical AND
1197A:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
1197C:	90-20       	and r9, r0            ; Logical AND
1197E:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11980:	94-20       	and r9, r4            ; Logical AND
11982:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11984:	98-20       	and r9, r8            ; Logical AND
11986:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11988:	3E-03       	fmul r19, r22         ; Fractional Multiply Unsigned
1198A:	00-20       	and r0, r0            ; Logical AND
1198C:	10-83       	st Z, r17             ; Store Indirect From Register to Data Space
1198E:	01-00       	.data 0x0001          ; Binary data
11990:	A0-4A       	sbci r26, 0xa0        ; Subtract Immediate with Carry SBI
11992:	00-21       	and r16, r0           ; Logical AND
11994:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
11996:	51-70       	andi r21, 0x01        ; Logical AND with Immediate
11998:	9F-4A       	sbci r25, 0xaf        ; Subtract Immediate with Carry SBI
1199A:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
1199C:	23-30       	cpi r18, 0x03         ; Compare with Immediate
1199E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
119A0:	02-0F       	add r16, r18          ; Add without Carry
119A2:	5C-D0       	rcall .+184           ; Relative Call to Subroutine
119A4:	9B-4D       	sbci r25, 0xdb        ; Subtract Immediate with Carry SBI
119A6:	01-23       	and r16, r17          ; Logical AND
119A8:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
119AA:	02-27       	clr r770              ; Clear Register
119AC:	59-E0       	ldi r21, 0x09         ; Load Immediate
119AE:	9B-4B       	sbci r25, 0xbb        ; Subtract Immediate with Carry SBI
119B0:	9B-88       	std Y+19, r9          ; Store Indirect From Register to Data Space
119B2:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
119B4:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
119B6:	04-2B       	or r16, r20           ; Logical OR
119B8:	02-DC       	rcall .+6148          ; Relative Call to Subroutine
119BA:	98-4A       	sbci r25, 0xa8        ; Subtract Immediate with Carry SBI
119BC:	52-88       	std Y+18, r5          ; Store Indirect From Register to Data Space
119BE:	1A-B1       	in r17, 0x0a          ; Load an I/O Location to Register
119C0:	0F-22       	and r0, r31           ; Logical AND
119C2:	95-4B       	sbci r25, 0xb5        ; Subtract Immediate with Carry SBI
119C4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
119C6:	71-E0       	ldi r23, 0x01         ; Load Immediate
119C8:	93-4A       	sbci r25, 0xa3        ; Subtract Immediate with Carry SBI
119CA:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
119CC:	23-10       	cpse r2, r3           ; Compare Skip if Equal
119CE:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
119D0:	02-01       	movw r0, r4           ; Copy Register Word
119D2:	02-F8       	bld r0, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
119D4:	23-10       	cpse r2, r3           ; Compare Skip if Equal
119D6:	B2-E1       	ldi r27, 0x12         ; Load Immediate
119D8:	90-4B       	sbci r25, 0xb0        ; Subtract Immediate with Carry SBI
119DA:	9B-88       	std Y+19, r9          ; Store Indirect From Register to Data Space
119DC:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
119DE:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
119E0:	04-2B       	or r16, r20           ; Logical OR
119E2:	02-DC       	rcall .+6148          ; Relative Call to Subroutine
119E4:	8D-4A       	sbci r24, 0xad        ; Subtract Immediate with Carry SBI
119E6:	52-88       	std Y+18, r5          ; Store Indirect From Register to Data Space
119E8:	1A-B1       	in r17, 0x0a          ; Load an I/O Location to Register
119EA:	0F-22       	and r0, r31           ; Logical AND
119EC:	8A-4B       	sbci r24, 0xba        ; Subtract Immediate with Carry SBI
119EE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
119F0:	5C-E0       	ldi r21, 0x0c         ; Load Immediate
119F2:	89-4A       	sbci r24, 0xa9        ; Subtract Immediate with Carry SBI
119F4:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
119F6:	23-10       	cpse r2, r3           ; Compare Skip if Equal
119F8:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
119FA:	02-01       	movw r0, r4           ; Copy Register Word
119FC:	02-F8       	bld r0, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
119FE:	23-10       	cpse r2, r3           ; Compare Skip if Equal
11A00:	9D-E1       	ldi r25, 0x1d         ; Load Immediate
11A02:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
11A04:	5E-88       	std Y+22, r5          ; Store Indirect From Register to Data Space
11A06:	9F-88       	std Y+23, r9          ; Store Indirect From Register to Data Space
11A08:	85-4B       	sbci r24, 0xb5        ; Subtract Immediate with Carry SBI
11A0A:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
11A0C:	0C-02       	muls r16, r28         ; Multiply Signed
11A0E:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
11A10:	33-F8       	bld r3, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11A12:	0C-0C       	add r0, r12           ; Add without Carry
11A14:	B0-42       	sbci r27, 0x20        ; Subtract Immediate with Carry SBI
11A16:	09-D1       	rcall .+530           ; Relative Call to Subroutine
11A18:	33-F8       	bld r3, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11A1A:	0A-0C       	add r0, r10           ; Add without Carry
11A1C:	B8-42       	sbci r27, 0x28        ; Subtract Immediate with Carry SBI
11A1E:	05-D1       	rcall .+522           ; Relative Call to Subroutine
11A20:	36-0A       	sbc r3, r22           ; Subtract with Carry
11A22:	03-2E       	mov r0, r19           ; Copy Register
11A24:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
11A26:	2F-78       	andi r18, 0x8f        ; Logical AND with Immediate
11A28:	17-89       	std Y+23, r17         ; Store Indirect From Register to Data Space
11A2A:	1A-E0       	ldi r17, 0x0a         ; Load Immediate
11A2C:	0D-69       	ori r16, 0x9d         ; Logical OR with Immediate
11A2E:	0C-33       	cpi r16, 0x3c         ; Compare with Immediate
11A30:	0C-32       	cpi r16, 0x2c         ; Compare with Immediate
11A32:	00-2D       	mov r16, r0           ; Copy Register
11A34:	EB-D1       	rcall .+982           ; Relative Call to Subroutine
11A36:	0F-22       	and r0, r31           ; Logical AND
11A38:	77-4B       	sbci r23, 0xb7        ; Subtract Immediate with Carry SBI
11A3A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11A3C:	36-E0       	ldi r19, 0x06         ; Load Immediate
11A3E:	79-4B       	sbci r23, 0xb9        ; Subtract Immediate with Carry SBI
11A40:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
11A42:	79-4B       	sbci r23, 0xb9        ; Subtract Immediate with Carry SBI
11A44:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11A46:	75-4B       	sbci r23, 0xb5        ; Subtract Immediate with Carry SBI
11A48:	9A-78       	andi r25, 0x8a        ; Logical AND with Immediate
11A4A:	78-4B       	sbci r23, 0xb8        ; Subtract Immediate with Carry SBI
11A4C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11A4E:	76-E1       	ldi r23, 0x16         ; Load Immediate
11A50:	0F-22       	and r0, r31           ; Logical AND
11A52:	71-4B       	sbci r23, 0xb1        ; Subtract Immediate with Carry SBI
11A54:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11A56:	29-E0       	ldi r18, 0x09         ; Load Immediate
11A58:	00-27       	clr r768              ; Clear Register
11A5A:	3D-46       	sbci r19, 0x6d        ; Subtract Immediate with Carry SBI
11A5C:	01-E0       	ldi r16, 0x01         ; Load Immediate
11A5E:	02-27       	clr r770              ; Clear Register
11A60:	6C-4D       	sbci r22, 0xdc        ; Subtract Immediate with Carry SBI
11A62:	6E-4B       	sbci r22, 0xbe        ; Subtract Immediate with Carry SBI
11A64:	DB-88       	std Y+19, r13         ; Store Indirect From Register to Data Space
11A66:	9F-42       	sbci r25, 0x2f        ; Subtract Immediate with Carry SBI
11A68:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
11A6A:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
11A6C:	40-2F       	mov r20, r16          ; Copy Register
11A6E:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
11A70:	3E-46       	sbci r19, 0x6e        ; Subtract Immediate with Carry SBI
11A72:	40-26       	clr r576              ; Clear Register
11A74:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
11A76:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
11A78:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11A7A:	28-FD       	.data 0xfd28          ; Binary data
11A7C:	35-44       	sbci r19, 0x45        ; Subtract Immediate with Carry SBI
11A7E:	BF-1B       	sub r27, r31          ; Subtract Without Carry
11A80:	03-D1       	rcall .+518           ; Relative Call to Subroutine
11A82:	3F-2E       	mov r3, r31           ; Copy Register
11A84:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
11A86:	60-81       	ld r22, Z             ; Load Indirect from Data Space to Register
11A88:	10-E0       	ldi r17, 0x00         ; Load Immediate
11A8A:	40-2F       	mov r20, r16          ; Copy Register
11A8C:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
11A8E:	3E-46       	sbci r19, 0x6e        ; Subtract Immediate with Carry SBI
11A90:	40-26       	clr r576              ; Clear Register
11A92:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
11A94:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
11A96:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11A98:	19-FD       	.data 0xfd19          ; Binary data
11A9A:	35-44       	sbci r19, 0x45        ; Subtract Immediate with Carry SBI
11A9C:	BF-1B       	sub r27, r31          ; Subtract Without Carry
11A9E:	01-D1       	rcall .+514           ; Relative Call to Subroutine
11AA0:	3F-2E       	mov r3, r31           ; Copy Register
11AA2:	03-D9       	rcall .+4614          ; Relative Call to Subroutine
11AA4:	62-4B       	sbci r22, 0xb2        ; Subtract Immediate with Carry SBI
11AA6:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
11AA8:	62-4B       	sbci r22, 0xb2        ; Subtract Immediate with Carry SBI
11AAA:	1F-80       	ldd r1, Y+7           ; Load Indirect from Data Space to Register
11AAC:	01-23       	and r16, r17          ; Logical AND
11AAE:	8A-F8       	.data 0xf88a          ; Binary data
11AB0:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11AB2:	42-E0       	ldi r20, 0x02         ; Load Immediate
11AB4:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
11AB6:	19-88       	std Y+17, r1          ; Store Indirect From Register to Data Space
11AB8:	42-F2       	brbs 2, .-112         ; Branch if Bit in SREG is Set
11ABA:	21-03       	mulsu r18, r17        ; Multiply Signed with Unsigned
11ABC:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
11ABE:	12-D1       	rcall .+548           ; Relative Call to Subroutine
11AC0:	5D-4B       	sbci r21, 0xbd        ; Subtract Immediate with Carry SBI
11AC2:	D8-1D       	adc r29, r8           ; Add with Carry
11AC4:	12-F8       	bld r1, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11AC6:	01-1B       	sub r16, r17          ; Subtract Without Carry
11AC8:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11ACA:	01-1F       	adc r16, r17          ; Add with Carry
11ACC:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
11ACE:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
11AD0:	5A-4B       	sbci r21, 0xba        ; Subtract Immediate with Carry SBI
11AD2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11AD4:	86-2B       	or r24, r22           ; Logical OR
11AD6:	02-D1       	rcall .+516           ; Relative Call to Subroutine
11AD8:	0F-22       	and r0, r31           ; Logical AND
11ADA:	59-4B       	sbci r21, 0xb9        ; Subtract Immediate with Carry SBI
11ADC:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11ADE:	00-20       	and r0, r0            ; Logical AND
11AE0:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
11AE2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11AE4:	F3-FC       	sbrc r15, 3           ; Skip if Bit in Register is Cleared
11AE6:	57-4B       	sbci r21, 0xb7        ; Subtract Immediate with Carry SBI
11AE8:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
11AEA:	36-30       	cpi r19, 0x06         ; Compare with Immediate
11AEC:	25-E0       	ldi r18, 0x05         ; Load Immediate
11AEE:	50-4B       	sbci r21, 0xb0        ; Subtract Immediate with Carry SBI
11AF0:	1E-68       	ori r17, 0x8e         ; Logical OR with Immediate
11AF2:	BE-B1       	in r27, 0x0e          ; Load an I/O Location to Register
11AF4:	4F-4F       	sbci r20, 0xff        ; Subtract Immediate with Carry SBI
11AF6:	B7-F8       	bld r11, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
11AF8:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
11AFA:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
11AFC:	40-0F       	add r20, r16          ; Add without Carry
11AFE:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
11B00:	45-46       	sbci r20, 0x65        ; Subtract Immediate with Carry SBI
11B02:	40-25       	clr r320              ; Clear Register
11B04:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
11B06:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
11B08:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11B0A:	E0-FC       	sbrc r14, 0           ; Skip if Bit in Register is Cleared
11B0C:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
11B0E:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
11B10:	9B-B2       	in r9, 0x1b           ; Load an I/O Location to Register
11B12:	3B-80       	ldd r3, Y+3           ; Load Indirect from Data Space to Register
11B14:	0B-B9       	out 0x0b, r16         ; Store Register to I/O Location
11B16:	40-2D       	mov r20, r0           ; Copy Register
11B18:	01-D1       	rcall .+514           ; Relative Call to Subroutine
11B1A:	35-44       	sbci r19, 0x45        ; Subtract Immediate with Carry SBI
11B1C:	00-E0       	ldi r16, 0x00         ; Load Immediate
11B1E:	00-25       	clr r256              ; Clear Register
11B20:	43-4B       	sbci r20, 0xb3        ; Subtract Immediate with Carry SBI
11B22:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
11B24:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
11B26:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
11B28:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
11B2A:	A0-6F       	ori r26, 0xf0         ; Logical OR with Immediate
11B2C:	05-D1       	rcall .+522           ; Relative Call to Subroutine
11B2E:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
11B30:	00-22       	and r0, r16           ; Logical AND
11B32:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
11B34:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
11B36:	8B-F8       	.data 0xf88b          ; Binary data
11B38:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11B3A:	01-23       	and r16, r17          ; Logical AND
11B3C:	8A-F8       	.data 0xf88a          ; Binary data
11B3E:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11B40:	B9-E0       	ldi r27, 0x09         ; Load Immediate
11B42:	41-4E       	sbci r20, 0xe1        ; Subtract Immediate with Carry SBI
11B44:	9F-08       	sbc r9, r15           ; Subtract with Carry
11B46:	06-EB       	ldi r16, 0xb6         ; Load Immediate
11B48:	C7-08       	sbc r12, r7           ; Subtract with Carry
11B4A:	D8-F8       	.data 0xf8d8          ; Binary data
11B4C:	04-20       	and r0, r4            ; Logical AND
11B4E:	A2-F1       	brbs 2, .+104         ; Branch if Bit in SREG is Set
11B50:	08-00       	.data 0x0008          ; Binary data
11B52:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
11B54:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
11B56:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11B58:	08-0F       	add r16, r24          ; Add without Carry
11B5A:	47-D0       	rcall .+142           ; Relative Call to Subroutine
11B5C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11B5E:	7E-F9       	.data 0xf97e          ; Binary data
11B60:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
11B62:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11B64:	25-30       	cpi r18, 0x05         ; Compare with Immediate
11B66:	4B-B3       	in r20, 0x1b          ; Load an I/O Location to Register
11B68:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
11B6A:	38-49       	sbci r19, 0x98        ; Subtract Immediate with Carry SBI
11B6C:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
11B6E:	25-20       	and r2, r5            ; Logical AND
11B70:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
11B72:	08-02       	muls r16, r24         ; Multiply Signed
11B74:	C8-F8       	.data 0xf8c8          ; Binary data
11B76:	04-20       	and r0, r4            ; Logical AND
11B78:	35-4A       	sbci r19, 0xa5        ; Subtract Immediate with Carry SBI
11B7A:	52-5D       	subi r21, 0xd2        ; Subtract Immediate
11B7C:	03-2A       	or r0, r19            ; Logical OR
11B7E:	12-D8       	rcall .+4132          ; Relative Call to Subroutine
11B80:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
11B82:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
11B84:	02-06       	cpc r0, r18           ; Compare with Carry
11B86:	0A-0E       	add r0, r26           ; Add without Carry
11B88:	03-21       	and r16, r3           ; Logical AND
11B8A:	31-4A       	sbci r19, 0xa1        ; Subtract Immediate with Carry SBI
11B8C:	51-55       	subi r21, 0x51        ; Subtract Immediate
11B8E:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
11B90:	02-21       	and r16, r2           ; Logical AND
11B92:	2F-4A       	sbci r18, 0xaf        ; Subtract Immediate with Carry SBI
11B94:	51-55       	subi r21, 0x51        ; Subtract Immediate
11B96:	06-E0       	ldi r16, 0x06         ; Load Immediate
11B98:	05-21       	and r16, r5           ; Logical AND
11B9A:	2D-4A       	sbci r18, 0xad        ; Subtract Immediate with Carry SBI
11B9C:	51-55       	subi r21, 0x51        ; Subtract Immediate
11B9E:	02-E0       	ldi r16, 0x02         ; Load Immediate
11BA0:	04-21       	and r16, r4           ; Logical AND
11BA2:	2B-4A       	sbci r18, 0xab        ; Subtract Immediate with Carry SBI
11BA4:	51-55       	subi r21, 0x51        ; Subtract Immediate
11BA6:	18-F0       	brbs 0, .+6           ; Branch if Bit in SREG is Set
11BA8:	08-0F       	add r16, r24          ; Add without Carry
11BAA:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
11BAC:	88-22       	and r8, r24           ; Logical AND
11BAE:	C8-22       	and r12, r24          ; Logical AND
11BB0:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
11BB2:	42-EA       	ldi r20, 0xa2         ; Load Immediate
11BB4:	03-43       	sbci r16, 0x33        ; Subtract Immediate with Carry SBI
11BB6:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
11BB8:	37-30       	cpi r19, 0x07         ; Compare with Immediate
11BBA:	7C-E0       	ldi r23, 0x0c         ; Load Immediate
11BBC:	24-4B       	sbci r18, 0xb4        ; Subtract Immediate with Carry SBI
11BBE:	5B-5D       	subi r21, 0xdb        ; Subtract Immediate
11BC0:	03-2B       	or r16, r19           ; Logical OR
11BC2:	0B-D8       	rcall .+4118          ; Relative Call to Subroutine
11BC4:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
11BC6:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
11BC8:	77-77       	andi r23, 0x77        ; Logical AND with Immediate
11BCA:	02-06       	cpc r0, r18           ; Compare with Carry
11BCC:	00-22       	and r0, r16           ; Logical AND
11BCE:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
11BD0:	5A-55       	subi r21, 0x5a        ; Subtract Immediate
11BD2:	70-E0       	ldi r23, 0x00         ; Load Immediate
11BD4:	01-22       	and r0, r17           ; Logical AND
11BD6:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
11BD8:	5A-55       	subi r21, 0x5a        ; Subtract Immediate
11BDA:	6C-E0       	ldi r22, 0x0c         ; Load Immediate
11BDC:	18-F0       	brbs 0, .+6           ; Branch if Bit in SREG is Set
11BDE:	08-0F       	add r16, r24          ; Add without Carry
11BE0:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
11BE2:	02-22       	and r0, r18           ; Logical AND
11BE4:	03-22       	and r0, r19           ; Logical AND
11BE6:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
11BE8:	5A-55       	subi r21, 0x5a        ; Subtract Immediate
11BEA:	64-E0       	ldi r22, 0x04         ; Load Immediate
11BEC:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
11BEE:	37-30       	cpi r19, 0x07         ; Compare with Immediate
11BF0:	1B-0C       	add r1, r11           ; Add without Carry
11BF2:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11BF4:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
11BF6:	00-2B       	or r16, r16           ; Logical OR
11BF8:	55-D0       	rcall .+170           ; Relative Call to Subroutine
11BFA:	00-23       	and r16, r16          ; Logical AND
11BFC:	22-F8       	bld r2, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11BFE:	06-3C       	cpi r16, 0xc6         ; Compare with Immediate
11C00:	42-F8       	bld r4, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11C02:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
11C04:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
11C06:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11C08:	25-30       	cpi r18, 0x05         ; Compare with Immediate
11C0A:	2B-BB       	out 0x1b, r18         ; Store Register to I/O Location
11C0C:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
11C0E:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11C10:	25-00       	.data 0x0025          ; Binary data
11C12:	25-E0       	ldi r18, 0x05         ; Load Immediate
11C14:	64-01       	movw r12, r8          ; Copy Register Word
11C16:	00-20       	and r0, r0            ; Logical AND
11C18:	C0-20       	and r12, r0           ; Logical AND
11C1A:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11C1C:	58-01       	movw r10, r16         ; Copy Register Word
11C1E:	00-20       	and r0, r0            ; Logical AND
11C20:	20-83       	st Z, r18             ; Store Indirect From Register to Data Space
11C22:	01-00       	.data 0x0001          ; Binary data
11C24:	0C-00       	.data 0x000c          ; Binary data
11C26:	00-20       	and r0, r0            ; Logical AND
11C28:	50-03       	mulsu r21, r16        ; Multiply Signed with Unsigned
11C2A:	00-20       	and r0, r0            ; Logical AND
11C2C:	7C-01       	movw r14, r24         ; Copy Register Word
11C2E:	00-20       	and r0, r0            ; Logical AND
11C30:	8C-00       	.data 0x008c          ; Binary data
11C32:	00-20       	and r0, r0            ; Logical AND
11C34:	60-01       	movw r12, r0          ; Copy Register Word
11C36:	00-20       	and r0, r0            ; Logical AND
11C38:	47-03       	mulsu r20, r23        ; Multiply Signed with Unsigned
11C3A:	00-20       	and r0, r0            ; Logical AND
11C3C:	48-03       	fmul r20, r16         ; Fractional Multiply Unsigned
11C3E:	00-20       	and r0, r0            ; Logical AND
11C40:	F5-00       	.data 0x00f5          ; Binary data
11C42:	00-20       	and r0, r0            ; Logical AND
11C44:	C8-00       	.data 0x00c8          ; Binary data
11C46:	40-00       	.data 0x0040          ; Binary data
11C48:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
11C4A:	FF-1F       	adc r31, r31          ; Add with Carry
11C4C:	38-01       	movw r6, r16          ; Copy Register Word
11C4E:	00-20       	and r0, r0            ; Logical AND
11C50:	A0-00       	.data 0x00a0          ; Binary data
11C52:	00-20       	and r0, r0            ; Logical AND
11C54:	E4-00       	.data 0x00e4          ; Binary data
11C56:	00-20       	and r0, r0            ; Logical AND
11C58:	3F-4B       	sbci r19, 0xbf        ; Subtract Immediate with Carry SBI
11C5A:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11C5C:	25-30       	cpi r18, 0x05         ; Compare with Immediate
11C5E:	58-60       	ori r21, 0x08         ; Logical OR with Immediate
11C60:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
11C62:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11C64:	25-00       	.data 0x0025          ; Binary data
11C66:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
11C68:	33-F8       	bld r3, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11C6A:	15-10       	cpse r1, r5           ; Compare Skip if Equal
11C6C:	32-F8       	bld r3, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
11C6E:	08-2C       	mov r0, r8            ; Copy Register
11C70:	0A-44       	sbci r16, 0x4a        ; Subtract Immediate with Carry SBI
11C72:	23-F8       	bld r2, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
11C74:	15-20       	and r1, r5            ; Logical AND
11C76:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
11C78:	D1-F8       	bld r13, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
11C7A:	60-B1       	in r22, 0x00          ; Load an I/O Location to Register
11C7C:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
11C7E:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
11C80:	C8-F8       	.data 0xf8c8          ; Binary data
11C82:	04-30       	cpi r16, 0x04         ; Compare with Immediate
11C84:	18-F0       	brbs 0, .+6           ; Branch if Bit in SREG is Set
11C86:	08-0F       	add r16, r24          ; Add without Carry
11C88:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
11C8A:	36-4A       	sbci r19, 0xa6        ; Subtract Immediate with Carry SBI
11C8C:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
11C8E:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
11C90:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
11C92:	37-30       	cpi r19, 0x07         ; Compare with Immediate
11C94:	0F-E0       	ldi r16, 0x0f         ; Load Immediate
11C96:	00-23       	and r16, r16          ; Logical AND
11C98:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
11C9A:	37-30       	cpi r19, 0x07         ; Compare with Immediate
11C9C:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
11C9E:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
11CA0:	01-32       	cpi r16, 0x21         ; Compare with Immediate
11CA2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11CA4:	07-E0       	ldi r16, 0x07         ; Load Immediate
11CA6:	18-F0       	brbs 0, .+6           ; Branch if Bit in SREG is Set
11CA8:	08-0F       	add r16, r24          ; Add without Carry
11CAA:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
11CAC:	2D-4A       	sbci r18, 0xad        ; Subtract Immediate with Carry SBI
11CAE:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
11CB0:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
11CB2:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
11CB4:	37-30       	cpi r19, 0x07         ; Compare with Immediate
11CB6:	08-23       	and r16, r24          ; Logical AND
11CB8:	23-70       	andi r18, 0x03        ; Logical AND with Immediate
11CBA:	F4-E4       	ldi r31, 0x44         ; Load Immediate
11CBC:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
11CBE:	01-0F       	add r16, r17          ; Add without Carry
11CC0:	22-D0       	rcall .+68            ; Relative Call to Subroutine
11CC2:	2A-49       	sbci r18, 0x9a        ; Subtract Immediate with Carry SBI
11CC4:	02-23       	and r16, r18          ; Logical AND
11CC6:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
11CC8:	00-22       	and r0, r16           ; Logical AND
11CCA:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
11CCC:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11CCE:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
11CD0:	24-48       	sbci r18, 0x84        ; Subtract Immediate with Carry SBI
11CD2:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
11CD4:	28-4C       	sbci r18, 0xc8        ; Subtract Immediate with Carry SBI
11CD6:	5C-60       	ori r21, 0x0c         ; Logical OR with Immediate
11CD8:	98-60       	ori r25, 0x08         ; Logical OR with Immediate
11CDA:	28-48       	sbci r18, 0x88        ; Subtract Immediate with Carry SBI
11CDC:	D8-60       	ori r29, 0x08         ; Logical OR with Immediate
11CDE:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
11CE0:	9A-61       	ori r25, 0x1a         ; Logical OR with Immediate
11CE2:	0D-20       	and r0, r13           ; Logical AND
11CE4:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
11CE6:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
11CE8:	FF-23       	and r31, r31          ; Logical AND
11CEA:	26-48       	sbci r18, 0x86        ; Subtract Immediate with Carry SBI
11CEC:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
11CEE:	08-38       	cpi r16, 0x88         ; Compare with Immediate
11CF0:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
11CF2:	18-30       	cpi r17, 0x08         ; Compare with Immediate
11CF4:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
11CF6:	24-4A       	sbci r18, 0xa4        ; Subtract Immediate with Carry SBI
11CF8:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11CFA:	9F-22       	and r9, r31           ; Logical AND
11CFC:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
11CFE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11D00:	01-23       	and r16, r17          ; Logical AND
11D02:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
11D04:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
11D06:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
11D08:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
11D0A:	80-0F       	add r24, r16          ; Add without Carry
11D0C:	05-D0       	rcall .+10            ; Relative Call to Subroutine
11D0E:	0D-22       	and r0, r29           ; Logical AND
11D10:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
11D12:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11D14:	80-22       	and r8, r16           ; Logical AND
11D16:	40-3B       	cpi r20, 0xb0         ; Compare with Immediate
11D18:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11D1A:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
11D1C:	02-0F       	add r16, r18          ; Add without Carry
11D1E:	06-D0       	rcall .+12            ; Relative Call to Subroutine
11D20:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
11D22:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
11D24:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
11D26:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11D28:	02-22       	and r0, r18           ; Logical AND
11D2A:	08-3B       	cpi r16, 0xb8         ; Compare with Immediate
11D2C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11D2E:	15-F0       	brbs 5, .+4           ; Branch if Bit in SREG is Set
11D30:	10-0F       	add r17, r16          ; Add without Carry
11D32:	0E-D0       	rcall .+28            ; Relative Call to Subroutine
11D34:	10-22       	and r1, r16           ; Logical AND
11D36:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
11D38:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11D3A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
11D3C:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
11D3E:	00-20       	and r0, r0            ; Logical AND
11D40:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
11D42:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11D44:	C3-FB       	bst r28, 3            ; Bit Store from Bit in Register to T Flag in SREG
11D46:	B1-E6       	ldi r27, 0x61         ; Load Immediate
11D48:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
11D4A:	00-21       	and r16, r0           ; Logical AND
11D4C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11D4E:	BE-FB       	.data 0xfbbe          ; Binary data
11D50:	AC-E6       	ldi r26, 0x6c         ; Load Immediate
11D52:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
11D54:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
11D56:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11D58:	90-00       	.data 0x0090          ; Binary data
11D5A:	00-20       	and r0, r0            ; Logical AND
11D5C:	40-03       	mulsu r20, r16        ; Multiply Signed with Unsigned
11D5E:	00-20       	and r0, r0            ; Logical AND
11D60:	C8-00       	.data 0x00c8          ; Binary data
11D62:	40-00       	.data 0x0040          ; Binary data
11D64:	88-00       	.data 0x0088          ; Binary data
11D66:	40-00       	.data 0x0040          ; Binary data
11D68:	62-01       	movw r12, r4          ; Copy Register Word
11D6A:	00-20       	and r0, r0            ; Logical AND
11D6C:	94-20       	and r9, r4            ; Logical AND
11D6E:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11D70:	F4-00       	.data 0x00f4          ; Binary data
11D72:	00-20       	and r0, r0            ; Logical AND
11D74:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
11D76:	FF-1F       	adc r31, r31          ; Add with Carry
11D78:	A4-00       	.data 0x00a4          ; Binary data
11D7A:	00-20       	and r0, r0            ; Logical AND
11D7C:	F8-00       	.data 0x00f8          ; Binary data
11D7E:	00-20       	and r0, r0            ; Logical AND
11D80:	C0-20       	and r12, r0           ; Logical AND
11D82:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11D84:	88-20       	and r8, r8            ; Logical AND
11D86:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11D88:	8C-20       	and r8, r12           ; Logical AND
11D8A:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11D8C:	84-20       	and r8, r4            ; Logical AND
11D8E:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11D90:	80-20       	and r8, r0            ; Logical AND
11D92:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11D94:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
11D96:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
11D98:	8F-FD       	.data 0xfd8f          ; Binary data
11D9A:	00-23       	and r16, r16          ; Logical AND
11D9C:	1B-49       	sbci r17, 0x9b        ; Subtract Immediate with Carry SBI
11D9E:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
11DA0:	5A-50       	subi r21, 0x0a        ; Subtract Immediate
11DA2:	C8-18       	sub r12, r8           ; Subtract Without Carry
11DA4:	42-60       	ori r20, 0x02         ; Logical OR with Immediate
11DA6:	08-33       	cpi r16, 0x38         ; Compare with Immediate
11DA8:	88-2B       	or r24, r24           ; Logical OR
11DAA:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
11DAC:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
11DAE:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
11DB0:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
11DB2:	80-22       	and r8, r16           ; Logical AND
11DB4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11DB6:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
11DB8:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
11DBA:	07-21       	and r16, r7           ; Logical AND
11DBC:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
11DBE:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
11DC0:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
11DC2:	07-41       	sbci r16, 0x17        ; Subtract Immediate with Carry SBI
11DC4:	14-32       	cpi r17, 0x24         ; Compare with Immediate
11DC6:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
11DC8:	1B-0E       	add r1, r27           ; Add without Carry
11DCA:	04-32       	cpi r16, 0x24         ; Compare with Immediate
11DCC:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11DCE:	FF-23       	and r31, r31          ; Logical AND
11DD0:	34-3A       	cpi r19, 0xa4         ; Compare with Immediate
11DD2:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11DD4:	08-32       	cpi r16, 0x28         ; Compare with Immediate
11DD6:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11DD8:	78-3A       	cpi r23, 0xa8         ; Compare with Immediate
11DDA:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11DDC:	01-23       	and r16, r17          ; Logical AND
11DDE:	84-32       	cpi r24, 0x24         ; Compare with Immediate
11DE0:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11DE2:	00-21       	and r16, r0           ; Logical AND
11DE4:	6C-32       	cpi r22, 0x2c         ; Compare with Immediate
11DE6:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
11DE8:	7C-3A       	cpi r23, 0xac         ; Compare with Immediate
11DEA:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
11DEC:	70-22       	and r7, r16           ; Logical AND
11DEE:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
11DF0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11DF2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
11DF4:	00-72       	andi r16, 0x20        ; Logical AND with Immediate
11DF6:	A3-F2       	brbs 3, .-88          ; Branch if Bit in SREG is Set
11DF8:	41-33       	cpi r20, 0x31         ; Compare with Immediate
11DFA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11DFC:	10-22       	and r1, r16           ; Logical AND
11DFE:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
11E00:	C0-43       	sbci r28, 0x30        ; Subtract Immediate with Carry SBI
11E02:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
11E04:	C8-23       	and r28, r24          ; Logical AND
11E06:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11E08:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
11E0A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11E0C:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
11E0E:	FF-1F       	adc r31, r31          ; Add with Carry
11E10:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
11E12:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
11E14:	9C-20       	and r9, r12           ; Logical AND
11E16:	07-40       	sbci r16, 0x07        ; Subtract Immediate with Carry SBI
11E18:	49-E4       	ldi r20, 0x49         ; Load Immediate
11E1A:	00-E0       	ldi r16, 0x00         ; Load Immediate
11E1C:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
11E1E:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
11E20:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
11E22:	B2-FA       	bst r11, 2            ; Bit Store from Bit in Register to T Flag in SREG
11E24:	82-F3       	brbs 2, .-32          ; Branch if Bit in SREG is Set
11E26:	0B-2B       	or r16, r27           ; Logical OR
11E28:	02-D9       	rcall .+4612          ; Relative Call to Subroutine
11E2A:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
11E2C:	00-20       	and r0, r0            ; Logical AND
11E2E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11E30:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11E32:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
11E34:	D9-40       	sbci r29, 0x09        ; Subtract Immediate with Carry SBI
11E36:	22-EA       	ldi r18, 0xa2         ; Load Immediate
11E38:	01-02       	muls r16, r17         ; Multiply Signed
11E3A:	06-49       	sbci r16, 0x96        ; Subtract Immediate with Carry SBI
11E3C:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
11E3E:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
11E40:	05-49       	sbci r16, 0x95        ; Subtract Immediate with Carry SBI
11E42:	03-EB       	ldi r16, 0xb3         ; Load Immediate
11E44:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
11E46:	DB-00       	.data 0x00db          ; Binary data
11E48:	C8-18       	sub r12, r8           ; Subtract Without Carry
11E4A:	00-22       	and r0, r16           ; Logical AND
11E4C:	CA-50       	subi r28, 0x0a        ; Subtract Immediate
11E4E:	42-60       	ori r20, 0x02         ; Logical OR with Immediate
11E50:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11E52:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11E54:	F0-93-FF-1F 	sts 0x1fff, r31       ; Store Direct to Data Space
11E58:	00-8E       	std Y+24, r0          ; Store Indirect From Register to Data Space
11E5A:	FF-1F       	adc r31, r31          ; Add with Carry
11E5C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
11E5E:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
11E60:	C3-1A       	sub r12, r19          ; Subtract Without Carry
11E62:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
11E64:	A2-FB       	bst r26, 2            ; Bit Store from Bit in Register to T Flag in SREG
11E66:	03-13       	cpse r16, r19         ; Compare Skip if Equal
11E68:	1B-09       	sbc r17, r11          ; Subtract with Carry
11E6A:	0B-2B       	or r16, r27           ; Logical OR
11E6C:	14-D8       	rcall .+4136          ; Relative Call to Subroutine
11E6E:	0D-4A       	sbci r16, 0xad        ; Subtract Immediate with Carry SBI
11E70:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
11E72:	3A-B1       	in r19, 0x0a          ; Load an I/O Location to Register
11E74:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
11E76:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
11E78:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
11E7A:	FF-0F       	add r31, r31          ; Add without Carry
11E7C:	02-D0       	rcall .+4             ; Relative Call to Subroutine
11E7E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11E80:	7D-FB       	.data 0xfb7d          ; Binary data
11E82:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
11E84:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
11E86:	09-4A       	sbci r16, 0xa9        ; Subtract Immediate with Carry SBI
11E88:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11E8A:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
11E8C:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
11E8E:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
11E90:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
11E92:	19-43       	sbci r17, 0x39        ; Subtract Immediate with Carry SBI
11E94:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
11E96:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
11E98:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
11E9A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11E9C:	00-8E       	std Y+24, r0          ; Store Indirect From Register to Data Space
11E9E:	FF-1F       	adc r31, r31          ; Add with Carry
11EA0:	39-8E       	std Y+25, r3          ; Store Indirect From Register to Data Space
11EA2:	E3-38       	cpi r30, 0x83         ; Compare with Immediate
11EA4:	62-01       	movw r12, r4          ; Copy Register Word
11EA6:	00-20       	and r0, r0            ; Logical AND
11EA8:	6C-01       	movw r12, r24         ; Copy Register Word
11EAA:	00-20       	and r0, r0            ; Logical AND
11EAC:	F0-93-FF-1F 	sts 0x1fff, r31       ; Store Direct to Data Space
11EB0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
11EB2:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
11EB4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11EB6:	53-B9       	out 0x03, r21         ; Store Register to I/O Location
11EB8:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
11EBA:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11EBC:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11EBE:	FF-0F       	add r31, r31          ; Add without Carry
11EC0:	18-D0       	rcall .+48            ; Relative Call to Subroutine
11EC2:	03-20       	and r0, r3            ; Logical AND
11EC4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11EC6:	26-FB       	bst r18, 6            ; Bit Store from Bit in Register to T Flag in SREG
11EC8:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
11ECA:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
11ECC:	A8-B1       	in r26, 0x08          ; Load an I/O Location to Register
11ECE:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
11ED0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
11ED2:	43-88       	std Y+19, r4          ; Store Indirect From Register to Data Space
11ED4:	5A-1C       	adc r5, r10           ; Add with Carry
11ED6:	03-44       	sbci r16, 0x43        ; Subtract Immediate with Carry SBI
11ED8:	1C-7A       	andi r17, 0xac        ; Logical AND with Immediate
11EDA:	03-88       	std Y+19, r0          ; Store Indirect From Register to Data Space
11EDC:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
11EDE:	06-D3       	rcall .+1548          ; Relative Call to Subroutine
11EE0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11EE2:	BC-FF       	.data 0xffbc          ; Binary data
11EE4:	00-22       	and r0, r16           ; Logical AND
11EE6:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
11EE8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11EEA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
11EEC:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11EEE:	42-80       	ldd r4, Y+2           ; Load Indirect from Data Space to Register
11EF0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
11EF2:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11EF4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11EF6:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11EF8:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11EFA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11EFC:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11EFE:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11F00:	78-01       	movw r14, r16         ; Copy Register Word
11F02:	00-20       	and r0, r0            ; Logical AND
11F04:	6C-01       	movw r12, r24         ; Copy Register Word
11F06:	00-20       	and r0, r0            ; Logical AND
11F08:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
11F0A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
11F0C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11F0E:	83-B9       	out 0x03, r24         ; Store Register to I/O Location
11F10:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
11F12:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11F14:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11F16:	FF-0F       	add r31, r31          ; Add without Carry
11F18:	08-D0       	rcall .+16            ; Relative Call to Subroutine
11F1A:	03-20       	and r0, r3            ; Logical AND
11F1C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11F1E:	FA-FA       	.data 0xfafa          ; Binary data
11F20:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
11F22:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
11F24:	28-B9       	out 0x08, r18         ; Store Register to I/O Location
11F26:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11F28:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11F2A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
11F2C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11F2E:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11F30:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
11F32:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
11F34:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11F36:	5A-88       	std Y+18, r5          ; Store Indirect From Register to Data Space
11F38:	13-44       	sbci r17, 0x43        ; Subtract Immediate with Carry SBI
11F3A:	18-7A       	andi r17, 0xa8        ; Logical AND with Immediate
11F3C:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
11F3E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11F40:	78-01       	movw r14, r16         ; Copy Register Word
11F42:	00-20       	and r0, r0            ; Logical AND
11F44:	6C-01       	movw r12, r24         ; Copy Register Word
11F46:	00-20       	and r0, r0            ; Logical AND
11F48:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
11F4A:	98-88       	std Y+16, r9          ; Store Indirect From Register to Data Space
11F4C:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
11F4E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
11F50:	1B-B1       	in r17, 0x0b          ; Load an I/O Location to Register
11F52:	1A-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
11F54:	5B-88       	std Y+19, r5          ; Store Indirect From Register to Data Space
11F56:	D3-1A       	sub r13, r19          ; Subtract Without Carry
11F58:	18-44       	sbci r17, 0x48        ; Subtract Immediate with Carry SBI
11F5A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
11F5C:	40-03       	mulsu r20, r16        ; Multiply Signed with Unsigned
11F5E:	00-20       	and r0, r0            ; Logical AND
11F60:	78-01       	movw r14, r16         ; Copy Register Word
11F62:	00-20       	and r0, r0            ; Logical AND
11F64:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
11F66:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
11F68:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
11F6A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11F6C:	FF-0F       	add r31, r31          ; Add without Carry
11F6E:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
11F70:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
11F72:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
11F74:	20-B1       	in r18, 0x00          ; Load an I/O Location to Register
11F76:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11F78:	71-FF       	sbrs r23, 1           ; Skip if Bit in Register is Set
11F7A:	00-22       	and r0, r16           ; Logical AND
11F7C:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
11F7E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
11F80:	03-24       	clr r3                ; Clear Register
11F82:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
11F84:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11F86:	C6-FA       	bst r12, 6            ; Bit Store from Bit in Register to T Flag in SREG
11F88:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
11F8A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11F8C:	67-FF       	sbrs r22, 7           ; Skip if Bit in Register is Set
11F8E:	F8-E7       	ldi r31, 0x78         ; Load Immediate
11F90:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
11F92:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
11F94:	6C-01       	movw r12, r24         ; Copy Register Word
11F96:	00-20       	and r0, r0            ; Logical AND
11F98:	78-01       	movw r14, r16         ; Copy Register Word
11F9A:	00-20       	and r0, r0            ; Logical AND
11F9C:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
11F9E:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
11FA0:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
11FA2:	01-22       	and r0, r17           ; Logical AND
11FA4:	38-4B       	sbci r19, 0xb8        ; Subtract Immediate with Carry SBI
11FA6:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11FA8:	8B-46       	sbci r24, 0x6b        ; Subtract Immediate with Carry SBI
11FAA:	00-29       	or r16, r0            ; Logical OR
11FAC:	65-D0       	rcall .+202           ; Relative Call to Subroutine
11FAE:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
11FB0:	DF-F8       	.data 0xf8df          ; Binary data
11FB2:	E0-80       	ld r14, Z             ; Load Indirect from Data Space to Register
11FB4:	DF-F8       	.data 0xf8df          ; Binary data
11FB6:	E0-90-9A-46 	lds r14, 0x469a       ; Load Direct from Data Space (32-bit)
11FBA:	34-4F       	sbci r19, 0xf4        ; Subtract Immediate with Carry SBI
11FBC:	D8-F8       	.data 0xf8d8          ; Binary data
11FBE:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11FC0:	83-BB       	out 0x13, r24         ; Store Register to I/O Location
11FC2:	99-F8       	.data 0xf899          ; Binary data
11FC4:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11FC6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
11FC8:	FF-0F       	add r31, r31          ; Add without Carry
11FCA:	06-D1       	rcall .+524           ; Relative Call to Subroutine
11FCC:	00-22       	and r0, r16           ; Logical AND
11FCE:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
11FD0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
11FD2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
11FD4:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
11FD6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
11FD8:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
11FDA:	4F-F6       	brbc 7, .-110         ; Branch if Bit in SREG is Cleared
11FDC:	D9-65       	ori r29, 0x59         ; Logical OR with Immediate
11FDE:	04-20       	and r0, r4            ; Logical AND
11FE0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11FE2:	B6-FA       	bst r11, 6            ; Bit Store from Bit in Register to T Flag in SREG
11FE4:	07-28       	or r0, r7             ; Logical OR
11FE6:	0A-D8       	rcall .+4116          ; Relative Call to Subroutine
11FE8:	01-23       	and r16, r17          ; Logical AND
11FEA:	8A-F8       	.data 0xf88a          ; Binary data
11FEC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11FEE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
11FF0:	15-FF       	sbrs r17, 5           ; Skip if Bit in Register is Set
11FF2:	C8-F8       	.data 0xf8c8          ; Binary data
11FF4:	00-00       	nop                   ; No Operation
11FF6:	A8-B9       	out 0x08, r26         ; Store Register to I/O Location
11FF8:	00-23       	and r16, r16          ; Logical AND
11FFA:	8A-F8       	.data 0xf88a          ; Binary data
11FFC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
11FFE:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
12000:	01-D0       	rcall .+2             ; Relative Call to Subroutine
12002:	3B-78       	andi r19, 0x8b        ; Logical AND with Immediate
12004:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
12006:	01-22       	and r0, r17           ; Logical AND
12008:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
1200A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1200C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1200E:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
12010:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
12012:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
12014:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12016:	D6-FD       	sbrc r29, 6           ; Skip if Bit in Register is Cleared
12018:	99-F8       	.data 0xf899          ; Binary data
1201A:	00-30       	cpi r16, 0x00         ; Compare with Immediate
1201C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1201E:	FF-0F       	add r31, r31          ; Add without Carry
12020:	DD-D1       	rcall .+954           ; Relative Call to Subroutine
12022:	D3-E7       	ldi r29, 0x73         ; Load Immediate
12024:	00-23       	and r16, r16          ; Logical AND
12026:	3B-70       	andi r19, 0x0b        ; Logical AND with Immediate
12028:	D8-F8       	.data 0xf8d8          ; Binary data
1202A:	00-10       	cpse r0, r0           ; Compare Skip if Equal
1202C:	4A-88       	std Y+18, r4          ; Store Indirect From Register to Data Space
1202E:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
12030:	40-05       	cpc r20, r0           ; Compare with Carry
12032:	AE-42       	sbci r26, 0x2e        ; Subtract Immediate with Carry SBI
12034:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
12036:	35-46       	sbci r19, 0x65        ; Subtract Immediate with Carry SBI
12038:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
1203A:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
1203C:	0B-44       	sbci r16, 0x4b        ; Subtract Immediate with Carry SBI
1203E:	2A-44       	sbci r18, 0x4a        ; Subtract Immediate with Carry SBI
12040:	4A-80       	ldd r4, Y+2           ; Load Indirect from Data Space to Register
12042:	76-1B       	sub r23, r22          ; Subtract Without Carry
12044:	3D-B1       	in r19, 0x0d          ; Load an I/O Location to Register
12046:	25-44       	sbci r18, 0x45        ; Subtract Immediate with Carry SBI
12048:	14-F8       	bld r1, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
1204A:	01-2B       	or r16, r17           ; Logical OR
1204C:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
1204E:	01-2B       	or r16, r17           ; Logical OR
12050:	AC-42       	sbci r26, 0x2c        ; Subtract Immediate with Carry SBI
12052:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
12054:	00-E0       	ldi r16, 0x00         ; Load Immediate
12056:	25-46       	sbci r18, 0x65        ; Subtract Immediate with Carry SBI
12058:	4B-88       	std Y+19, r4          ; Store Indirect From Register to Data Space
1205A:	3F-2B       	or r19, r31           ; Logical OR
1205C:	07-D9       	rcall .+4622          ; Relative Call to Subroutine
1205E:	40-23       	and r20, r16          ; Logical AND
12060:	0B-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
12062:	04-20       	and r0, r4            ; Logical AND
12064:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12066:	CE-FA       	.data 0xface          ; Binary data
12068:	00-23       	and r16, r16          ; Logical AND
1206A:	C8-F8       	.data 0xf8c8          ; Binary data
1206C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
1206E:	05-22       	and r0, r21           ; Logical AND
12070:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
12072:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12074:	0E-B1       	in r16, 0x0e          ; Load an I/O Location to Register
12076:	2C-46       	sbci r18, 0x6c        ; Subtract Immediate with Carry SBI
12078:	A0-E7       	ldi r26, 0x70         ; Load Immediate
1207A:	00-22       	and r0, r16           ; Logical AND
1207C:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
1207E:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12080:	58-46       	sbci r21, 0x68        ; Subtract Immediate with Carry SBI
12082:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
12084:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
12086:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12088:	6F-01       	movw r12, r30         ; Copy Register Word
1208A:	00-20       	and r0, r0            ; Logical AND
1208C:	74-01       	movw r14, r8          ; Copy Register Word
1208E:	00-20       	and r0, r0            ; Logical AND
12090:	6E-01       	movw r12, r28         ; Copy Register Word
12092:	00-20       	and r0, r0            ; Logical AND
12094:	70-01       	movw r14, r0          ; Copy Register Word
12096:	00-20       	and r0, r0            ; Logical AND
12098:	6C-01       	movw r12, r24         ; Copy Register Word
1209A:	00-20       	and r0, r0            ; Logical AND
1209C:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
1209E:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
120A0:	02-AB       	std Y+50, r16         ; Store Indirect From Register to Data Space
120A2:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
120A4:	01-0D       	add r16, r1           ; Add without Carry
120A6:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
120A8:	01-21       	and r16, r1           ; Logical AND
120AA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
120AC:	77-FF       	sbrs r23, 7           ; Skip if Bit in Register is Set
120AE:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
120B0:	5D-F8       	.data 0xf85d          ; Binary data
120B2:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
120B4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
120B6:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
120B8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
120BA:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
120BC:	FF-0F       	add r31, r31          ; Add without Carry
120BE:	21-D0       	rcall .+66            ; Relative Call to Subroutine
120C0:	01-22       	and r0, r17           ; Logical AND
120C2:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
120C4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
120C6:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
120C8:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
120CA:	51-B1       	in r21, 0x01          ; Load an I/O Location to Register
120CC:	00-24       	clr r0                ; Clear Register
120CE:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
120D0:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
120D2:	4B-88       	std Y+19, r4          ; Store Indirect From Register to Data Space
120D4:	0B-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
120D6:	04-20       	and r0, r4            ; Logical AND
120D8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
120DA:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
120DC:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
120DE:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
120E0:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
120E2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
120E4:	9B-FE       	.data 0xfe9b          ; Binary data
120E6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
120E8:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
120EA:	00-22       	and r0, r16           ; Logical AND
120EC:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
120EE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
120F0:	04-20       	and r0, r4            ; Logical AND
120F2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
120F4:	87-FA       	bst r8, 7             ; Bit Store from Bit in Register to T Flag in SREG
120F6:	02-E0       	ldi r16, 0x02         ; Load Immediate
120F8:	01-22       	and r0, r17           ; Logical AND
120FA:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
120FC:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
120FE:	00-22       	and r0, r16           ; Logical AND
12100:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
12102:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12104:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12106:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12108:	6C-01       	movw r12, r24         ; Copy Register Word
1210A:	00-20       	and r0, r0            ; Logical AND
1210C:	6F-01       	movw r12, r30         ; Copy Register Word
1210E:	00-20       	and r0, r0            ; Logical AND
12110:	70-01       	movw r14, r0          ; Copy Register Word
12112:	00-20       	and r0, r0            ; Logical AND
12114:	6E-01       	movw r12, r28         ; Copy Register Word
12116:	00-20       	and r0, r0            ; Logical AND
12118:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1211A:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
1211C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1211E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
12120:	FF-0F       	add r31, r31          ; Add without Carry
12122:	16-D1       	rcall .+556           ; Relative Call to Subroutine
12124:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
12126:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
12128:	41-B1       	in r20, 0x01          ; Load an I/O Location to Register
1212A:	4B-88       	std Y+19, r4          ; Store Indirect From Register to Data Space
1212C:	0B-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
1212E:	04-20       	and r0, r4            ; Logical AND
12130:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12132:	68-FA       	.data 0xfa68          ; Binary data
12134:	00-22       	and r0, r16           ; Logical AND
12136:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
12138:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1213A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1213C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1213E:	6E-FE       	.data 0xfe6e          ; Binary data
12140:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
12142:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
12144:	04-20       	and r0, r4            ; Logical AND
12146:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12148:	5D-FA       	.data 0xfa5d          ; Binary data
1214A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1214C:	01-22       	and r0, r17           ; Logical AND
1214E:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
12150:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12152:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12154:	6F-01       	movw r12, r30         ; Copy Register Word
12156:	00-20       	and r0, r0            ; Logical AND
12158:	70-01       	movw r14, r0          ; Copy Register Word
1215A:	00-20       	and r0, r0            ; Logical AND
1215C:	6E-01       	movw r12, r28         ; Copy Register Word
1215E:	00-20       	and r0, r0            ; Logical AND
12160:	F0-B4       	in r15, 0x20          ; Load an I/O Location to Register
12162:	C0-29       	or r28, r0            ; Logical OR
12164:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
12166:	C0-21       	and r28, r0           ; Logical AND
12168:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
1216A:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
1216C:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
1216E:	13-4B       	sbci r17, 0xb3        ; Subtract Immediate with Carry SBI
12170:	00-22       	and r0, r16           ; Logical AND
12172:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12174:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
12176:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
12178:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
1217A:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
1217C:	5A-61       	ori r21, 0x1a         ; Logical OR with Immediate
1217E:	C1-B1       	in r28, 0x01          ; Load an I/O Location to Register
12180:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
12182:	0E-4C       	sbci r16, 0xce        ; Subtract Immediate with Carry SBI
12184:	01-27       	clr r769              ; Clear Register
12186:	5A-09       	sbc r21, r10          ; Subtract with Carry
12188:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1218A:	1F-06       	cpc r1, r31           ; Compare with Carry
1218C:	07-FA       	bst r0, 7             ; Bit Store from Bit in Register to T Flag in SREG
1218E:	06-F6       	brbc 6, .-128         ; Branch if Bit in SREG is Cleared
12190:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
12192:	22-50       	subi r18, 0x02        ; Subtract Immediate
12194:	35-43       	sbci r19, 0x35        ; Subtract Immediate with Carry SBI
12196:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
12198:	22-50       	subi r18, 0x02        ; Subtract Immediate
1219A:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1219C:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
1219E:	F2-D1       	rcall .+996           ; Relative Call to Subroutine
121A0:	00-22       	and r0, r16           ; Logical AND
121A2:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
121A4:	84-18       	sub r8, r4            ; Subtract Without Carry
121A6:	63-70       	andi r22, 0x03        ; Logical AND with Immediate
121A8:	01-33       	cpi r16, 0x31         ; Compare with Immediate
121AA:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
121AC:	82-72       	andi r24, 0x22        ; Logical AND with Immediate
121AE:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
121B0:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
121B2:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
121B4:	F0-BC       	out 0x20, r15         ; Store Register to I/O Location
121B6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
121B8:	88-01       	movw r16, r16         ; Copy Register Word
121BA:	00-20       	and r0, r0            ; Logical AND
121BC:	90-01       	movw r18, r0          ; Copy Register Word
121BE:	00-20       	and r0, r0            ; Logical AND
121C0:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
121C2:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
121C4:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
121C6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
121C8:	8B-B9       	out 0x0b, r24         ; Store Register to I/O Location
121CA:	22-4B       	sbci r18, 0xb2        ; Subtract Immediate with Carry SBI
121CC:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
121CE:	83-B9       	out 0x03, r24         ; Store Register to I/O Location
121D0:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
121D2:	9B-68       	ori r25, 0x8b         ; Logical OR with Immediate
121D4:	7B-B9       	out 0x0b, r23         ; Store Register to I/O Location
121D6:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
121D8:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
121DA:	73-B9       	out 0x03, r23         ; Store Register to I/O Location
121DC:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
121DE:	1B-69       	ori r17, 0x9b         ; Logical OR with Immediate
121E0:	6B-B9       	out 0x0b, r22         ; Store Register to I/O Location
121E2:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
121E4:	5B-69       	ori r21, 0x9b         ; Logical OR with Immediate
121E6:	63-B9       	out 0x03, r22         ; Store Register to I/O Location
121E8:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
121EA:	00-20       	and r0, r0            ; Logical AND
121EC:	2E-E0       	ldi r18, 0x0e         ; Load Immediate
121EE:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
121F0:	08-E0       	ldi r16, 0x08         ; Load Immediate
121F2:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
121F4:	06-E0       	ldi r16, 0x06         ; Load Immediate
121F6:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
121F8:	04-E0       	ldi r16, 0x04         ; Load Immediate
121FA:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
121FC:	02-E0       	ldi r16, 0x02         ; Load Immediate
121FE:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
12200:	00-E0       	ldi r16, 0x00         ; Load Immediate
12202:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
12204:	B3-FA       	bst r11, 3            ; Bit Store from Bit in Register to T Flag in SREG
12206:	83-F1       	brbs 3, .+96          ; Branch if Bit in SREG is Set
12208:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1220A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1220C:	C8-40       	sbci r28, 0x08        ; Subtract Immediate with Carry SBI
1220E:	23-EA       	ldi r18, 0xa3         ; Load Immediate
12210:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
12212:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
12214:	15-48       	sbci r17, 0x85        ; Subtract Immediate with Carry SBI
12216:	03-78       	andi r16, 0x83        ; Logical AND with Immediate
12218:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1221A:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
1221C:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
1221E:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
12220:	0C-48       	sbci r16, 0x8c        ; Subtract Immediate with Carry SBI
12222:	12-1A       	sub r1, r18           ; Subtract Without Carry
12224:	92-10       	cpse r9, r2           ; Compare Skip if Equal
12226:	C1-EB       	ldi r28, 0xb1         ; Load Immediate
12228:	42-12       	cpse r4, r18          ; Compare Skip if Equal
1222A:	02-EB       	ldi r16, 0xb2         ; Load Immediate
1222C:	82-12       	cpse r8, r18          ; Compare Skip if Equal
1222E:	41-F6       	brbc 1, .-112         ; Branch if Bit in SREG is Cleared
12230:	7C-71       	andi r23, 0x1c        ; Logical AND with Immediate
12232:	01-EB       	ldi r16, 0xb1         ; Load Immediate
12234:	82-02       	muls r24, r18         ; Multiply Signed
12236:	0E-49       	sbci r16, 0x9e        ; Subtract Immediate with Carry SBI
12238:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
1223A:	88-18       	sub r8, r8            ; Subtract Without Carry
1223C:	01-24       	clr r1                ; Clear Register
1223E:	8C-54       	subi r24, 0x4c        ; Subtract Immediate
12240:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
12242:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
12244:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
12246:	3C-BF       	out 0x3c, r19         ; Store Register to I/O Location
12248:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
1224A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1224C:	5D-F8       	.data 0xf85d          ; Binary data
1224E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12250:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12252:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12254:	90-01       	movw r18, r0          ; Copy Register Word
12256:	00-20       	and r0, r0            ; Logical AND
12258:	94-01       	movw r18, r8          ; Copy Register Word
1225A:	00-20       	and r0, r0            ; Logical AND
1225C:	98-01       	movw r18, r16         ; Copy Register Word
1225E:	00-20       	and r0, r0            ; Logical AND
12260:	9C-01       	movw r18, r24         ; Copy Register Word
12262:	00-20       	and r0, r0            ; Logical AND
12264:	A0-01       	movw r20, r0          ; Copy Register Word
12266:	00-20       	and r0, r0            ; Logical AND
12268:	A4-01       	movw r20, r8          ; Copy Register Word
1226A:	00-20       	and r0, r0            ; Logical AND
1226C:	8D-01       	movw r16, r26         ; Copy Register Word
1226E:	00-20       	and r0, r0            ; Logical AND
12270:	88-01       	movw r16, r16         ; Copy Register Word
12272:	00-20       	and r0, r0            ; Logical AND
12274:	84-01       	movw r16, r8          ; Copy Register Word
12276:	00-20       	and r0, r0            ; Logical AND
12278:	42-78       	andi r20, 0x82        ; Logical AND with Immediate
1227A:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
1227C:	03-78       	andi r16, 0x83        ; Logical AND with Immediate
1227E:	01-2B       	or r16, r17           ; Logical OR
12280:	02-D9       	rcall .+4612          ; Relative Call to Subroutine
12282:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
12284:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
12286:	11-E0       	ldi r17, 0x01         ; Load Immediate
12288:	51-11       	cpse r21, r1          ; Compare Skip if Equal
1228A:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
1228C:	D2-43       	sbci r29, 0x32        ; Subtract Immediate with Carry SBI
1228E:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
12290:	1F-02       	muls r17, r31         ; Multiply Signed
12292:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
12294:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
12296:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
12298:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
1229A:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
1229C:	21-00       	.data 0x0021          ; Binary data
1229E:	10-43       	sbci r17, 0x30        ; Subtract Immediate with Carry SBI
122A0:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
122A2:	21-00       	.data 0x0021          ; Binary data
122A4:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
122A6:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
122A8:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
122AA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
122AC:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
122AE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
122B0:	90-01       	movw r18, r0          ; Copy Register Word
122B2:	00-20       	and r0, r0            ; Logical AND
122B4:	8D-01       	movw r16, r26         ; Copy Register Word
122B6:	00-20       	and r0, r0            ; Logical AND
122B8:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
122BA:	C3-68       	ori r28, 0x83         ; Logical OR with Immediate
122BC:	83-B1       	in r24, 0x03          ; Load an I/O Location to Register
122BE:	18-7A       	andi r17, 0xa8        ; Logical AND with Immediate
122C0:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
122C2:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
122C4:	58-68       	ori r21, 0x88         ; Logical OR with Immediate
122C6:	5C-7A       	andi r21, 0xac        ; Logical AND with Immediate
122C8:	00-69       	ori r16, 0x90         ; Logical OR with Immediate
122CA:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
122CC:	24-50       	subi r18, 0x04        ; Subtract Immediate
122CE:	25-B9       	out 0x05, r18         ; Store Register to I/O Location
122D0:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
122D2:	24-10       	cpse r2, r4           ; Compare Skip if Equal
122D4:	08-78       	andi r16, 0x88        ; Logical AND with Immediate
122D6:	01-30       	cpi r16, 0x01         ; Compare with Immediate
122D8:	08-70       	andi r16, 0x08        ; Logical AND with Immediate
122DA:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
122DC:	00-2B       	or r16, r16           ; Logical OR
122DE:	EE-D1       	rcall .+988           ; Relative Call to Subroutine
122E0:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
122E2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
122E4:	43-7A       	andi r20, 0xa3        ; Logical AND with Immediate
122E6:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
122E8:	06-D9       	rcall .+4620          ; Relative Call to Subroutine
122EA:	03-69       	ori r16, 0x93         ; Logical OR with Immediate
122EC:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
122EE:	21-00       	.data 0x0021          ; Binary data
122F0:	00-22       	and r0, r16           ; Logical AND
122F2:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
122F4:	21-20       	and r2, r1            ; Logical AND
122F6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
122F8:	00-20       	and r0, r0            ; Logical AND
122FA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
122FC:	43-68       	ori r20, 0x83         ; Logical OR with Immediate
122FE:	42-7A       	andi r20, 0xa2        ; Logical AND with Immediate
12300:	5B-7A       	andi r21, 0xab        ; Logical AND with Immediate
12302:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
12304:	10-D8       	rcall .+4128          ; Relative Call to Subroutine
12306:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
12308:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
1230A:	DA-68       	ori r29, 0x8a         ; Logical OR with Immediate
1230C:	0A-B9       	out 0x0a, r16         ; Store Register to I/O Location
1230E:	D8-60       	ori r29, 0x08         ; Logical OR with Immediate
12310:	04-E0       	ldi r16, 0x04         ; Load Immediate
12312:	D3-68       	ori r29, 0x83         ; Logical OR with Immediate
12314:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
12316:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
12318:	FB-E7       	ldi r31, 0x7b         ; Load Immediate
1231A:	D0-60       	ori r29, 0x00         ; Logical OR with Immediate
1231C:	02-68       	ori r16, 0x82         ; Logical OR with Immediate
1231E:	01-23       	and r16, r17          ; Logical AND
12320:	13-72       	andi r17, 0x23        ; Logical AND with Immediate
12322:	42-68       	ori r20, 0x82         ; Logical OR with Immediate
12324:	13-72       	andi r17, 0x23        ; Logical AND with Immediate
12326:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
12328:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1232A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1232C:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1232E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12330:	5B-B9       	out 0x0b, r21         ; Store Register to I/O Location
12332:	D0-22       	and r13, r16          ; Logical AND
12334:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
12336:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12338:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1233A:	80-42       	sbci r24, 0x20        ; Subtract Immediate with Carry SBI
1233C:	A3-F2       	brbs 3, .-88          ; Branch if Bit in SREG is Set
1233E:	56-33       	cpi r21, 0x36         ; Compare with Immediate
12340:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12342:	01-20       	and r0, r1            ; Logical AND
12344:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
12346:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
12348:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1234A:	00-20       	and r0, r0            ; Logical AND
1234C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1234E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12350:	8C-01       	movw r16, r24         ; Copy Register Word
12352:	00-20       	and r0, r0            ; Logical AND
12354:	5E-E4       	ldi r21, 0x4e         ; Load Immediate
12356:	00-E0       	ldi r16, 0x00         ; Load Immediate
12358:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
1235A:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
1235C:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
1235E:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
12360:	80-72       	andi r24, 0x20        ; Logical AND with Immediate
12362:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12364:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
12366:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
12368:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
1236A:	01-02       	muls r16, r17         ; Multiply Signed
1236C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1236E:	04-33       	cpi r16, 0x34         ; Compare with Immediate
12370:	1F-68       	ori r17, 0x8f         ; Logical OR with Immediate
12372:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
12374:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
12376:	9C-B1       	in r25, 0x0c          ; Load an I/O Location to Register
12378:	13-4D       	sbci r17, 0xd3        ; Subtract Immediate with Carry SBI
1237A:	23-7A       	andi r18, 0xa3        ; Logical AND with Immediate
1237C:	6B-B1       	in r22, 0x0b          ; Load an I/O Location to Register
1237E:	2E-68       	ori r18, 0x8e         ; Logical OR with Immediate
12380:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
12382:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12384:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12386:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12388:	2B-68       	ori r18, 0x8b         ; Logical OR with Immediate
1238A:	9B-1B       	sub r25, r27          ; Subtract Without Carry
1238C:	1B-09       	sbc r17, r11          ; Subtract with Carry
1238E:	9A-B2       	in r9, 0x1a           ; Load an I/O Location to Register
12390:	A2-80       	ldd r10, Y+2          ; Load Indirect from Data Space to Register
12392:	E1-88       	std Y+17, r14         ; Store Indirect From Register to Data Space
12394:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
12396:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
12398:	E2-80       	ldd r14, Y+2          ; Load Indirect from Data Space to Register
1239A:	64-69       	ori r22, 0x94         ; Logical OR with Immediate
1239C:	00-2C       	mov r0, r0            ; Copy Register
1239E:	EC-D1       	rcall .+984           ; Relative Call to Subroutine
123A0:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
123A2:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
123A4:	DF-1B       	sub r29, r31          ; Subtract Without Carry
123A6:	3F-09       	sbc r19, r15          ; Subtract with Carry
123A8:	BB-B2       	in r11, 0x1b          ; Load an I/O Location to Register
123AA:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
123AC:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
123AE:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
123B0:	12-88       	std Y+18, r1          ; Store Indirect From Register to Data Space
123B2:	97-42       	sbci r25, 0x27        ; Subtract Immediate with Carry SBI
123B4:	84-BF       	out 0x34, r24         ; Store Register to I/O Location
123B6:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
123B8:	13-80       	ldd r1, Y+3           ; Load Indirect from Data Space to Register
123BA:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
123BC:	FC-ED       	ldi r31, 0xdc         ; Load Immediate
123BE:	00-E0       	ldi r16, 0x00         ; Load Immediate
123C0:	00-10       	cpse r0, r0           ; Compare Skip if Equal
123C2:	00-E0       	ldi r16, 0x00         ; Load Immediate
123C4:	80-01       	movw r16, r0          ; Copy Register Word
123C6:	00-20       	and r0, r0            ; Logical AND
123C8:	04-10       	cpse r0, r4           ; Compare Skip if Equal
123CA:	00-E0       	ldi r16, 0x00         ; Load Immediate
123CC:	A8-01       	movw r20, r16         ; Copy Register Word
123CE:	00-20       	and r0, r0            ; Logical AND
123D0:	8E-01       	movw r16, r28         ; Copy Register Word
123D2:	00-20       	and r0, r0            ; Logical AND
123D4:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
123D6:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
123D8:	99-B9       	out 0x09, r25         ; Store Register to I/O Location
123DA:	02-68       	ori r16, 0x82         ; Logical OR with Immediate
123DC:	8A-B1       	in r24, 0x0a          ; Load an I/O Location to Register
123DE:	03-79       	andi r16, 0x93        ; Logical AND with Immediate
123E0:	0F-2B       	or r16, r31           ; Logical OR
123E2:	0E-D8       	rcall .+4124          ; Relative Call to Subroutine
123E4:	27-49       	sbci r18, 0x97        ; Subtract Immediate with Carry SBI
123E6:	09-88       	std Y+17, r0          ; Store Indirect From Register to Data Space
123E8:	19-41       	sbci r17, 0x19        ; Subtract Immediate with Carry SBI
123EA:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
123EC:	01-0F       	add r16, r17          ; Add without Carry
123EE:	08-D0       	rcall .+16            ; Relative Call to Subroutine
123F0:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
123F2:	00-73       	andi r16, 0x30        ; Logical AND with Immediate
123F4:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
123F6:	90-63       	ori r25, 0x30         ; Logical OR with Immediate
123F8:	B2-EB       	ldi r27, 0xb2         ; Load Immediate
123FA:	43-1F       	adc r20, r19          ; Add with Carry
123FC:	01-D1       	rcall .+514           ; Relative Call to Subroutine
123FE:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
12400:	3E-E0       	ldi r19, 0x0e         ; Load Immediate
12402:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
12404:	1D-88       	std Y+21, r1          ; Store Indirect From Register to Data Space
12406:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
12408:	00-23       	and r16, r16          ; Logical AND
1240A:	41-FA       	bst r4, 1             ; Bit Store from Bit in Register to T Flag in SREG
1240C:	03-F2       	brbs 3, .-128         ; Branch if Bit in SREG is Set
1240E:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
12410:	01-0F       	add r16, r17          ; Add without Carry
12412:	2D-D1       	rcall .+602           ; Relative Call to Subroutine
12414:	01-22       	and r0, r17           ; Logical AND
12416:	02-FA       	bst r0, 2             ; Bit Store from Bit in Register to T Flag in SREG
12418:	03-F4       	brbc 3, .+0           ; Branch if Bit in SREG is Cleared
1241A:	25-43       	sbci r18, 0x35        ; Subtract Immediate with Carry SBI
1241C:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
1241E:	15-80       	ldd r1, Y+5           ; Load Indirect from Data Space to Register
12420:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
12422:	DA-B2       	in r13, 0x1a          ; Load an I/O Location to Register
12424:	02-71       	andi r16, 0x12        ; Logical AND with Immediate
12426:	18-49       	sbci r17, 0x98        ; Subtract Immediate with Carry SBI
12428:	0C-68       	ori r16, 0x8c         ; Logical OR with Immediate
1242A:	44-F0       	brbs 4, .+16          ; Branch if Bit in SREG is Set
1242C:	02-04       	cpc r0, r2            ; Compare with Carry
1242E:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
12430:	04-39       	cpi r16, 0x94         ; Compare with Immediate
12432:	0C-68       	ori r16, 0x8c         ; Logical OR with Immediate
12434:	44-F0       	brbs 4, .+16          ; Branch if Bit in SREG is Set
12436:	02-04       	cpc r0, r2            ; Compare with Carry
12438:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
1243A:	82-24       	clr r130              ; Clear Register
1243C:	13-49       	sbci r17, 0x93        ; Subtract Immediate with Carry SBI
1243E:	0C-60       	ori r16, 0x0c         ; Logical OR with Immediate
12440:	1A-31       	cpi r17, 0x1a         ; Compare with Immediate
12442:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
12444:	04-31       	cpi r16, 0x14         ; Compare with Immediate
12446:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
12448:	06-39       	cpi r16, 0x96         ; Compare with Immediate
1244A:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
1244C:	07-31       	cpi r16, 0x17         ; Compare with Immediate
1244E:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
12450:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
12452:	00-73       	andi r16, 0x30        ; Logical AND with Immediate
12454:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
12456:	90-63       	ori r25, 0x30         ; Logical OR with Immediate
12458:	5B-01       	movw r10, r22         ; Copy Register Word
1245A:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
1245C:	00-22       	and r0, r16           ; Logical AND
1245E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12460:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
12462:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
12464:	DA-60       	ori r29, 0x0a         ; Logical OR with Immediate
12466:	1A-61       	ori r17, 0x1a         ; Logical OR with Immediate
12468:	5A-61       	ori r21, 0x1a         ; Logical OR with Immediate
1246A:	9A-61       	ori r25, 0x1a         ; Logical OR with Immediate
1246C:	DA-61       	ori r29, 0x1a         ; Logical OR with Immediate
1246E:	07-E0       	ldi r16, 0x07         ; Load Immediate
12470:	01-33       	cpi r16, 0x31         ; Compare with Immediate
12472:	10-2B       	or r17, r16           ; Logical OR
12474:	C9-D1       	rcall .+914           ; Relative Call to Subroutine
12476:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
12478:	00-23       	and r16, r16          ; Logical AND
1247A:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
1247C:	10-23       	and r17, r16          ; Logical AND
1247E:	03-71       	andi r16, 0x13        ; Logical AND with Immediate
12480:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
12482:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12484:	AC-01       	movw r20, r24         ; Copy Register Word
12486:	00-20       	and r0, r0            ; Logical AND
12488:	40-80       	ld r4, Z              ; Load Indirect from Data Space to Register
1248A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1248C:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
1248E:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
12490:	03-79       	andi r16, 0x93        ; Logical AND with Immediate
12492:	0F-2B       	or r16, r31           ; Logical OR
12494:	10-D8       	rcall .+4128          ; Relative Call to Subroutine
12496:	09-4A       	sbci r16, 0xa9        ; Subtract Immediate with Carry SBI
12498:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1249A:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
1249C:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1249E:	02-79       	andi r16, 0x92        ; Logical AND with Immediate
124A0:	01-21       	and r16, r1           ; Logical AND
124A2:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
124A4:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
124A6:	19-88       	std Y+17, r1          ; Store Indirect From Register to Data Space
124A8:	21-EA       	ldi r18, 0xa1         ; Load Immediate
124AA:	02-02       	muls r16, r18         ; Multiply Signed
124AC:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
124AE:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
124B0:	10-23       	and r17, r16          ; Logical AND
124B2:	03-71       	andi r16, 0x13        ; Logical AND with Immediate
124B4:	00-23       	and r16, r16          ; Logical AND
124B6:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
124B8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
124BA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
124BC:	1A-80       	ldd r1, Y+2           ; Load Indirect from Data Space to Register
124BE:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
124C0:	AC-01       	movw r20, r24         ; Copy Register Word
124C2:	00-20       	and r0, r0            ; Logical AND
124C4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
124C6:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
124C8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
124CA:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
124CC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
124CE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
124D0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
124D2:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
124D4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
124D6:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
124D8:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
124DA:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
124DC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
124DE:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
124E0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
124E2:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
124E4:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
124E6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
124E8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
124EA:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
124EC:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
124EE:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
124F0:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
124F2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
124F4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
124F6:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
124F8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
124FA:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
124FC:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
124FE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12500:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12502:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
12504:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12506:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
12508:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1250A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1250C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1250E:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
12510:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12512:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
12514:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12516:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12518:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1251A:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
1251C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1251E:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
12520:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12522:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12524:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12526:	04-48       	sbci r16, 0x84        ; Subtract Immediate with Carry SBI
12528:	00-EB       	ldi r16, 0xb0         ; Load Immediate
1252A:	51-00       	.data 0x0051          ; Binary data
1252C:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
1252E:	F1-F0       	brbs 1, .+60          ; Branch if Bit in SREG is Set
12530:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12532:	8C-FB       	.data 0xfb8c          ; Binary data
12534:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12536:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12538:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
1253A:	2A-11       	cpse r18, r10         ; Compare Skip if Equal
1253C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
1253E:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
12540:	05-48       	sbci r16, 0x85        ; Subtract Immediate with Carry SBI
12542:	00-EB       	ldi r16, 0xb0         ; Load Immediate
12544:	51-00       	.data 0x0051          ; Binary data
12546:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
12548:	F1-F0       	brbs 1, .+60          ; Branch if Bit in SREG is Set
1254A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1254C:	7F-FB       	.data 0xfb7f          ; Binary data
1254E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12550:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12552:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
12554:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12556:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12558:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
1255A:	2A-11       	cpse r18, r10         ; Compare Skip if Equal
1255C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1255E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12560:	0D-FC       	.data 0xfc0d          ; Binary data
12562:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12564:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12566:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12568:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1256A:	42-FC       	sbrc r4, 2            ; Skip if Bit in Register is Cleared
1256C:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1256E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12570:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12572:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12574:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12576:	96-FC       	sbrc r9, 6            ; Skip if Bit in Register is Cleared
12578:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1257A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1257C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1257E:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12580:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
12582:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12584:	51-FC       	sbrc r5, 1            ; Skip if Bit in Register is Cleared
12586:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12588:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1258A:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
1258C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1258E:	B6-FC       	sbrc r11, 6           ; Skip if Bit in Register is Cleared
12590:	00-30       	cpi r16, 0x00         ; Compare with Immediate
12592:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
12594:	01-20       	and r0, r1            ; Logical AND
12596:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12598:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1259A:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
1259C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1259E:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
125A0:	00-30       	cpi r16, 0x00         ; Compare with Immediate
125A2:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
125A4:	01-20       	and r0, r1            ; Logical AND
125A6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125A8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125AA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125AC:	C9-FD       	.data 0xfdc9          ; Binary data
125AE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125B0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125B2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125B4:	0F-FE       	.data 0xfe0f          ; Binary data
125B6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125B8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125BA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125BC:	D1-FD       	sbrc r29, 1           ; Skip if Bit in Register is Cleared
125BE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125C0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125C2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125C4:	9B-FD       	.data 0xfd9b          ; Binary data
125C6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125C8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125CA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125CC:	1D-FE       	.data 0xfe1d          ; Binary data
125CE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125D0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125D2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125D4:	A3-FD       	sbrc r26, 3           ; Skip if Bit in Register is Cleared
125D6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125D8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125DA:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
125DC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125DE:	DC-FC       	.data 0xfcdc          ; Binary data
125E0:	01-20       	and r0, r1            ; Logical AND
125E2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125E4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
125E6:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
125E8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125EA:	D6-FC       	sbrc r13, 6           ; Skip if Bit in Register is Cleared
125EC:	01-20       	and r0, r1            ; Logical AND
125EE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
125F0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
125F2:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
125F4:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
125F6:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
125F8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
125FA:	1E-FD       	.data 0xfd1e          ; Binary data
125FC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
125FE:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12600:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
12602:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
12604:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12606:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
12608:	01-FF       	sbrs r16, 1           ; Skip if Bit in Register is Set
1260A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1260C:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
1260E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
12610:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12612:	12-FD       	sbrc r17, 2           ; Skip if Bit in Register is Cleared
12614:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12616:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
12618:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1261A:	04-48       	sbci r16, 0x84        ; Subtract Immediate with Carry SBI
1261C:	00-EB       	ldi r16, 0xb0         ; Load Immediate
1261E:	51-00       	.data 0x0051          ; Binary data
12620:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
12622:	F1-F0       	brbs 1, .+60          ; Branch if Bit in SREG is Set
12624:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12626:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
12628:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1262A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1262C:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
1262E:	2A-11       	cpse r18, r10         ; Compare Skip if Equal
12630:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12632:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
12634:	05-48       	sbci r16, 0x85        ; Subtract Immediate with Carry SBI
12636:	00-EB       	ldi r16, 0xb0         ; Load Immediate
12638:	51-00       	.data 0x0051          ; Binary data
1263A:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
1263C:	F1-F0       	brbs 1, .+60          ; Branch if Bit in SREG is Set
1263E:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12640:	93-FB       	bst r25, 3            ; Bit Store from Bit in Register to T Flag in SREG
12642:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12644:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12646:	F8-FB       	.data 0xfbf8          ; Binary data
12648:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
1264A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1264C:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
1264E:	2A-11       	cpse r18, r10         ; Compare Skip if Equal
12650:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12652:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12654:	21-FC       	sbrc r2, 1            ; Skip if Bit in Register is Cleared
12656:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12658:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1265A:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
1265C:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
1265E:	7C-FC       	.data 0xfc7c          ; Binary data
12660:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12662:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12664:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12666:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12668:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
1266A:	D0-FC       	sbrc r13, 0           ; Skip if Bit in Register is Cleared
1266C:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1266E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12670:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12672:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12674:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
12676:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12678:	8B-FC       	.data 0xfc8b          ; Binary data
1267A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1267C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1267E:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12680:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12682:	F2-FC       	sbrc r15, 2           ; Skip if Bit in Register is Cleared
12684:	00-30       	cpi r16, 0x00         ; Compare with Immediate
12686:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
12688:	01-20       	and r0, r1            ; Logical AND
1268A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1268C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1268E:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12690:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12692:	0C-FD       	.data 0xfd0c          ; Binary data
12694:	00-30       	cpi r16, 0x00         ; Compare with Immediate
12696:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
12698:	01-20       	and r0, r1            ; Logical AND
1269A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1269C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1269E:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126A0:	FB-FD       	.data 0xfdfb          ; Binary data
126A2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126A4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126A6:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126A8:	41-FE       	sbrs r4, 1            ; Skip if Bit in Register is Set
126AA:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126AC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126AE:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126B0:	03-FE       	sbrs r0, 3            ; Skip if Bit in Register is Set
126B2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126B4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126B6:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126B8:	CD-FD       	.data 0xfdcd          ; Binary data
126BA:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126BC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126BE:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126C0:	4F-FE       	.data 0xfe4f          ; Binary data
126C2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126C4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126C6:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126C8:	D5-FD       	sbrc r29, 5           ; Skip if Bit in Register is Cleared
126CA:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126CC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126CE:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
126D0:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126D2:	0E-FD       	.data 0xfd0e          ; Binary data
126D4:	01-20       	and r0, r1            ; Logical AND
126D6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126D8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
126DA:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
126DC:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126DE:	08-FD       	.data 0xfd08          ; Binary data
126E0:	01-20       	and r0, r1            ; Logical AND
126E2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
126E4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
126E6:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
126E8:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
126EA:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
126EC:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
126EE:	50-FD       	sbrc r21, 0           ; Skip if Bit in Register is Cleared
126F0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
126F2:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
126F4:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
126F6:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
126F8:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
126FA:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
126FC:	87-FE       	sbrs r8, 7            ; Skip if Bit in Register is Set
126FE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12700:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
12702:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
12704:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12706:	44-FD       	sbrc r20, 4           ; Skip if Bit in Register is Cleared
12708:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1270A:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1270C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1270E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12710:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12712:	00-22       	and r0, r16           ; Logical AND
12714:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
12716:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
12718:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
1271A:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
1271C:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
1271E:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
12720:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12722:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12724:	B0-01       	movw r22, r0          ; Copy Register Word
12726:	00-20       	and r0, r0            ; Logical AND
12728:	80-82       	st Z, r8              ; Store Indirect From Register to Data Space
1272A:	01-00       	.data 0x0001          ; Binary data
1272C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1272E:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
12730:	D7-FC       	sbrc r13, 7           ; Skip if Bit in Register is Cleared
12732:	FA-F7       	brbc 2, .-2           ; Branch if Bit in SREG is Cleared
12734:	D1-FF       	sbrs r29, 1           ; Skip if Bit in Register is Set
12736:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12738:	45-FA       	bst r4, 5             ; Bit Store from Bit in Register to T Flag in SREG
1273A:	FA-E7       	ldi r31, 0x7a         ; Load Immediate
1273C:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
1273E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
12740:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
12742:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
12744:	52-B1       	in r21, 0x02          ; Load an I/O Location to Register
12746:	00-25       	clr r256              ; Clear Register
12748:	33-68       	ori r19, 0x83         ; Logical OR with Immediate
1274A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1274C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1274E:	17-F8       	bld r1, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
12750:	01-1B       	sub r16, r17          ; Subtract Without Carry
12752:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12754:	05-44       	sbci r16, 0x45        ; Subtract Immediate with Carry SBI
12756:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
12758:	F6-D1       	rcall .+1004          ; Relative Call to Subroutine
1275A:	00-E0       	ldi r16, 0x00         ; Load Immediate
1275C:	00-25       	clr r256              ; Clear Register
1275E:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
12760:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
12762:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12764:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
12766:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
12768:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
1276A:	1B-88       	std Y+19, r1          ; Store Indirect From Register to Data Space
1276C:	AD-F8       	.data 0xf8ad          ; Binary data
1276E:	04-30       	cpi r16, 0x04         ; Compare with Immediate
12770:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
12772:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
12774:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
12776:	02-22       	and r0, r18           ; Logical AND
12778:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1277A:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
1277C:	5D-F8       	.data 0xf85d          ; Binary data
1277E:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
12780:	D8-82       	st Y, r13             ; Store Indirect From Register to Data Space
12782:	01-00       	.data 0x0001          ; Binary data
12784:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
12786:	8B-B0       	in r8, 0x0b           ; Load an I/O Location to Register
12788:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
1278A:	22-B9       	out 0x02, r18         ; Store Register to I/O Location
1278C:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
1278E:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12790:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
12792:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12794:	2F-E0       	ldi r18, 0x0f         ; Load Immediate
12796:	01-2A       	or r0, r17            ; Logical OR
12798:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
1279A:	0A-26       	clr r522              ; Clear Register
1279C:	21-B9       	out 0x01, r18         ; Store Register to I/O Location
1279E:	30-22       	and r3, r16           ; Logical AND
127A0:	8D-F8       	.data 0xf88d          ; Binary data
127A2:	25-20       	and r2, r5            ; Logical AND
127A4:	21-24       	clr r33               ; Clear Register
127A6:	17-E0       	ldi r17, 0x07         ; Load Immediate
127A8:	21-24       	clr r33               ; Clear Register
127AA:	37-46       	sbci r19, 0x67        ; Subtract Immediate with Carry SBI
127AC:	B1-FB       	bst r27, 1            ; Bit Store from Bit in Register to T Flag in SREG
127AE:	F6-F5       	brbc 6, .+124         ; Branch if Bit in SREG is Cleared
127B0:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
127B2:	15-15       	cp r17, r5            ; Compare
127B4:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
127B6:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
127B8:	09-2D       	mov r16, r9           ; Copy Register
127BA:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
127BC:	30-35       	cpi r19, 0x50         ; Compare with Immediate
127BE:	37-35       	cpi r19, 0x57         ; Compare with Immediate
127C0:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
127C2:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
127C4:	28-0E       	add r2, r24           ; Add without Carry
127C6:	72-44       	sbci r23, 0x42        ; Subtract Immediate with Carry SBI
127C8:	02-F8       	bld r0, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
127CA:	24-5C       	subi r18, 0xc4        ; Subtract Immediate
127CC:	B1-FB       	bst r27, 1            ; Bit Store from Bit in Register to T Flag in SREG
127CE:	F7-F1       	brbs 7, .+124         ; Branch if Bit in SREG is Set
127D0:	11-B1       	in r17, 0x01          ; Load an I/O Location to Register
127D2:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
127D4:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
127D6:	E9-E7       	ldi r30, 0x79         ; Load Immediate
127D8:	33-B1       	in r19, 0x03          ; Load an I/O Location to Register
127DA:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
127DC:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
127DE:	0A-AB       	std Y+50, r16         ; Store Indirect From Register to Data Space
127E0:	23-44       	sbci r18, 0x43        ; Subtract Immediate with Carry SBI
127E2:	2D-22       	and r2, r29           ; Logical AND
127E4:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
127E6:	24-2C       	mov r2, r4            ; Copy Register
127E8:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
127EA:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
127EC:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
127EE:	21-44       	sbci r18, 0x41        ; Subtract Immediate with Carry SBI
127F0:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
127F2:	22-02       	muls r18, r18         ; Multiply Signed
127F4:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
127F6:	0B-B0       	in r0, 0x0b           ; Load an I/O Location to Register
127F8:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
127FA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
127FC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
127FE:	00-29       	or r16, r0            ; Logical OR
12800:	BA-BF       	out 0x3a, r27         ; Store Register to I/O Location
12802:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
12804:	2D-23       	and r18, r29          ; Logical AND
12806:	00-23       	and r16, r16          ; Logical AND
12808:	0A-22       	and r0, r26           ; Logical AND
1280A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1280C:	BB-FF       	.data 0xffbb          ; Binary data
1280E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12810:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
12812:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
12814:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
12816:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
12818:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
1281A:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
1281C:	9D-F8       	.data 0xf89d          ; Binary data
1281E:	38-90       	.data 0x9038          ; Binary data
12820:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
12822:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
12824:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
12826:	08-FA       	.data 0xfa08          ; Binary data
12828:	40-B9       	out 0x00, r20         ; Store Register to I/O Location
1282A:	D8-F8       	.data 0xf8d8          ; Binary data
1282C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
1282E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
12830:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
12832:	67-49       	sbci r22, 0x97        ; Subtract Immediate with Carry SBI
12834:	03-22       	and r0, r19           ; Logical AND
12836:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12838:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1283A:	BE-E0       	ldi r27, 0x0e         ; Load Immediate
1283C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1283E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
12840:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
12842:	FA-F9       	.data 0xf9fa          ; Binary data
12844:	01-28       	or r0, r1             ; Logical OR
12846:	08-D1       	rcall .+528           ; Relative Call to Subroutine
12848:	D8-F8       	.data 0xf8d8          ; Binary data
1284A:	00-30       	cpi r16, 0x00         ; Compare with Immediate
1284C:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1284E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
12850:	60-49       	sbci r22, 0x90        ; Subtract Immediate with Carry SBI
12852:	03-22       	and r0, r19           ; Logical AND
12854:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12856:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
12858:	AF-E0       	ldi r26, 0x0f         ; Load Immediate
1285A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1285C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1285E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
12860:	60-42       	sbci r22, 0x20        ; Subtract Immediate with Carry SBI
12862:	5D-4B       	sbci r21, 0xbd        ; Subtract Immediate with Carry SBI
12864:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12866:	6A-FC       	.data 0xfc6a          ; Binary data
12868:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
1286A:	D8-F8       	.data 0xf8d8          ; Binary data
1286C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
1286E:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
12870:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
12872:	5A-49       	sbci r21, 0x9a        ; Subtract Immediate with Carry SBI
12874:	03-22       	and r0, r19           ; Logical AND
12876:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12878:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1287A:	9E-E0       	ldi r25, 0x0e         ; Load Immediate
1287C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1287E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
12880:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
12882:	60-42       	sbci r22, 0x20        ; Subtract Immediate with Carry SBI
12884:	56-4B       	sbci r21, 0xb6        ; Subtract Immediate with Carry SBI
12886:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12888:	3B-FC       	.data 0xfc3b          ; Binary data
1288A:	40-B1       	in r20, 0x00          ; Load an I/O Location to Register
1288C:	D8-F8       	.data 0xf8d8          ; Binary data
1288E:	00-30       	cpi r16, 0x00         ; Compare with Immediate
12890:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
12892:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
12894:	51-49       	sbci r21, 0x91        ; Subtract Immediate with Carry SBI
12896:	03-22       	and r0, r19           ; Logical AND
12898:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1289A:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1289C:	8D-E0       	ldi r24, 0x0d         ; Load Immediate
1289E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
128A0:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
128A2:	00-22       	and r0, r16           ; Logical AND
128A4:	00-23       	and r16, r16          ; Logical AND
128A6:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
128A8:	2B-FC       	.data 0xfc2b          ; Binary data
128AA:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
128AC:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
128AE:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
128B0:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
128B2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
128B4:	01-0A       	sbc r0, r17           ; Subtract with Carry
128B6:	01-E0       	ldi r16, 0x01         ; Load Immediate
128B8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
128BA:	00-0A       	sbc r0, r16           ; Subtract with Carry
128BC:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
128BE:	00-0F       	add r16, r16          ; Add without Carry
128C0:	6C-D0       	rcall .+216           ; Relative Call to Subroutine
128C2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
128C4:	00-0B       	sbc r16, r16          ; Subtract with Carry
128C6:	00-22       	and r0, r16           ; Logical AND
128C8:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
128CA:	3F-A7       	std Y+47, r19         ; Store Indirect From Register to Data Space
128CC:	D7-E9       	ldi r29, 0x97         ; Load Immediate
128CE:	00-67       	ori r16, 0x70         ; Logical OR with Immediate
128D0:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
128D2:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
128D4:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
128D6:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
128D8:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
128DA:	A0-F9       	bld r26, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
128DC:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
128DE:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
128E0:	0B-F1       	brbs 3, .+66          ; Branch if Bit in SREG is Set
128E2:	01-0B       	sbc r16, r17          ; Subtract with Carry
128E4:	5F-FA       	.data 0xfa5f          ; Binary data
128E6:	8B-F1       	brbs 3, .+98          ; Branch if Bit in SREG is Set
128E8:	89-45       	sbci r24, 0x59        ; Subtract Immediate with Carry SBI
128EA:	F1-D8       	rcall .+4578          ; Relative Call to Subroutine
128EC:	2C-E0       	ldi r18, 0x0c         ; Load Immediate
128EE:	4E-46       	sbci r20, 0x6e        ; Subtract Immediate with Carry SBI
128F0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
128F2:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
128F4:	00-22       	and r0, r16           ; Logical AND
128F6:	3C-4B       	sbci r19, 0xbc        ; Subtract Immediate with Carry SBI
128F8:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
128FA:	90-F9       	bld r25, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
128FC:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
128FE:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
12900:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12902:	4E-FC       	.data 0xfc4e          ; Binary data
12904:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
12906:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
12908:	01-09       	sbc r16, r1           ; Subtract with Carry
1290A:	5F-FA       	.data 0xfa5f          ; Binary data
1290C:	89-F9       	.data 0xf989          ; Binary data
1290E:	04-AB       	std Y+52, r16         ; Store Indirect From Register to Data Space
12910:	1E-44       	sbci r17, 0x4e        ; Subtract Immediate with Carry SBI
12912:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
12914:	30-03       	mulsu r19, r16        ; Multiply Signed with Unsigned
12916:	06-F8       	bld r0, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
12918:	10-3C       	cpi r17, 0xc0         ; Compare with Immediate
1291A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1291C:	19-F9       	.data 0xf919          ; Binary data
1291E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
12920:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
12922:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12924:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
12926:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
12928:	C5-FF       	sbrs r28, 5           ; Skip if Bit in Register is Set
1292A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1292C:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1292E:	D1-45       	sbci r29, 0x51        ; Subtract Immediate with Carry SBI
12930:	DD-D1       	rcall .+954           ; Relative Call to Subroutine
12932:	01-E0       	ldi r16, 0x01         ; Load Immediate
12934:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
12936:	01-0A       	sbc r0, r17           ; Subtract with Carry
12938:	D8-F8       	.data 0xf8d8          ; Binary data
1293A:	00-30       	cpi r16, 0x00         ; Compare with Immediate
1293C:	5B-68       	ori r21, 0x8b         ; Logical OR with Immediate
1293E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
12940:	69-46       	sbci r22, 0x69        ; Subtract Immediate with Carry SBI
12942:	52-46       	sbci r21, 0x62        ; Subtract Immediate with Carry SBI
12944:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
12946:	38-E0       	ldi r19, 0x08         ; Load Immediate
12948:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1294A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1294C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
1294E:	B4-FF       	sbrs r27, 4           ; Skip if Bit in Register is Set
12950:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12952:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
12954:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12956:	24-FC       	sbrc r2, 4            ; Skip if Bit in Register is Cleared
12958:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
1295A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1295C:	E9-F8       	.data 0xf8e9          ; Binary data
1295E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
12960:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
12962:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12964:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
12966:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
12968:	A5-FF       	sbrs r26, 5           ; Skip if Bit in Register is Set
1296A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1296C:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1296E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
12970:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
12972:	0A-22       	and r0, r26           ; Logical AND
12974:	53-46       	sbci r21, 0x63        ; Subtract Immediate with Carry SBI
12976:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12978:	05-FF       	sbrs r16, 5           ; Skip if Bit in Register is Set
1297A:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1297C:	2E-23       	and r18, r30          ; Logical AND
1297E:	8D-F8       	.data 0xf88d          ; Binary data
12980:	00-30       	cpi r16, 0x00         ; Compare with Immediate
12982:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
12984:	0F-0F       	add r16, r31          ; Add without Carry
12986:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
12988:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
1298A:	0F-23       	and r16, r31          ; Logical AND
1298C:	00-2B       	or r16, r16           ; Logical OR
1298E:	D1-D0       	rcall .+418           ; Relative Call to Subroutine
12990:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
12992:	01-0A       	sbc r0, r17           ; Subtract with Carry
12994:	5F-FA       	.data 0xfa5f          ; Binary data
12996:	8A-FA       	.data 0xfa8a          ; Binary data
12998:	01-26       	clr r513              ; Clear Register
1299A:	A9-E7       	ldi r26, 0x79         ; Load Immediate
1299C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1299E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
129A0:	00-22       	and r0, r16           ; Logical AND
129A2:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
129A4:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
129A6:	88-FF       	.data 0xff88          ; Binary data
129A8:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
129AA:	FA-FB       	.data 0xfbfa          ; Binary data
129AC:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
129AE:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
129B0:	0A-22       	and r0, r26           ; Logical AND
129B2:	53-46       	sbci r21, 0x63        ; Subtract Immediate with Carry SBI
129B4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
129B6:	E6-FE       	sbrs r14, 6           ; Skip if Bit in Register is Set
129B8:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
129BA:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
129BC:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
129BE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
129C0:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
129C2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
129C4:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
129C6:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
129C8:	00-00       	nop                   ; No Operation
129CA:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
129CC:	99-99       	sbic 0x13, 1          ; Skip if Bit in I/O Register is Cleared
129CE:	B9-3F       	cpi r27, 0xf9         ; Compare with Immediate
129D0:	DC-82       	std Y+4, r13          ; Store Indirect From Register to Data Space
129D2:	01-00       	.data 0x0001          ; Binary data
129D4:	E0-82       	st Z, r14             ; Store Indirect From Register to Data Space
129D6:	01-00       	.data 0x0001          ; Binary data
129D8:	FF-FF       	.data 0xffff          ; Binary data
129DA:	EF-41       	sbci r30, 0x1f        ; Subtract Immediate with Carry SBI
129DC:	E4-82       	std Y+4, r14          ; Store Indirect From Register to Data Space
129DE:	01-00       	.data 0x0001          ; Binary data
129E0:	FF-FF       	.data 0xffff          ; Binary data
129E2:	EF-C1       	rjmp .+990            ; Relative Jump
129E4:	00-00       	nop                   ; No Operation
129E6:	E0-3F       	cpi r30, 0xf0         ; Compare with Immediate
129E8:	00-00       	nop                   ; No Operation
129EA:	24-40       	sbci r18, 0x04        ; Subtract Immediate with Carry SBI
129EC:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
129EE:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
129F0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
129F2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
129F4:	A9-FA       	.data 0xfaa9          ; Binary data
129F6:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
129F8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
129FA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
129FC:	59-FA       	.data 0xfa59          ; Binary data
129FE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12A00:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12A02:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12A04:	81-FA       	bst r8, 1             ; Bit Store from Bit in Register to T Flag in SREG
12A06:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12A08:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12A0A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12A0C:	53-FB       	bst r21, 3            ; Bit Store from Bit in Register to T Flag in SREG
12A0E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12A10:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12A12:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12A14:	A7-FA       	bst r10, 7            ; Bit Store from Bit in Register to T Flag in SREG
12A16:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12A18:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12A1A:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12A1C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12A1E:	3E-FB       	.data 0xfb3e          ; Binary data
12A20:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12A22:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12A24:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12A26:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12A28:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
12A2A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12A2C:	B7-FA       	bst r11, 7            ; Bit Store from Bit in Register to T Flag in SREG
12A2E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12A30:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12A32:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12A34:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12A36:	00-22       	and r0, r16           ; Logical AND
12A38:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
12A3A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
12A3C:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
12A3E:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
12A40:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
12A42:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
12A44:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12A46:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12A48:	C0-01       	movw r24, r0          ; Copy Register Word
12A4A:	00-20       	and r0, r0            ; Logical AND
12A4C:	F0-82       	st Z, r15             ; Store Indirect From Register to Data Space
12A4E:	01-00       	.data 0x0001          ; Binary data
12A50:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
12A52:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
12A54:	10-60       	ori r17, 0x00         ; Logical OR with Immediate
12A56:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12A58:	D0-01       	movw r26, r0          ; Copy Register Word
12A5A:	00-20       	and r0, r0            ; Logical AND
12A5C:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
12A5E:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
12A60:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
12A62:	D9-B1       	in r29, 0x09          ; Load an I/O Location to Register
12A64:	11-4C       	sbci r17, 0xc1        ; Subtract Immediate with Carry SBI
12A66:	81-FB       	bst r24, 1            ; Bit Store from Bit in Register to T Flag in SREG
12A68:	04-23       	and r16, r20          ; Logical AND
12A6A:	CA-18       	sub r12, r10          ; Subtract Without Carry
12A6C:	CB-17       	cp r28, r27           ; Compare
12A6E:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
12A70:	22-42       	sbci r18, 0x22        ; Subtract Immediate with Carry SBI
12A72:	0F-48       	sbci r16, 0x8f        ; Subtract Immediate with Carry SBI
12A74:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
12A76:	12-12       	cpse r1, r18          ; Compare Skip if Equal
12A78:	84-FB       	bst r24, 4            ; Bit Store from Bit in Register to T Flag in SREG
12A7A:	01-04       	cpc r0, r1            ; Compare with Carry
12A7C:	21-44       	sbci r18, 0x41        ; Subtract Immediate with Carry SBI
12A7E:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
12A80:	21-43       	sbci r18, 0x31        ; Subtract Immediate with Carry SBI
12A82:	0C-48       	sbci r16, 0x8c        ; Subtract Immediate with Carry SBI
12A84:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
12A86:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
12A88:	44-F2       	brbs 4, .-112         ; Branch if Bit in SREG is Set
12A8A:	A7-10       	cpse r10, r7          ; Compare Skip if Equal
12A8C:	00-FB       	bst r16, 0            ; Bit Store from Bit in Register to T Flag in SREG
12A8E:	02-30       	cpi r16, 0x02         ; Compare with Immediate
12A90:	00-28       	or r0, r0             ; Logical OR
12A92:	04-DA       	rcall .+5128          ; Relative Call to Subroutine
12A94:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
12A96:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
12A98:	01-38       	cpi r16, 0x81         ; Compare with Immediate
12A9A:	00-E0       	ldi r16, 0x00         ; Load Immediate
12A9C:	06-48       	sbci r16, 0x86        ; Subtract Immediate with Carry SBI
12A9E:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
12AA0:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
12AA2:	5D-F8       	.data 0xf85d          ; Binary data
12AA4:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12AA6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12AA8:	D0-01       	movw r26, r0          ; Copy Register Word
12AAA:	00-20       	and r0, r0            ; Logical AND
12AAC:	5F-0B       	sbc r21, r31          ; Subtract with Carry
12AAE:	4E-83       	std Y+6, r20          ; Store Indirect From Register to Data Space
12AB0:	1D-F3       	brbs 5, .-58          ; Branch if Bit in SREG is Set
12AB2:	01-00       	.data 0x0001          ; Binary data
12AB4:	EC-F4       	brbc 4, .+58          ; Branch if Bit in SREG is Cleared
12AB6:	FF-FF       	.data 0xffff          ; Binary data
12AB8:	42-CE       	rjmp .-892            ; Relative Jump
12ABA:	0C-1F       	adc r16, r28          ; Add with Carry
12ABC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12ABE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12AC0:	30-B1       	in r19, 0x00          ; Load an I/O Location to Register
12AC2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12AC4:	CB-FF       	.data 0xffcb          ; Binary data
12AC6:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
12AC8:	F4-F3       	brbs 4, .-4           ; Branch if Bit in SREG is Set
12ACA:	03-FB       	bst r16, 3            ; Bit Store from Bit in Register to T Flag in SREG
12ACC:	14-00       	.data 0x0014          ; Binary data
12ACE:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12AD0:	00-20       	and r0, r0            ; Logical AND
12AD2:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12AD4:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12AD6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12AD8:	88-42       	sbci r24, 0x28        ; Subtract Immediate with Carry SBI
12ADA:	04-DA       	rcall .+5128          ; Relative Call to Subroutine
12ADC:	08-1A       	sub r0, r24           ; Subtract Without Carry
12ADE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12AE0:	ED-FF       	.data 0xffed          ; Binary data
12AE2:	20-44       	sbci r18, 0x40        ; Subtract Immediate with Carry SBI
12AE4:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12AE6:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12AE8:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
12AEA:	40-1A       	sub r4, r16           ; Subtract Without Carry
12AEC:	01-9C       	mul r0, r1            ; Multiply Unsigned
12AEE:	E4-1A       	sub r14, r20          ; Subtract Without Carry
12AF0:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
12AF2:	00-F4       	brbc 0, .+0           ; Branch if Bit in SREG is Cleared
12AF4:	52-1A       	sub r5, r18           ; Subtract Without Carry
12AF6:	94-FB       	bst r25, 4            ; Bit Store from Bit in Register to T Flag in SREG
12AF8:	F2-F0       	brbs 2, .+60          ; Branch if Bit in SREG is Set
12AFA:	18-44       	sbci r17, 0x48        ; Subtract Immediate with Carry SBI
12AFC:	5D-F8       	.data 0xf85d          ; Binary data
12AFE:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12B00:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12B02:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12B04:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12B06:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12B08:	00-68       	ori r16, 0x80         ; Logical OR with Immediate
12B0A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12B0C:	19-FF       	.data 0xff19          ; Binary data
12B0E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12B10:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12B12:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12B14:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
12B16:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12B18:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
12B1A:	00-68       	ori r16, 0x80         ; Logical OR with Immediate
12B1C:	01-31       	cpi r16, 0x11         ; Compare with Immediate
12B1E:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
12B20:	17-FA       	bst r1, 7             ; Bit Store from Bit in Register to T Flag in SREG
12B22:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
12B24:	20-60       	ori r18, 0x00         ; Logical OR with Immediate
12B26:	65-60       	ori r22, 0x05         ; Logical OR with Immediate
12B28:	01-20       	and r0, r1            ; Logical AND
12B2A:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
12B2C:	00-20       	and r0, r0            ; Logical AND
12B2E:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
12B30:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12B32:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12B34:	43-68       	ori r20, 0x83         ; Logical OR with Immediate
12B36:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
12B38:	0A-D2       	rcall .+1044          ; Relative Call to Subroutine
12B3A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12B3C:	EB-FF       	.data 0xffeb          ; Binary data
12B3E:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
12B40:	48-B1       	in r20, 0x08          ; Load an I/O Location to Register
12B42:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
12B44:	33-B9       	out 0x03, r19         ; Store Register to I/O Location
12B46:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
12B48:	00-22       	and r0, r16           ; Logical AND
12B4A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12B4C:	01-23       	and r16, r17          ; Logical AND
12B4E:	02-E0       	ldi r16, 0x02         ; Load Immediate
12B50:	01-23       	and r16, r17          ; Logical AND
12B52:	00-E0       	ldi r16, 0x00         ; Load Immediate
12B54:	01-23       	and r16, r17          ; Logical AND
12B56:	18-46       	sbci r17, 0x68        ; Subtract Immediate with Carry SBI
12B58:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12B5A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12B5C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
12B5E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12B60:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
12B62:	15-46       	sbci r17, 0x65        ; Subtract Immediate with Carry SBI
12B64:	2A-B9       	out 0x0a, r18         ; Store Register to I/O Location
12B66:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
12B68:	03-B1       	in r16, 0x03          ; Load an I/O Location to Register
12B6A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12B6C:	00-23       	and r16, r16          ; Logical AND
12B6E:	A3-60       	ori r26, 0x03         ; Logical OR with Immediate
12B70:	12-E0       	ldi r17, 0x02         ; Load Immediate
12B72:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
12B74:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12B76:	DC-FF       	.data 0xffdc          ; Binary data
12B78:	48-B9       	out 0x08, r20         ; Store Register to I/O Location
12B7A:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
12B7C:	18-B1       	in r17, 0x08          ; Load an I/O Location to Register
12B7E:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12B80:	DF-FE       	.data 0xfedf          ; Binary data
12B82:	00-23       	and r16, r16          ; Logical AND
12B84:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
12B86:	00-23       	and r16, r16          ; Logical AND
12B88:	63-60       	ori r22, 0x03         ; Logical OR with Immediate
12B8A:	A3-60       	ori r26, 0x03         ; Logical OR with Immediate
12B8C:	04-E0       	ldi r16, 0x04         ; Load Immediate
12B8E:	A5-60       	ori r26, 0x05         ; Logical OR with Immediate
12B90:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
12B92:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
12B94:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
12B96:	DC-FB       	.data 0xfbdc          ; Binary data
12B98:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12B9A:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
12B9C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
12B9E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12BA0:	00-23       	and r16, r16          ; Logical AND
12BA2:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
12BA4:	43-60       	ori r20, 0x03         ; Logical OR with Immediate
12BA6:	83-60       	ori r24, 0x03         ; Logical OR with Immediate
12BA8:	03-73       	andi r16, 0x33        ; Logical AND with Immediate
12BAA:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
12BAC:	39-B1       	in r19, 0x09          ; Load an I/O Location to Register
12BAE:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12BB0:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
12BB2:	2C-FC       	.data 0xfc2c          ; Binary data
12BB4:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
12BB6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12BB8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
12BBA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12BBC:	CF-FF       	.data 0xffcf          ; Binary data
12BBE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12BC0:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
12BC2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12BC4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
12BC6:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
12BC8:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12BCA:	CB-B9       	out 0x0b, r28         ; Store Register to I/O Location
12BCC:	01-22       	and r0, r17           ; Logical AND
12BCE:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
12BD0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12BD2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12BD4:	B9-F9       	.data 0xf9b9          ; Binary data
12BD6:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
12BD8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12BDA:	2A-FF       	.data 0xff2a          ; Binary data
12BDC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12BDE:	B0-FA       	bst r11, 0            ; Bit Store from Bit in Register to T Flag in SREG
12BE0:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
12BE2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12BE4:	AD-FE       	.data 0xfead          ; Binary data
12BE6:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
12BE8:	57-FB       	bst r21, 7            ; Bit Store from Bit in Register to T Flag in SREG
12BEA:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
12BEC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12BEE:	8E-FD       	.data 0xfd8e          ; Binary data
12BF0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12BF2:	78-FD       	.data 0xfd78          ; Binary data
12BF4:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
12BF6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12BF8:	45-FF       	sbrs r20, 5           ; Skip if Bit in Register is Set
12BFA:	00-22       	and r0, r16           ; Logical AND
12BFC:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
12BFE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12C00:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
12C02:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12C04:	D4-01       	movw r26, r8          ; Copy Register Word
12C06:	00-20       	and r0, r0            ; Logical AND
12C08:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
12C0A:	00-23       	and r16, r16          ; Logical AND
12C0C:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
12C0E:	F2-F4       	brbc 2, .+60          ; Branch if Bit in SREG is Cleared
12C10:	02-FB       	bst r16, 2            ; Bit Store from Bit in Register to T Flag in SREG
12C12:	14-04       	cpc r1, r4            ; Compare with Carry
12C14:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
12C16:	09-2C       	mov r0, r9            ; Copy Register
12C18:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
12C1A:	30-34       	cpi r19, 0x40         ; Compare with Immediate
12C1C:	37-34       	cpi r19, 0x47         ; Compare with Immediate
12C1E:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
12C20:	CC-54       	subi r28, 0x4c        ; Subtract Immediate
12C22:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
12C24:	F2-F0       	brbs 2, .+60          ; Branch if Bit in SREG is Set
12C26:	08-B1       	in r16, 0x08          ; Load an I/O Location to Register
12C28:	01-33       	cpi r16, 0x31         ; Compare with Immediate
12C2A:	EF-E7       	ldi r30, 0x7f         ; Load Immediate
12C2C:	0D-44       	sbci r16, 0x4d        ; Subtract Immediate with Carry SBI
12C2E:	00-22       	and r0, r16           ; Logical AND
12C30:	6A-70       	andi r22, 0x0a        ; Logical AND with Immediate
12C32:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
12C34:	07-DD       	rcall .+6670          ; Relative Call to Subroutine
12C36:	88-5C       	subi r24, 0xc8        ; Subtract Immediate
12C38:	CC-5C       	subi r28, 0xcc        ; Subtract Immediate
12C3A:	8C-54       	subi r24, 0x4c        ; Subtract Immediate
12C3C:	C8-54       	subi r28, 0x48        ; Subtract Immediate
12C3E:	01-32       	cpi r16, 0x21         ; Compare with Immediate
12C40:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
12C42:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
12C44:	F7-DB       	rcall .+6126          ; Relative Call to Subroutine
12C46:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
12C48:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
12C4A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12C4C:	25-4B       	sbci r18, 0xb5        ; Subtract Immediate with Carry SBI
12C4E:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
12C50:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
12C52:	80-62       	ori r24, 0x20         ; Logical OR with Immediate
12C54:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12C56:	00-23       	and r16, r16          ; Logical AND
12C58:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
12C5A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12C5C:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
12C5E:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12C60:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
12C62:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12C64:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
12C66:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12C68:	23-4A       	sbci r18, 0xa3        ; Subtract Immediate with Carry SBI
12C6A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12C6C:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
12C6E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12C70:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
12C72:	15-2B       	or r17, r21           ; Logical OR
12C74:	05-D0       	rcall .+10            ; Relative Call to Subroutine
12C76:	08-E0       	ldi r16, 0x08         ; Load Immediate
12C78:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12C7A:	13-32       	cpi r17, 0x23         ; Compare with Immediate
12C7C:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
12C7E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12C80:	03-E0       	ldi r16, 0x03         ; Load Immediate
12C82:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12C84:	13-32       	cpi r17, 0x23         ; Compare with Immediate
12C86:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
12C88:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12C8A:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
12C8C:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12C8E:	01-2B       	or r16, r17           ; Logical OR
12C90:	02-D0       	rcall .+4             ; Relative Call to Subroutine
12C92:	05-2B       	or r16, r21           ; Logical OR
12C94:	05-D0       	rcall .+10            ; Relative Call to Subroutine
12C96:	08-E0       	ldi r16, 0x08         ; Load Immediate
12C98:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
12C9A:	51-72       	andi r21, 0x21        ; Logical AND with Immediate
12C9C:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
12C9E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12CA0:	03-E0       	ldi r16, 0x03         ; Load Immediate
12CA2:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
12CA4:	51-72       	andi r21, 0x21        ; Logical AND with Immediate
12CA6:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
12CA8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12CAA:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
12CAC:	44-32       	cpi r20, 0x24         ; Compare with Immediate
12CAE:	19-4B       	sbci r17, 0xb9        ; Subtract Immediate with Carry SBI
12CB0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12CB2:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
12CB4:	47-12       	cpse r4, r23          ; Compare Skip if Equal
12CB6:	5A-70       	andi r21, 0x0a        ; Logical AND with Immediate
12CB8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12CBA:	1F-00       	.data 0x001f          ; Binary data
12CBC:	98-72       	andi r25, 0x28        ; Logical AND with Immediate
12CBE:	04-22       	and r0, r20           ; Logical AND
12CC0:	9A-70       	andi r25, 0x0a        ; Logical AND with Immediate
12CC2:	02-21       	and r16, r2           ; Logical AND
12CC4:	D9-74       	andi r29, 0x49        ; Logical AND with Immediate
12CC6:	5A-75       	andi r21, 0x5a        ; Logical AND with Immediate
12CC8:	88-22       	and r8, r24           ; Logical AND
12CCA:	1A-74       	andi r17, 0x4a        ; Logical AND with Immediate
12CCC:	3C-22       	and r3, r28           ; Logical AND
12CCE:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
12CD0:	40-22       	and r4, r16           ; Logical AND
12CD2:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
12CD4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12CD6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
12CD8:	00-52       	subi r16, 0x20        ; Subtract Immediate
12CDA:	A3-F2       	brbs 3, .-88          ; Branch if Bit in SREG is Set
12CDC:	29-33       	cpi r18, 0x39         ; Compare with Immediate
12CDE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12CE0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12CE2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12CE4:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
12CE6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12CE8:	64-02       	muls r22, r20         ; Multiply Signed
12CEA:	00-20       	and r0, r0            ; Logical AND
12CEC:	DD-01       	movw r26, r26         ; Copy Register Word
12CEE:	00-20       	and r0, r0            ; Logical AND
12CF0:	6C-02       	muls r22, r28         ; Multiply Signed
12CF2:	00-20       	and r0, r0            ; Logical AND
12CF4:	65-02       	muls r22, r21         ; Multiply Signed
12CF6:	00-20       	and r0, r0            ; Logical AND
12CF8:	DC-01       	movw r26, r24         ; Copy Register Word
12CFA:	00-20       	and r0, r0            ; Logical AND
12CFC:	20-02       	muls r18, r16         ; Multiply Signed
12CFE:	00-20       	and r0, r0            ; Logical AND
12D00:	40-A0       	ldd r4, Y+32          ; Load Indirect from Data Space to Register
12D02:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12D04:	18-C0       	rjmp .+48             ; Relative Jump
12D06:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12D08:	F4-93       	xch Z, r31            ; Exchange
12D0A:	FF-1F       	adc r31, r31          ; Add with Carry
12D0C:	44-A0       	ldd r4, Y+36          ; Load Indirect from Data Space to Register
12D0E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12D10:	1C-C0       	rjmp .+56             ; Relative Jump
12D12:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12D14:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
12D16:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
12D18:	2D-E4       	ldi r18, 0x4d         ; Load Immediate
12D1A:	00-E0       	ldi r16, 0x00         ; Load Immediate
12D1C:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
12D1E:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
12D20:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12D22:	EC-03       	fmulsu r22, r20       ; Fractional Multiply Signed with Unsigned
12D24:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12D26:	03-02       	muls r16, r19         ; Multiply Signed
12D28:	13-43       	sbci r17, 0x33        ; Subtract Immediate with Carry SBI
12D2A:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
12D2C:	04-0F       	add r16, r20          ; Add without Carry
12D2E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
12D30:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
12D32:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
12D34:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
12D36:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
12D38:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12D3A:	0F-03       	fmul r16, r23         ; Fractional Multiply Unsigned
12D3C:	04-2B       	or r16, r20           ; Logical OR
12D3E:	04-D1       	rcall .+520           ; Relative Call to Subroutine
12D40:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
12D42:	92-79       	andi r25, 0x92        ; Logical AND with Immediate
12D44:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
12D46:	40-02       	muls r20, r16         ; Multiply Signed
12D48:	9A-71       	andi r25, 0x1a        ; Logical AND with Immediate
12D4A:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
12D4C:	5A-79       	andi r21, 0x9a        ; Logical AND with Immediate
12D4E:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
12D50:	EF-02       	muls r30, r31         ; Multiply Signed
12D52:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
12D54:	10-0F       	add r17, r16          ; Add without Carry
12D56:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
12D58:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
12D5A:	10-02       	muls r17, r16         ; Multiply Signed
12D5C:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
12D5E:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
12D60:	9B-79       	andi r25, 0x9b        ; Logical AND with Immediate
12D62:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12D64:	EF-03       	fmulsu r22, r23       ; Fractional Multiply Signed with Unsigned
12D66:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
12D68:	20-0F       	add r18, r16          ; Add without Carry
12D6A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
12D6C:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
12D6E:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
12D70:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
12D72:	93-71       	andi r25, 0x13        ; Logical AND with Immediate
12D74:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12D76:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12D78:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
12D7A:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
12D7C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12D7E:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
12D80:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12D82:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
12D84:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
12D86:	21-D0       	rcall .+66            ; Relative Call to Subroutine
12D88:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
12D8A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12D8C:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
12D8E:	FF-0F       	add r31, r31          ; Add without Carry
12D90:	06-D0       	rcall .+12            ; Relative Call to Subroutine
12D92:	10-4C       	sbci r17, 0xc0        ; Subtract Immediate with Carry SBI
12D94:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12D96:	16-FF       	sbrs r17, 6           ; Skip if Bit in Register is Set
12D98:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
12D9A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
12D9C:	FF-0F       	add r31, r31          ; Add without Carry
12D9E:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
12DA0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
12DA2:	00-52       	subi r16, 0x20        ; Subtract Immediate
12DA4:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
12DA6:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12DA8:	00-23       	and r16, r16          ; Logical AND
12DAA:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
12DAC:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
12DAE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12DB0:	03-12       	cpse r0, r19          ; Compare Skip if Equal
12DB2:	0B-49       	sbci r16, 0x9b        ; Subtract Immediate with Carry SBI
12DB4:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
12DB6:	04-31       	cpi r16, 0x14         ; Compare with Immediate
12DB8:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
12DBA:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
12DBC:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12DBE:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
12DC0:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
12DC2:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
12DC4:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12DC6:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
12DC8:	01-22       	and r0, r17           ; Logical AND
12DCA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12DCC:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12DCE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12DD0:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
12DD2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12DD4:	DC-01       	movw r26, r24         ; Copy Register Word
12DD6:	00-20       	and r0, r0            ; Logical AND
12DD8:	84-E1       	ldi r24, 0x14         ; Load Immediate
12DDA:	00-E0       	ldi r16, 0x00         ; Load Immediate
12DDC:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
12DDE:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
12DE0:	40-A0       	ldd r4, Y+32          ; Load Indirect from Data Space to Register
12DE2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12DE4:	64-02       	muls r22, r20         ; Multiply Signed
12DE6:	00-20       	and r0, r0            ; Logical AND
12DE8:	DD-01       	movw r26, r26         ; Copy Register Word
12DEA:	00-20       	and r0, r0            ; Logical AND
12DEC:	D8-01       	movw r26, r16         ; Copy Register Word
12DEE:	00-20       	and r0, r0            ; Logical AND
12DF0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12DF2:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
12DF4:	09-4A       	sbci r16, 0xa9        ; Subtract Immediate with Carry SBI
12DF6:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
12DF8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
12DFA:	FF-0F       	add r31, r31          ; Add without Carry
12DFC:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
12DFE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12E00:	01-21       	and r16, r1           ; Logical AND
12E02:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
12E04:	5B-FE       	.data 0xfe5b          ; Binary data
12E06:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
12E08:	00-21       	and r16, r0           ; Logical AND
12E0A:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
12E0C:	25-FE       	sbrs r2, 5            ; Skip if Bit in Register is Set
12E0E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12E10:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
12E12:	34-20       	and r3, r4            ; Logical AND
12E14:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
12E16:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12E18:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12E1A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12E1C:	DC-01       	movw r26, r24         ; Copy Register Word
12E1E:	00-20       	and r0, r0            ; Logical AND
12E20:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
12E22:	01-00       	.data 0x0001          ; Binary data
12E24:	68-02       	muls r22, r24         ; Multiply Signed
12E26:	00-20       	and r0, r0            ; Logical AND
12E28:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
12E2A:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
12E2C:	09-B1       	in r16, 0x09          ; Load an I/O Location to Register
12E2E:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
12E30:	80-00       	.data 0x0080          ; Binary data
12E32:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
12E34:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12E36:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
12E38:	28-D0       	rcall .+80            ; Relative Call to Subroutine
12E3A:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
12E3C:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
12E3E:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
12E40:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
12E42:	21-D0       	rcall .+66            ; Relative Call to Subroutine
12E44:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
12E46:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
12E48:	01-2B       	or r16, r17           ; Logical OR
12E4A:	02-D0       	rcall .+4             ; Relative Call to Subroutine
12E4C:	05-2B       	or r16, r21           ; Logical OR
12E4E:	04-D0       	rcall .+8             ; Relative Call to Subroutine
12E50:	06-E0       	ldi r16, 0x06         ; Load Immediate
12E52:	00-22       	and r0, r16           ; Logical AND
12E54:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
12E56:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12E58:	02-E0       	ldi r16, 0x02         ; Load Immediate
12E5A:	00-22       	and r0, r16           ; Logical AND
12E5C:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
12E5E:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12E60:	00-2C       	mov r0, r0            ; Copy Register
12E62:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
12E64:	44-22       	and r4, r20           ; Logical AND
12E66:	60-22       	and r6, r16           ; Logical AND
12E68:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
12E6A:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
12E6C:	01-2B       	or r16, r17           ; Logical OR
12E6E:	02-D0       	rcall .+4             ; Relative Call to Subroutine
12E70:	05-2B       	or r16, r21           ; Logical OR
12E72:	05-D0       	rcall .+10            ; Relative Call to Subroutine
12E74:	08-E0       	ldi r16, 0x08         ; Load Immediate
12E76:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
12E78:	40-72       	andi r20, 0x20        ; Logical AND with Immediate
12E7A:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
12E7C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12E7E:	03-E0       	ldi r16, 0x03         ; Load Immediate
12E80:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
12E82:	40-72       	andi r20, 0x20        ; Logical AND with Immediate
12E84:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
12E86:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12E88:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
12E8A:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
12E8C:	5D-F8       	.data 0xf85d          ; Binary data
12E8E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
12E90:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12E92:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12E94:	F4-93       	xch Z, r31            ; Exchange
12E96:	FF-1F       	adc r31, r31          ; Add with Carry
12E98:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
12E9A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12E9C:	44-A0       	ldd r4, Y+36          ; Load Indirect from Data Space to Register
12E9E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12EA0:	1C-C0       	rjmp .+56             ; Relative Jump
12EA2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12EA4:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
12EA6:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
12EA8:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
12EAA:	1E-D0       	rcall .+60            ; Relative Call to Subroutine
12EAC:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
12EAE:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
12EB0:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
12EB2:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
12EB4:	17-D0       	rcall .+46            ; Relative Call to Subroutine
12EB6:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
12EB8:	15-2B       	or r17, r21           ; Logical OR
12EBA:	04-D0       	rcall .+8             ; Relative Call to Subroutine
12EBC:	06-E0       	ldi r16, 0x06         ; Load Immediate
12EBE:	00-22       	and r0, r16           ; Logical AND
12EC0:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
12EC2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12EC4:	02-E0       	ldi r16, 0x02         ; Load Immediate
12EC6:	00-22       	and r0, r16           ; Logical AND
12EC8:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
12ECA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12ECC:	10-B1       	in r17, 0x00          ; Load an I/O Location to Register
12ECE:	15-28       	or r1, r5             ; Logical OR
12ED0:	05-D0       	rcall .+10            ; Relative Call to Subroutine
12ED2:	08-E0       	ldi r16, 0x08         ; Load Immediate
12ED4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12ED6:	13-32       	cpi r17, 0x23         ; Compare with Immediate
12ED8:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
12EDA:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12EDC:	03-E0       	ldi r16, 0x03         ; Load Immediate
12EDE:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12EE0:	13-32       	cpi r17, 0x23         ; Compare with Immediate
12EE2:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
12EE4:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12EE6:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
12EE8:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
12EEA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12EEC:	20-02       	muls r18, r16         ; Multiply Signed
12EEE:	00-20       	and r0, r0            ; Logical AND
12EF0:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
12EF2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12EF4:	40-A0       	ldd r4, Y+32          ; Load Indirect from Data Space to Register
12EF6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12EF8:	18-C0       	rjmp .+48             ; Relative Jump
12EFA:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12EFC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
12EFE:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
12F00:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12F02:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
12F04:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
12F06:	12-D0       	rcall .+36            ; Relative Call to Subroutine
12F08:	21-28       	or r2, r1             ; Logical OR
12F0A:	0C-D8       	rcall .+4120          ; Relative Call to Subroutine
12F0C:	0A-4C       	sbci r16, 0xca        ; Subtract Immediate with Carry SBI
12F0E:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
12F10:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
12F12:	30-30       	cpi r19, 0x00         ; Compare with Immediate
12F14:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
12F16:	01-21       	and r16, r1           ; Logical AND
12F18:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
12F1A:	D0-FD       	sbrc r29, 0           ; Skip if Bit in Register is Cleared
12F1C:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
12F1E:	00-22       	and r0, r16           ; Logical AND
12F20:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12F22:	01-20       	and r0, r1            ; Logical AND
12F24:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12F26:	00-20       	and r0, r0            ; Logical AND
12F28:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
12F2A:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
12F2C:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12F2E:	00-20       	and r0, r0            ; Logical AND
12F30:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
12F32:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12F34:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
12F36:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12F38:	D8-01       	movw r26, r16         ; Copy Register Word
12F3A:	00-20       	and r0, r0            ; Logical AND
12F3C:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
12F3E:	01-00       	.data 0x0001          ; Binary data
12F40:	11-4B       	sbci r17, 0xb1        ; Subtract Immediate with Carry SBI
12F42:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12F44:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
12F46:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
12F48:	1B-D0       	rcall .+54            ; Relative Call to Subroutine
12F4A:	12-28       	or r1, r2             ; Logical OR
12F4C:	04-D1       	rcall .+520           ; Relative Call to Subroutine
12F4E:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12F50:	02-32       	cpi r16, 0x22         ; Compare with Immediate
12F52:	0E-4B       	sbci r16, 0xbe        ; Subtract Immediate with Carry SBI
12F54:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12F56:	0D-E0       	ldi r16, 0x0d         ; Load Immediate
12F58:	14-28       	or r1, r4             ; Logical OR
12F5A:	04-D1       	rcall .+520           ; Relative Call to Subroutine
12F5C:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
12F5E:	02-32       	cpi r16, 0x22         ; Compare with Immediate
12F60:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
12F62:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
12F64:	06-E0       	ldi r16, 0x06         ; Load Immediate
12F66:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
12F68:	5A-7B       	andi r21, 0xba        ; Logical AND with Immediate
12F6A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
12F6C:	FE-02       	muls r31, r30         ; Multiply Signed
12F6E:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
12F70:	00-20       	and r0, r0            ; Logical AND
12F72:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12F74:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
12F76:	5A-7B       	andi r21, 0xba        ; Logical AND with Immediate
12F78:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
12F7A:	01-02       	muls r16, r17         ; Multiply Signed
12F7C:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
12F7E:	01-20       	and r0, r1            ; Logical AND
12F80:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12F82:	00-20       	and r0, r0            ; Logical AND
12F84:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
12F86:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
12F88:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
12F8A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12F8C:	0C-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
12F8E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12F90:	14-C0       	rjmp .+40             ; Relative Jump
12F92:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
12F94:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
12F96:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
12F98:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
12F9A:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
12F9C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
12F9E:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
12FA0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12FA2:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
12FA4:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
12FA6:	37-D0       	rcall .+110           ; Relative Call to Subroutine
12FA8:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
12FAA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
12FAC:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
12FAE:	01-22       	and r0, r17           ; Logical AND
12FB0:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
12FB2:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
12FB4:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
12FB6:	01-34       	cpi r16, 0x41         ; Compare with Immediate
12FB8:	40-2C       	mov r4, r0            ; Copy Register
12FBA:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
12FBC:	00-24       	clr r0                ; Clear Register
12FBE:	1A-4D       	sbci r17, 0xda        ; Subtract Immediate with Carry SBI
12FC0:	1A-4E       	sbci r17, 0xea        ; Subtract Immediate with Carry SBI
12FC2:	DF-F8       	.data 0xf8df          ; Binary data
12FC4:	6C-80       	ldd r6, Y+4           ; Load Indirect from Data Space to Register
12FC6:	17-E0       	ldi r17, 0x07         ; Load Immediate
12FC8:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
12FCA:	CA-FC       	.data 0xfcca          ; Binary data
12FCC:	40-28       	or r4, r0             ; Logical OR
12FCE:	0F-DC       	rcall .+6174          ; Relative Call to Subroutine
12FD0:	33-79       	andi r19, 0x93        ; Logical AND with Immediate
12FD2:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
12FD4:	80-0F       	add r24, r16          ; Add without Carry
12FD6:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
12FD8:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
12FDA:	01-33       	cpi r16, 0x31         ; Compare with Immediate
12FDC:	40-2B       	or r20, r16           ; Logical OR
12FDE:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
12FE0:	00-23       	and r16, r16          ; Logical AND
12FE2:	18-F8       	.data 0xf818          ; Binary data
12FE4:	03-20       	and r0, r3            ; Logical AND
12FE6:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
12FE8:	F2-71       	andi r31, 0x12        ; Logical AND with Immediate
12FEA:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
12FEC:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
12FEE:	03-E0       	ldi r16, 0x03         ; Load Immediate
12FF0:	FF-28       	or r15, r15           ; Logical OR
12FF2:	01-DD       	rcall .+6658          ; Relative Call to Subroutine
12FF4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
12FF6:	E6-FD       	sbrc r30, 6           ; Skip if Bit in Register is Cleared
12FF8:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
12FFA:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
12FFC:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
12FFE:	E3-D0       	rcall .+454           ; Relative Call to Subroutine
13000:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
13002:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
13004:	1F-55       	subi r17, 0x5f        ; Subtract Immediate
13006:	01-22       	and r0, r17           ; Logical AND
13008:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
1300A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1300C:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
1300E:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13010:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
13012:	BC-22       	and r11, r28          ; Logical AND
13014:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13016:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
13018:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1301A:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1301C:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1301E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
13020:	68-02       	muls r22, r24         ; Multiply Signed
13022:	00-20       	and r0, r0            ; Logical AND
13024:	6C-02       	muls r22, r28         ; Multiply Signed
13026:	00-20       	and r0, r0            ; Logical AND
13028:	65-02       	muls r22, r21         ; Multiply Signed
1302A:	00-20       	and r0, r0            ; Logical AND
1302C:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
1302E:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
13030:	E0-01       	movw r28, r0          ; Copy Register Word
13032:	00-20       	and r0, r0            ; Logical AND
13034:	DC-01       	movw r26, r24         ; Copy Register Word
13036:	00-20       	and r0, r0            ; Logical AND
13038:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
1303A:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
1303C:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1303E:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
13040:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
13042:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
13044:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
13046:	49-D0       	rcall .+146           ; Relative Call to Subroutine
13048:	26-4B       	sbci r18, 0xb6        ; Subtract Immediate with Carry SBI
1304A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1304C:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
1304E:	01-22       	and r0, r17           ; Logical AND
13050:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
13052:	07-EB       	ldi r16, 0xb7         ; Load Immediate
13054:	01-0B       	sbc r16, r17          ; Subtract with Carry
13056:	5F-45       	sbci r21, 0x5f        ; Subtract Immediate with Carry SBI
13058:	3D-D2       	rcall .+1146          ; Relative Call to Subroutine
1305A:	DF-F8       	.data 0xf8df          ; Binary data
1305C:	98-90       	.data 0x9098          ; Binary data
1305E:	22-4E       	sbci r18, 0xe2        ; Subtract Immediate with Carry SBI
13060:	DF-F8       	.data 0xf8df          ; Binary data
13062:	8C-80       	ldd r8, Y+4           ; Load Indirect from Data Space to Register
13064:	DF-F8       	.data 0xf8df          ; Binary data
13066:	90-A0       	ldd r9, Y+32          ; Load Indirect from Data Space to Register
13068:	99-F8       	.data 0xf899          ; Binary data
1306A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1306C:	01-34       	cpi r16, 0x41         ; Compare with Immediate
1306E:	40-2C       	mov r4, r0            ; Copy Register
13070:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
13072:	00-24       	clr r0                ; Clear Register
13074:	35-78       	andi r19, 0x85        ; Logical AND with Immediate
13076:	ED-B2       	in r14, 0x1d          ; Load an I/O Location to Register
13078:	A5-42       	sbci r26, 0x25        ; Subtract Immediate with Carry SBI
1307A:	20-D1       	rcall .+576           ; Relative Call to Subroutine
1307C:	BC-23       	and r27, r28          ; Logical AND
1307E:	88-F8       	.data 0xf888          ; Binary data
13080:	03-30       	cpi r16, 0x03         ; Compare with Immediate
13082:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
13084:	6D-FC       	.data 0xfc6d          ; Binary data
13086:	40-28       	or r4, r0             ; Logical OR
13088:	11-DC       	rcall .+6178          ; Relative Call to Subroutine
1308A:	98-F8       	.data 0xf898          ; Binary data
1308C:	04-30       	cpi r16, 0x04         ; Compare with Immediate
1308E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13090:	80-0F       	add r24, r16          ; Add without Carry
13092:	10-D0       	rcall .+32            ; Relative Call to Subroutine
13094:	33-78       	andi r19, 0x83        ; Logical AND with Immediate
13096:	01-33       	cpi r16, 0x31         ; Compare with Immediate
13098:	40-2B       	or r20, r16           ; Logical OR
1309A:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
1309C:	00-23       	and r16, r16          ; Logical AND
1309E:	1A-F8       	.data 0xf81a          ; Binary data
130A0:	03-20       	and r0, r3            ; Logical AND
130A2:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
130A4:	88-F8       	.data 0xf888          ; Binary data
130A6:	07-20       	and r0, r7            ; Logical AND
130A8:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
130AA:	33-70       	andi r19, 0x03        ; Logical AND with Immediate
130AC:	03-E0       	ldi r16, 0x03         ; Load Immediate
130AE:	FF-28       	or r15, r15           ; Logical OR
130B0:	01-DD       	rcall .+6658          ; Relative Call to Subroutine
130B2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
130B4:	87-FD       	sbrc r24, 7           ; Skip if Bit in Register is Cleared
130B6:	33-78       	andi r19, 0x83        ; Logical AND with Immediate
130B8:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
130BA:	9D-42       	sbci r25, 0x2d        ; Subtract Immediate with Carry SBI
130BC:	E1-D0       	rcall .+450           ; Relative Call to Subroutine
130BE:	17-F8       	bld r1, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
130C0:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
130C2:	0A-F8       	.data 0xf80a          ; Binary data
130C4:	04-30       	cpi r16, 0x04         ; Compare with Immediate
130C6:	01-22       	and r0, r17           ; Logical AND
130C8:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
130CA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
130CC:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
130CE:	89-F8       	.data 0xf889          ; Binary data
130D0:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
130D2:	5F-45       	sbci r21, 0x5f        ; Subtract Immediate with Carry SBI
130D4:	C8-D1       	rcall .+912           ; Relative Call to Subroutine
130D6:	BC-22       	and r11, r28          ; Logical AND
130D8:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
130DA:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
130DC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
130DE:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
130E0:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
130E2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
130E4:	68-02       	muls r22, r24         ; Multiply Signed
130E6:	00-20       	and r0, r0            ; Logical AND
130E8:	65-02       	muls r22, r21         ; Multiply Signed
130EA:	00-20       	and r0, r0            ; Logical AND
130EC:	DC-01       	movw r26, r24         ; Copy Register Word
130EE:	00-20       	and r0, r0            ; Logical AND
130F0:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
130F2:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
130F4:	6C-02       	muls r22, r28         ; Multiply Signed
130F6:	00-20       	and r0, r0            ; Logical AND
130F8:	E0-01       	movw r28, r0          ; Copy Register Word
130FA:	00-20       	and r0, r0            ; Logical AND
130FC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
130FE:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
13100:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
13102:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13104:	FF-0F       	add r31, r31          ; Add without Carry
13106:	06-D0       	rcall .+12            ; Relative Call to Subroutine
13108:	03-4C       	sbci r16, 0xc3        ; Subtract Immediate with Carry SBI
1310A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1310C:	5B-FD       	.data 0xfd5b          ; Binary data
1310E:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
13110:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13112:	FF-0F       	add r31, r31          ; Add without Carry
13114:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
13116:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
13118:	DC-01       	movw r26, r24         ; Copy Register Word
1311A:	00-20       	and r0, r0            ; Logical AND
1311C:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
1311E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
13120:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
13122:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
13124:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
13126:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
13128:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
1312A:	2C-BF       	out 0x3c, r18         ; Store Register to I/O Location
1312C:	3F-32       	cpi r19, 0x2f         ; Compare with Immediate
1312E:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
13130:	FF-32       	cpi r31, 0x2f         ; Compare with Immediate
13132:	D0-1A       	sub r13, r16          ; Subtract Without Carry
13134:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13136:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13138:	6C-02       	muls r22, r28         ; Multiply Signed
1313A:	00-20       	and r0, r0            ; Logical AND
1313C:	65-02       	muls r22, r21         ; Multiply Signed
1313E:	00-20       	and r0, r0            ; Logical AND
13140:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13142:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
13144:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
13146:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13148:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1314A:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
1314C:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
1314E:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
13150:	40-30       	cpi r20, 0x00         ; Compare with Immediate
13152:	C0-1A       	sub r12, r16          ; Subtract Without Carry
13154:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13156:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13158:	64-02       	muls r22, r20         ; Multiply Signed
1315A:	00-20       	and r0, r0            ; Logical AND
1315C:	DD-01       	movw r26, r26         ; Copy Register Word
1315E:	00-20       	and r0, r0            ; Logical AND
13160:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
13162:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
13164:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
13166:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
13168:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
1316A:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
1316C:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
1316E:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
13170:	18-D0       	rcall .+48            ; Relative Call to Subroutine
13172:	01-33       	cpi r16, 0x31         ; Compare with Immediate
13174:	3F-2B       	or r19, r31           ; Logical OR
13176:	18-D8       	rcall .+4144          ; Relative Call to Subroutine
13178:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
1317A:	C8-5C       	subi r28, 0xc8        ; Subtract Immediate
1317C:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1317E:	DC-B2       	in r13, 0x1c          ; Load an I/O Location to Register
13180:	11-49       	sbci r17, 0x91        ; Subtract Immediate with Carry SBI
13182:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
13184:	12-49       	sbci r17, 0x92        ; Subtract Immediate with Carry SBI
13186:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
13188:	C9-B1       	in r28, 0x09          ; Load an I/O Location to Register
1318A:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
1318C:	03-D3       	rcall .+1542          ; Relative Call to Subroutine
1318E:	00-E0       	ldi r16, 0x00         ; Load Immediate
13190:	00-23       	and r16, r16          ; Logical AND
13192:	D3-1A       	sub r13, r19          ; Subtract Without Carry
13194:	01-E0       	ldi r16, 0x01         ; Load Immediate
13196:	40-32       	cpi r20, 0x20         ; Compare with Immediate
13198:	D3-1A       	sub r13, r19          ; Subtract Without Carry
1319A:	1A-2B       	or r17, r26           ; Logical OR
1319C:	0F-DC       	rcall .+6174          ; Relative Call to Subroutine
1319E:	00-23       	and r16, r16          ; Logical AND
131A0:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
131A2:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
131A4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
131A6:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
131A8:	09-E0       	ldi r16, 0x09         ; Load Immediate
131AA:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
131AC:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
131AE:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
131B0:	00-21       	and r16, r0           ; Logical AND
131B2:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
131B4:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
131B6:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
131B8:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
131BA:	00-29       	or r16, r0            ; Logical OR
131BC:	E8-D1       	rcall .+976           ; Relative Call to Subroutine
131BE:	5D-F8       	.data 0xf85d          ; Binary data
131C0:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
131C2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
131C4:	64-02       	muls r22, r20         ; Multiply Signed
131C6:	00-20       	and r0, r0            ; Logical AND
131C8:	DD-01       	movw r26, r26         ; Copy Register Word
131CA:	00-20       	and r0, r0            ; Logical AND
131CC:	24-02       	muls r18, r20         ; Multiply Signed
131CE:	00-20       	and r0, r0            ; Logical AND
131D0:	D8-01       	movw r26, r16         ; Copy Register Word
131D2:	00-20       	and r0, r0            ; Logical AND
131D4:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
131D6:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
131D8:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
131DA:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
131DC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
131DE:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
131E0:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
131E2:	07-D0       	rcall .+14            ; Relative Call to Subroutine
131E4:	01-33       	cpi r16, 0x31         ; Compare with Immediate
131E6:	40-2B       	or r20, r16           ; Logical OR
131E8:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
131EA:	00-23       	and r16, r16          ; Logical AND
131EC:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
131EE:	D0-5C       	subi r29, 0xc0        ; Subtract Immediate
131F0:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
131F2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
131F4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
131F6:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
131F8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
131FA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
131FC:	64-02       	muls r22, r20         ; Multiply Signed
131FE:	00-20       	and r0, r0            ; Logical AND
13200:	DD-01       	movw r26, r26         ; Copy Register Word
13202:	00-20       	and r0, r0            ; Logical AND
13204:	24-02       	muls r18, r20         ; Multiply Signed
13206:	00-20       	and r0, r0            ; Logical AND
13208:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
1320A:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1320C:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
1320E:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
13210:	14-D0       	rcall .+40            ; Relative Call to Subroutine
13212:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
13214:	DA-78       	andi r29, 0x8a        ; Logical AND with Immediate
13216:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13218:	CB-02       	muls r28, r27         ; Multiply Signed
1321A:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
1321C:	40-22       	and r4, r16           ; Logical AND
1321E:	5A-74       	andi r21, 0x4a        ; Logical AND with Immediate
13220:	DA-78       	andi r29, 0x8a        ; Logical AND with Immediate
13222:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
13224:	34-02       	muls r19, r20         ; Multiply Signed
13226:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
13228:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
1322A:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
1322C:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
1322E:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
13230:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
13232:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
13234:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
13236:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
13238:	00-22       	and r0, r16           ; Logical AND
1323A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1323C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1323E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13240:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
13242:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
13244:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
13246:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
13248:	DD-01       	movw r26, r26         ; Copy Register Word
1324A:	00-20       	and r0, r0            ; Logical AND
1324C:	64-02       	muls r22, r20         ; Multiply Signed
1324E:	00-20       	and r0, r0            ; Logical AND
13250:	D8-01       	movw r26, r16         ; Copy Register Word
13252:	00-20       	and r0, r0            ; Logical AND
13254:	70-B4       	in r7, 0x20           ; Load an I/O Location to Register
13256:	3D-4B       	sbci r19, 0xbd        ; Subtract Immediate with Carry SBI
13258:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
1325A:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1325C:	30-0F       	add r19, r16          ; Add without Carry
1325E:	33-D0       	rcall .+102           ; Relative Call to Subroutine
13260:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
13262:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
13264:	9B-7D       	andi r25, 0xdb        ; Logical AND with Immediate
13266:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
13268:	FF-02       	muls r31, r31         ; Multiply Signed
1326A:	2B-B9       	out 0x0b, r18         ; Store Register to I/O Location
1326C:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
1326E:	DA-79       	andi r29, 0x9a        ; Logical AND with Immediate
13270:	40-22       	and r4, r16           ; Logical AND
13272:	5A-74       	andi r21, 0x4a        ; Logical AND with Immediate
13274:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
13276:	27-E0       	ldi r18, 0x07         ; Load Immediate
13278:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
1327A:	35-4B       	sbci r19, 0xb5        ; Subtract Immediate with Carry SBI
1327C:	19-78       	andi r17, 0x89        ; Logical AND with Immediate
1327E:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
13280:	34-4B       	sbci r19, 0xb4        ; Subtract Immediate with Carry SBI
13282:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
13284:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
13286:	31-4D       	sbci r19, 0xd1        ; Subtract Immediate with Carry SBI
13288:	33-4E       	sbci r19, 0xe3        ; Subtract Immediate with Carry SBI
1328A:	EB-79       	andi r30, 0x9b        ; Logical AND with Immediate
1328C:	D8-B2       	in r13, 0x18          ; Load an I/O Location to Register
1328E:	4B-1C       	adc r4, r11           ; Add with Carry
13290:	40-2B       	or r20, r16           ; Logical OR
13292:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
13294:	00-23       	and r16, r16          ; Logical AND
13296:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
13298:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
1329A:	F0-54       	subi r31, 0x40        ; Subtract Immediate
1329C:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
1329E:	53-1E       	adc r5, r19           ; Add with Carry
132A0:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
132A2:	FF-02       	muls r31, r31         ; Multiply Signed
132A4:	F1-D1       	rcall .+994           ; Relative Call to Subroutine
132A6:	CA-B2       	in r12, 0x1a          ; Load an I/O Location to Register
132A8:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
132AA:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
132AC:	2B-4B       	sbci r18, 0xbb        ; Subtract Immediate with Carry SBI
132AE:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
132B0:	53-B1       	in r21, 0x03          ; Load an I/O Location to Register
132B2:	A1-42       	sbci r26, 0x21        ; Subtract Immediate with Carry SBI
132B4:	2E-BF       	out 0x3e, r18         ; Store Register to I/O Location
132B6:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
132B8:	01-01       	movw r0, r2           ; Copy Register Word
132BA:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
132BC:	40-04       	cpc r4, r0            ; Compare with Carry
132BE:	09-19       	sub r16, r9           ; Subtract Without Carry
132C0:	27-29       	or r18, r7            ; Logical OR
132C2:	C4-BF       	out 0x34, r28         ; Store Register to I/O Location
132C4:	01-22       	and r0, r17           ; Logical AND
132C6:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
132C8:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
132CA:	DA-78       	andi r29, 0x8a        ; Logical AND with Immediate
132CC:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
132CE:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
132D0:	80-0F       	add r24, r16          ; Add without Carry
132D2:	27-D0       	rcall .+78            ; Relative Call to Subroutine
132D4:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
132D6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
132D8:	80-0F       	add r24, r16          ; Add without Carry
132DA:	23-D0       	rcall .+70            ; Relative Call to Subroutine
132DC:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
132DE:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
132E0:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
132E2:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
132E4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
132E6:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
132E8:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
132EA:	10-D0       	rcall .+32            ; Relative Call to Subroutine
132EC:	17-49       	sbci r17, 0x97        ; Subtract Immediate with Carry SBI
132EE:	1E-4D       	sbci r17, 0xde        ; Subtract Immediate with Carry SBI
132F0:	01-E0       	ldi r16, 0x01         ; Load Immediate
132F2:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
132F4:	0B-D0       	rcall .+22            ; Relative Call to Subroutine
132F6:	01-33       	cpi r16, 0x31         ; Compare with Immediate
132F8:	40-2B       	or r20, r16           ; Logical OR
132FA:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
132FC:	00-23       	and r16, r16          ; Logical AND
132FE:	08-79       	andi r16, 0x98        ; Logical AND with Immediate
13300:	E8-5C       	subi r30, 0xc8        ; Subtract Immediate
13302:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
13304:	C8-71       	andi r28, 0x18        ; Logical AND with Immediate
13306:	08-7D       	andi r16, 0xd8        ; Logical AND with Immediate
13308:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1330A:	07-28       	or r0, r7             ; Logical OR
1330C:	F1-D9       	rcall .+5090          ; Relative Call to Subroutine
1330E:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
13310:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
13312:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
13314:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
13316:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
13318:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1331A:	80-0F       	add r24, r16          ; Add without Carry
1331C:	02-D0       	rcall .+4             ; Relative Call to Subroutine
1331E:	7C-21       	and r23, r12          ; Logical AND
13320:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
13322:	D9-70       	andi r29, 0x09        ; Logical AND with Immediate
13324:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
13326:	40-0F       	add r20, r16          ; Add without Carry
13328:	0E-D0       	rcall .+28            ; Relative Call to Subroutine
1332A:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1332C:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
1332E:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13330:	40-0F       	add r20, r16          ; Add without Carry
13332:	09-D0       	rcall .+18            ; Relative Call to Subroutine
13334:	00-22       	and r0, r16           ; Logical AND
13336:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
13338:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1333A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
1333C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1333E:	03-B1       	in r16, 0x03          ; Load an I/O Location to Register
13340:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
13342:	3C-22       	and r3, r28           ; Logical AND
13344:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
13346:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
13348:	70-BC       	out 0x20, r7          ; Store Register to I/O Location
1334A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1334C:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
1334E:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
13350:	64-02       	muls r22, r20         ; Multiply Signed
13352:	00-20       	and r0, r0            ; Logical AND
13354:	DD-01       	movw r26, r26         ; Copy Register Word
13356:	00-20       	and r0, r0            ; Logical AND
13358:	24-02       	muls r18, r20         ; Multiply Signed
1335A:	00-20       	and r0, r0            ; Logical AND
1335C:	D8-01       	movw r26, r16         ; Copy Register Word
1335E:	00-20       	and r0, r0            ; Logical AND
13360:	6C-02       	muls r22, r28         ; Multiply Signed
13362:	00-20       	and r0, r0            ; Logical AND
13364:	65-02       	muls r22, r21         ; Multiply Signed
13366:	00-20       	and r0, r0            ; Logical AND
13368:	E0-01       	movw r28, r0          ; Copy Register Word
1336A:	00-20       	and r0, r0            ; Logical AND
1336C:	DC-01       	movw r26, r24         ; Copy Register Word
1336E:	00-20       	and r0, r0            ; Logical AND
13370:	68-02       	muls r22, r24         ; Multiply Signed
13372:	00-20       	and r0, r0            ; Logical AND
13374:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
13376:	1A-68       	ori r17, 0x8a         ; Logical OR with Immediate
13378:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
1337A:	80-52       	subi r24, 0x20        ; Subtract Immediate
1337C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1337E:	00-23       	and r16, r16          ; Logical AND
13380:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
13382:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
13384:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
13386:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
13388:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
1338A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1338C:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
1338E:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
13390:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
13392:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
13394:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
13396:	13-31       	cpi r17, 0x13         ; Compare with Immediate
13398:	14-4A       	sbci r17, 0xa4        ; Subtract Immediate with Carry SBI
1339A:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
1339C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1339E:	51-71       	andi r21, 0x11        ; Logical AND with Immediate
133A0:	04-32       	cpi r16, 0x24         ; Compare with Immediate
133A2:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
133A4:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
133A6:	44-31       	cpi r20, 0x14         ; Compare with Immediate
133A8:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
133AA:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
133AC:	C0-F3       	brbs 0, .-16          ; Branch if Bit in SREG is Set
133AE:	47-11       	cpse r20, r7          ; Compare Skip if Equal
133B0:	51-70       	andi r21, 0x01        ; Logical AND with Immediate
133B2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
133B4:	1F-00       	.data 0x001f          ; Binary data
133B6:	90-72       	andi r25, 0x20        ; Logical AND with Immediate
133B8:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
133BA:	13-74       	andi r17, 0x43        ; Logical AND with Immediate
133BC:	2C-23       	and r18, r28          ; Logical AND
133BE:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
133C0:	40-22       	and r4, r16           ; Logical AND
133C2:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
133C4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
133C6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
133C8:	00-32       	cpi r16, 0x20         ; Compare with Immediate
133CA:	A3-F2       	brbs 3, .-88          ; Branch if Bit in SREG is Set
133CC:	2D-33       	cpi r18, 0x3d         ; Compare with Immediate
133CE:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
133D0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
133D2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
133D4:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
133D6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
133D8:	E0-02       	muls r30, r16         ; Multiply Signed
133DA:	00-20       	and r0, r0            ; Logical AND
133DC:	75-02       	muls r23, r21         ; Multiply Signed
133DE:	00-20       	and r0, r0            ; Logical AND
133E0:	E8-02       	muls r30, r24         ; Multiply Signed
133E2:	00-20       	and r0, r0            ; Logical AND
133E4:	E1-02       	muls r30, r17         ; Multiply Signed
133E6:	00-20       	and r0, r0            ; Logical AND
133E8:	74-02       	muls r23, r20         ; Multiply Signed
133EA:	00-20       	and r0, r0            ; Logical AND
133EC:	08-C0       	rjmp .+16             ; Relative Jump
133EE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
133F0:	00-C0       	rjmp .+0              ; Relative Jump
133F2:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
133F4:	31-E4       	ldi r19, 0x41         ; Load Immediate
133F6:	00-E0       	ldi r16, 0x00         ; Load Immediate
133F8:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
133FA:	9B-78       	andi r25, 0x8b        ; Logical AND with Immediate
133FC:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
133FE:	EC-03       	fmulsu r22, r20       ; Fractional Multiply Signed with Unsigned
13400:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13402:	03-02       	muls r16, r19         ; Multiply Signed
13404:	13-43       	sbci r17, 0x33        ; Subtract Immediate with Carry SBI
13406:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
13408:	04-0F       	add r16, r20          ; Add without Carry
1340A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1340C:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
1340E:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
13410:	10-4A       	sbci r17, 0xa0        ; Subtract Immediate with Carry SBI
13412:	93-70       	andi r25, 0x03        ; Logical AND with Immediate
13414:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13416:	0F-03       	fmul r16, r23         ; Fractional Multiply Unsigned
13418:	04-2B       	or r16, r20           ; Logical OR
1341A:	04-D1       	rcall .+520           ; Relative Call to Subroutine
1341C:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
1341E:	92-79       	andi r25, 0x92        ; Logical AND with Immediate
13420:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
13422:	40-02       	muls r20, r16         ; Multiply Signed
13424:	9A-71       	andi r25, 0x1a        ; Logical AND with Immediate
13426:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
13428:	5A-79       	andi r21, 0x9a        ; Logical AND with Immediate
1342A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
1342C:	EF-02       	muls r30, r31         ; Multiply Signed
1342E:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
13430:	10-0F       	add r17, r16          ; Add without Carry
13432:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
13434:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
13436:	10-02       	muls r17, r16         ; Multiply Signed
13438:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
1343A:	5A-71       	andi r21, 0x1a        ; Logical AND with Immediate
1343C:	9B-79       	andi r25, 0x9b        ; Logical AND with Immediate
1343E:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
13440:	EF-03       	fmulsu r22, r23       ; Fractional Multiply Signed with Unsigned
13442:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
13444:	20-0F       	add r18, r16          ; Add without Carry
13446:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
13448:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
1344A:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
1344C:	01-4A       	sbci r16, 0xa1        ; Subtract Immediate with Carry SBI
1344E:	93-71       	andi r25, 0x13        ; Logical AND with Immediate
13450:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13452:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13454:	00-C0       	rjmp .+0              ; Relative Jump
13456:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
13458:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
1345A:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
1345C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1345E:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
13460:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
13462:	21-D0       	rcall .+66            ; Relative Call to Subroutine
13464:	12-4B       	sbci r17, 0xb2        ; Subtract Immediate with Carry SBI
13466:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
13468:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1346A:	FF-0F       	add r31, r31          ; Add without Carry
1346C:	06-D0       	rcall .+12            ; Relative Call to Subroutine
1346E:	10-4C       	sbci r17, 0xc0        ; Subtract Immediate with Carry SBI
13470:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13472:	A8-FB       	.data 0xfba8          ; Binary data
13474:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
13476:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13478:	FF-0F       	add r31, r31          ; Add without Carry
1347A:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
1347C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1347E:	00-32       	cpi r16, 0x20         ; Compare with Immediate
13480:	0C-4B       	sbci r16, 0xbc        ; Subtract Immediate with Carry SBI
13482:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
13484:	00-23       	and r16, r16          ; Logical AND
13486:	0C-4A       	sbci r16, 0xac        ; Subtract Immediate with Carry SBI
13488:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
1348A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
1348C:	03-12       	cpse r0, r19          ; Compare Skip if Equal
1348E:	0B-49       	sbci r16, 0x9b        ; Subtract Immediate with Carry SBI
13490:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
13492:	04-31       	cpi r16, 0x14         ; Compare with Immediate
13494:	0A-60       	ori r16, 0x0a         ; Logical OR with Immediate
13496:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
13498:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1349A:	0A-4A       	sbci r16, 0xaa        ; Subtract Immediate with Carry SBI
1349C:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1349E:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
134A0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
134A2:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
134A4:	01-22       	and r0, r17           ; Logical AND
134A6:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
134A8:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
134AA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
134AC:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
134AE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
134B0:	74-02       	muls r23, r20         ; Multiply Signed
134B2:	00-20       	and r0, r0            ; Logical AND
134B4:	84-E1       	ldi r24, 0x14         ; Load Immediate
134B6:	00-E0       	ldi r16, 0x00         ; Load Immediate
134B8:	00-C0       	rjmp .+0              ; Relative Jump
134BA:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
134BC:	08-C0       	rjmp .+16             ; Relative Jump
134BE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
134C0:	E0-02       	muls r30, r16         ; Multiply Signed
134C2:	00-20       	and r0, r0            ; Logical AND
134C4:	75-02       	muls r23, r21         ; Multiply Signed
134C6:	00-20       	and r0, r0            ; Logical AND
134C8:	70-02       	muls r23, r16         ; Multiply Signed
134CA:	00-20       	and r0, r0            ; Logical AND
134CC:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
134CE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
134D0:	09-4A       	sbci r16, 0xa9        ; Subtract Immediate with Carry SBI
134D2:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
134D4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
134D6:	FF-0F       	add r31, r31          ; Add without Carry
134D8:	FB-D1       	rcall .+1014          ; Relative Call to Subroutine
134DA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
134DC:	01-21       	and r16, r1           ; Logical AND
134DE:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
134E0:	ED-FA       	.data 0xfaed          ; Binary data
134E2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
134E4:	00-21       	and r16, r0           ; Logical AND
134E6:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
134E8:	B7-FA       	bst r11, 7            ; Bit Store from Bit in Register to T Flag in SREG
134EA:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
134EC:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
134EE:	34-20       	and r3, r4            ; Logical AND
134F0:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
134F2:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
134F4:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
134F6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
134F8:	74-02       	muls r23, r20         ; Multiply Signed
134FA:	00-20       	and r0, r0            ; Logical AND
134FC:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
134FE:	01-00       	.data 0x0001          ; Binary data
13500:	E4-02       	muls r30, r20         ; Multiply Signed
13502:	00-20       	and r0, r0            ; Logical AND
13504:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
13506:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
13508:	09-B1       	in r16, 0x09          ; Load an I/O Location to Register
1350A:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
1350C:	80-00       	.data 0x0080          ; Binary data
1350E:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
13510:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
13512:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
13514:	19-D0       	rcall .+50            ; Relative Call to Subroutine
13516:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
13518:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
1351A:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
1351C:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
1351E:	12-D0       	rcall .+36            ; Relative Call to Subroutine
13520:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
13522:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
13524:	08-2B       	or r16, r24           ; Logical OR
13526:	02-D1       	rcall .+516           ; Relative Call to Subroutine
13528:	00-22       	and r0, r16           ; Logical AND
1352A:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
1352C:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
1352E:	00-2C       	mov r0, r0            ; Copy Register
13530:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
13532:	44-22       	and r4, r20           ; Logical AND
13534:	60-22       	and r6, r16           ; Logical AND
13536:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13538:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
1353A:	08-2B       	or r16, r24           ; Logical OR
1353C:	03-D1       	rcall .+518           ; Relative Call to Subroutine
1353E:	42-F4       	brbc 2, .+16          ; Branch if Bit in SREG is Cleared
13540:	40-72       	andi r20, 0x20        ; Logical AND with Immediate
13542:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13544:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
13546:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
13548:	18-70       	andi r17, 0x08        ; Logical AND with Immediate
1354A:	5D-F8       	.data 0xf85d          ; Binary data
1354C:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
1354E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13550:	F5-93       	las Z, r31            ; Load and Set
13552:	FF-1F       	adc r31, r31          ; Add with Carry
13554:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
13556:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
13558:	0C-C0       	rjmp .+24             ; Relative Jump
1355A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1355C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1355E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13560:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
13562:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
13564:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
13566:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
13568:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
1356A:	12-D0       	rcall .+36            ; Relative Call to Subroutine
1356C:	21-28       	or r2, r1             ; Logical OR
1356E:	0C-D8       	rcall .+4120          ; Relative Call to Subroutine
13570:	0A-4C       	sbci r16, 0xca        ; Subtract Immediate with Carry SBI
13572:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
13574:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
13576:	30-30       	cpi r19, 0x00         ; Compare with Immediate
13578:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
1357A:	01-21       	and r16, r1           ; Logical AND
1357C:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
1357E:	9E-FA       	.data 0xfa9e          ; Binary data
13580:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
13582:	00-22       	and r0, r16           ; Logical AND
13584:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
13586:	01-20       	and r0, r1            ; Logical AND
13588:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
1358A:	00-20       	and r0, r0            ; Logical AND
1358C:	03-4B       	sbci r16, 0xb3        ; Subtract Immediate with Carry SBI
1358E:	18-60       	ori r17, 0x08         ; Logical OR with Immediate
13590:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
13592:	00-20       	and r0, r0            ; Logical AND
13594:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
13596:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13598:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1359A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1359C:	70-02       	muls r23, r16         ; Multiply Signed
1359E:	00-20       	and r0, r0            ; Logical AND
135A0:	68-81       	ld r22, Y             ; Load Indirect from Data Space to Register
135A2:	01-00       	.data 0x0001          ; Binary data
135A4:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
135A6:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
135A8:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
135AA:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
135AC:	13-D0       	rcall .+38            ; Relative Call to Subroutine
135AE:	0E-28       	or r0, r14            ; Logical OR
135B0:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
135B2:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
135B4:	02-32       	cpi r16, 0x22         ; Compare with Immediate
135B6:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
135B8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
135BA:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
135BC:	5A-7B       	andi r21, 0xba        ; Logical AND with Immediate
135BE:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
135C0:	01-02       	muls r16, r17         ; Multiply Signed
135C2:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
135C4:	01-20       	and r0, r1            ; Logical AND
135C6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
135C8:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
135CA:	5A-7B       	andi r21, 0xba        ; Logical AND with Immediate
135CC:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
135CE:	FE-02       	muls r31, r30         ; Multiply Signed
135D0:	5A-73       	andi r21, 0x3a        ; Logical AND with Immediate
135D2:	00-20       	and r0, r0            ; Logical AND
135D4:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
135D6:	00-20       	and r0, r0            ; Logical AND
135D8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
135DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
135DC:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
135DE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
135E0:	04-C0       	rjmp .+8              ; Relative Jump
135E2:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
135E4:	00-C0       	rjmp .+0              ; Relative Jump
135E6:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
135E8:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
135EA:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
135EC:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
135EE:	1F-4B       	sbci r17, 0xbf        ; Subtract Immediate with Carry SBI
135F0:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
135F2:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
135F4:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
135F6:	37-D0       	rcall .+110           ; Relative Call to Subroutine
135F8:	1D-4B       	sbci r17, 0xbd        ; Subtract Immediate with Carry SBI
135FA:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
135FC:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
135FE:	01-22       	and r0, r17           ; Logical AND
13600:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
13602:	1C-4B       	sbci r17, 0xbc        ; Subtract Immediate with Carry SBI
13604:	1C-78       	andi r17, 0x8c        ; Logical AND with Immediate
13606:	01-34       	cpi r16, 0x41         ; Compare with Immediate
13608:	28-2C       	mov r2, r8            ; Copy Register
1360A:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
1360C:	00-24       	clr r0                ; Clear Register
1360E:	1A-4D       	sbci r17, 0xda        ; Subtract Immediate with Carry SBI
13610:	1A-4E       	sbci r17, 0xea        ; Subtract Immediate with Carry SBI
13612:	DF-F8       	.data 0xf8df          ; Binary data
13614:	6C-80       	ldd r6, Y+4           ; Load Indirect from Data Space to Register
13616:	17-E0       	ldi r17, 0x07         ; Load Immediate
13618:	FD-F7       	brbc 5, .-2           ; Branch if Bit in SREG is Cleared
1361A:	A2-F9       	bld r26, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
1361C:	40-28       	or r4, r0             ; Logical OR
1361E:	0F-DC       	rcall .+6174          ; Relative Call to Subroutine
13620:	33-79       	andi r19, 0x93        ; Logical AND with Immediate
13622:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13624:	80-0F       	add r24, r16          ; Add without Carry
13626:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
13628:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
1362A:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1362C:	28-2B       	or r18, r24           ; Logical OR
1362E:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
13630:	00-23       	and r16, r16          ; Logical AND
13632:	18-F8       	.data 0xf818          ; Binary data
13634:	03-20       	and r0, r3            ; Logical AND
13636:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
13638:	F2-71       	andi r31, 0x12        ; Logical AND with Immediate
1363A:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
1363C:	2B-70       	andi r18, 0x0b        ; Logical AND with Immediate
1363E:	03-E0       	ldi r16, 0x03         ; Load Immediate
13640:	FF-28       	or r15, r15           ; Logical OR
13642:	01-DD       	rcall .+6658          ; Relative Call to Subroutine
13644:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13646:	BE-FA       	.data 0xfabe          ; Binary data
13648:	2B-78       	andi r18, 0x8b        ; Logical AND with Immediate
1364A:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
1364C:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
1364E:	E3-D0       	rcall .+454           ; Relative Call to Subroutine
13650:	FF-B2       	in r15, 0x1f          ; Load an I/O Location to Register
13652:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
13654:	1F-55       	subi r17, 0x5f        ; Subtract Immediate
13656:	01-22       	and r0, r17           ; Logical AND
13658:	0A-4B       	sbci r16, 0xba        ; Subtract Immediate with Carry SBI
1365A:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1365C:	E4-B2       	in r14, 0x14          ; Load an I/O Location to Register
1365E:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13660:	1C-70       	andi r17, 0x0c        ; Logical AND with Immediate
13662:	AC-22       	and r10, r28          ; Logical AND
13664:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13666:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
13668:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1366A:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1366C:	34-80       	ldd r3, Y+4           ; Load Indirect from Data Space to Register
1366E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
13670:	E4-02       	muls r30, r20         ; Multiply Signed
13672:	00-20       	and r0, r0            ; Logical AND
13674:	E8-02       	muls r30, r24         ; Multiply Signed
13676:	00-20       	and r0, r0            ; Logical AND
13678:	E1-02       	muls r30, r17         ; Multiply Signed
1367A:	00-20       	and r0, r0            ; Logical AND
1367C:	00-C0       	rjmp .+0              ; Relative Jump
1367E:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
13680:	78-02       	muls r23, r24         ; Multiply Signed
13682:	00-20       	and r0, r0            ; Logical AND
13684:	74-02       	muls r23, r20         ; Multiply Signed
13686:	00-20       	and r0, r0            ; Logical AND
13688:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1368A:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
1368C:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
1368E:	29-B1       	in r18, 0x09          ; Load an I/O Location to Register
13690:	15-F8       	bld r1, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
13692:	01-0B       	sbc r16, r17          ; Subtract with Carry
13694:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13696:	A8-FF       	.data 0xffa8          ; Binary data
13698:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
1369A:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
1369C:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1369E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
136A0:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
136A2:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
136A4:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
136A6:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
136A8:	FF-0F       	add r31, r31          ; Add without Carry
136AA:	06-D0       	rcall .+12            ; Relative Call to Subroutine
136AC:	03-4C       	sbci r16, 0xc3        ; Subtract Immediate with Carry SBI
136AE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
136B0:	89-FA       	.data 0xfa89          ; Binary data
136B2:	23-78       	andi r18, 0x83        ; Logical AND with Immediate
136B4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
136B6:	FF-0F       	add r31, r31          ; Add without Carry
136B8:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
136BA:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
136BC:	74-02       	muls r23, r20         ; Multiply Signed
136BE:	00-20       	and r0, r0            ; Logical AND
136C0:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
136C2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
136C4:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
136C6:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
136C8:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
136CA:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
136CC:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
136CE:	2C-BF       	out 0x3c, r18         ; Store Register to I/O Location
136D0:	27-32       	cpi r18, 0x27         ; Compare with Immediate
136D2:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
136D4:	FF-32       	cpi r31, 0x2f         ; Compare with Immediate
136D6:	D0-1A       	sub r13, r16          ; Subtract Without Carry
136D8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
136DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
136DC:	E8-02       	muls r30, r24         ; Multiply Signed
136DE:	00-20       	and r0, r0            ; Logical AND
136E0:	E1-02       	muls r30, r17         ; Multiply Signed
136E2:	00-20       	and r0, r0            ; Logical AND
136E4:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
136E6:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
136E8:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
136EA:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
136EC:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
136EE:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
136F0:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
136F2:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
136F4:	40-30       	cpi r20, 0x00         ; Compare with Immediate
136F6:	C0-1A       	sub r12, r16          ; Subtract Without Carry
136F8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
136FA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
136FC:	E0-02       	muls r30, r16         ; Multiply Signed
136FE:	00-20       	and r0, r0            ; Logical AND
13700:	75-02       	muls r23, r21         ; Multiply Signed
13702:	00-20       	and r0, r0            ; Logical AND
13704:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
13706:	18-4B       	sbci r17, 0xb8        ; Subtract Immediate with Carry SBI
13708:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
1370A:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
1370C:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
1370E:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
13710:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
13712:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
13714:	18-D0       	rcall .+48            ; Relative Call to Subroutine
13716:	01-33       	cpi r16, 0x31         ; Compare with Immediate
13718:	3F-2B       	or r19, r31           ; Logical OR
1371A:	18-D8       	rcall .+4144          ; Relative Call to Subroutine
1371C:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
1371E:	C8-5C       	subi r28, 0xc8        ; Subtract Immediate
13720:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
13722:	DC-B2       	in r13, 0x1c          ; Load an I/O Location to Register
13724:	11-49       	sbci r17, 0x91        ; Subtract Immediate with Carry SBI
13726:	0C-70       	andi r16, 0x0c        ; Logical AND with Immediate
13728:	12-49       	sbci r17, 0x92        ; Subtract Immediate with Carry SBI
1372A:	09-68       	ori r16, 0x89         ; Logical OR with Immediate
1372C:	C9-B1       	in r28, 0x09          ; Load an I/O Location to Register
1372E:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
13730:	03-D3       	rcall .+1542          ; Relative Call to Subroutine
13732:	00-E0       	ldi r16, 0x00         ; Load Immediate
13734:	00-23       	and r16, r16          ; Logical AND
13736:	D3-1A       	sub r13, r19          ; Subtract Without Carry
13738:	01-E0       	ldi r16, 0x01         ; Load Immediate
1373A:	40-32       	cpi r20, 0x20         ; Compare with Immediate
1373C:	D3-1A       	sub r13, r19          ; Subtract Without Carry
1373E:	1A-2B       	or r17, r26           ; Logical OR
13740:	0F-DC       	rcall .+6174          ; Relative Call to Subroutine
13742:	00-23       	and r16, r16          ; Logical AND
13744:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
13746:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
13748:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1374A:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
1374C:	09-E0       	ldi r16, 0x09         ; Load Immediate
1374E:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
13750:	18-78       	andi r17, 0x88        ; Logical AND with Immediate
13752:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
13754:	00-21       	and r16, r0           ; Logical AND
13756:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
13758:	19-70       	andi r17, 0x09        ; Logical AND with Immediate
1375A:	06-4B       	sbci r16, 0xb6        ; Subtract Immediate with Carry SBI
1375C:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
1375E:	00-29       	or r16, r0            ; Logical OR
13760:	E8-D1       	rcall .+976           ; Relative Call to Subroutine
13762:	5D-F8       	.data 0xf85d          ; Binary data
13764:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
13766:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13768:	E0-02       	muls r30, r16         ; Multiply Signed
1376A:	00-20       	and r0, r0            ; Logical AND
1376C:	75-02       	muls r23, r21         ; Multiply Signed
1376E:	00-20       	and r0, r0            ; Logical AND
13770:	A0-02       	muls r26, r16         ; Multiply Signed
13772:	00-20       	and r0, r0            ; Logical AND
13774:	70-02       	muls r23, r16         ; Multiply Signed
13776:	00-20       	and r0, r0            ; Logical AND
13778:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
1377A:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
1377C:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
1377E:	09-4B       	sbci r16, 0xb9        ; Subtract Immediate with Carry SBI
13780:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
13782:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
13784:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
13786:	07-D0       	rcall .+14            ; Relative Call to Subroutine
13788:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1378A:	40-2B       	or r20, r16           ; Logical OR
1378C:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
1378E:	00-23       	and r16, r16          ; Logical AND
13790:	05-4A       	sbci r16, 0xa5        ; Subtract Immediate with Carry SBI
13792:	D0-5C       	subi r29, 0xc0        ; Subtract Immediate
13794:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
13796:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13798:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1379A:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
1379C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1379E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
137A0:	E0-02       	muls r30, r16         ; Multiply Signed
137A2:	00-20       	and r0, r0            ; Logical AND
137A4:	75-02       	muls r23, r21         ; Multiply Signed
137A6:	00-20       	and r0, r0            ; Logical AND
137A8:	A0-02       	muls r26, r16         ; Multiply Signed
137AA:	00-20       	and r0, r0            ; Logical AND
137AC:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
137AE:	1A-78       	andi r17, 0x8a        ; Logical AND with Immediate
137B0:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
137B2:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
137B4:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
137B6:	05-4B       	sbci r16, 0xb5        ; Subtract Immediate with Carry SBI
137B8:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
137BA:	0B-B1       	in r16, 0x0b          ; Load an I/O Location to Register
137BC:	00-22       	and r0, r16           ; Logical AND
137BE:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
137C0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
137C2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
137C4:	75-02       	muls r23, r21         ; Multiply Signed
137C6:	00-20       	and r0, r0            ; Logical AND
137C8:	E0-02       	muls r30, r16         ; Multiply Signed
137CA:	00-20       	and r0, r0            ; Logical AND
137CC:	70-02       	muls r23, r16         ; Multiply Signed
137CE:	00-20       	and r0, r0            ; Logical AND
137D0:	2F-4B       	sbci r18, 0xbf        ; Subtract Immediate with Carry SBI
137D2:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
137D4:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
137D6:	20-0F       	add r18, r16          ; Add without Carry
137D8:	23-D0       	rcall .+70            ; Relative Call to Subroutine
137DA:	2D-4B       	sbci r18, 0xbd        ; Subtract Immediate with Carry SBI
137DC:	DB-79       	andi r29, 0x9b        ; Logical AND with Immediate
137DE:	D9-B2       	in r13, 0x19          ; Load an I/O Location to Register
137E0:	2C-4B       	sbci r18, 0xbc        ; Subtract Immediate with Carry SBI
137E2:	1B-78       	andi r17, 0x8b        ; Logical AND with Immediate
137E4:	01-33       	cpi r16, 0x31         ; Compare with Immediate
137E6:	40-2B       	or r20, r16           ; Logical OR
137E8:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
137EA:	00-23       	and r16, r16          ; Logical AND
137EC:	2A-4A       	sbci r18, 0xaa        ; Subtract Immediate with Carry SBI
137EE:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
137F0:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
137F2:	9A-42       	sbci r25, 0x2a        ; Subtract Immediate with Carry SBI
137F4:	04-D0       	rcall .+8             ; Relative Call to Subroutine
137F6:	29-4A       	sbci r18, 0xa9        ; Subtract Immediate with Carry SBI
137F8:	D1-54       	subi r29, 0x41        ; Subtract Immediate
137FA:	D9-B2       	in r13, 0x19          ; Load an I/O Location to Register
137FC:	25-4A       	sbci r18, 0xa5        ; Subtract Immediate with Carry SBI
137FE:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
13800:	27-4A       	sbci r18, 0xa7        ; Subtract Immediate with Carry SBI
13802:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
13804:	69-B1       	in r22, 0x09          ; Load an I/O Location to Register
13806:	27-4A       	sbci r18, 0xa7        ; Subtract Immediate with Carry SBI
13808:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
1380A:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
1380C:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
1380E:	2E-BF       	out 0x3e, r18         ; Store Register to I/O Location
13810:	C2-EB       	ldi r28, 0xb2         ; Load Immediate
13812:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
13814:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
13816:	40-02       	muls r20, r16         ; Multiply Signed
13818:	9B-18       	sub r9, r11           ; Subtract Without Carry
1381A:	27-2B       	or r18, r23           ; Logical OR
1381C:	C4-BF       	out 0x34, r28         ; Store Register to I/O Location
1381E:	01-23       	and r16, r17          ; Logical AND
13820:	0B-70       	andi r16, 0x0b        ; Logical AND with Immediate
13822:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
13824:	DB-78       	andi r29, 0x8b        ; Logical AND with Immediate
13826:	DB-B2       	in r13, 0x1b          ; Load an I/O Location to Register
13828:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1382A:	80-0F       	add r24, r16          ; Add without Carry
1382C:	1C-D0       	rcall .+56            ; Relative Call to Subroutine
1382E:	18-4A       	sbci r17, 0xa8        ; Subtract Immediate with Carry SBI
13830:	12-79       	andi r17, 0x92        ; Logical AND with Immediate
13832:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
13834:	80-0F       	add r24, r16          ; Add without Carry
13836:	17-D0       	rcall .+46            ; Relative Call to Subroutine
13838:	1B-4A       	sbci r17, 0xab        ; Subtract Immediate with Carry SBI
1383A:	11-78       	andi r17, 0x81        ; Logical AND with Immediate
1383C:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1383E:	19-4A       	sbci r17, 0xa9        ; Subtract Immediate with Carry SBI
13840:	12-78       	andi r17, 0x82        ; Logical AND with Immediate
13842:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
13844:	91-42       	sbci r25, 0x21        ; Subtract Immediate with Carry SBI
13846:	03-D1       	rcall .+518           ; Relative Call to Subroutine
13848:	6C-21       	and r22, r12          ; Logical AND
1384A:	11-4A       	sbci r17, 0xa1        ; Subtract Immediate with Carry SBI
1384C:	D1-70       	andi r29, 0x01        ; Logical AND with Immediate
1384E:	0B-E0       	ldi r16, 0x0b         ; Load Immediate
13850:	01-32       	cpi r16, 0x21         ; Compare with Immediate
13852:	28-2A       	or r2, r24            ; Logical OR
13854:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
13856:	00-22       	and r0, r16           ; Logical AND
13858:	14-49       	sbci r17, 0x94        ; Subtract Immediate with Carry SBI
1385A:	88-5C       	subi r24, 0xc8        ; Subtract Immediate
1385C:	C0-B2       	in r12, 0x10          ; Load an I/O Location to Register
1385E:	0C-49       	sbci r16, 0x9c        ; Subtract Immediate with Carry SBI
13860:	C8-71       	andi r28, 0x18        ; Logical AND with Immediate
13862:	D2-B2       	in r13, 0x12          ; Load an I/O Location to Register
13864:	0F-49       	sbci r16, 0x9f        ; Subtract Immediate with Carry SBI
13866:	0A-70       	andi r16, 0x0a        ; Logical AND with Immediate
13868:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1386A:	40-0F       	add r20, r16          ; Add without Carry
1386C:	0E-D0       	rcall .+28            ; Relative Call to Subroutine
1386E:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
13870:	1B-79       	andi r17, 0x9b        ; Logical AND with Immediate
13872:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
13874:	40-0F       	add r20, r16          ; Add without Carry
13876:	09-D0       	rcall .+18            ; Relative Call to Subroutine
13878:	00-22       	and r0, r16           ; Logical AND
1387A:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
1387C:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
1387E:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
13880:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
13882:	03-B1       	in r16, 0x03          ; Load an I/O Location to Register
13884:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
13886:	2C-22       	and r2, r28           ; Logical AND
13888:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
1388A:	DA-70       	andi r29, 0x0a        ; Logical AND with Immediate
1388C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1388E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13890:	00-C0       	rjmp .+0              ; Relative Jump
13892:	06-40       	sbci r16, 0x06        ; Subtract Immediate with Carry SBI
13894:	E0-02       	muls r30, r16         ; Multiply Signed
13896:	00-20       	and r0, r0            ; Logical AND
13898:	75-02       	muls r23, r21         ; Multiply Signed
1389A:	00-20       	and r0, r0            ; Logical AND
1389C:	A0-02       	muls r26, r16         ; Multiply Signed
1389E:	00-20       	and r0, r0            ; Logical AND
138A0:	70-02       	muls r23, r16         ; Multiply Signed
138A2:	00-20       	and r0, r0            ; Logical AND
138A4:	E1-02       	muls r30, r17         ; Multiply Signed
138A6:	00-20       	and r0, r0            ; Logical AND
138A8:	E8-02       	muls r30, r24         ; Multiply Signed
138AA:	00-20       	and r0, r0            ; Logical AND
138AC:	78-02       	muls r23, r24         ; Multiply Signed
138AE:	00-20       	and r0, r0            ; Logical AND
138B0:	74-02       	muls r23, r20         ; Multiply Signed
138B2:	00-20       	and r0, r0            ; Logical AND
138B4:	E4-02       	muls r30, r20         ; Multiply Signed
138B6:	00-20       	and r0, r0            ; Logical AND
138B8:	00-B5       	in r16, 0x20          ; Load an I/O Location to Register
138BA:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
138BC:	72-B6       	in r7, 0x32           ; Load an I/O Location to Register
138BE:	1B-4B       	sbci r17, 0xbb        ; Subtract Immediate with Carry SBI
138C0:	70-22       	and r7, r16           ; Logical AND
138C2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
138C4:	41-21       	and r20, r1           ; Logical AND
138C6:	1A-4A       	sbci r17, 0xaa        ; Subtract Immediate with Carry SBI
138C8:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
138CA:	0F-21       	and r16, r15          ; Logical AND
138CC:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
138CE:	11-70       	andi r17, 0x01        ; Logical AND with Immediate
138D0:	80-22       	and r8, r16           ; Logical AND
138D2:	1A-70       	andi r17, 0x0a        ; Logical AND with Immediate
138D4:	1A-46       	sbci r17, 0x6a        ; Subtract Immediate with Carry SBI
138D6:	13-78       	andi r17, 0x83        ; Logical AND with Immediate
138D8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
138DA:	80-0F       	add r24, r16          ; Add without Carry
138DC:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
138DE:	15-4B       	sbci r17, 0xb5        ; Subtract Immediate with Carry SBI
138E0:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
138E2:	62-B6       	in r6, 0x32           ; Load an I/O Location to Register
138E4:	14-4B       	sbci r17, 0xb4        ; Subtract Immediate with Carry SBI
138E6:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
138E8:	9C-BF       	out 0x3c, r25         ; Store Register to I/O Location
138EA:	00-EB       	ldi r16, 0xb0         ; Load Immediate
138EC:	80-00       	.data 0x0080          ; Binary data
138EE:	40-00       	.data 0x0040          ; Binary data
138F0:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
138F2:	0A-22       	and r0, r26           ; Logical AND
138F4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
138F6:	88-F9       	.data 0xf988          ; Binary data
138F8:	9D-F8       	.data 0xf89d          ; Binary data
138FA:	04-30       	cpi r16, 0x04         ; Compare with Immediate
138FC:	7B-B9       	out 0x0b, r23         ; Store Register to I/O Location
138FE:	08-E0       	ldi r16, 0x08         ; Load Immediate
13900:	01-A9       	std Y+49, r16         ; Store Indirect From Register to Data Space
13902:	59-5C       	subi r21, 0xc9        ; Subtract Immediate
13904:	31-B1       	in r19, 0x01          ; Load an I/O Location to Register
13906:	91-80       	ldd r9, Y+1           ; Load Indirect from Data Space to Register
13908:	02-32       	cpi r16, 0x22         ; Compare with Immediate
1390A:	01-33       	cpi r16, 0x31         ; Compare with Immediate
1390C:	0A-2B       	or r16, r26           ; Logical OR
1390E:	F7-D1       	rcall .+1006          ; Relative Call to Subroutine
13910:	00-E0       	ldi r16, 0x00         ; Load Immediate
13912:	00-23       	and r16, r16          ; Logical AND
13914:	01-33       	cpi r16, 0x31         ; Compare with Immediate
13916:	5B-00       	.data 0x005b          ; Binary data
13918:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
1391A:	13-70       	andi r17, 0x03        ; Logical AND with Immediate
1391C:	03-E0       	ldi r16, 0x03         ; Load Immediate
1391E:	07-4A       	sbci r16, 0xa7        ; Subtract Immediate with Carry SBI
13920:	53-80       	ldd r5, Y+3           ; Load Indirect from Data Space to Register
13922:	01-23       	and r16, r17          ; Logical AND
13924:	EC-E7       	ldi r30, 0x7c         ; Load Immediate
13926:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
13928:	5D-F8       	.data 0xf85d          ; Binary data
1392A:	04-FB       	bst r16, 4            ; Bit Store from Bit in Register to T Flag in SREG
1392C:	00-00       	nop                   ; No Operation
1392E:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
13930:	07-00       	.data 0x0007          ; Binary data
13932:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
13934:	08-00       	.data 0x0008          ; Binary data
13936:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
13938:	7F-96       	adiw r30, 0x1f        ; Add Immediate to Word
1393A:	98-00       	.data 0x0098          ; Binary data
1393C:	84-94       	.data 0x9484          ; Binary data
1393E:	FF-1F       	adc r31, r31          ; Add with Carry
13940:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13942:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13944:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
13946:	00-22       	and r0, r16           ; Logical AND
13948:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
1394A:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1394C:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
1394E:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
13950:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
13952:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
13954:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
13956:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13958:	EC-02       	muls r30, r28         ; Multiply Signed
1395A:	00-20       	and r0, r0            ; Logical AND
1395C:	70-83       	st Z, r23             ; Store Indirect From Register to Data Space
1395E:	01-00       	.data 0x0001          ; Binary data
13960:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13962:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
13964:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
13966:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
13968:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1396A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
1396C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1396E:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
13970:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
13972:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
13974:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
13976:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13978:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
1397A:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
1397C:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1397E:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
13980:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
13982:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13984:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13986:	03-68       	ori r16, 0x83         ; Logical OR with Immediate
13988:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
1398A:	C9-B2       	in r12, 0x19          ; Load an I/O Location to Register
1398C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1398E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13990:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13992:	4B-08       	sbc r4, r11           ; Subtract with Carry
13994:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
13996:	B7-60       	ori r27, 0x07         ; Logical OR with Immediate
13998:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
1399A:	58-40       	sbci r21, 0x08        ; Subtract Immediate with Carry SBI
1399C:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
1399E:	F1-F0       	brbs 1, .+60          ; Branch if Bit in SREG is Set
139A0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139A2:	E8-FC       	.data 0xfce8          ; Binary data
139A4:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
139A6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
139A8:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
139AA:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
139AC:	4B-08       	sbc r4, r11           ; Subtract with Carry
139AE:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
139B0:	B7-60       	ori r27, 0x07         ; Logical OR with Immediate
139B2:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
139B4:	58-40       	sbci r21, 0x08        ; Subtract Immediate with Carry SBI
139B6:	B0-FB       	bst r27, 0            ; Bit Store from Bit in Register to T Flag in SREG
139B8:	F1-F0       	brbs 1, .+60          ; Branch if Bit in SREG is Set
139BA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139BC:	DB-FC       	.data 0xfcdb          ; Binary data
139BE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
139C0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139C2:	1A-FD       	.data 0xfd1a          ; Binary data
139C4:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
139C6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
139C8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
139CA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139CC:	45-FD       	sbrc r20, 5           ; Skip if Bit in Register is Cleared
139CE:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
139D0:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
139D2:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
139D4:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139D6:	7A-FD       	.data 0xfd7a          ; Binary data
139D8:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
139DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
139DC:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
139DE:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
139E0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139E2:	BC-FD       	.data 0xfdbc          ; Binary data
139E4:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
139E6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
139E8:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
139EA:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
139EC:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
139EE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139F0:	89-FD       	.data 0xfd89          ; Binary data
139F2:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
139F4:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
139F6:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
139F8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
139FA:	B2-FD       	sbrc r27, 2           ; Skip if Bit in Register is Cleared
139FC:	00-30       	cpi r16, 0x00         ; Compare with Immediate
139FE:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
13A00:	01-20       	and r0, r1            ; Logical AND
13A02:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A04:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A06:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
13A08:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A0A:	CC-FD       	.data 0xfdcc          ; Binary data
13A0C:	00-30       	cpi r16, 0x00         ; Compare with Immediate
13A0E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
13A10:	01-20       	and r0, r1            ; Logical AND
13A12:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A14:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A16:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A18:	65-FE       	sbrs r6, 5            ; Skip if Bit in Register is Set
13A1A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A1C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A1E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A20:	AB-FE       	.data 0xfeab          ; Binary data
13A22:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A24:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A26:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A28:	6D-FE       	.data 0xfe6d          ; Binary data
13A2A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A2C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A2E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A30:	37-FE       	sbrs r3, 7            ; Skip if Bit in Register is Set
13A32:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A34:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A36:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A38:	B9-FE       	.data 0xfeb9          ; Binary data
13A3A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A3C:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A3E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A40:	3F-FE       	.data 0xfe3f          ; Binary data
13A42:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A44:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A46:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
13A48:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A4A:	CE-FD       	.data 0xfdce          ; Binary data
13A4C:	01-20       	and r0, r1            ; Logical AND
13A4E:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A50:	08-B5       	in r16, 0x28          ; Load an I/O Location to Register
13A52:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
13A54:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A56:	C8-FD       	.data 0xfdc8          ; Binary data
13A58:	01-20       	and r0, r1            ; Logical AND
13A5A:	08-BD       	out 0x28, r16         ; Store Register to I/O Location
13A5C:	10-B5       	in r17, 0x20          ; Load an I/O Location to Register
13A5E:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
13A60:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
13A62:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
13A64:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A66:	10-FE       	sbrs r1, 0            ; Skip if Bit in Register is Set
13A68:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
13A6A:	10-BD       	out 0x20, r17         ; Store Register to I/O Location
13A6C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
13A6E:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
13A70:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
13A72:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
13A74:	CB-FC       	.data 0xfccb          ; Binary data
13A76:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
13A78:	28-46       	sbci r18, 0x68        ; Subtract Immediate with Carry SBI
13A7A:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
13A7C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13A7E:	04-FE       	sbrs r0, 4            ; Skip if Bit in Register is Set
13A80:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
13A82:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
13A84:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13A86:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13A88:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
13A8A:	00-22       	and r0, r16           ; Logical AND
13A8C:	1A-71       	andi r17, 0x1a        ; Logical AND with Immediate
13A8E:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
13A90:	7A-71       	andi r23, 0x1a        ; Logical AND with Immediate
13A92:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
13A94:	1A-73       	andi r17, 0x3a        ; Logical AND with Immediate
13A96:	02-4A       	sbci r16, 0xa2        ; Subtract Immediate with Carry SBI
13A98:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
13A9A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13A9C:	FC-02       	muls r31, r28         ; Multiply Signed
13A9E:	00-20       	and r0, r0            ; Logical AND
13AA0:	D0-83       	st Z, r29             ; Store Indirect From Register to Data Space
13AA2:	01-00       	.data 0x0001          ; Binary data
13AA4:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
13AA6:	1A-4E       	sbci r17, 0xea        ; Subtract Immediate with Carry SBI
13AA8:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
13AAA:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
13AAC:	B4-42       	sbci r27, 0x24        ; Subtract Immediate with Carry SBI
13AAE:	86-B0       	in r8, 0x06           ; Load an I/O Location to Register
13AB0:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
13AB2:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
13AB4:	19-DD       	rcall .+6706          ; Relative Call to Subroutine
13AB6:	17-4D       	sbci r17, 0xd7        ; Subtract Immediate with Carry SBI
13AB8:	AC-42       	sbci r26, 0x2c        ; Subtract Immediate with Carry SBI
13ABA:	03-DD       	rcall .+6662          ; Relative Call to Subroutine
13ABC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13ABE:	FA-FE       	.data 0xfefa          ; Binary data
13AC0:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
13AC2:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
13AC4:	02-AA       	std Y+50, r0          ; Store Indirect From Register to Data Space
13AC6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13AC8:	13-FC       	sbrc r1, 3            ; Skip if Bit in Register is Cleared
13ACA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13ACC:	03-04       	cpc r0, r3            ; Compare with Carry
13ACE:	01-2C       	mov r0, r1            ; Copy Register
13AD0:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13AD2:	02-01       	movw r0, r4           ; Copy Register Word
13AD4:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13AD6:	04-23       	and r16, r20          ; Logical AND
13AD8:	13-D0       	rcall .+38            ; Relative Call to Subroutine
13ADA:	02-2C       	mov r0, r2            ; Copy Register
13ADC:	0B-D0       	rcall .+22            ; Relative Call to Subroutine
13ADE:	A4-B1       	in r26, 0x04          ; Load an I/O Location to Register
13AE0:	01-24       	clr r1                ; Clear Register
13AE2:	00-94       	com r0                ; One's Complement
13AE4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13AE6:	E4-FB       	bst r30, 4            ; Bit Store from Bit in Register to T Flag in SREG
13AE8:	EA-E7       	ldi r30, 0x7a         ; Load Immediate
13AEA:	00-22       	and r0, r16           ; Logical AND
13AEC:	00-23       	and r16, r16          ; Logical AND
13AEE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13AF0:	DF-FE       	.data 0xfedf          ; Binary data
13AF2:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
13AF4:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
13AF6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13AF8:	DB-FE       	.data 0xfedb          ; Binary data
13AFA:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
13AFC:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
13AFE:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
13B00:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
13B02:	00-94       	com r0                ; One's Complement
13B04:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13B06:	D4-FB       	bst r29, 4            ; Bit Store from Bit in Register to T Flag in SREG
13B08:	F7-E7       	ldi r31, 0x77         ; Load Immediate
13B0A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13B0C:	D1-FE       	sbrs r13, 1           ; Skip if Bit in Register is Set
13B0E:	D7-E7       	ldi r29, 0x77         ; Load Immediate
13B10:	FB-21       	and r31, r11          ; Logical AND
13B12:	E9-3F       	cpi r30, 0xf9         ; Compare with Immediate
13B14:	FF-FF       	.data 0xffff          ; Binary data
13B16:	EF-7F       	andi r30, 0xff        ; Logical AND with Immediate
13B18:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
13B1A:	F8-4F       	sbci r31, 0xf8        ; Subtract Immediate with Carry SBI
13B1C:	C1-F3       	brbs 1, .-16          ; Branch if Bit in SREG is Set
13B1E:	0A-57       	subi r16, 0x7a        ; Subtract Immediate
13B20:	A7-F2       	brbs 7, .-88          ; Branch if Bit in SREG is Set
13B22:	FF-36       	cpi r31, 0x6f         ; Compare with Immediate
13B24:	13-2E       	mov r1, r19           ; Copy Register
13B26:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
13B28:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
13B2A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
13B2C:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
13B2E:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
13B30:	8A-46       	sbci r24, 0x6a        ; Subtract Immediate with Carry SBI
13B32:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
13B34:	1C-DC       	rcall .+6200          ; Relative Call to Subroutine
13B36:	00-2E       	mov r0, r16           ; Copy Register
13B38:	40-DB       	rcall .+5760          ; Relative Call to Subroutine
13B3A:	3D-4F       	sbci r19, 0xfd        ; Subtract Immediate with Carry SBI
13B3C:	37-41       	sbci r19, 0x17        ; Subtract Immediate with Carry SBI
13B3E:	07-EA       	ldi r16, 0xa7         ; Load Immediate
13B40:	01-0C       	add r0, r1            ; Add without Carry
13B42:	5C-EA       	ldi r21, 0xac         ; Load Immediate
13B44:	00-0C       	add r0, r0            ; Add without Carry
13B46:	18-D0       	rcall .+48            ; Relative Call to Subroutine
13B48:	37-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
13B4A:	D3-E9       	ldi r29, 0x93         ; Load Immediate
13B4C:	00-23       	and r16, r16          ; Logical AND
13B4E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13B50:	B3-FE       	sbrs r11, 3           ; Skip if Bit in Register is Set
13B52:	00-22       	and r0, r16           ; Logical AND
13B54:	00-23       	and r16, r16          ; Logical AND
13B56:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13B58:	F1-FA       	bst r15, 1            ; Bit Store from Bit in Register to T Flag in SREG
13B5A:	28-B1       	in r18, 0x08          ; Load an I/O Location to Register
13B5C:	00-2D       	mov r16, r0           ; Copy Register
13B5E:	42-DB       	rcall .+5764          ; Relative Call to Subroutine
13B60:	2A-EA       	ldi r18, 0xaa         ; Load Immediate
13B62:	07-09       	sbc r16, r7           ; Subtract with Carry
13B64:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13B66:	00-08       	sbc r0, r0            ; Subtract with Carry
13B68:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
13B6A:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
13B6C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13B6E:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
13B70:	33-2E       	mov r3, r19           ; Copy Register
13B72:	06-DD       	rcall .+6668          ; Relative Call to Subroutine
13B74:	B6-F5       	brbc 6, .+108         ; Branch if Bit in SREG is Cleared
13B76:	80-6F       	ori r24, 0xf0         ; Logical OR with Immediate
13B78:	31-D0       	rcall .+98            ; Relative Call to Subroutine
13B7A:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
13B7C:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
13B7E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13B80:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
13B82:	A7-F2       	brbs 7, .-88          ; Branch if Bit in SREG is Set
13B84:	13-4C       	sbci r17, 0xc3        ; Subtract Immediate with Carry SBI
13B86:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13B88:	FF-3B       	cpi r31, 0xbf         ; Compare with Immediate
13B8A:	2B-FA       	.data 0xfa2b          ; Binary data
13B8C:	0C-FB       	.data 0xfb0c          ; Binary data
13B8E:	1B-EA       	ldi r17, 0xab         ; Load Immediate
13B90:	00-0F       	add r16, r16          ; Add without Carry
13B92:	F2-D0       	rcall .+484           ; Relative Call to Subroutine
13B94:	24-A3       	std Y+36, r18         ; Store Indirect From Register to Data Space
13B96:	D3-E9       	ldi r29, 0x93         ; Load Immediate
13B98:	00-23       	and r16, r16          ; Logical AND
13B9A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13B9C:	8D-FE       	.data 0xfe8d          ; Binary data
13B9E:	00-22       	and r0, r16           ; Logical AND
13BA0:	00-23       	and r16, r16          ; Logical AND
13BA2:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13BA4:	CB-FA       	.data 0xfacb          ; Binary data
13BA6:	00-28       	or r0, r0             ; Logical OR
13BA8:	DE-D0       	rcall .+444           ; Relative Call to Subroutine
13BAA:	00-2D       	mov r16, r0           ; Copy Register
13BAC:	22-DB       	rcall .+5700          ; Relative Call to Subroutine
13BAE:	28-EA       	ldi r18, 0xa8         ; Load Immediate
13BB0:	0B-08       	sbc r0, r11           ; Subtract with Carry
13BB2:	D1-46       	sbci r29, 0x61        ; Subtract Immediate with Carry SBI
13BB4:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
13BB6:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
13BB8:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13BBA:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
13BBC:	1A-A3       	std Y+34, r17         ; Store Indirect From Register to Data Space
13BBE:	D3-E9       	ldi r29, 0x93         ; Load Immediate
13BC0:	00-23       	and r16, r16          ; Logical AND
13BC2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13BC4:	79-FE       	.data 0xfe79          ; Binary data
13BC6:	00-22       	and r0, r16           ; Logical AND
13BC8:	00-23       	and r16, r16          ; Logical AND
13BCA:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13BCC:	B7-FA       	bst r11, 7            ; Bit Store from Bit in Register to T Flag in SREG
13BCE:	00-28       	or r0, r0             ; Logical OR
13BD0:	CA-D0       	rcall .+404           ; Relative Call to Subroutine
13BD2:	00-2D       	mov r16, r0           ; Copy Register
13BD4:	1C-DB       	rcall .+5688          ; Relative Call to Subroutine
13BD6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13BD8:	00-08       	sbc r0, r0            ; Subtract with Carry
13BDA:	C1-46       	sbci r28, 0x61        ; Subtract Immediate with Carry SBI
13BDC:	C4-E7       	ldi r28, 0x74         ; Load Immediate
13BDE:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13BE0:	6B-FE       	.data 0xfe6b          ; Binary data
13BE2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13BE4:	F8-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
13BE6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
13BE8:	80-1A       	sub r8, r16           ; Subtract Without Carry
13BEA:	4A-FA       	.data 0xfa4a          ; Binary data
13BEC:	06-F6       	brbc 6, .-128         ; Branch if Bit in SREG is Cleared
13BEE:	06-EB       	ldi r16, 0xb6         ; Load Immediate
13BF0:	05-0A       	sbc r0, r21           ; Subtract with Carry
13BF2:	B5-E7       	ldi r27, 0x75         ; Load Immediate
13BF4:	14-2E       	mov r1, r20           ; Copy Register
13BF6:	14-D0       	rcall .+40            ; Relative Call to Subroutine
13BF8:	C7-F5       	brbc 7, .+112         ; Branch if Bit in SREG is Cleared
13BFA:	86-67       	ori r24, 0x76         ; Logical OR with Immediate
13BFC:	01-23       	and r16, r17          ; Logical AND
13BFE:	03-37       	cpi r16, 0x73         ; Compare with Immediate
13C00:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
13C02:	07-F7       	brbc 7, .-64          ; Branch if Bit in SREG is Cleared
13C04:	17-EB       	ldi r17, 0xb7         ; Load Immediate
13C06:	04-08       	sbc r0, r4            ; Subtract with Carry
13C08:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
13C0A:	05-EB       	ldi r16, 0xb5         ; Load Immediate
13C0C:	03-0A       	sbc r0, r19           ; Subtract with Carry
13C0E:	CE-E7       	ldi r28, 0x7e         ; Load Immediate
13C10:	25-F0       	brbs 5, .+8           ; Branch if Bit in SREG is Set
13C12:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
13C14:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
13C16:	22-43       	sbci r18, 0x32        ; Subtract Immediate with Carry SBI
13C18:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
13C1A:	99-46       	sbci r25, 0x69        ; Subtract Immediate with Carry SBI
13C1C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13C1E:	00-08       	sbc r0, r0            ; Subtract with Carry
13C20:	A2-E7       	ldi r26, 0x72         ; Load Immediate
13C22:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
13C24:	01-0A       	sbc r0, r17           ; Subtract with Carry
13C26:	C2-E7       	ldi r28, 0x72         ; Load Immediate
13C28:	9C-75       	andi r25, 0x5c        ; Logical AND with Immediate
13C2A:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
13C2C:	3C-E4       	ldi r19, 0x4c         ; Load Immediate
13C2E:	37-7E       	andi r19, 0xe7        ; Logical AND with Immediate
13C30:	FF-FF       	.data 0xffff          ; Binary data
13C32:	0F-00       	.data 0x000f          ; Binary data
13C34:	00-00       	nop                   ; No Operation
13C36:	F0-BF       	out 0x30, r31         ; Store Register to I/O Location
13C38:	31-F0       	brbs 1, .+12          ; Branch if Bit in SREG is Set
13C3A:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
13C3C:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
13C3E:	08-D0       	rcall .+16            ; Relative Call to Subroutine
13C40:	0F-4A       	sbci r16, 0xaf        ; Subtract Immediate with Carry SBI
13C42:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
13C44:	80-14       	cp r8, r0             ; Compare
13C46:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
13C48:	0A-D8       	rcall .+4116          ; Relative Call to Subroutine
13C4A:	04-20       	and r0, r4            ; Logical AND
13C4C:	5D-F8       	.data 0xf85d          ; Binary data
13C4E:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
13C50:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13C52:	00-28       	or r0, r0             ; Logical OR
13C54:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
13C56:	02-20       	and r0, r2            ; Logical AND
13C58:	03-20       	and r0, r3            ; Logical AND
13C5A:	5D-F8       	.data 0xf85d          ; Binary data
13C5C:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
13C5E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
13C60:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
13C62:	80-1F       	adc r24, r16          ; Add with Carry
13C64:	01-D2       	rcall .+1026          ; Relative Call to Subroutine
13C66:	03-20       	and r0, r3            ; Logical AND
13C68:	F7-E7       	ldi r31, 0x77         ; Load Immediate
13C6A:	06-4A       	sbci r16, 0xa6        ; Subtract Immediate with Carry SBI
13C6C:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
13C6E:	01-D0       	rcall .+2             ; Relative Call to Subroutine
13C70:	00-20       	and r0, r0            ; Logical AND
13C72:	F2-E7       	ldi r31, 0x72         ; Load Immediate
13C74:	D0-F1       	brbs 0, .+116         ; Branch if Bit in SREG is Set
13C76:	01-00       	.data 0x0001          ; Binary data
13C78:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
13C7A:	00-20       	and r0, r0            ; Logical AND
13C7C:	ED-E7       	ldi r30, 0x7d         ; Load Immediate
13C7E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13C80:	FF-FF       	.data 0xffff          ; Binary data
13C82:	DF-7F       	andi r29, 0xff        ; Logical AND with Immediate
13C84:	00-00       	nop                   ; No Operation
13C86:	F0-7F       	andi r31, 0xf0        ; Logical AND with Immediate
13C88:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
13C8A:	22-4E       	sbci r18, 0xe2        ; Subtract Immediate with Carry SBI
13C8C:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
13C8E:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
13C90:	B4-42       	sbci r27, 0x24        ; Subtract Immediate with Carry SBI
13C92:	86-B0       	in r8, 0x06           ; Load an I/O Location to Register
13C94:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
13C96:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
13C98:	1A-DD       	rcall .+6708          ; Relative Call to Subroutine
13C9A:	1F-4D       	sbci r17, 0xdf        ; Subtract Immediate with Carry SBI
13C9C:	AC-42       	sbci r26, 0x2c        ; Subtract Immediate with Carry SBI
13C9E:	03-DD       	rcall .+6662          ; Relative Call to Subroutine
13CA0:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13CA2:	08-FE       	.data 0xfe08          ; Binary data
13CA4:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
13CA6:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
13CA8:	02-AA       	std Y+50, r0          ; Store Indirect From Register to Data Space
13CAA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13CAC:	21-FB       	bst r18, 1            ; Bit Store from Bit in Register to T Flag in SREG
13CAE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13CB0:	03-00       	.data 0x0003          ; Binary data
13CB2:	01-28       	or r0, r1             ; Logical OR
13CB4:	1D-D0       	rcall .+58            ; Relative Call to Subroutine
13CB6:	02-28       	or r0, r2             ; Logical OR
13CB8:	12-D0       	rcall .+36            ; Relative Call to Subroutine
13CBA:	08-B3       	in r16, 0x18          ; Load an I/O Location to Register
13CBC:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13CBE:	02-01       	movw r0, r4           ; Copy Register Word
13CC0:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13CC2:	04-23       	and r16, r20          ; Logical AND
13CC4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13CC6:	F4-FD       	sbrc r31, 4           ; Skip if Bit in Register is Cleared
13CC8:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
13CCA:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
13CCC:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
13CCE:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
13CD0:	00-23       	and r16, r16          ; Logical AND
13CD2:	00-93-00-22 	sts 0x2200, r16       ; Store Direct to Data Space
13CD6:	00-23       	and r16, r16          ; Logical AND
13CD8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13CDA:	EA-FA       	.data 0xfaea          ; Binary data
13CDC:	06-B0       	in r0, 0x06           ; Load an I/O Location to Register
13CDE:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
13CE0:	01-24       	clr r1                ; Clear Register
13CE2:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13CE4:	02-01       	movw r0, r4           ; Copy Register Word
13CE6:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13CE8:	04-23       	and r16, r20          ; Logical AND
13CEA:	00-94       	com r0                ; One's Complement
13CEC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13CEE:	E0-FA       	bst r14, 0            ; Bit Store from Bit in Register to T Flag in SREG
13CF0:	EA-E7       	ldi r30, 0x7a         ; Load Immediate
13CF2:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13CF4:	02-01       	movw r0, r4           ; Copy Register Word
13CF6:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13CF8:	04-23       	and r16, r20          ; Logical AND
13CFA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13CFC:	D9-FD       	.data 0xfdd9          ; Binary data
13CFE:	D1-E7       	ldi r29, 0x71         ; Load Immediate
13D00:	01-24       	clr r1                ; Clear Register
13D02:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13D04:	02-01       	movw r0, r4           ; Copy Register Word
13D06:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13D08:	04-23       	and r16, r20          ; Logical AND
13D0A:	00-94       	com r0                ; One's Complement
13D0C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13D0E:	D0-FA       	bst r13, 0            ; Bit Store from Bit in Register to T Flag in SREG
13D10:	C8-E7       	ldi r28, 0x78         ; Load Immediate
13D12:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
13D14:	FB-21       	and r31, r11          ; Logical AND
13D16:	E9-3F       	cpi r30, 0xf9         ; Compare with Immediate
13D18:	FF-FF       	.data 0xffff          ; Binary data
13D1A:	EF-7F       	andi r30, 0xff        ; Logical AND with Immediate
13D1C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13D1E:	B0-B8       	out 0x00, r11         ; Store Register to I/O Location
13D20:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
13D22:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
13D24:	DF-F8       	.data 0xf8df          ; Binary data
13D26:	A8-A0       	ldd r10, Y+32         ; Load Indirect from Data Space to Register
13D28:	8A-B0       	in r8, 0x0a           ; Load an I/O Location to Register
13D2A:	1F-46       	sbci r17, 0x6f        ; Subtract Immediate with Carry SBI
13D2C:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
13D2E:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
13D30:	16-46       	sbci r17, 0x66        ; Subtract Immediate with Carry SBI
13D32:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13D34:	9D-F9       	.data 0xf99d          ; Binary data
13D36:	9A-F9       	.data 0xf99a          ; Binary data
13D38:	00-30       	cpi r16, 0x00         ; Compare with Immediate
13D3A:	01-33       	cpi r16, 0x31         ; Compare with Immediate
13D3C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
13D3E:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
13D40:	04-D0       	rcall .+8             ; Relative Call to Subroutine
13D42:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
13D44:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
13D46:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13D48:	77-FF       	sbrs r23, 7           ; Skip if Bit in Register is Set
13D4A:	20-B9       	out 0x00, r18         ; Store Register to I/O Location
13D4C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
13D4E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
13D50:	0A-B0       	in r0, 0x0a           ; Load an I/O Location to Register
13D52:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13D54:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
13D56:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
13D58:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
13D5A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13D5C:	6D-FF       	.data 0xff6d          ; Binary data
13D5E:	00-28       	or r0, r0             ; Logical OR
13D60:	F4-D0       	rcall .+488           ; Relative Call to Subroutine
13D62:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
13D64:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
13D66:	00-22       	and r0, r16           ; Logical AND
13D68:	00-23       	and r16, r16          ; Logical AND
13D6A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13D6C:	BF-F9       	.data 0xf9bf          ; Binary data
13D6E:	00-28       	or r0, r0             ; Logical OR
13D70:	EC-D0       	rcall .+472           ; Relative Call to Subroutine
13D72:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
13D74:	9A-F8       	.data 0xf89a          ; Binary data
13D76:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
13D78:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
13D7A:	01-22       	and r0, r17           ; Logical AND
13D7C:	00-23       	and r16, r16          ; Logical AND
13D7E:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13D80:	02-89       	std Y+18, r16         ; Store Indirect From Register to Data Space
13D82:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13D84:	04-67       	ori r16, 0x74         ; Logical OR with Immediate
13D86:	00-92-08-93 	sts 0x9308, r0        ; Store Direct to Data Space
13D8A:	94-B1       	in r25, 0x04          ; Load an I/O Location to Register
13D8C:	00-20       	and r0, r0            ; Logical AND
13D8E:	00-21       	and r16, r0           ; Logical AND
13D90:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
13D92:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
13D94:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13D96:	6C-F8       	.data 0xf86c          ; Binary data
13D98:	02-2C       	mov r0, r2            ; Copy Register
13D9A:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13D9C:	06-01       	movw r0, r12          ; Copy Register Word
13D9E:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
13DA0:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13DA2:	98-FD       	.data 0xfd98          ; Binary data
13DA4:	21-23       	and r18, r17          ; Logical AND
13DA6:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
13DA8:	08-9B       	sbis 0x01, 0          ; Skip if Bit in I/O Register is Set
13DAA:	53-B9       	out 0x03, r21         ; Store Register to I/O Location
13DAC:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13DAE:	06-01       	movw r0, r12          ; Copy Register Word
13DB0:	CE-E7       	ldi r28, 0x7e         ; Load Immediate
13DB2:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13DB4:	06-89       	std Y+22, r16         ; Store Indirect From Register to Data Space
13DB6:	68-46       	sbci r22, 0x68        ; Subtract Immediate with Carry SBI
13DB8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13DBA:	DE-FC       	.data 0xfcde          ; Binary data
13DBC:	00-28       	or r0, r0             ; Logical OR
13DBE:	F3-D1       	rcall .+998           ; Relative Call to Subroutine
13DC0:	EE-E7       	ldi r30, 0x7e         ; Load Immediate
13DC2:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13DC4:	87-FD       	sbrc r24, 7           ; Skip if Bit in Register is Cleared
13DC6:	08-9B       	sbis 0x01, 0          ; Skip if Bit in I/O Register is Set
13DC8:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
13DCA:	EF-E7       	ldi r30, 0x7f         ; Load Immediate
13DCC:	28-84       	std Y+8, r2           ; Store Indirect From Register to Data Space
13DCE:	01-00       	.data 0x0001          ; Binary data
13DD0:	9C-94-FF-1F 	jmp 0x243ffe          ; Jump
13DD4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
13DD6:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
13DD8:	DF-F8       	.data 0xf8df          ; Binary data
13DDA:	A0-A0       	ldd r10, Y+32         ; Load Indirect from Data Space to Register
13DDC:	8A-B0       	in r8, 0x0a           ; Load an I/O Location to Register
13DDE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
13DE0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
13DE2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
13DE4:	A5-FC       	sbrc r10, 5           ; Skip if Bit in Register is Cleared
13DE6:	9A-F9       	.data 0xf99a          ; Binary data
13DE8:	00-30       	cpi r16, 0x00         ; Compare with Immediate
13DEA:	01-33       	cpi r16, 0x31         ; Compare with Immediate
13DEC:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
13DEE:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
13DF0:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
13DF2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
13DF4:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
13DF6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
13DF8:	1F-FF       	.data 0xff1f          ; Binary data
13DFA:	50-B1       	in r21, 0x00          ; Load an I/O Location to Register
13DFC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13DFE:	00-08       	sbc r0, r0            ; Subtract with Carry
13E00:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13E02:	00-09       	sbc r16, r0           ; Subtract with Carry
13E04:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
13E06:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
13E08:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
13E0A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
13E0C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13E0E:	78-F9       	.data 0xf978          ; Binary data
13E10:	20-B9       	out 0x00, r18         ; Store Register to I/O Location
13E12:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
13E14:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
13E16:	0A-B0       	in r0, 0x0a           ; Load an I/O Location to Register
13E18:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13E1A:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
13E1C:	16-4B       	sbci r17, 0xb6        ; Subtract Immediate with Carry SBI
13E1E:	9A-F8       	.data 0xf89a          ; Binary data
13E20:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
13E22:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
13E24:	01-22       	and r0, r17           ; Logical AND
13E26:	00-23       	and r16, r16          ; Logical AND
13E28:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13E2A:	04-45       	sbci r16, 0x54        ; Subtract Immediate with Carry SBI
13E2C:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13E2E:	02-45       	sbci r16, 0x52        ; Subtract Immediate with Carry SBI
13E30:	00-92-08-93 	sts 0x9308, r0        ; Store Direct to Data Space
13E34:	66-B9       	out 0x06, r22         ; Store Register to I/O Location
13E36:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13E38:	06-89       	std Y+22, r16         ; Store Indirect From Register to Data Space
13E3A:	68-46       	sbci r22, 0x68        ; Subtract Immediate with Carry SBI
13E3C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13E3E:	9C-FC       	.data 0xfc9c          ; Binary data
13E40:	80-B1       	in r24, 0x00          ; Load an I/O Location to Register
13E42:	08-9B       	sbis 0x01, 0          ; Skip if Bit in I/O Register is Set
13E44:	9B-B9       	out 0x0b, r25         ; Store Register to I/O Location
13E46:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13E48:	06-01       	movw r0, r12          ; Copy Register Word
13E4A:	0A-B0       	in r0, 0x0a           ; Load an I/O Location to Register
13E4C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13E4E:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
13E50:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
13E52:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
13E54:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
13E56:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
13E58:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13E5A:	0A-F8       	.data 0xf80a          ; Binary data
13E5C:	02-2E       	mov r0, r18           ; Copy Register
13E5E:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13E60:	06-01       	movw r0, r12          ; Copy Register Word
13E62:	EA-D1       	rcall .+980           ; Relative Call to Subroutine
13E64:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13E66:	36-FD       	sbrc r19, 6           ; Skip if Bit in Register is Cleared
13E68:	21-23       	and r18, r17          ; Logical AND
13E6A:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
13E6C:	E9-E7       	ldi r30, 0x79         ; Load Immediate
13E6E:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
13E70:	31-FD       	sbrc r19, 1           ; Skip if Bit in Register is Cleared
13E72:	08-9B       	sbis 0x01, 0          ; Skip if Bit in I/O Register is Set
13E74:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
13E76:	E6-E7       	ldi r30, 0x76         ; Load Immediate
13E78:	30-84       	std Y+8, r3           ; Store Indirect From Register to Data Space
13E7A:	01-00       	.data 0x0001          ; Binary data
13E7C:	9C-94-FF-1F 	jmp 0x243ffe          ; Jump
13E80:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
13E82:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
13E84:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
13E86:	00-09       	sbc r16, r0           ; Subtract with Carry
13E88:	49-EA       	ldi r20, 0xa9         ; Load Immediate
13E8A:	02-09       	sbc r16, r2           ; Subtract with Carry
13E8C:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
13E8E:	00-48       	sbci r16, 0x80        ; Subtract Immediate with Carry SBI
13E90:	DF-F8       	.data 0xf8df          ; Binary data
13E92:	D4-C1       	rjmp .+936            ; Relative Jump
13E94:	48-EA       	ldi r20, 0xa8         ; Load Immediate
13E96:	D9-79       	andi r29, 0x99        ; Logical AND with Immediate
13E98:	82-B0       	in r8, 0x02           ; Load an I/O Location to Register
13E9A:	E1-45       	sbci r30, 0x51        ; Subtract Immediate with Carry SBI
13E9C:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
13E9E:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
13EA0:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
13EA2:	00-01       	movw r0, r0           ; Copy Register Word
13EA4:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
13EA6:	47-D8       	rcall .+4238          ; Relative Call to Subroutine
13EA8:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
13EAA:	00-0A       	sbc r0, r16           ; Subtract with Carry
13EAC:	4A-EA       	ldi r20, 0xaa         ; Load Immediate
13EAE:	00-0A       	sbc r0, r16           ; Subtract with Carry
13EB0:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
13EB2:	00-49       	sbci r16, 0x90        ; Subtract Immediate with Carry SBI
13EB4:	49-EA       	ldi r20, 0xa9         ; Load Immediate
13EB6:	DA-7A       	andi r29, 0xaa        ; Logical AND with Immediate
13EB8:	E2-45       	sbci r30, 0x52        ; Subtract Immediate with Carry SBI
13EBA:	3D-D8       	rcall .+4218          ; Relative Call to Subroutine
13EBC:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
13EBE:	40-4C       	sbci r20, 0xc0        ; Subtract Immediate with Carry SBI
13EC0:	0C-F5       	brbc 4, .+66          ; Branch if Bit in SREG is Cleared
13EC2:	80-1C       	adc r8, r0            ; Add with Carry
13EC4:	5C-EA       	ldi r21, 0xac         ; Load Immediate
13EC6:	02-0C       	add r0, r2            ; Add without Carry
13EC8:	4C-D0       	rcall .+152           ; Relative Call to Subroutine
13ECA:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
13ECC:	A3-7A       	andi r26, 0xa3        ; Logical AND with Immediate
13ECE:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
13ED0:	02-0A       	sbc r0, r18           ; Subtract with Carry
13ED2:	4A-EA       	ldi r20, 0xaa         ; Load Immediate
13ED4:	D1-7A       	andi r29, 0xa1        ; Logical AND with Immediate
13ED6:	59-EA       	ldi r21, 0xa9         ; Load Immediate
13ED8:	00-01       	movw r0, r0           ; Copy Register Word
13EDA:	36-D0       	rcall .+108           ; Relative Call to Subroutine
13EDC:	58-EA       	ldi r21, 0xa8         ; Load Immediate
13EDE:	04-01       	movw r0, r8           ; Copy Register Word
13EE0:	3A-D0       	rcall .+116           ; Relative Call to Subroutine
13EE2:	61-49       	sbci r22, 0x91        ; Subtract Immediate with Carry SBI
13EE4:	88-45       	sbci r24, 0x58        ; Subtract Immediate with Carry SBI
13EE6:	51-D0       	rcall .+162           ; Relative Call to Subroutine
13EE8:	5F-49       	sbci r21, 0x9f        ; Subtract Immediate with Carry SBI
13EEA:	89-45       	sbci r24, 0x59        ; Subtract Immediate with Carry SBI
13EEC:	34-D0       	rcall .+104           ; Relative Call to Subroutine
13EEE:	C8-EB       	ldi r28, 0xb8         ; Load Immediate
13EF0:	09-08       	sbc r0, r9            ; Subtract with Carry
13EF2:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
13EF4:	28-58       	subi r18, 0x88        ; Subtract Immediate
13EF6:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
13EF8:	3C-0F       	add r19, r28          ; Add without Carry
13EFA:	43-DC       	rcall .+6278          ; Relative Call to Subroutine
13EFC:	00-2D       	mov r16, r0           ; Copy Register
13EFE:	70-DB       	rcall .+5856          ; Relative Call to Subroutine
13F00:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13F02:	00-01       	movw r0, r0           ; Copy Register Word
13F04:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F06:	B4-FF       	sbrs r27, 4           ; Skip if Bit in Register is Set
13F08:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F0A:	32-FC       	sbrc r3, 2            ; Skip if Bit in Register is Cleared
13F0C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F0E:	88-FA       	.data 0xfa88          ; Binary data
13F10:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
13F12:	01-0F       	add r16, r17          ; Add without Carry
13F14:	62-D0       	rcall .+196           ; Relative Call to Subroutine
13F16:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
13F18:	02-0F       	add r16, r18          ; Add without Carry
13F1A:	52-D0       	rcall .+164           ; Relative Call to Subroutine
13F1C:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
13F1E:	00-0F       	add r16, r16          ; Add without Carry
13F20:	10-D0       	rcall .+32            ; Relative Call to Subroutine
13F22:	3F-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
13F24:	D3-E9       	ldi r29, 0x93         ; Load Immediate
13F26:	00-23       	and r16, r16          ; Logical AND
13F28:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F2A:	C4-FC       	sbrc r12, 4           ; Skip if Bit in Register is Cleared
13F2C:	3E-A3       	std Y+38, r19         ; Store Indirect From Register to Data Space
13F2E:	D3-E9       	ldi r29, 0x93         ; Load Immediate
13F30:	00-23       	and r16, r16          ; Logical AND
13F32:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F34:	BF-FC       	.data 0xfcbf          ; Binary data
13F36:	05-E0       	ldi r16, 0x05         ; Load Immediate
13F38:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
13F3A:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
13F3C:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13F3E:	00-23       	and r16, r16          ; Logical AND
13F40:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F42:	BA-FC       	.data 0xfcba          ; Binary data
13F44:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
13F46:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13F48:	F0-87       	std Y+8, r31          ; Store Indirect From Register to Data Space
13F4A:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
13F4C:	03-0F       	add r16, r19          ; Add without Carry
13F4E:	C5-D8       	rcall .+4490          ; Relative Call to Subroutine
13F50:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
13F52:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
13F54:	0D-0D       	add r16, r13          ; Add without Carry
13F56:	14-10       	cpse r1, r4           ; Compare Skip if Equal
13F58:	00-2F       	mov r16, r16          ; Copy Register
13F5A:	2E-DB       	rcall .+5724          ; Relative Call to Subroutine
13F5C:	34-A1       	ldd r19, Y+36         ; Load Indirect from Data Space to Register
13F5E:	D1-E9       	ldi r29, 0x91         ; Load Immediate
13F60:	00-01       	movw r0, r0           ; Copy Register Word
13F62:	EF-E7       	ldi r30, 0x7f         ; Load Immediate
13F64:	02-B0       	in r0, 0x02           ; Load an I/O Location to Register
13F66:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
13F68:	F0-47       	sbci r31, 0x70        ; Subtract Immediate with Carry SBI
13F6A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13F6C:	59-BA       	out 0x19, r5          ; Store Register to I/O Location
13F6E:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
13F70:	00-01       	movw r0, r0           ; Copy Register Word
13F72:	E7-E7       	ldi r30, 0x77         ; Load Immediate
13F74:	30-A1       	ldd r19, Y+32         ; Load Indirect from Data Space to Register
13F76:	D1-E9       	ldi r29, 0x91         ; Load Immediate
13F78:	00-01       	movw r0, r0           ; Copy Register Word
13F7A:	E3-E7       	ldi r30, 0x73         ; Load Immediate
13F7C:	2A-A1       	ldd r18, Y+34         ; Load Indirect from Data Space to Register
13F7E:	D1-E9       	ldi r29, 0x91         ; Load Immediate
13F80:	00-01       	movw r0, r0           ; Copy Register Word
13F82:	DF-E7       	ldi r29, 0x7f         ; Load Immediate
13F84:	2A-A1       	ldd r18, Y+34         ; Load Indirect from Data Space to Register
13F86:	D1-E9       	ldi r29, 0x91         ; Load Immediate
13F88:	00-01       	movw r0, r0           ; Copy Register Word
13F8A:	C1-E7       	ldi r28, 0x71         ; Load Immediate
13F8C:	C1-45       	sbci r28, 0x51        ; Subtract Immediate with Carry SBI
13F8E:	2E-D0       	rcall .+92            ; Relative Call to Subroutine
13F90:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
13F92:	03-0F       	add r16, r19          ; Add without Carry
13F94:	A8-D8       	rcall .+4432          ; Relative Call to Subroutine
13F96:	01-A1       	ldd r16, Y+33         ; Load Indirect from Data Space to Register
13F98:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
13F9A:	2A-F0       	brbs 2, .+10          ; Branch if Bit in SREG is Set
13F9C:	B5-3F       	cpi r27, 0xf5         ; Compare with Immediate
13F9E:	01-00       	.data 0x0001          ; Binary data
13FA0:	AD-3F       	cpi r26, 0xfd         ; Compare with Immediate
13FA2:	01-00       	.data 0x0001          ; Binary data
13FA4:	7D-3F       	cpi r23, 0xfd         ; Compare with Immediate
13FA6:	01-00       	.data 0x0001          ; Binary data
13FA8:	75-3F       	cpi r23, 0xf5         ; Compare with Immediate
13FAA:	01-00       	.data 0x0001          ; Binary data
13FAC:	00-20       	and r0, r0            ; Logical AND
13FAE:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
13FB0:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
13FB2:	C7-E7       	ldi r28, 0x77         ; Load Immediate
13FB4:	00-20       	and r0, r0            ; Logical AND
13FB6:	00-21       	and r16, r0           ; Logical AND
13FB8:	C4-E7       	ldi r28, 0x74         ; Load Immediate
13FBA:	21-A1       	ldd r18, Y+33         ; Load Indirect from Data Space to Register
13FBC:	D1-E9       	ldi r29, 0x91         ; Load Immediate
13FBE:	00-01       	movw r0, r0           ; Copy Register Word
13FC0:	C0-E7       	ldi r28, 0x70         ; Load Immediate
13FC2:	17-A3       	std Y+39, r17         ; Store Indirect From Register to Data Space
13FC4:	D3-E9       	ldi r29, 0x93         ; Load Immediate
13FC6:	00-23       	and r16, r16          ; Logical AND
13FC8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13FCA:	74-FC       	sbrc r7, 4            ; Skip if Bit in Register is Cleared
13FCC:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
13FCE:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
13FD0:	15-A1       	ldd r17, Y+37         ; Load Indirect from Data Space to Register
13FD2:	D1-E9       	ldi r29, 0x91         ; Load Immediate
13FD4:	00-01       	movw r0, r0           ; Copy Register Word
13FD6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
13FD8:	6D-FC       	.data 0xfc6d          ; Binary data
13FDA:	B3-E7       	ldi r27, 0x73         ; Load Immediate
13FDC:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
13FDE:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
13FE0:	B0-E7       	ldi r27, 0x70         ; Load Immediate
13FE2:	18-F1       	brbs 0, .+70          ; Branch if Bit in SREG is Set
13FE4:	3C-0F       	add r19, r28          ; Add without Carry
13FE6:	8B-DA       	rcall .+5398          ; Relative Call to Subroutine
13FE8:	00-20       	and r0, r0            ; Logical AND
13FEA:	00-21       	and r16, r0           ; Logical AND
13FEC:	90-E7       	ldi r25, 0x70         ; Load Immediate
13FEE:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
13FF0:	03-0F       	add r16, r19          ; Add without Carry
13FF2:	B1-D8       	rcall .+4450          ; Relative Call to Subroutine
13FF4:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
13FF6:	0A-F0       	brbs 2, .+2           ; Branch if Bit in SREG is Set
13FF8:	06-02       	muls r16, r22         ; Multiply Signed
13FFA:	0E-0A       	sbc r0, r30           ; Subtract with Carry
13FFC:	12-A1       	ldd r17, Y+34         ; Load Indirect from Data Space to Register
13FFE:	D1-E9       	ldi r29, 0x91         ; Load Immediate
14000:	00-01       	movw r0, r0           ; Copy Register Word
14002:	9F-E7       	ldi r25, 0x7f         ; Load Immediate
14004:	12-A1       	ldd r17, Y+34         ; Load Indirect from Data Space to Register
14006:	D1-E9       	ldi r29, 0x91         ; Load Immediate
14008:	00-01       	movw r0, r0           ; Copy Register Word
1400A:	9B-E7       	ldi r25, 0x7b         ; Load Immediate
1400C:	12-A1       	ldd r17, Y+34         ; Load Indirect from Data Space to Register
1400E:	D1-E9       	ldi r29, 0x91         ; Load Immediate
14010:	00-01       	movw r0, r0           ; Copy Register Word
14012:	97-E7       	ldi r25, 0x77         ; Load Immediate
14014:	12-A1       	ldd r17, Y+34         ; Load Indirect from Data Space to Register
14016:	D1-E9       	ldi r29, 0x91         ; Load Immediate
14018:	00-01       	movw r0, r0           ; Copy Register Word
1401A:	93-E7       	ldi r25, 0x73         ; Load Immediate
1401C:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
1401E:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14020:	07-5C       	subi r16, 0xc7        ; Subtract Immediate
14022:	14-33       	cpi r17, 0x34         ; Compare with Immediate
14024:	26-A6       	std Y+46, r2          ; Store Indirect From Register to Data Space
14026:	A1-3C       	cpi r26, 0xc1         ; Compare with Immediate
14028:	18-2D       	mov r17, r8           ; Copy Register
1402A:	44-54       	subi r20, 0x44        ; Subtract Immediate
1402C:	FB-21       	and r31, r11          ; Logical AND
1402E:	09-40       	sbci r16, 0x09        ; Subtract Immediate with Carry SBI
14030:	18-2D       	mov r17, r8           ; Copy Register
14032:	44-54       	subi r20, 0x44        ; Subtract Immediate
14034:	FB-21       	and r31, r11          ; Logical AND
14036:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
14038:	18-2D       	mov r17, r8           ; Copy Register
1403A:	44-54       	subi r20, 0x44        ; Subtract Immediate
1403C:	FB-21       	and r31, r11          ; Logical AND
1403E:	09-C0       	rjmp .+18             ; Relative Jump
14040:	18-2D       	mov r17, r8           ; Copy Register
14042:	44-54       	subi r20, 0x44        ; Subtract Immediate
14044:	FB-21       	and r31, r11          ; Logical AND
14046:	F9-BF       	out 0x39, r31         ; Store Register to I/O Location
14048:	18-2D       	mov r17, r8           ; Copy Register
1404A:	44-54       	subi r20, 0x44        ; Subtract Immediate
1404C:	FB-21       	and r31, r11          ; Logical AND
1404E:	E9-BF       	out 0x39, r30         ; Store Register to I/O Location
14050:	18-2D       	mov r17, r8           ; Copy Register
14052:	44-54       	subi r20, 0x44        ; Subtract Immediate
14054:	FB-21       	and r31, r11          ; Logical AND
14056:	E9-3F       	cpi r30, 0xf9         ; Compare with Immediate
14058:	D2-21       	and r29, r2           ; Logical AND
1405A:	33-7F       	andi r19, 0xf3        ; Logical AND with Immediate
1405C:	7C-D9       	rcall .+4856          ; Relative Call to Subroutine
1405E:	02-C0       	rjmp .+4              ; Relative Jump
14060:	D2-21       	and r29, r2           ; Logical AND
14062:	33-7F       	andi r19, 0xf3        ; Logical AND with Immediate
14064:	7C-D9       	rcall .+4856          ; Relative Call to Subroutine
14066:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
14068:	00-00       	nop                   ; No Operation
1406A:	F0-7F       	andi r31, 0xf0        ; Logical AND with Immediate
1406C:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
1406E:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14070:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
14072:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
14074:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
14076:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
14078:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
1407A:	5C-EA       	ldi r21, 0xac         ; Load Immediate
1407C:	02-07       	cpc r16, r18          ; Compare with Carry
1407E:	14-46       	sbci r17, 0x64        ; Subtract Immediate with Carry SBI
14080:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
14082:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
14084:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
14086:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14088:	21-D0       	rcall .+66            ; Relative Call to Subroutine
1408A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1408C:	00-4A       	sbci r16, 0xa0        ; Subtract Immediate with Carry SBI
1408E:	91-4F       	sbci r25, 0xf1        ; Subtract Immediate with Carry SBI
14090:	CD-F8       	.data 0xf8cd          ; Binary data
14092:	0C-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
14094:	8A-EA       	ldi r24, 0xaa         ; Load Immediate
14096:	01-0A       	sbc r0, r17           ; Subtract with Carry
14098:	BA-45       	sbci r27, 0x5a        ; Subtract Immediate with Carry SBI
1409A:	18-DC       	rcall .+6192          ; Relative Call to Subroutine
1409C:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
1409E:	00-0B       	sbc r16, r16          ; Subtract with Carry
140A0:	4B-EA       	ldi r20, 0xab         ; Load Immediate
140A2:	02-0B       	sbc r16, r18          ; Subtract with Carry
140A4:	4C-EA       	ldi r20, 0xac         ; Load Immediate
140A6:	DB-7B       	andi r29, 0xbb        ; Logical AND with Immediate
140A8:	01-37       	cpi r16, 0x71         ; Compare with Immediate
140AA:	BB-45       	sbci r27, 0x5b        ; Subtract Immediate with Carry SBI
140AC:	0F-D8       	rcall .+4126          ; Relative Call to Subroutine
140AE:	E2-45       	sbci r30, 0x52        ; Subtract Immediate with Carry SBI
140B0:	16-DC       	rcall .+6188          ; Relative Call to Subroutine
140B2:	12-DB       	rcall .+5668          ; Relative Call to Subroutine
140B4:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
140B6:	10-D3       	rcall .+1568          ; Relative Call to Subroutine
140B8:	12-D1       	rcall .+548           ; Relative Call to Subroutine
140BA:	DD-F8       	.data 0xf8dd          ; Binary data
140BC:	0C-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
140BE:	86-4B       	sbci r24, 0xb6        ; Subtract Immediate with Carry SBI
140C0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
140C2:	DA-79       	andi r29, 0x9a        ; Logical AND with Immediate
140C4:	03-EB       	ldi r16, 0xb3         ; Load Immediate
140C6:	C9-03       	fmulsu r20, r17       ; Fractional Multiply Signed with Unsigned
140C8:	D3-E9       	ldi r29, 0x93         ; Load Immediate
140CA:	00-01       	movw r0, r0           ; Copy Register Word
140CC:	05-E0       	ldi r16, 0x05         ; Load Immediate
140CE:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
140D0:	A5-FD       	sbrc r26, 5           ; Skip if Bit in Register is Cleared
140D2:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
140D4:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
140D6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
140D8:	CB-FE       	.data 0xfecb          ; Binary data
140DA:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
140DC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
140DE:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
140E0:	BA-F5       	brbc 2, .+110         ; Branch if Bit in SREG is Cleared
140E2:	80-1F       	adc r24, r16          ; Add with Carry
140E4:	10-DA       	rcall .+5152          ; Relative Call to Subroutine
140E6:	BA-F1       	brbs 2, .+110         ; Branch if Bit in SREG is Set
140E8:	00-0F       	add r16, r16          ; Add without Carry
140EA:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
140EC:	A8-80       	ld r10, Y             ; Load Indirect from Data Space to Register
140EE:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
140F0:	00-0F       	add r16, r16          ; Add without Carry
140F2:	43-46       	sbci r20, 0x63        ; Subtract Immediate with Carry SBI
140F4:	79-49       	sbci r23, 0x99        ; Subtract Immediate with Carry SBI
140F6:	0B-DD       	rcall .+6678          ; Relative Call to Subroutine
140F8:	01-9F       	mul r16, r17          ; Multiply Unsigned
140FA:	5B-00       	.data 0x005b          ; Binary data
140FC:	00-2B       	or r16, r16           ; Logical OR
140FE:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
14100:	FF-31       	cpi r31, 0x1f         ; Compare with Immediate
14102:	FA-DC       	rcall .+6644          ; Relative Call to Subroutine
14104:	01-97       	sbiw r24, 0x01        ; Subtract Immediate from Word
14106:	03-E0       	ldi r16, 0x03         ; Load Immediate
14108:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1410A:	2A-51       	subi r18, 0x1a        ; Subtract Immediate
1410C:	A1-F2       	brbs 1, .-88          ; Branch if Bit in SREG is Set
1410E:	FF-31       	cpi r31, 0x1f         ; Compare with Immediate
14110:	BC-F5       	brbc 4, .+110         ; Branch if Bit in SREG is Cleared
14112:	80-1F       	adc r24, r16          ; Add with Carry
14114:	0F-DA       	rcall .+5150          ; Relative Call to Subroutine
14116:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
14118:	00-0F       	add r16, r16          ; Add without Carry
1411A:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
1411C:	AB-80       	ldd r10, Y+3          ; Load Indirect from Data Space to Register
1411E:	00-2C       	mov r0, r0            ; Copy Register
14120:	23-46       	sbci r18, 0x63        ; Subtract Immediate with Carry SBI
14122:	6E-48       	sbci r22, 0x8e        ; Subtract Immediate with Carry SBI
14124:	0B-DD       	rcall .+6678          ; Relative Call to Subroutine
14126:	01-9F       	mul r16, r17          ; Multiply Unsigned
14128:	5B-00       	.data 0x005b          ; Binary data
1412A:	00-2B       	or r16, r16           ; Logical OR
1412C:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
1412E:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
14130:	FA-DC       	rcall .+6644          ; Relative Call to Subroutine
14132:	01-97       	sbiw r24, 0x01        ; Subtract Immediate from Word
14134:	03-E0       	ldi r16, 0x03         ; Load Immediate
14136:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
14138:	2C-50       	subi r18, 0x0c        ; Subtract Immediate
1413A:	A0-F2       	brbs 0, .-88          ; Branch if Bit in SREG is Set
1413C:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
1413E:	68-4B       	sbci r22, 0xb8        ; Subtract Immediate with Carry SBI
14140:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
14142:	64-DB       	rcall .+5832          ; Relative Call to Subroutine
14144:	CA-F3       	brbs 2, .-14          ; Branch if Bit in SREG is Set
14146:	13-08       	sbc r1, r3            ; Subtract with Carry
14148:	48-F4       	brbc 0, .+18          ; Branch if Bit in SREG is Cleared
1414A:	80-18       	sub r8, r0            ; Subtract Without Carry
1414C:	64-4B       	sbci r22, 0xb4        ; Subtract Immediate with Carry SBI
1414E:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
14150:	4D-DB       	rcall .+5786          ; Relative Call to Subroutine
14152:	C5-F3       	brbs 5, .-16          ; Branch if Bit in SREG is Set
14154:	13-04       	cpc r1, r3            ; Compare with Carry
14156:	44-F4       	brbc 4, .+16          ; Branch if Bit in SREG is Cleared
14158:	80-14       	cp r8, r0             ; Compare
1415A:	09-1A       	sub r0, r25           ; Subtract Without Carry
1415C:	01-9F       	mul r16, r17          ; Multiply Unsigned
1415E:	06-E0       	ldi r16, 0x06         ; Load Immediate
14160:	53-EA       	ldi r21, 0xa3         ; Load Immediate
14162:	02-06       	cpc r0, r18           ; Compare with Carry
14164:	62-D0       	rcall .+196           ; Relative Call to Subroutine
14166:	05-EB       	ldi r16, 0xb5         ; Load Immediate
14168:	43-08       	sbc r4, r3            ; Subtract with Carry
1416A:	56-00       	.data 0x0056          ; Binary data
1416C:	01-39       	cpi r16, 0x91         ; Compare with Immediate
1416E:	F2-1B       	sub r31, r18          ; Subtract Without Carry
14170:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
14172:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
14174:	D5-0F       	add r29, r21          ; Add without Carry
14176:	51-B1       	in r21, 0x01          ; Load an I/O Location to Register
14178:	BE-42       	sbci r27, 0x2e        ; Subtract Immediate with Carry SBI
1417A:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
1417C:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
1417E:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
14180:	00-2B       	or r16, r16           ; Logical OR
14182:	ED-DA       	rcall .+5594          ; Relative Call to Subroutine
14184:	F3-0F       	add r31, r19          ; Add without Carry
14186:	03-EB       	ldi r16, 0xb3         ; Load Immediate
14188:	48-08       	sbc r4, r8            ; Subtract with Carry
1418A:	76-00       	.data 0x0076          ; Binary data
1418C:	EE-E7       	ldi r30, 0x7e         ; Load Immediate
1418E:	B7-42       	sbci r27, 0x27        ; Subtract Immediate with Carry SBI
14190:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
14192:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
14194:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
14196:	FF-34       	cpi r31, 0x4f         ; Compare with Immediate
14198:	00-2C       	mov r0, r0            ; Copy Register
1419A:	01-97       	sbiw r24, 0x01        ; Subtract Immediate from Word
1419C:	AA-BF       	out 0x3a, r26         ; Store Register to I/O Location
1419E:	DD-F8       	.data 0xf8dd          ; Binary data
141A0:	04-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
141A2:	44-46       	sbci r20, 0x64        ; Subtract Immediate with Carry SBI
141A4:	CA-EB       	ldi r28, 0xba         ; Load Immediate
141A6:	06-06       	cpc r0, r22           ; Compare with Carry
141A8:	54-EA       	ldi r21, 0xa4         ; Load Immediate
141AA:	06-0B       	sbc r16, r22          ; Subtract with Carry
141AC:	77-D0       	rcall .+238           ; Relative Call to Subroutine
141AE:	4D-4A       	sbci r20, 0xad        ; Subtract Immediate with Carry SBI
141B0:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
141B2:	08-DC       	rcall .+6160          ; Relative Call to Subroutine
141B4:	F3-0F       	add r31, r19          ; Add without Carry
141B6:	03-EB       	ldi r16, 0xb3         ; Load Immediate
141B8:	44-04       	cpc r4, r4            ; Compare with Carry
141BA:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
141BC:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
141BE:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
141C0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
141C2:	46-06       	cpc r4, r22           ; Compare with Carry
141C4:	F6-DD       	rcall .+7148          ; Relative Call to Subroutine
141C6:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
141C8:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
141CA:	5D-DA       	rcall .+5306          ; Relative Call to Subroutine
141CC:	44-4B       	sbci r20, 0xb4        ; Subtract Immediate with Carry SBI
141CE:	1B-1A       	sub r1, r27           ; Subtract Without Carry
141D0:	14-2B       	or r17, r20           ; Logical OR
141D2:	6D-DC       	rcall .+6362          ; Relative Call to Subroutine
141D4:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
141D6:	1E-42       	sbci r17, 0x2e        ; Subtract Immediate with Carry SBI
141D8:	DE-40       	sbci r29, 0x0e        ; Subtract Immediate with Carry SBI
141DA:	04-FA       	bst r0, 4             ; Bit Store from Bit in Register to T Flag in SREG
141DC:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
141DE:	32-43       	sbci r19, 0x32        ; Subtract Immediate with Carry SBI
141E0:	44-FA       	bst r4, 4             ; Bit Store from Bit in Register to T Flag in SREG
141E2:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
141E4:	03-9C       	mul r0, r3            ; Multiply Unsigned
141E6:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
141E8:	43-EA       	ldi r20, 0xa3         ; Load Immediate
141EA:	04-01       	movw r0, r8           ; Copy Register Word
141EC:	75-E7       	ldi r23, 0x75         ; Load Immediate
141EE:	3C-4F       	sbci r19, 0xfc        ; Subtract Immediate with Carry SBI
141F0:	3F-1A       	sub r3, r31           ; Subtract Without Carry
141F2:	1F-2F       	mov r17, r31          ; Copy Register
141F4:	36-DC       	rcall .+6252          ; Relative Call to Subroutine
141F6:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
141F8:	1E-43       	sbci r17, 0x3e        ; Subtract Immediate with Carry SBI
141FA:	0C-FA       	.data 0xfa0c          ; Binary data
141FC:	07-FC       	sbrc r0, 7            ; Skip if Bit in Register is Cleared
141FE:	24-FA       	bst r2, 4             ; Bit Store from Bit in Register to T Flag in SREG
14200:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
14202:	04-FA       	bst r0, 4             ; Bit Store from Bit in Register to T Flag in SREG
14204:	07-F7       	brbc 7, .-64          ; Branch if Bit in SREG is Cleared
14206:	01-97       	sbiw r24, 0x01        ; Subtract Immediate from Word
14208:	4C-EA       	ldi r20, 0xac         ; Load Immediate
1420A:	03-04       	cpc r0, r3            ; Compare with Carry
1420C:	A5-E7       	ldi r26, 0x75         ; Load Immediate
1420E:	34-4E       	sbci r19, 0xe4        ; Subtract Immediate with Carry SBI
14210:	76-1A       	sub r7, r22           ; Subtract Without Carry
14212:	1F-2E       	mov r1, r31           ; Copy Register
14214:	20-DC       	rcall .+6208          ; Relative Call to Subroutine
14216:	01-F2       	brbs 1, .-128         ; Branch if Bit in SREG is Set
14218:	1E-43       	sbci r17, 0x3e        ; Subtract Immediate with Carry SBI
1421A:	0A-FA       	.data 0xfa0a          ; Binary data
1421C:	06-F2       	brbs 6, .-128         ; Branch if Bit in SREG is Set
1421E:	28-FA       	.data 0xfa28          ; Binary data
14220:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
14222:	08-FA       	.data 0xfa08          ; Binary data
14224:	06-F6       	brbc 6, .-128         ; Branch if Bit in SREG is Cleared
14226:	42-EA       	ldi r20, 0xa2         ; Load Immediate
14228:	03-08       	sbc r0, r3            ; Subtract with Carry
1422A:	8F-E7       	ldi r24, 0x7f         ; Load Immediate
1422C:	03-9F       	mul r16, r19          ; Multiply Unsigned
1422E:	2A-4B       	sbci r18, 0xba        ; Subtract Immediate with Carry SBI
14230:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
14232:	D7-79       	andi r29, 0x97        ; Logical AND with Immediate
14234:	03-EB       	ldi r16, 0xb3         ; Load Immediate
14236:	C9-09       	sbc r28, r9           ; Subtract with Carry
14238:	D9-E9       	ldi r29, 0x99         ; Load Immediate
1423A:	00-01       	movw r0, r0           ; Copy Register Word
1423C:	4D-E7       	ldi r20, 0x7d         ; Load Immediate
1423E:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
14240:	CA-23       	and r28, r26          ; Logical AND
14242:	00-2B       	or r16, r16           ; Logical OR
14244:	26-49       	sbci r18, 0x96        ; Subtract Immediate with Carry SBI
14246:	7F-F7       	brbc 7, .-34          ; Branch if Bit in SREG is Cleared
14248:	63-AF       	std Y+59, r22         ; Store Indirect From Register to Data Space
1424A:	01-9F       	mul r16, r17          ; Multiply Unsigned
1424C:	5B-00       	.data 0x005b          ; Binary data
1424E:	00-2B       	or r16, r16           ; Logical OR
14250:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
14252:	FF-31       	cpi r31, 0x1f         ; Compare with Immediate
14254:	FA-DC       	rcall .+6644          ; Relative Call to Subroutine
14256:	55-E7       	ldi r21, 0x75         ; Load Immediate
14258:	23-4B       	sbci r18, 0xb3        ; Subtract Immediate with Carry SBI
1425A:	5B-1A       	sub r5, r27           ; Subtract Without Carry
1425C:	08-FA       	.data 0xfa08          ; Binary data
1425E:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
14260:	00-26       	clr r512              ; Clear Register
14262:	73-E7       	ldi r23, 0x73         ; Load Immediate
14264:	20-4B       	sbci r18, 0xb0        ; Subtract Immediate with Carry SBI
14266:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14268:	00-0B       	sbc r16, r16          ; Subtract with Carry
1426A:	1B-1A       	sub r1, r27           ; Subtract Without Carry
1426C:	9C-40       	sbci r25, 0x0c        ; Subtract Immediate with Carry SBI
1426E:	CD-F8       	.data 0xf8cd          ; Binary data
14270:	04-B0       	in r0, 0x04           ; Load an I/O Location to Register
14272:	72-E7       	ldi r23, 0x72         ; Load Immediate
14274:	1A-48       	sbci r17, 0x8a        ; Subtract Immediate with Carry SBI
14276:	01-9F       	mul r16, r17          ; Multiply Unsigned
14278:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1427A:	CC-23       	and r28, r28          ; Logical AND
1427C:	5B-00       	.data 0x005b          ; Binary data
1427E:	00-2B       	or r16, r16           ; Logical OR
14280:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
14282:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
14284:	FA-DC       	rcall .+6644          ; Relative Call to Subroutine
14286:	54-E7       	ldi r21, 0x74         ; Load Immediate
14288:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
1428A:	A4-F5       	brbc 4, .+104         ; Branch if Bit in SREG is Cleared
1428C:	80-14       	cp r8, r0             ; Compare
1428E:	44-EA       	ldi r20, 0xa4         ; Load Immediate
14290:	03-09       	sbc r16, r3           ; Subtract with Carry
14292:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
14294:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
14296:	49-EA       	ldi r20, 0xa9         ; Load Immediate
14298:	03-51       	subi r16, 0x13        ; Subtract Immediate
1429A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1429C:	1D-E7       	ldi r17, 0x7d         ; Load Immediate
1429E:	03-9A       	sbi 0x00, 3           ; Set Bit in I/O Register
142A0:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
142A2:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
142A4:	D2-79       	andi r29, 0x92        ; Logical AND with Immediate
142A6:	03-EB       	ldi r16, 0xb3         ; Load Immediate
142A8:	C9-09       	sbc r28, r9           ; Subtract with Carry
142AA:	D9-E9       	ldi r29, 0x99         ; Load Immediate
142AC:	00-01       	movw r0, r0           ; Copy Register Word
142AE:	14-E7       	ldi r17, 0x74         ; Load Immediate
142B0:	1F-2B       	or r17, r31           ; Logical OR
142B2:	08-DC       	rcall .+6160          ; Relative Call to Subroutine
142B4:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
142B6:	1E-42       	sbci r17, 0x2e        ; Subtract Immediate with Carry SBI
142B8:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
142BA:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
142BC:	04-FA       	bst r0, 4             ; Bit Store from Bit in Register to T Flag in SREG
142BE:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
142C0:	1A-43       	sbci r17, 0x3a        ; Subtract Immediate with Carry SBI
142C2:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
142C4:	8E-E7       	ldi r24, 0x7e         ; Load Immediate
142C6:	08-4A       	sbci r16, 0xa8        ; Subtract Immediate with Carry SBI
142C8:	03-9B       	sbis 0x00, 3          ; Skip if Bit in I/O Register is Set
142CA:	12-1A       	sub r1, r18           ; Subtract Without Carry
142CC:	44-FA       	bst r4, 4             ; Bit Store from Bit in Register to T Flag in SREG
142CE:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
142D0:	88-E7       	ldi r24, 0x78         ; Load Immediate
142D2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
142D4:	FF-FF       	.data 0xffff          ; Binary data
142D6:	EF-7F       	andi r30, 0xff        ; Logical AND with Immediate
142D8:	38-84       	std Y+8, r3           ; Store Indirect From Register to Data Space
142DA:	01-00       	.data 0x0001          ; Binary data
142DC:	ED-FB       	.data 0xfbed          ; Binary data
142DE:	FF-FF       	.data 0xffff          ; Binary data
142E0:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
142E2:	FF-FF       	.data 0xffff          ; Binary data
142E4:	FF-FF       	.data 0xffff          ; Binary data
142E6:	0F-00       	.data 0x000f          ; Binary data
142E8:	E2-FB       	bst r30, 2            ; Bit Store from Bit in Register to T Flag in SREG
142EA:	FF-FF       	.data 0xffff          ; Binary data
142EC:	FF-FF       	.data 0xffff          ; Binary data
142EE:	FF-FF       	.data 0xffff          ; Binary data
142F0:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
142F2:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
142F4:	96-4B       	sbci r25, 0xb6        ; Subtract Immediate with Carry SBI
142F6:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
142F8:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
142FA:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
142FC:	91-B0       	in r9, 0x01           ; Load an I/O Location to Register
142FE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14300:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14302:	8B-46       	sbci r24, 0x6b        ; Subtract Immediate with Carry SBI
14304:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
14306:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
14308:	81-80       	ldd r8, Y+1           ; Load Indirect from Data Space to Register
1430A:	92-4B       	sbci r25, 0xb2        ; Subtract Immediate with Carry SBI
1430C:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
1430E:	26-DC       	rcall .+6220          ; Relative Call to Subroutine
14310:	00-29       	or r16, r0            ; Logical OR
14312:	85-A3       	std Y+37, r24         ; Store Indirect From Register to Data Space
14314:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14316:	00-23       	and r16, r16          ; Logical AND
14318:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
1431A:	A0-81       	ld r26, Z             ; Load Indirect from Data Space to Register
1431C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1431E:	CA-FA       	.data 0xfaca          ; Binary data
14320:	8D-4B       	sbci r24, 0xbd        ; Subtract Immediate with Carry SBI
14322:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
14324:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14326:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14328:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1432A:	85-80       	ldd r8, Y+5           ; Load Indirect from Data Space to Register
1432C:	80-A3       	std Y+32, r24         ; Store Indirect From Register to Data Space
1432E:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14330:	00-23       	and r16, r16          ; Logical AND
14332:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14334:	BF-FA       	.data 0xfabf          ; Binary data
14336:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14338:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1433A:	C8-E9       	ldi r28, 0x98         ; Load Immediate
1433C:	00-23       	and r16, r16          ; Logical AND
1433E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14340:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14342:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14344:	B7-FA       	bst r11, 7            ; Bit Store from Bit in Register to T Flag in SREG
14346:	7A-A3       	std Y+34, r23         ; Store Indirect From Register to Data Space
14348:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1434A:	00-23       	and r16, r16          ; Logical AND
1434C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1434E:	B2-FA       	bst r11, 2            ; Bit Store from Bit in Register to T Flag in SREG
14350:	01-27       	clr r769              ; Clear Register
14352:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14354:	02-01       	movw r0, r4           ; Copy Register Word
14356:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
14358:	11-B0       	in r1, 0x01           ; Load an I/O Location to Register
1435A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1435C:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
1435E:	7F-4B       	sbci r23, 0xbf        ; Subtract Immediate with Carry SBI
14360:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
14362:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
14364:	85-80       	ldd r8, Y+5           ; Load Indirect from Data Space to Register
14366:	7E-4B       	sbci r23, 0xbe        ; Subtract Immediate with Carry SBI
14368:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
1436A:	5A-DC       	rcall .+6324          ; Relative Call to Subroutine
1436C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1436E:	26-59       	subi r18, 0x96        ; Subtract Immediate
14370:	A9-F2       	brbs 1, .-86          ; Branch if Bit in SREG is Set
14372:	16-49       	sbci r17, 0x96        ; Subtract Immediate with Carry SBI
14374:	A6-EB       	ldi r26, 0xb6         ; Load Immediate
14376:	09-55       	subi r16, 0x59        ; Subtract Immediate
14378:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1437A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1437C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1437E:	E8-FE       	.data 0xfee8          ; Binary data
14380:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14382:	E6-FB       	bst r30, 6            ; Bit Store from Bit in Register to T Flag in SREG
14384:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14386:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
14388:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1438A:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1438C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1438E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14390:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
14392:	0A-67       	ori r16, 0x7a         ; Logical OR with Immediate
14394:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14396:	8E-FA       	.data 0xfa8e          ; Binary data
14398:	00-22       	and r0, r16           ; Logical AND
1439A:	72-4B       	sbci r23, 0xb2        ; Subtract Immediate with Carry SBI
1439C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1439E:	3E-FC       	.data 0xfc3e          ; Binary data
143A0:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
143A2:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
143A4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
143A6:	D4-FE       	sbrs r13, 4           ; Skip if Bit in Register is Set
143A8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
143AA:	D2-FB       	bst r29, 2            ; Bit Store from Bit in Register to T Flag in SREG
143AC:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
143AE:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
143B0:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
143B2:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
143B4:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
143B6:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
143B8:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
143BA:	0C-45       	sbci r16, 0x5c        ; Subtract Immediate with Carry SBI
143BC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
143BE:	7A-FA       	.data 0xfa7a          ; Binary data
143C0:	00-22       	and r0, r16           ; Logical AND
143C2:	68-4B       	sbci r22, 0xb8        ; Subtract Immediate with Carry SBI
143C4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
143C6:	2A-FC       	.data 0xfc2a          ; Binary data
143C8:	00-22       	and r0, r16           ; Logical AND
143CA:	00-23       	and r16, r16          ; Logical AND
143CC:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
143CE:	0E-01       	movw r0, r28          ; Copy Register Word
143D0:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
143D2:	8C-FE       	.data 0xfe8c          ; Binary data
143D4:	00-28       	or r0, r0             ; Logical OR
143D6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
143D8:	6D-81       	ldd r22, Y+5          ; Load Indirect from Data Space to Register
143DA:	00-23       	and r16, r16          ; Logical AND
143DC:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
143DE:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
143E0:	00-22       	and r0, r16           ; Logical AND
143E2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
143E4:	83-FE       	sbrs r8, 3            ; Skip if Bit in Register is Set
143E6:	00-28       	or r0, r0             ; Logical OR
143E8:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
143EA:	01-23       	and r16, r17          ; Logical AND
143EC:	02-23       	and r16, r18          ; Logical AND
143EE:	02-22       	and r0, r18           ; Logical AND
143F0:	5D-49       	sbci r21, 0x9d        ; Subtract Immediate with Carry SBI
143F2:	00-92-01-91 	sts 0x9101, r0        ; Store Direct to Data Space
143F6:	4A-46       	sbci r20, 0x6a        ; Subtract Immediate with Carry SBI
143F8:	0A-A8       	std Y+50, r0          ; Store Indirect From Register to Data Space
143FA:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
143FC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
143FE:	80-FB       	bst r24, 0            ; Bit Store from Bit in Register to T Flag in SREG
14400:	BB-F1       	brbs 3, .+110         ; Branch if Bit in SREG is Set
14402:	00-0F       	add r16, r16          ; Add without Carry
14404:	C0-F2       	brbs 0, .-80          ; Branch if Bit in SREG is Set
14406:	48-81       	ld r20, Y             ; Load Indirect from Data Space to Register
14408:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1440A:	06-E0       	ldi r16, 0x06         ; Load Immediate
1440C:	00-22       	and r0, r16           ; Logical AND
1440E:	00-23       	and r16, r16          ; Logical AND
14410:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14412:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
14414:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14416:	02-23       	and r16, r18          ; Logical AND
14418:	00-27       	clr r768              ; Clear Register
1441A:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
1441C:	11-B0       	in r1, 0x01           ; Load an I/O Location to Register
1441E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
14420:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
14422:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14424:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14426:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14428:	45-FA       	bst r4, 5             ; Bit Store from Bit in Register to T Flag in SREG
1442A:	00-27       	clr r768              ; Clear Register
1442C:	C8-E9       	ldi r28, 0x98         ; Load Immediate
1442E:	02-01       	movw r0, r4           ; Copy Register Word
14430:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14432:	00-01       	movw r0, r0           ; Copy Register Word
14434:	F1-E7       	ldi r31, 0x71         ; Load Immediate
14436:	40-A3       	std Y+32, r20         ; Store Indirect From Register to Data Space
14438:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1443A:	00-23       	and r16, r16          ; Logical AND
1443C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1443E:	3A-FA       	.data 0xfa3a          ; Binary data
14440:	3F-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
14442:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14444:	00-23       	and r16, r16          ; Logical AND
14446:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14448:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1444A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1444C:	33-FA       	bst r3, 3             ; Bit Store from Bit in Register to T Flag in SREG
1444E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14450:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14452:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14454:	00-23       	and r16, r16          ; Logical AND
14456:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14458:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1445A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1445C:	2B-FA       	.data 0xfa2b          ; Binary data
1445E:	38-A3       	std Y+32, r19         ; Store Indirect From Register to Data Space
14460:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14462:	00-23       	and r16, r16          ; Logical AND
14464:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14466:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
14468:	01-27       	clr r769              ; Clear Register
1446A:	C8-E9       	ldi r28, 0x98         ; Load Immediate
1446C:	02-01       	movw r0, r4           ; Copy Register Word
1446E:	D4-E7       	ldi r29, 0x74         ; Load Immediate
14470:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14472:	7E-F9       	.data 0xf97e          ; Binary data
14474:	34-A3       	std Y+36, r19         ; Store Indirect From Register to Data Space
14476:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14478:	00-23       	and r16, r16          ; Logical AND
1447A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1447C:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1447E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14480:	CD-FB       	.data 0xfbcd          ; Binary data
14482:	00-22       	and r0, r16           ; Logical AND
14484:	39-4B       	sbci r19, 0xb9        ; Subtract Immediate with Carry SBI
14486:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14488:	17-FA       	bst r1, 7             ; Bit Store from Bit in Register to T Flag in SREG
1448A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1448C:	61-FE       	sbrs r6, 1            ; Skip if Bit in Register is Set
1448E:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
14490:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14492:	5E-FB       	.data 0xfb5e          ; Binary data
14494:	24-A3       	std Y+36, r18         ; Store Indirect From Register to Data Space
14496:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14498:	00-23       	and r16, r16          ; Logical AND
1449A:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
1449C:	06-01       	movw r0, r12          ; Copy Register Word
1449E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
144A0:	BD-FB       	.data 0xfbbd          ; Binary data
144A2:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
144A4:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
144A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
144A8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
144AA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
144AC:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
144AE:	20-A3       	std Y+32, r18         ; Store Indirect From Register to Data Space
144B0:	D3-E9       	ldi r29, 0x93         ; Load Immediate
144B2:	00-23       	and r16, r16          ; Logical AND
144B4:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
144B6:	02-01       	movw r0, r4           ; Copy Register Word
144B8:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
144BA:	06-01       	movw r0, r12          ; Copy Register Word
144BC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
144BE:	AE-FB       	.data 0xfbae          ; Binary data
144C0:	1F-2F       	mov r17, r31          ; Copy Register
144C2:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
144C4:	04-01       	movw r0, r8           ; Copy Register Word
144C6:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
144C8:	02-01       	movw r0, r4           ; Copy Register Word
144CA:	53-DC       	rcall .+6310          ; Relative Call to Subroutine
144CC:	28-4B       	sbci r18, 0xb8        ; Subtract Immediate with Carry SBI
144CE:	7A-1E       	adc r7, r26           ; Add with Carry
144D0:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
144D2:	22-30       	cpi r18, 0x02         ; Compare with Immediate
144D4:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
144D6:	4D-D0       	rcall .+154           ; Relative Call to Subroutine
144D8:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
144DA:	04-23       	and r16, r20          ; Logical AND
144DC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
144DE:	EA-F9       	.data 0xf9ea          ; Binary data
144E0:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
144E2:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
144E4:	C8-E9       	ldi r28, 0x98         ; Load Immediate
144E6:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
144E8:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
144EA:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
144EC:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
144EE:	02-01       	movw r0, r4           ; Copy Register Word
144F0:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
144F2:	E0-F9       	bld r30, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
144F4:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
144F6:	04-23       	and r16, r20          ; Logical AND
144F8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
144FA:	DC-F9       	.data 0xf9dc          ; Binary data
144FC:	BB-F1       	brbs 3, .+110         ; Branch if Bit in SREG is Set
144FE:	00-0F       	add r16, r16          ; Add without Carry
14500:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14502:	02-01       	movw r0, r4           ; Copy Register Word
14504:	89-DA       	rcall .+5394          ; Relative Call to Subroutine
14506:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
14508:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
1450A:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
1450C:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
1450E:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
14510:	7F-42       	sbci r23, 0x2f        ; Subtract Immediate with Carry SBI
14512:	C8-F8       	.data 0xf8c8          ; Binary data
14514:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
14516:	C8-F8       	.data 0xf8c8          ; Binary data
14518:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1451A:	C8-F8       	.data 0xf8c8          ; Binary data
1451C:	08-00       	.data 0x0008          ; Binary data
1451E:	C8-F8       	.data 0xf8c8          ; Binary data
14520:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
14522:	7A-E7       	ldi r23, 0x7a         ; Load Immediate
14524:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
14526:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14528:	00-00       	nop                   ; No Operation
1452A:	40-54       	subi r20, 0x40        ; Subtract Immediate
1452C:	FB-21       	and r31, r11          ; Logical AND
1452E:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
14530:	31-63       	ori r19, 0x31         ; Logical OR with Immediate
14532:	62-1A       	sub r6, r18           ; Subtract Without Carry
14534:	61-B4       	in r6, 0x21           ; Load an I/O Location to Register
14536:	D0-3D       	cpi r29, 0xd0         ; Compare with Immediate
14538:	00-00       	nop                   ; No Operation
1453A:	60-1A       	sub r6, r16           ; Subtract Without Carry
1453C:	61-B4       	in r6, 0x21           ; Load an I/O Location to Register
1453E:	D0-3D       	cpi r29, 0xd0         ; Compare with Immediate
14540:	73-70       	andi r23, 0x03        ; Logical AND with Immediate
14542:	03-2E       	mov r0, r19           ; Copy Register
14544:	8A-19       	sub r24, r10          ; Subtract Without Carry
14546:	A3-3B       	cpi r26, 0xb3         ; Compare with Immediate
14548:	83-C8       	rjmp .-3834           ; Relative Jump
1454A:	C9-6D       	ori r28, 0xd9         ; Logical OR with Immediate
1454C:	30-5F       	subi r19, 0xf0        ; Subtract Immediate
1454E:	E4-3F       	cpi r30, 0xf4         ; Compare with Immediate
14550:	FB-21       	and r31, r11          ; Logical AND
14552:	E9-3F       	cpi r30, 0xf9         ; Compare with Immediate
14554:	7B-D9       	rcall .+4854          ; Relative Call to Subroutine
14556:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
14558:	FB-21       	and r31, r11          ; Logical AND
1455A:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
1455C:	FB-21       	and r31, r11          ; Logical AND
1455E:	39-41       	sbci r19, 0x19        ; Subtract Immediate with Carry SBI
14560:	FF-FF       	.data 0xffff          ; Binary data
14562:	EF-7F       	andi r30, 0xff        ; Logical AND with Immediate
14564:	00-00       	nop                   ; No Operation
14566:	70-41       	sbci r23, 0x10        ; Subtract Immediate with Carry SBI
14568:	C8-84       	std Y+8, r12          ; Store Indirect From Register to Data Space
1456A:	01-00       	.data 0x0001          ; Binary data
1456C:	00-00       	nop                   ; No Operation
1456E:	E0-3F       	cpi r30, 0xf0         ; Compare with Immediate
14570:	48-84       	std Y+8, r4           ; Store Indirect From Register to Data Space
14572:	01-00       	.data 0x0001          ; Binary data
14574:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14576:	04-23       	and r16, r20          ; Logical AND
14578:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1457A:	9C-F9       	.data 0xf99c          ; Binary data
1457C:	36-15       	cp r19, r6            ; Compare
1457E:	C1-F3       	brbs 1, .-16          ; Branch if Bit in SREG is Set
14580:	0A-53       	subi r16, 0x3a        ; Subtract Immediate
14582:	F3-1A       	sub r15, r19          ; Subtract Without Carry
14584:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14586:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14588:	10-2B       	or r17, r16           ; Logical OR
1458A:	C8-E9       	ldi r28, 0x98         ; Load Immediate
1458C:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
1458E:	AB-DD       	rcall .+6998          ; Relative Call to Subroutine
14590:	5B-A3       	std Y+35, r21         ; Store Indirect From Register to Data Space
14592:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14594:	00-23       	and r16, r16          ; Logical AND
14596:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14598:	06-01       	movw r0, r12          ; Copy Register Word
1459A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1459C:	3F-FB       	.data 0xfb3f          ; Binary data
1459E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
145A0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
145A2:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
145A4:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
145A6:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
145A8:	02-01       	movw r0, r4           ; Copy Register Word
145AA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
145AC:	83-F9       	bld r24, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
145AE:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
145B0:	08-01       	movw r0, r16          ; Copy Register Word
145B2:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
145B4:	08-23       	and r16, r24          ; Logical AND
145B6:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
145B8:	02-01       	movw r0, r4           ; Copy Register Word
145BA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
145BC:	7B-F9       	.data 0xf97b          ; Binary data
145BE:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
145C0:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
145C2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
145C4:	77-F9       	bld r23, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
145C6:	50-A3       	std Y+32, r21         ; Store Indirect From Register to Data Space
145C8:	D3-E9       	ldi r29, 0x93         ; Load Immediate
145CA:	00-23       	and r16, r16          ; Logical AND
145CC:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
145CE:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
145D0:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
145D2:	06-01       	movw r0, r12          ; Copy Register Word
145D4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
145D6:	22-FB       	bst r18, 2            ; Bit Store from Bit in Register to T Flag in SREG
145D8:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
145DA:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
145DC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
145DE:	6A-F9       	.data 0xf96a          ; Binary data
145E0:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
145E2:	04-01       	movw r0, r8           ; Copy Register Word
145E4:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
145E6:	04-23       	and r16, r20          ; Logical AND
145E8:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
145EA:	08-01       	movw r0, r16          ; Copy Register Word
145EC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
145EE:	62-F9       	bld r22, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
145F0:	C1-F3       	brbs 1, .-16          ; Branch if Bit in SREG is Set
145F2:	0A-53       	subi r16, 0x3a        ; Subtract Immediate
145F4:	F6-1A       	sub r15, r22          ; Subtract Without Carry
145F6:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
145F8:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
145FA:	31-2E       	mov r3, r17           ; Copy Register
145FC:	C8-E9       	ldi r28, 0x98         ; Load Immediate
145FE:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
14600:	78-DD       	rcall .+6896          ; Relative Call to Subroutine
14602:	43-A3       	std Y+35, r20         ; Store Indirect From Register to Data Space
14604:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14606:	00-23       	and r16, r16          ; Logical AND
14608:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
1460A:	06-01       	movw r0, r12          ; Copy Register Word
1460C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1460E:	06-FB       	bst r16, 6            ; Bit Store from Bit in Register to T Flag in SREG
14610:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14612:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14614:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
14616:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
14618:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
1461A:	08-01       	movw r0, r16          ; Copy Register Word
1461C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1461E:	4A-F9       	.data 0xf94a          ; Binary data
14620:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
14622:	02-01       	movw r0, r4           ; Copy Register Word
14624:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14626:	02-23       	and r16, r18          ; Logical AND
14628:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
1462A:	08-01       	movw r0, r16          ; Copy Register Word
1462C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1462E:	42-F9       	bld r20, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
14630:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
14632:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
14634:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14636:	3E-F9       	.data 0xf93e          ; Binary data
14638:	37-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
1463A:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1463C:	00-23       	and r16, r16          ; Logical AND
1463E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14640:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14642:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14644:	06-01       	movw r0, r12          ; Copy Register Word
14646:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14648:	E9-FA       	.data 0xfae9          ; Binary data
1464A:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1464C:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
1464E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14650:	31-F9       	bld r19, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
14652:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
14654:	04-01       	movw r0, r8           ; Copy Register Word
14656:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14658:	02-01       	movw r0, r4           ; Copy Register Word
1465A:	3D-E7       	ldi r19, 0x7d         ; Load Immediate
1465C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1465E:	2C-F9       	.data 0xf92c          ; Binary data
14660:	31-4B       	sbci r19, 0xb1        ; Subtract Immediate with Carry SBI
14662:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
14664:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14666:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14668:	26-D0       	rcall .+76            ; Relative Call to Subroutine
1466A:	2D-A3       	std Y+37, r18         ; Store Indirect From Register to Data Space
1466C:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1466E:	00-23       	and r16, r16          ; Logical AND
14670:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14672:	22-F9       	bld r18, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
14674:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14676:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14678:	C8-E9       	ldi r28, 0x98         ; Load Immediate
1467A:	00-23       	and r16, r16          ; Logical AND
1467C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1467E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14680:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14682:	18-F9       	.data 0xf918          ; Binary data
14684:	26-A3       	std Y+38, r18         ; Store Indirect From Register to Data Space
14686:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14688:	00-23       	and r16, r16          ; Logical AND
1468A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1468C:	15-F9       	bld r17, 5            ; Bit Load from the T Flag in SREG to a Bit in Register
1468E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14690:	FF-37       	cpi r31, 0x7f         ; Compare with Immediate
14692:	C8-E9       	ldi r28, 0x98         ; Load Immediate
14694:	02-01       	movw r0, r4           ; Copy Register Word
14696:	C0-E6       	ldi r28, 0x60         ; Load Immediate
14698:	D8-F8       	.data 0xf8d8          ; Binary data
1469A:	04-20       	and r0, r4            ; Logical AND
1469C:	D8-F8       	.data 0xf8d8          ; Binary data
1469E:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
146A0:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
146A2:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
146A4:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
146A6:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
146A8:	47-42       	sbci r20, 0x27        ; Subtract Immediate with Carry SBI
146AA:	C8-F8       	.data 0xf8c8          ; Binary data
146AC:	04-20       	and r0, r4            ; Logical AND
146AE:	C8-F8       	.data 0xf8c8          ; Binary data
146B0:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
146B2:	B2-E6       	ldi r27, 0x62         ; Load Immediate
146B4:	03-23       	and r16, r19          ; Logical AND
146B6:	9A-E6       	ldi r25, 0x6a         ; Load Immediate
146B8:	11-A3       	std Y+33, r17         ; Store Indirect From Register to Data Space
146BA:	D3-E9       	ldi r29, 0x93         ; Load Immediate
146BC:	00-23       	and r16, r16          ; Logical AND
146BE:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
146C0:	FB-F8       	.data 0xf8fb          ; Binary data
146C2:	11-A3       	std Y+33, r17         ; Store Indirect From Register to Data Space
146C4:	D3-E9       	ldi r29, 0x93         ; Load Immediate
146C6:	00-23       	and r16, r16          ; Logical AND
146C8:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
146CA:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
146CC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
146CE:	F4-F8       	bld r15, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
146D0:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
146D2:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
146D4:	C8-E9       	ldi r28, 0x98         ; Load Immediate
146D6:	00-23       	and r16, r16          ; Logical AND
146D8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
146DA:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
146DC:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
146DE:	EA-F8       	.data 0xf8ea          ; Binary data
146E0:	09-A3       	std Y+33, r16         ; Store Indirect From Register to Data Space
146E2:	D3-E9       	ldi r29, 0x93         ; Load Immediate
146E4:	00-23       	and r16, r16          ; Logical AND
146E6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
146E8:	E7-F8       	bld r14, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
146EA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
146EC:	FF-37       	cpi r31, 0x7f         ; Compare with Immediate
146EE:	C8-E9       	ldi r28, 0x98         ; Load Immediate
146F0:	02-01       	movw r0, r4           ; Copy Register Word
146F2:	92-E6       	ldi r25, 0x62         ; Load Immediate
146F4:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
146F6:	08-23       	and r16, r24          ; Logical AND
146F8:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
146FA:	02-23       	and r16, r18          ; Logical AND
146FC:	F4-E6       	ldi r31, 0x64         ; Load Immediate
146FE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
14700:	00-00       	nop                   ; No Operation
14702:	60-1A       	sub r6, r16           ; Subtract Without Carry
14704:	61-B4       	in r6, 0x21           ; Load an I/O Location to Register
14706:	D0-3D       	cpi r29, 0xd0         ; Compare with Immediate
14708:	73-70       	andi r23, 0x03        ; Logical AND with Immediate
1470A:	03-2E       	mov r0, r19           ; Copy Register
1470C:	8A-19       	sub r24, r10          ; Subtract Without Carry
1470E:	A3-3B       	cpi r26, 0xb3         ; Compare with Immediate
14710:	00-00       	nop                   ; No Operation
14712:	00-2E       	mov r0, r16           ; Copy Register
14714:	8A-19       	sub r24, r10          ; Subtract Without Carry
14716:	A3-3B       	cpi r26, 0xb3         ; Compare with Immediate
14718:	C1-49       	sbci r28, 0x91        ; Subtract Immediate with Carry SBI
1471A:	20-25       	clr r288              ; Clear Register
1471C:	9A-83       	std Y+2, r25          ; Store Indirect From Register to Data Space
1471E:	7B-39       	cpi r23, 0x9b         ; Compare with Immediate
14720:	31-63       	ori r19, 0x31         ; Logical OR with Immediate
14722:	62-1A       	sub r6, r18           ; Subtract Without Carry
14724:	61-B4       	in r6, 0x21           ; Load an I/O Location to Register
14726:	D0-3D       	cpi r29, 0xd0         ; Compare with Immediate
14728:	FB-21       	and r31, r11          ; Logical AND
1472A:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
1472C:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
1472E:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14730:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
14732:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
14734:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
14736:	F8-43       	sbci r31, 0x38        ; Subtract Immediate with Carry SBI
14738:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1473A:	1C-5C       	subi r17, 0xcc        ; Subtract Immediate
1473C:	DF-F8       	.data 0xf8df          ; Binary data
1473E:	6C-81       	ldd r22, Y+4          ; Load Indirect from Data Space to Register
14740:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
14742:	0C-5C       	subi r16, 0xcc        ; Subtract Immediate
14744:	C4-45       	sbci r28, 0x54        ; Subtract Immediate with Carry SBI
14746:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14748:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
1474A:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1474C:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1474E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14750:	8F-80       	ldd r8, Y+7           ; Load Indirect from Data Space to Register
14752:	00-29       	or r16, r0            ; Logical OR
14754:	6F-DD       	rcall .+6878          ; Relative Call to Subroutine
14756:	0F-15       	cp r16, r15           ; Compare
14758:	78-D0       	rcall .+240           ; Relative Call to Subroutine
1475A:	A7-F2       	brbs 7, .-88          ; Branch if Bit in SREG is Set
1475C:	FF-37       	cpi r31, 0x7f         ; Compare with Immediate
1475E:	C3-F3       	brbs 3, .-16          ; Branch if Bit in SREG is Set
14760:	13-03       	mulsu r17, r19        ; Multiply Signed with Unsigned
14762:	F9-07       	cpc r31, r25          ; Compare with Carry
14764:	43-F4       	brbc 3, .+16          ; Branch if Bit in SREG is Cleared
14766:	80-13       	cpse r24, r16         ; Compare Skip if Equal
14768:	60-D4       	rcall .+2240          ; Relative Call to Subroutine
1476A:	D1-0F       	add r29, r17          ; Add without Carry
1476C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1476E:	00-0C       	add r0, r0            ; Add without Carry
14770:	01-EB       	ldi r16, 0xb1         ; Load Immediate
14772:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
14774:	7F-10       	cpse r7, r15          ; Compare Skip if Equal
14776:	52-00       	.data 0x0052          ; Binary data
14778:	65-46       	sbci r22, 0x65        ; Subtract Immediate with Carry SBI
1477A:	16-20       	and r1, r6            ; Logical AND
1477C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1477E:	00-11       	cpse r16, r0          ; Compare Skip if Equal
14780:	6C-18       	sub r6, r12           ; Subtract Without Carry
14782:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
14784:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
14786:	D2-76       	andi r29, 0x62        ; Logical AND with Immediate
14788:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1478A:	42-02       	muls r20, r18         ; Multiply Signed
1478C:	02-DC       	rcall .+6148          ; Relative Call to Subroutine
1478E:	1B-1B       	sub r17, r27          ; Subtract Without Carry
14790:	65-18       	sub r6, r5            ; Subtract Without Carry
14792:	8C-44       	sbci r24, 0x4c        ; Subtract Immediate with Carry SBI
14794:	01-38       	cpi r16, 0x81         ; Compare with Immediate
14796:	06-EB       	ldi r16, 0xb6         ; Load Immediate
14798:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
1479A:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1479C:	51-01       	movw r10, r2          ; Copy Register Word
1479E:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
147A0:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
147A2:	20-26       	clr r544              ; Clear Register
147A4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
147A6:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
147A8:	09-E0       	ldi r16, 0x09         ; Load Immediate
147AA:	23-D0       	rcall .+70            ; Relative Call to Subroutine
147AC:	D4-0F       	add r29, r20          ; Add without Carry
147AE:	01-3E       	cpi r16, 0xe1         ; Compare with Immediate
147B0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
147B2:	51-01       	movw r10, r2          ; Copy Register Word
147B4:	04-EB       	ldi r16, 0xb4         ; Load Immediate
147B6:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
147B8:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
147BA:	42-02       	muls r20, r18         ; Multiply Signed
147BC:	1E-D0       	rcall .+60            ; Relative Call to Subroutine
147BE:	AB-42       	sbci r26, 0x2b        ; Subtract Immediate with Carry SBI
147C0:	01-EB       	ldi r16, 0xb1         ; Load Immediate
147C2:	08-04       	cpc r0, r8            ; Compare with Carry
147C4:	F1-DD       	rcall .+7138          ; Relative Call to Subroutine
147C6:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
147C8:	00-49       	sbci r16, 0x90        ; Subtract Immediate with Carry SBI
147CA:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
147CC:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
147CE:	04-EB       	ldi r16, 0xb4         ; Load Immediate
147D0:	01-08       	sbc r0, r1            ; Subtract with Carry
147D2:	09-D0       	rcall .+18            ; Relative Call to Subroutine
147D4:	A9-46       	sbci r26, 0x69        ; Subtract Immediate with Carry SBI
147D6:	5B-1B       	sub r21, r27          ; Subtract Without Carry
147D8:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
147DA:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
147DC:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
147DE:	FF-33       	cpi r31, 0x3f         ; Compare with Immediate
147E0:	12-1B       	sub r17, r18          ; Subtract Without Carry
147E2:	08-44       	sbci r16, 0x48        ; Subtract Immediate with Carry SBI
147E4:	4D-46       	sbci r20, 0x6d        ; Subtract Immediate with Carry SBI
147E6:	E1-E7       	ldi r30, 0x71         ; Load Immediate
147E8:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
147EA:	00-0F       	add r16, r16          ; Add without Carry
147EC:	F2-DB       	rcall .+6116          ; Relative Call to Subroutine
147EE:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
147F0:	01-09       	sbc r16, r1           ; Subtract with Carry
147F2:	F0-E7       	ldi r31, 0x70         ; Load Immediate
147F4:	94-42       	sbci r25, 0x24        ; Subtract Immediate with Carry SBI
147F6:	E6-D9       	rcall .+5068          ; Relative Call to Subroutine
147F8:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
147FA:	D7-E7       	ldi r29, 0x77         ; Load Immediate
147FC:	1A-43       	sbci r17, 0x3a        ; Subtract Immediate with Carry SBI
147FE:	04-D0       	rcall .+8             ; Relative Call to Subroutine
14800:	43-1C       	adc r4, r3            ; Add with Carry
14802:	41-D0       	rcall .+130           ; Relative Call to Subroutine
14804:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14806:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
14808:	18-44       	sbci r17, 0x48        ; Subtract Immediate with Carry SBI
1480A:	46-08       	sbc r4, r6            ; Subtract with Carry
1480C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1480E:	6C-03       	fmul r22, r20         ; Fractional Multiply Unsigned
14810:	1C-F0       	brbs 4, .+6           ; Branch if Bit in SREG is Set
14812:	01-0F       	add r16, r17          ; Add without Carry
14814:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
14816:	7F-53       	subi r23, 0x3f        ; Subtract Immediate
14818:	03-F5       	brbc 3, .+64          ; Branch if Bit in SREG is Cleared
1481A:	00-13       	cpse r16, r16         ; Compare Skip if Equal
1481C:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1481E:	46-F0       	brbs 6, .+16          ; Branch if Bit in SREG is Set
14820:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
14822:	03-EB       	ldi r16, 0xb3         ; Load Immediate
14824:	07-51       	subi r16, 0x17        ; Subtract Immediate
14826:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
14828:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1482A:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
1482C:	D1-0F       	add r29, r17          ; Add without Carry
1482E:	01-EB       	ldi r16, 0xb1         ; Load Immediate
14830:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
14832:	52-00       	.data 0x0052          ; Binary data
14834:	99-E7       	ldi r25, 0x79         ; Load Immediate
14836:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
14838:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
1483A:	03-43       	sbci r16, 0x33        ; Subtract Immediate with Carry SBI
1483C:	22-D0       	rcall .+68            ; Relative Call to Subroutine
1483E:	51-BB       	out 0x11, r21         ; Store Register to I/O Location
14840:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
14842:	D3-0A       	sbc r13, r19          ; Subtract with Carry
14844:	15-3F       	cpi r17, 0xf5         ; Compare with Immediate
14846:	52-05       	cpc r21, r2           ; Compare with Carry
14848:	00-2B       	or r16, r16           ; Logical OR
1484A:	FA-D0       	rcall .+500           ; Relative Call to Subroutine
1484C:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
1484E:	80-11       	cpse r24, r0          ; Compare Skip if Equal
14850:	1D-D1       	rcall .+570           ; Relative Call to Subroutine
14852:	5B-00       	.data 0x005b          ; Binary data
14854:	D8-02       	muls r29, r24         ; Multiply Signed
14856:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
14858:	01-01       	movw r0, r2           ; Copy Register Word
1485A:	FA-D5       	rcall .+3060          ; Relative Call to Subroutine
1485C:	C1-F1       	brbs 1, .+112         ; Branch if Bit in SREG is Set
1485E:	01-00       	.data 0x0001          ; Binary data
14860:	C1-F1       	brbs 1, .+112         ; Branch if Bit in SREG is Set
14862:	20-04       	cpc r2, r0            ; Compare with Carry
14864:	22-FA       	bst r2, 2             ; Bit Store from Bit in Register to T Flag in SREG
14866:	04-F4       	brbc 4, .+0           ; Branch if Bit in SREG is Cleared
14868:	23-43       	sbci r18, 0x33        ; Subtract Immediate with Carry SBI
1486A:	07-44       	sbci r16, 0x47        ; Subtract Immediate with Carry SBI
1486C:	8A-40       	sbci r24, 0x0a        ; Subtract Immediate with Carry SBI
1486E:	74-E7       	ldi r23, 0x74         ; Load Immediate
14870:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14872:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14874:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14876:	D2-F9       	bld r29, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
14878:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
1487A:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
1487C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1487E:	1C-F8       	.data 0xf81c          ; Binary data
14880:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
14882:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
14884:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
14886:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
14888:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
1488A:	01-0C       	add r0, r1            ; Add without Carry
1488C:	BE-E7       	ldi r27, 0x7e         ; Load Immediate
1488E:	20-24       	clr r32               ; Clear Register
14890:	01-20       	and r0, r1            ; Logical AND
14892:	00-21       	and r16, r0           ; Logical AND
14894:	E6-E7       	ldi r30, 0x76         ; Load Immediate
14896:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14898:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1489A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1489C:	0B-F8       	.data 0xf80b          ; Binary data
1489E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
148A0:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
148A2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
148A4:	E5-FA       	bst r14, 5            ; Bit Store from Bit in Register to T Flag in SREG
148A6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
148A8:	F8-83       	st Y, r31             ; Store Indirect From Register to Data Space
148AA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
148AC:	00-00       	nop                   ; No Operation
148AE:	F0-7F       	andi r31, 0xf0        ; Logical AND with Immediate
148B0:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
148B2:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
148B4:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
148B6:	00-49       	sbci r16, 0x90        ; Subtract Immediate with Carry SBI
148B8:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
148BA:	79-5F       	subi r23, 0xf9        ; Subtract Immediate
148BC:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
148BE:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
148C0:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
148C2:	92-46       	sbci r25, 0x62        ; Subtract Immediate with Carry SBI
148C4:	9B-46       	sbci r25, 0x6b        ; Subtract Immediate with Carry SBI
148C6:	6B-DA       	rcall .+5334          ; Relative Call to Subroutine
148C8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
148CA:	42-FC       	sbrc r4, 2            ; Skip if Bit in Register is Cleared
148CC:	00-28       	or r0, r0             ; Logical OR
148CE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
148D0:	EB-80       	ldd r14, Y+3          ; Load Indirect from Data Space to Register
148D2:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
148D4:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
148D6:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
148D8:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
148DA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
148DC:	9F-F9       	.data 0xf99f          ; Binary data
148DE:	76-A3       	std Y+38, r23         ; Store Indirect From Register to Data Space
148E0:	D3-E9       	ldi r29, 0x93         ; Load Immediate
148E2:	00-23       	and r16, r16          ; Logical AND
148E4:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
148E6:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
148E8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
148EA:	98-F9       	.data 0xf998          ; Binary data
148EC:	74-A3       	std Y+36, r23         ; Store Indirect From Register to Data Space
148EE:	D3-E9       	ldi r29, 0x93         ; Load Immediate
148F0:	00-23       	and r16, r16          ; Logical AND
148F2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
148F4:	E1-FF       	sbrs r30, 1           ; Skip if Bit in Register is Set
148F6:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
148F8:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
148FA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
148FC:	8F-F9       	.data 0xf98f          ; Binary data
148FE:	72-A3       	std Y+34, r23         ; Store Indirect From Register to Data Space
14900:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14902:	00-23       	and r16, r16          ; Logical AND
14904:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14906:	D6-FF       	sbrs r29, 6           ; Skip if Bit in Register is Set
14908:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1490A:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
1490C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1490E:	86-F9       	bld r24, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
14910:	6F-A3       	std Y+39, r22         ; Store Indirect From Register to Data Space
14912:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14914:	00-23       	and r16, r16          ; Logical AND
14916:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14918:	CF-FF       	.data 0xffcf          ; Binary data
1491A:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1491C:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
1491E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14920:	7D-F9       	.data 0xf97d          ; Binary data
14922:	6D-A3       	std Y+37, r22         ; Store Indirect From Register to Data Space
14924:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14926:	00-23       	and r16, r16          ; Logical AND
14928:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1492A:	C4-FF       	sbrs r28, 4           ; Skip if Bit in Register is Set
1492C:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1492E:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
14930:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14932:	74-F9       	bld r23, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
14934:	6A-A3       	std Y+34, r22         ; Store Indirect From Register to Data Space
14936:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14938:	00-23       	and r16, r16          ; Logical AND
1493A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1493C:	BD-FF       	.data 0xffbd          ; Binary data
1493E:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
14940:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
14942:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14944:	6B-F9       	.data 0xf96b          ; Binary data
14946:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
14948:	00-01       	movw r0, r0           ; Copy Register Word
1494A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1494C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1494E:	00-22       	and r0, r16           ; Logical AND
14950:	65-4B       	sbci r22, 0xb5        ; Subtract Immediate with Carry SBI
14952:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14954:	63-F9       	bld r22, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
14956:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14958:	00-23       	and r16, r16          ; Logical AND
1495A:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
1495C:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
1495E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14960:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14962:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14964:	5B-F9       	.data 0xf95b          ; Binary data
14966:	52-46       	sbci r21, 0x62        ; Subtract Immediate with Carry SBI
14968:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
1496A:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1496C:	5B-46       	sbci r21, 0x6b        ; Subtract Immediate with Carry SBI
1496E:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
14970:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
14972:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14974:	53-F9       	bld r21, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
14976:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14978:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1497A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1497C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1497E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14980:	99-FF       	.data 0xff99          ; Binary data
14982:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14984:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14986:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
14988:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
1498A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1498C:	93-FF       	sbrs r25, 3           ; Skip if Bit in Register is Set
1498E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14990:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14992:	00-20       	and r0, r0            ; Logical AND
14994:	55-49       	sbci r21, 0x95        ; Subtract Immediate with Carry SBI
14996:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14998:	8D-FF       	.data 0xff8d          ; Binary data
1499A:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
1499C:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1499E:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
149A0:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
149A2:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
149A4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
149A6:	3A-F9       	.data 0xf93a          ; Binary data
149A8:	43-A3       	std Y+35, r20         ; Store Indirect From Register to Data Space
149AA:	D3-E9       	ldi r29, 0x93         ; Load Immediate
149AC:	00-23       	and r16, r16          ; Logical AND
149AE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
149B0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
149B2:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
149B4:	33-F9       	bld r19, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
149B6:	42-A3       	std Y+34, r20         ; Store Indirect From Register to Data Space
149B8:	D3-E9       	ldi r29, 0x93         ; Load Immediate
149BA:	00-23       	and r16, r16          ; Logical AND
149BC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
149BE:	7C-FF       	.data 0xff7c          ; Binary data
149C0:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
149C2:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
149C4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
149C6:	2A-F9       	.data 0xf92a          ; Binary data
149C8:	3F-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
149CA:	D3-E9       	ldi r29, 0x93         ; Load Immediate
149CC:	00-23       	and r16, r16          ; Logical AND
149CE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
149D0:	71-FF       	sbrs r23, 1           ; Skip if Bit in Register is Set
149D2:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
149D4:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
149D6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
149D8:	21-F9       	bld r18, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
149DA:	3D-A3       	std Y+37, r19         ; Store Indirect From Register to Data Space
149DC:	D3-E9       	ldi r29, 0x93         ; Load Immediate
149DE:	00-23       	and r16, r16          ; Logical AND
149E0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
149E2:	6A-FF       	.data 0xff6a          ; Binary data
149E4:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
149E6:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
149E8:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
149EA:	18-F9       	.data 0xf918          ; Binary data
149EC:	3A-A3       	std Y+34, r19         ; Store Indirect From Register to Data Space
149EE:	D3-E9       	ldi r29, 0x93         ; Load Immediate
149F0:	00-23       	and r16, r16          ; Logical AND
149F2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
149F4:	5F-FF       	.data 0xff5f          ; Binary data
149F6:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
149F8:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
149FA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
149FC:	0F-F9       	.data 0xf90f          ; Binary data
149FE:	38-A3       	std Y+32, r19         ; Store Indirect From Register to Data Space
14A00:	D3-E9       	ldi r29, 0x93         ; Load Immediate
14A02:	00-23       	and r16, r16          ; Logical AND
14A04:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14A06:	58-FF       	.data 0xff58          ; Binary data
14A08:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
14A0A:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
14A0C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14A0E:	06-F9       	bld r16, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
14A10:	37-4B       	sbci r19, 0xb7        ; Subtract Immediate with Carry SBI
14A12:	99-45       	sbci r25, 0x59        ; Subtract Immediate with Carry SBI
14A14:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
14A16:	00-01       	movw r0, r0           ; Copy Register Word
14A18:	97-DD       	rcall .+6958          ; Relative Call to Subroutine
14A1A:	36-4B       	sbci r19, 0xb6        ; Subtract Immediate with Carry SBI
14A1C:	99-45       	sbci r25, 0x59        ; Subtract Immediate with Carry SBI
14A1E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14A20:	00-02       	muls r16, r16         ; Multiply Signed
14A22:	39-DC       	rcall .+6258          ; Relative Call to Subroutine
14A24:	A9-F5       	brbc 1, .+106         ; Branch if Bit in SREG is Cleared
14A26:	00-13       	cpse r16, r16         ; Compare Skip if Equal
14A28:	00-22       	and r0, r16           ; Logical AND
14A2A:	00-20       	and r0, r0            ; Logical AND
14A2C:	2F-49       	sbci r18, 0x9f        ; Subtract Immediate with Carry SBI
14A2E:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
14A30:	99-46       	sbci r25, 0x69        ; Subtract Immediate with Carry SBI
14A32:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14A34:	3F-FF       	.data 0xff3f          ; Binary data
14A36:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
14A38:	02-01       	movw r0, r4           ; Copy Register Word
14A3A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14A3C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14A3E:	00-22       	and r0, r16           ; Logical AND
14A40:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
14A42:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14A44:	EB-F8       	.data 0xf8eb          ; Binary data
14A46:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
14A48:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
14A4A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14A4C:	33-FF       	sbrs r19, 3           ; Skip if Bit in Register is Set
14A4E:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14A50:	00-23       	and r16, r16          ; Logical AND
14A52:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
14A54:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
14A56:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14A58:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14A5A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14A5C:	DF-F8       	.data 0xf8df          ; Binary data
14A5E:	52-46       	sbci r21, 0x62        ; Subtract Immediate with Carry SBI
14A60:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14A62:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14A64:	5B-46       	sbci r21, 0x6b        ; Subtract Immediate with Carry SBI
14A66:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
14A68:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
14A6A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14A6C:	D7-F8       	bld r13, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
14A6E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14A70:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14A72:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14A74:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14A76:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14A78:	1D-FF       	.data 0xff1d          ; Binary data
14A7A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14A7C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14A7E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
14A80:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
14A82:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14A84:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
14A86:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14A88:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14A8A:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
14A8C:	02-01       	movw r0, r4           ; Copy Register Word
14A8E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14A90:	11-FF       	sbrs r17, 1           ; Skip if Bit in Register is Set
14A92:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
14A94:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
14A96:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
14A98:	17-4B       	sbci r17, 0xb7        ; Subtract Immediate with Carry SBI
14A9A:	DF-F8       	.data 0xf8df          ; Binary data
14A9C:	60-90-CD-E9 	lds r6, 0xe9cd        ; Load Direct from Data Space (32-bit)
14AA0:	02-23       	and r16, r18          ; Logical AND
14AA2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14AA4:	00-08       	sbc r0, r0            ; Subtract with Carry
14AA6:	C8-E7       	ldi r28, 0x78         ; Load Immediate
14AA8:	10-49       	sbci r17, 0x90        ; Subtract Immediate with Carry SBI
14AAA:	00-20       	and r0, r0            ; Logical AND
14AAC:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
14AAE:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
14AB0:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
14AB2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
14AB4:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
14AB6:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
14AB8:	D4-38       	cpi r29, 0x84         ; Compare with Immediate
14ABA:	88-BE       	out 0x38, r8          ; Store Register to I/O Location
14ABC:	E9-FA       	.data 0xfae9          ; Binary data
14ABE:	A8-BD       	out 0x28, r26         ; Store Register to I/O Location
14AC0:	C4-B1       	in r28, 0x04          ; Load an I/O Location to Register
14AC2:	B4-BD       	out 0x24, r27         ; Store Register to I/O Location
14AC4:	9E-EE       	ldi r25, 0xee         ; Load Immediate
14AC6:	21-3E       	cpi r18, 0xe1         ; Compare with Immediate
14AC8:	AD-52       	subi r26, 0x2d        ; Subtract Immediate
14ACA:	9C-80       	ldd r9, Y+4           ; Load Indirect from Data Space to Register
14ACC:	4F-7E       	andi r20, 0xef        ; Logical AND with Immediate
14ACE:	92-3E       	cpi r25, 0xe2         ; Compare with Immediate
14AD0:	90-15       	cp r25, r0            ; Compare
14AD2:	CB-19       	sub r28, r11          ; Subtract Without Carry
14AD4:	A0-01       	movw r20, r0          ; Copy Register Word
14AD6:	FA-3E       	cpi r31, 0xea         ; Compare with Immediate
14AD8:	77-51       	subi r23, 0x17        ; Subtract Immediate
14ADA:	C1-16       	cp r12, r17           ; Compare
14ADC:	6C-C1       	rjmp .+728            ; Relative Jump
14ADE:	56-3F       	cpi r21, 0xf6         ; Compare with Immediate
14AE0:	4C-55       	subi r20, 0x5c        ; Subtract Immediate
14AE2:	55-55       	subi r21, 0x55        ; Subtract Immediate
14AE4:	55-55       	subi r21, 0x55        ; Subtract Immediate
14AE6:	A5-3F       	cpi r26, 0xf5         ; Compare with Immediate
14AE8:	00-00       	nop                   ; No Operation
14AEA:	E0-3F       	cpi r30, 0xf0         ; Compare with Immediate
14AEC:	00-00       	nop                   ; No Operation
14AEE:	F0-3F       	cpi r31, 0xf0         ; Compare with Immediate
14AF0:	32-33       	cpi r19, 0x32         ; Compare with Immediate
14AF2:	D3-3F       	cpi r29, 0xf3         ; Compare with Immediate
14AF4:	00-00       	nop                   ; No Operation
14AF6:	E9-3F       	cpi r30, 0xf9         ; Compare with Immediate
14AF8:	00-00       	nop                   ; No Operation
14AFA:	E7-3F       	cpi r30, 0xf7         ; Compare with Immediate
14AFC:	00-00       	nop                   ; No Operation
14AFE:	D2-3F       	cpi r29, 0xf2         ; Compare with Immediate
14B00:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
14B02:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
14B04:	AD-F5       	brbc 5, .+106         ; Branch if Bit in SREG is Cleared
14B06:	1D-7D       	andi r17, 0xdd        ; Logical AND with Immediate
14B08:	1B-4C       	sbci r17, 0xcb        ; Subtract Immediate with Carry SBI
14B0A:	A6-9E       	mul r10, r22          ; Multiply Unsigned
14B0C:	1B-4D       	sbci r17, 0xdb        ; Subtract Immediate with Carry SBI
14B0E:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
14B10:	26-40       	sbci r18, 0x06        ; Subtract Immediate with Carry SBI
14B12:	0C-94-D4-1E 	jmp 0x3da8            ; Jump
14B16:	85-FB       	bst r24, 5            ; Bit Store from Bit in Register to T Flag in SREG
14B18:	04-65       	ori r16, 0x54         ; Logical OR with Immediate
14B1A:	E4-17       	cp r30, r20           ; Compare
14B1C:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
14B1E:	A5-04       	cpc r10, r5           ; Compare with Carry
14B20:	24-EA       	ldi r18, 0xa4         ; Load Immediate
14B22:	E4-74       	andi r30, 0x44        ; Logical AND with Immediate
14B24:	0E-94-99-46 	call 0x8d32           ; Long Call to a Subroutine
14B28:	07-90       	elpm r0, Z+           ; Extended Load Program Memory
14B2A:	E3-43       	sbci r30, 0x33        ; Subtract Immediate with Carry SBI
14B2C:	0B-91       	.data 0x910b          ; Binary data
14B2E:	0E-98       	cbi 0x01, 6           ; Clear Bit in I/O Register
14B30:	0C-99       	sbic 0x01, 4          ; Skip if Bit in I/O Register is Cleared
14B32:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
14B34:	FF-34       	cpi r31, 0x4f         ; Compare with Immediate
14B36:	03-EB       	ldi r16, 0xb3         ; Load Immediate
14B38:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
14B3A:	04-94       	.data 0x9404          ; Binary data
14B3C:	02-EB       	ldi r16, 0xb2         ; Load Immediate
14B3E:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
14B40:	06-1B       	sub r16, r22          ; Subtract Without Carry
14B42:	64-18       	sub r6, r4            ; Subtract Without Carry
14B44:	0A-93       	st -Y, r16            ; Store Indirect From Register to Data Space
14B46:	1B-D4       	rcall .+2102          ; Relative Call to Subroutine
14B48:	A7-98       	cbi 0x14, 7           ; Clear Bit in I/O Register
14B4A:	34-44       	sbci r19, 0x44        ; Subtract Immediate with Carry SBI
14B4C:	01-34       	cpi r16, 0x41         ; Compare with Immediate
14B4E:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
14B50:	88-08       	sbc r8, r8            ; Subtract with Carry
14B52:	00-EB       	ldi r16, 0xb0         ; Load Immediate
14B54:	86-05       	cpc r24, r6           ; Compare with Carry
14B56:	00-27       	clr r768              ; Clear Register
14B58:	09-E0       	ldi r16, 0x09         ; Load Immediate
14B5A:	E8-59       	subi r30, 0x98        ; Subtract Immediate
14B5C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14B5E:	F8-FF       	.data 0xfff8          ; Binary data
14B60:	01-36       	cpi r16, 0x61         ; Compare with Immediate
14B62:	A6-42       	sbci r26, 0x26        ; Subtract Immediate with Carry SBI
14B64:	E8-E9       	ldi r30, 0x98         ; Load Immediate
14B66:	02-01       	movw r0, r4           ; Copy Register Word
14B68:	07-F1       	brbs 7, .+64          ; Branch if Bit in SREG is Set
14B6A:	04-07       	cpc r16, r20          ; Compare with Carry
14B6C:	08-D0       	rcall .+16            ; Relative Call to Subroutine
14B6E:	00-2E       	mov r0, r16           ; Copy Register
14B70:	F3-DA       	rcall .+5606          ; Relative Call to Subroutine
14B72:	00-20       	and r0, r0            ; Logical AND
14B74:	00-21       	and r16, r0           ; Logical AND
14B76:	F3-E7       	ldi r31, 0x73         ; Load Immediate
14B78:	D0-85       	std Y+8, r29          ; Store Indirect From Register to Data Space
14B7A:	01-00       	.data 0x0001          ; Binary data
14B7C:	AB-AA       	std Y+51, r10         ; Store Indirect From Register to Data Space
14B7E:	AA-2A       	or r10, r26           ; Logical OR
14B80:	0C-9C       	mul r0, r12           ; Multiply Unsigned
14B82:	00-2C       	mov r0, r0            ; Copy Register
14B84:	2D-DB       	rcall .+5722          ; Relative Call to Subroutine
14B86:	0C-9C       	mul r0, r12           ; Multiply Unsigned
14B88:	74-AE       	std Y+60, r7          ; Store Indirect From Register to Data Space
14B8A:	06-EB       	ldi r16, 0xb6         ; Load Immediate
14B8C:	C4-0B       	sbc r28, r20          ; Subtract with Carry
14B8E:	24-A8       	std Y+52, r2          ; Store Indirect From Register to Data Space
14B90:	00-EB       	ldi r16, 0xb0         ; Load Immediate
14B92:	C9-0A       	sbc r12, r25          ; Subtract with Carry
14B94:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
14B96:	E4-78       	andi r30, 0x84        ; Logical AND with Immediate
14B98:	CD-F8       	.data 0xf8cd          ; Binary data
14B9A:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
14B9C:	04-9C       	mul r0, r4            ; Multiply Unsigned
14B9E:	00-2C       	mov r0, r0            ; Copy Register
14BA0:	C0-F2       	brbs 0, .-80          ; Branch if Bit in SREG is Set
14BA2:	85-81       	ldd r24, Y+5          ; Load Indirect from Data Space to Register
14BA4:	07-9E       	mul r0, r23           ; Multiply Unsigned
14BA6:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
14BA8:	A6-F1       	brbs 6, .+104         ; Branch if Bit in SREG is Set
14BAA:	08-0B       	sbc r16, r24          ; Subtract with Carry
14BAC:	00-24       	clr r0                ; Clear Register
14BAE:	00-25       	clr r256              ; Clear Register
14BB0:	00-26       	clr r512              ; Clear Register
14BB2:	77-E9       	ldi r23, 0x97         ; Load Immediate
14BB4:	02-23       	and r16, r18          ; Logical AND
14BB6:	FB-E9       	ldi r31, 0x9b         ; Load Immediate
14BB8:	02-01       	movw r0, r4           ; Copy Register Word
14BBA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14BBC:	2F-F8       	.data 0xf82f          ; Binary data
14BBE:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14BC0:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14BC2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14BC4:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14BC6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14BC8:	77-FE       	sbrs r7, 7            ; Skip if Bit in Register is Set
14BCA:	01-36       	cpi r16, 0x61         ; Compare with Immediate
14BCC:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
14BCE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14BD0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14BD2:	EE-D1       	rcall .+988           ; Relative Call to Subroutine
14BD4:	E8-E9       	ldi r30, 0x98         ; Load Immediate
14BD6:	02-45       	sbci r16, 0x52        ; Subtract Immediate with Carry SBI
14BD8:	03-9E       	mul r0, r19           ; Multiply Unsigned
14BDA:	B0-45       	sbci r27, 0x50        ; Subtract Immediate with Carry SBI
14BDC:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
14BDE:	08-0A       	sbc r0, r24           ; Subtract with Carry
14BE0:	DC-D1       	rcall .+952           ; Relative Call to Subroutine
14BE2:	0C-9E       	mul r0, r28           ; Multiply Unsigned
14BE4:	03-96       	adiw r24, 0x03        ; Add Immediate to Word
14BE6:	10-AC       	std Y+56, r1          ; Store Indirect From Register to Data Space
14BE8:	02-94       	swap r0               ; Swap Nibbles
14BEA:	04-EB       	ldi r16, 0xb4         ; Load Immediate
14BEC:	86-04       	cpc r8, r6            ; Compare with Carry
14BEE:	0F-94-03-9C 	call 0x33806          ; Long Call to a Subroutine
14BF2:	03-9E       	mul r0, r19           ; Multiply Unsigned
14BF4:	E4-00       	.data 0x00e4          ; Binary data
14BF6:	9C-AB       	std Y+52, r25         ; Store Indirect From Register to Data Space
14BF8:	23-44       	sbci r18, 0x43        ; Subtract Immediate with Carry SBI
14BFA:	00-2E       	mov r0, r16           ; Copy Register
14BFC:	06-94       	lsr r0                ; Logical Shift Right
14BFE:	53-E9       	ldi r21, 0x93         ; Load Immediate
14C00:	28-45       	sbci r18, 0x58        ; Subtract Immediate with Carry SBI
14C02:	2E-DD       	rcall .+6748          ; Relative Call to Subroutine
14C04:	06-9E       	mul r0, r22           ; Multiply Unsigned
14C06:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
14C08:	E8-7A       	andi r30, 0xa8        ; Logical AND with Immediate
14C0A:	B2-44       	sbci r27, 0x42        ; Subtract Immediate with Carry SBI
14C0C:	03-9E       	mul r0, r19           ; Multiply Unsigned
14C0E:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
14C10:	3C-0B       	sbc r19, r28          ; Subtract with Carry
14C12:	0B-EB       	ldi r16, 0xbb         ; Load Immediate
14C14:	86-0B       	sbc r24, r22          ; Subtract with Carry
14C16:	0D-F1       	brbs 5, .+66          ; Branch if Bit in SREG is Set
14C18:	3C-08       	sbc r3, r12           ; Subtract with Carry
14C1A:	00-22       	and r0, r16           ; Logical AND
14C1C:	AA-4B       	sbci r26, 0xba        ; Subtract Immediate with Carry SBI
14C1E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14C20:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14C22:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C24:	FB-FF       	.data 0xfffb          ; Binary data
14C26:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14C28:	93-FA       	bst r9, 3             ; Bit Store from Bit in Register to T Flag in SREG
14C2A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C2C:	91-FF       	sbrs r25, 1           ; Skip if Bit in Register is Set
14C2E:	00-22       	and r0, r16           ; Logical AND
14C30:	A6-4B       	sbci r26, 0xb6        ; Subtract Immediate with Carry SBI
14C32:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14C34:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
14C36:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C38:	F1-FF       	sbrs r31, 1           ; Skip if Bit in Register is Set
14C3A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14C3C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14C3E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14C40:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14C42:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C44:	37-FE       	sbrs r3, 7            ; Skip if Bit in Register is Set
14C46:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14C48:	83-FA       	bst r8, 3             ; Bit Store from Bit in Register to T Flag in SREG
14C4A:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
14C4C:	48-F8       	.data 0xf848          ; Binary data
14C4E:	04-0F       	add r16, r20          ; Add without Carry
14C50:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
14C52:	7A-E9       	ldi r23, 0x9a         ; Load Immediate
14C54:	02-01       	movw r0, r4           ; Copy Register Word
14C56:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C58:	2F-FE       	.data 0xfe2f          ; Binary data
14C5A:	D8-45       	sbci r29, 0x58        ; Subtract Immediate with Carry SBI
14C5C:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14C5E:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14C60:	DB-D1       	rcall .+950           ; Relative Call to Subroutine
14C62:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14C64:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14C66:	0A-9A       	sbi 0x01, 2           ; Set Bit in I/O Register
14C68:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C6A:	8A-FD       	.data 0xfd8a          ; Binary data
14C6C:	00-22       	and r0, r16           ; Logical AND
14C6E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14C70:	7F-53       	subi r23, 0x3f        ; Subtract Immediate
14C72:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14C74:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14C76:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C78:	D1-FF       	sbrs r29, 1           ; Skip if Bit in Register is Set
14C7A:	FE-F7       	brbc 6, .-2           ; Branch if Bit in SREG is Cleared
14C7C:	4D-FF       	.data 0xff4d          ; Binary data
14C7E:	00-22       	and r0, r16           ; Logical AND
14C80:	93-4B       	sbci r25, 0xb3        ; Subtract Immediate with Carry SBI
14C82:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C84:	CB-FF       	.data 0xffcb          ; Binary data
14C86:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14C88:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14C8A:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14C8C:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14C8E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C90:	11-FE       	sbrs r1, 1            ; Skip if Bit in Register is Set
14C92:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14C94:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14C96:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14C98:	5B-FA       	.data 0xfa5b          ; Binary data
14C9A:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
14C9C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14C9E:	58-FF       	.data 0xff58          ; Binary data
14CA0:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14CA2:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14CA4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14CA6:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14CA8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14CAA:	04-FE       	sbrs r0, 4            ; Skip if Bit in Register is Set
14CAC:	0A-9C       	mul r0, r10           ; Multiply Unsigned
14CAE:	00-2C       	mov r0, r0            ; Copy Register
14CB0:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14CB2:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
14CB4:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
14CB6:	C9-80       	ldd r12, Y+1          ; Load Indirect from Data Space to Register
14CB8:	03-9C       	mul r0, r3            ; Multiply Unsigned
14CBA:	10-AA       	std Y+48, r1          ; Store Indirect From Register to Data Space
14CBC:	61-1E       	adc r6, r17           ; Add with Carry
14CBE:	0A-9C       	mul r0, r10           ; Multiply Unsigned
14CC0:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
14CC2:	21-30       	cpi r18, 0x01         ; Compare with Immediate
14CC4:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
14CC6:	18-00       	.data 0x0018          ; Binary data
14CC8:	43-FA       	bst r4, 3             ; Bit Store from Bit in Register to T Flag in SREG
14CCA:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
14CCC:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
14CCE:	17-05       	cpc r17, r7           ; Compare with Carry
14CD0:	02-FA       	bst r0, 2             ; Bit Store from Bit in Register to T Flag in SREG
14CD2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14CD4:	10-AC       	std Y+56, r1          ; Store Indirect From Register to Data Space
14CD6:	1B-1A       	sub r1, r27           ; Subtract Without Carry
14CD8:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
14CDA:	21-30       	cpi r18, 0x01         ; Compare with Immediate
14CDC:	92-44       	sbci r25, 0x42        ; Subtract Immediate with Carry SBI
14CDE:	43-FA       	bst r4, 3             ; Bit Store from Bit in Register to T Flag in SREG
14CE0:	05-F5       	brbc 5, .+64          ; Branch if Bit in SREG is Cleared
14CE2:	00-2D       	mov r16, r0           ; Copy Register
14CE4:	2C-DD       	rcall .+6744          ; Relative Call to Subroutine
14CE6:	03-9C       	mul r0, r3            ; Multiply Unsigned
14CE8:	00-2C       	mov r0, r0            ; Copy Register
14CEA:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
14CEC:	01-0A       	sbc r0, r17           ; Subtract with Carry
14CEE:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
14CF0:	E9-80       	ldd r14, Y+1          ; Load Indirect from Data Space to Register
14CF2:	10-AB       	std Y+48, r17         ; Store Indirect From Register to Data Space
14CF4:	03-EB       	ldi r16, 0xb3         ; Load Immediate
14CF6:	84-00       	.data 0x0084          ; Binary data
14CF8:	00-24       	clr r0                ; Clear Register
14CFA:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
14CFC:	04-1B       	sub r16, r20          ; Subtract Without Carry
14CFE:	C1-F1       	brbs 1, .+112         ; Branch if Bit in SREG is Set
14D00:	FF-12       	cpse r15, r31         ; Compare Skip if Equal
14D02:	02-F5       	brbc 2, .+64          ; Branch if Bit in SREG is Cleared
14D04:	7F-42       	sbci r23, 0x2f        ; Subtract Immediate with Carry SBI
14D06:	14-B9       	out 0x04, r17         ; Store Register to I/O Location
14D08:	C1-F1       	brbs 1, .+112         ; Branch if Bit in SREG is Set
14D0A:	80-72       	andi r24, 0x20        ; Logical AND with Immediate
14D0C:	11-B1       	in r17, 0x01          ; Load an I/O Location to Register
14D0E:	43-F8       	bld r4, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
14D10:	04-2C       	mov r0, r4            ; Copy Register
14D12:	01-24       	clr r1                ; Clear Register
14D14:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
14D16:	F0-D1       	rcall .+992           ; Relative Call to Subroutine
14D18:	0A-98       	cbi 0x01, 2           ; Clear Bit in I/O Register
14D1A:	00-28       	or r0, r0             ; Logical OR
14D1C:	0D-DD       	rcall .+6682          ; Relative Call to Subroutine
14D1E:	01-28       	or r0, r1             ; Logical OR
14D20:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14D22:	B4-80       	ldd r11, Y+4          ; Load Indirect from Data Space to Register
14D24:	02-28       	or r0, r2             ; Logical OR
14D26:	08-D1       	rcall .+528           ; Relative Call to Subroutine
14D28:	03-99       	sbic 0x00, 3          ; Skip if Bit in I/O Register is Cleared
14D2A:	10-A8       	std Y+48, r1          ; Store Indirect From Register to Data Space
14D2C:	4B-1E       	adc r4, r27           ; Add with Carry
14D2E:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
14D30:	23-20       	and r2, r3            ; Logical AND
14D32:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
14D34:	15-02       	muls r17, r21         ; Multiply Signed
14D36:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
14D38:	23-20       	and r2, r3            ; Logical AND
14D3A:	02-2D       	mov r16, r2           ; Copy Register
14D3C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14D3E:	8D-80       	ldd r8, Y+5           ; Load Indirect from Data Space to Register
14D40:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
14D42:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
14D44:	00-22       	and r0, r16           ; Logical AND
14D46:	00-23       	and r16, r16          ; Logical AND
14D48:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14D4A:	D0-F9       	bld r29, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
14D4C:	00-28       	or r0, r0             ; Logical OR
14D4E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14D50:	C5-80       	ldd r12, Y+5          ; Load Indirect from Data Space to Register
14D52:	03-9C       	mul r0, r3            ; Multiply Unsigned
14D54:	0C-9E       	mul r0, r28           ; Multiply Unsigned
14D56:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
14D58:	FF-38       	cpi r31, 0x8f         ; Compare with Immediate
14D5A:	46-45       	sbci r20, 0x56        ; Subtract Immediate with Carry SBI
14D5C:	0D-DC       	rcall .+6170          ; Relative Call to Subroutine
14D5E:	10-A8       	std Y+48, r1          ; Store Indirect From Register to Data Space
14D60:	00-EB       	ldi r16, 0xb0         ; Load Immediate
14D62:	84-03       	fmuls r16, r20        ; Fractional Multiply Signed
14D64:	0F-98       	cbi 0x01, 7           ; Clear Bit in I/O Register
14D66:	00-22       	and r0, r16           ; Logical AND
14D68:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
14D6A:	04-1D       	adc r16, r4           ; Add with Carry
14D6C:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
14D6E:	42-EA       	ldi r20, 0xa2         ; Load Immediate
14D70:	01-02       	muls r16, r17         ; Multiply Signed
14D72:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
14D74:	00-2A       	or r0, r16            ; Logical OR
14D76:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
14D78:	4D-82       	std Y+5, r4           ; Store Indirect From Register to Data Space
14D7A:	0C-9C       	mul r0, r12           ; Multiply Unsigned
14D7C:	10-AE       	std Y+56, r1          ; Store Indirect From Register to Data Space
14D7E:	62-1E       	adc r6, r18           ; Add with Carry
14D80:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
14D82:	22-30       	cpi r18, 0x02         ; Compare with Immediate
14D84:	00-2B       	or r16, r16           ; Logical OR
14D86:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
14D88:	43-82       	std Y+3, r4           ; Store Indirect From Register to Data Space
14D8A:	06-EB       	ldi r16, 0xb6         ; Load Immediate
14D8C:	82-02       	muls r24, r18         ; Multiply Signed
14D8E:	01-23       	and r16, r17          ; Logical AND
14D90:	52-F8       	bld r5, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
14D92:	04-1D       	adc r16, r4           ; Add with Carry
14D94:	01-33       	cpi r16, 0x31         ; Compare with Immediate
14D96:	00-29       	or r16, r0            ; Logical OR
14D98:	FA-D0       	rcall .+500           ; Relative Call to Subroutine
14D9A:	03-9C       	mul r0, r3            ; Multiply Unsigned
14D9C:	03-9E       	mul r0, r19           ; Multiply Unsigned
14D9E:	1C-44       	sbci r17, 0x4c        ; Subtract Immediate with Carry SBI
14DA0:	73-1C       	adc r7, r3            ; Add with Carry
14DA2:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
14DA4:	0D-94-4A-DC 	jmp 0x3b894           ; Jump
14DA8:	04-9C       	mul r0, r4            ; Multiply Unsigned
14DAA:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
14DAC:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
14DAE:	0E-9E       	mul r0, r30           ; Multiply Unsigned
14DB0:	23-44       	sbci r18, 0x43        ; Subtract Immediate with Carry SBI
14DB2:	32-44       	sbci r19, 0x42        ; Subtract Immediate with Carry SBI
14DB4:	0D-9C       	mul r0, r13           ; Multiply Unsigned
14DB6:	03-9E       	mul r0, r19           ; Multiply Unsigned
14DB8:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
14DBA:	FF-3B       	cpi r31, 0xbf         ; Compare with Immediate
14DBC:	A3-1B       	sub r26, r19          ; Subtract Without Carry
14DBE:	A7-9E       	mul r10, r23          ; Multiply Unsigned
14DC0:	24-A8       	std Y+52, r2          ; Store Indirect From Register to Data Space
14DC2:	49-44       	sbci r20, 0x49        ; Subtract Immediate with Carry SBI
14DC4:	00-EB       	ldi r16, 0xb0         ; Load Immediate
14DC6:	C1-04       	cpc r12, r1           ; Compare with Carry
14DC8:	06-EB       	ldi r16, 0xb6         ; Load Immediate
14DCA:	82-02       	muls r24, r18         ; Multiply Signed
14DCC:	06-9E       	mul r0, r22           ; Multiply Unsigned
14DCE:	09-94       	ijmp                  ; Indirect Jump
14DD0:	74-AC       	std Y+60, r7          ; Store Indirect From Register to Data Space
14DD2:	DB-00       	.data 0x00db          ; Binary data
14DD4:	34-44       	sbci r19, 0x44        ; Subtract Immediate with Carry SBI
14DD6:	00-EB       	ldi r16, 0xb0         ; Load Immediate
14DD8:	CB-0B       	sbc r28, r27          ; Subtract with Carry
14DDA:	03-92       	.data 0x9203          ; Binary data
14DDC:	08-93       	.data 0x9308          ; Binary data
14DDE:	06-94       	lsr r0                ; Logical Shift Right
14DE0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14DE2:	00-08       	sbc r0, r0            ; Subtract with Carry
14DE4:	03-9C       	mul r0, r3            ; Multiply Unsigned
14DE6:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
14DE8:	04-0F       	add r16, r20          ; Add without Carry
14DEA:	03-94       	inc r0                ; Increment
14DEC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14DEE:	B0-FE       	sbrs r11, 0           ; Skip if Bit in Register is Set
14DF0:	04-9E       	mul r0, r20           ; Multiply Unsigned
14DF2:	00-2E       	mov r0, r16           ; Copy Register
14DF4:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
14DF6:	08-08       	sbc r0, r8            ; Subtract with Carry
14DF8:	EB-E9       	ldi r30, 0x9b         ; Load Immediate
14DFA:	02-01       	movw r0, r4           ; Copy Register Word
14DFC:	22-DB       	rcall .+5700          ; Relative Call to Subroutine
14DFE:	07-9C       	mul r0, r7            ; Multiply Unsigned
14E00:	09-9F       	mul r16, r25          ; Multiply Unsigned
14E02:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
14E04:	08-0A       	sbc r0, r24           ; Subtract with Carry
14E06:	47-44       	sbci r20, 0x47        ; Subtract Immediate with Carry SBI
14E08:	00-24       	clr r0                ; Clear Register
14E0A:	00-25       	clr r256              ; Clear Register
14E0C:	00-26       	clr r512              ; Clear Register
14E0E:	77-E9       	ldi r23, 0x97         ; Load Immediate
14E10:	02-23       	and r16, r18          ; Logical AND
14E12:	FA-E9       	ldi r31, 0x9a         ; Load Immediate
14E14:	02-01       	movw r0, r4           ; Copy Register Word
14E16:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14E18:	01-FF       	sbrs r16, 1           ; Skip if Bit in Register is Set
14E1A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14E1C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14E1E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14E20:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14E22:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14E24:	49-FD       	.data 0xfd49          ; Binary data
14E26:	01-36       	cpi r16, 0x61         ; Compare with Immediate
14E28:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
14E2A:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14E2C:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14E2E:	EE-D1       	rcall .+988           ; Relative Call to Subroutine
14E30:	06-9E       	mul r0, r22           ; Multiply Unsigned
14E32:	E6-E9       	ldi r30, 0x96         ; Load Immediate
14E34:	02-45       	sbci r16, 0x52        ; Subtract Immediate with Carry SBI
14E36:	08-9C       	mul r0, r8            ; Multiply Unsigned
14E38:	06-96       	adiw r24, 0x06        ; Add Immediate to Word
14E3A:	A0-45       	sbci r26, 0x50        ; Subtract Immediate with Carry SBI
14E3C:	D2-D1       	rcall .+932           ; Relative Call to Subroutine
14E3E:	0D-9E       	mul r0, r29           ; Multiply Unsigned
14E40:	03-96       	adiw r24, 0x03        ; Add Immediate to Word
14E42:	D5-E6       	ldi r29, 0x65         ; Load Immediate
14E44:	00-24       	clr r0                ; Clear Register
14E46:	00-25       	clr r256              ; Clear Register
14E48:	F2-E7       	ldi r31, 0x72         ; Load Immediate
14E4A:	29-D1       	rcall .+594           ; Relative Call to Subroutine
14E4C:	03-9C       	mul r0, r3            ; Multiply Unsigned
14E4E:	10-A8       	std Y+48, r1          ; Store Indirect From Register to Data Space
14E50:	63-1E       	adc r6, r19           ; Add with Carry
14E52:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
14E54:	23-50       	subi r18, 0x03        ; Subtract Immediate
14E56:	ED-15       	cp r30, r13           ; Compare
14E58:	43-E7       	ldi r20, 0x73         ; Load Immediate
14E5A:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
14E5C:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
14E5E:	00-20       	and r0, r0            ; Logical AND
14E60:	1C-49       	sbci r17, 0x9c        ; Subtract Immediate with Carry SBI
14E62:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14E64:	27-FD       	sbrc r18, 7           ; Skip if Bit in Register is Cleared
14E66:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14E68:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
14E6A:	00-2C       	mov r0, r0            ; Copy Register
14E6C:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
14E6E:	68-AF       	std Y+56, r22         ; Store Indirect From Register to Data Space
14E70:	0A-9A       	sbi 0x01, 2           ; Set Bit in I/O Register
14E72:	18-49       	sbci r17, 0x98        ; Subtract Immediate with Carry SBI
14E74:	00-20       	and r0, r0            ; Logical AND
14E76:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14E78:	83-FC       	sbrc r8, 3            ; Skip if Bit in Register is Cleared
14E7A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14E7C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14E7E:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
14E80:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
14E82:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14E84:	17-FD       	sbrc r17, 7           ; Skip if Bit in Register is Cleared
14E86:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14E88:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
14E8A:	59-E7       	ldi r21, 0x79         ; Load Immediate
14E8C:	03-99       	sbic 0x00, 3          ; Skip if Bit in I/O Register is Cleared
14E8E:	10-A8       	std Y+48, r1          ; Store Indirect From Register to Data Space
14E90:	4B-1E       	adc r4, r27           ; Add with Carry
14E92:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
14E94:	23-20       	and r2, r3            ; Logical AND
14E96:	C2-F3       	brbs 2, .-16          ; Branch if Bit in SREG is Set
14E98:	16-02       	muls r17, r22         ; Multiply Signed
14E9A:	40-F8       	bld r4, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
14E9C:	23-20       	and r2, r3            ; Logical AND
14E9E:	4C-E7       	ldi r20, 0x7c         ; Load Immediate
14EA0:	00-22       	and r0, r16           ; Logical AND
14EA2:	0D-4B       	sbci r16, 0xbd        ; Subtract Immediate with Carry SBI
14EA4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14EA6:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
14EA8:	20-B9       	out 0x00, r18         ; Store Register to I/O Location
14EAA:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
14EAC:	48-E7       	ldi r20, 0x78         ; Load Immediate
14EAE:	00-24       	clr r0                ; Clear Register
14EB0:	00-25       	clr r256              ; Clear Register
14EB2:	8F-E6       	ldi r24, 0x6f         ; Load Immediate
14EB4:	03-9C       	mul r0, r3            ; Multiply Unsigned
14EB6:	00-2C       	mov r0, r0            ; Copy Register
14EB8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14EBA:	02-05       	cpc r16, r2           ; Compare with Carry
14EBC:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
14EBE:	01-0A       	sbc r0, r17           ; Subtract with Carry
14EC0:	3F-F7       	brbc 7, .-50          ; Branch if Bit in SREG is Cleared
14EC2:	17-AF       	std Y+63, r17         ; Store Indirect From Register to Data Space
14EC4:	00-24       	clr r0                ; Clear Register
14EC6:	27-E7       	ldi r18, 0x77         ; Load Immediate
14EC8:	00-00       	nop                   ; No Operation
14ECA:	70-3E       	cpi r23, 0xe0         ; Compare with Immediate
14ECC:	00-00       	nop                   ; No Operation
14ECE:	70-41       	sbci r23, 0x10        ; Subtract Immediate with Carry SBI
14ED0:	00-00       	nop                   ; No Operation
14ED2:	20-40       	sbci r18, 0x00        ; Subtract Immediate with Carry SBI
14ED4:	00-00       	nop                   ; No Operation
14ED6:	F0-3F       	cpi r31, 0xf0         ; Compare with Immediate
14ED8:	00-00       	nop                   ; No Operation
14EDA:	E0-3F       	cpi r30, 0xf0         ; Compare with Immediate
14EDC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
14EDE:	0A-9E       	mul r0, r26           ; Multiply Unsigned
14EE0:	06-95       	lsr r16               ; Logical Shift Right
14EE2:	72-42       	sbci r23, 0x22        ; Subtract Immediate with Carry SBI
14EE4:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
14EE6:	CD-F8       	.data 0xf8cd          ; Binary data
14EE8:	1C-A0       	ldd r1, Y+36          ; Load Indirect from Data Space to Register
14EEA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14EEC:	49-FC       	.data 0xfc49          ; Binary data
14EEE:	00-22       	and r0, r16           ; Logical AND
14EF0:	92-4B       	sbci r25, 0xb2        ; Subtract Immediate with Carry SBI
14EF2:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14EF4:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14EF6:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14EF8:	17-F9       	bld r17, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
14EFA:	00-28       	or r0, r0             ; Logical OR
14EFC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14EFE:	B6-81       	ldd r27, Y+6          ; Load Indirect from Data Space to Register
14F00:	00-22       	and r0, r16           ; Logical AND
14F02:	8F-4B       	sbci r24, 0xbf        ; Subtract Immediate with Carry SBI
14F04:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14F06:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14F08:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F0A:	88-FE       	.data 0xfe88          ; Binary data
14F0C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14F0E:	20-F9       	bld r18, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
14F10:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
14F12:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F14:	1D-FE       	.data 0xfe1d          ; Binary data
14F16:	00-22       	and r0, r16           ; Logical AND
14F18:	88-4B       	sbci r24, 0xb8        ; Subtract Immediate with Carry SBI
14F1A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F1C:	7F-FE       	.data 0xfe7f          ; Binary data
14F1E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14F20:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14F22:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14F24:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14F26:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F28:	C5-FC       	sbrc r12, 5           ; Skip if Bit in Register is Cleared
14F2A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
14F2C:	11-F9       	bld r17, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
14F2E:	03-9C       	mul r0, r3            ; Multiply Unsigned
14F30:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
14F32:	01-08       	sbc r0, r1            ; Subtract with Carry
14F34:	0A-9C       	mul r0, r10           ; Multiply Unsigned
14F36:	18-34       	cpi r17, 0x48         ; Compare with Immediate
14F38:	10-A9       	std Y+48, r17         ; Store Indirect From Register to Data Space
14F3A:	0A-94       	dec r0                ; Decrement
14F3C:	03-9C       	mul r0, r3            ; Multiply Unsigned
14F3E:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
14F40:	24-00       	.data 0x0024          ; Binary data
14F42:	41-F8       	bld r4, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
14F44:	28-60       	ori r18, 0x08         ; Logical OR with Immediate
14F46:	0A-9A       	sbi 0x01, 2           ; Set Bit in I/O Register
14F48:	7E-49       	sbci r23, 0x9e        ; Subtract Immediate with Carry SBI
14F4A:	00-20       	and r0, r0            ; Logical AND
14F4C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F4E:	18-FC       	.data 0xfc18          ; Binary data
14F50:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
14F52:	00-0F       	add r16, r16          ; Add without Carry
14F54:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14F56:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14F58:	5A-DB       	rcall .+5812          ; Relative Call to Subroutine
14F5A:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
14F5C:	01-06       	cpc r0, r17           ; Compare with Carry
14F5E:	10-A8       	std Y+48, r1          ; Store Indirect From Register to Data Space
14F60:	74-A9       	std Y+52, r23         ; Store Indirect From Register to Data Space
14F62:	03-96       	adiw r24, 0x03        ; Add Immediate to Word
14F64:	00-EB       	ldi r16, 0xb0         ; Load Immediate
14F66:	86-07       	cpc r24, r22          ; Compare with Carry
14F68:	01-EB       	ldi r16, 0xb1         ; Load Immediate
14F6A:	C6-06       	cpc r12, r22          ; Compare with Carry
14F6C:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
14F6E:	04-0D       	add r16, r4           ; Add without Carry
14F70:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F72:	EE-FD       	.data 0xfdee          ; Binary data
14F74:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
14F76:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
14F78:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F7A:	50-FE       	sbrs r5, 0            ; Skip if Bit in Register is Set
14F7C:	00-22       	and r0, r16           ; Logical AND
14F7E:	66-E9       	ldi r22, 0x96         ; Load Immediate
14F80:	02-01       	movw r0, r4           ; Copy Register Word
14F82:	6F-4B       	sbci r22, 0xbf        ; Subtract Immediate with Carry SBI
14F84:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14F86:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14F88:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14F8A:	48-FE       	.data 0xfe48          ; Binary data
14F8C:	02-9A       	sbi 0x00, 2           ; Set Bit in I/O Register
14F8E:	97-42       	sbci r25, 0x27        ; Subtract Immediate with Carry SBI
14F90:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14F92:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14F94:	EA-D1       	rcall .+980           ; Relative Call to Subroutine
14F96:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
14F98:	00-5B       	subi r16, 0xb0        ; Subtract Immediate
14F9A:	0B-F1       	brbs 3, .+66          ; Branch if Bit in SREG is Set
14F9C:	FF-3B       	cpi r31, 0xbf         ; Compare with Immediate
14F9E:	74-AB       	std Y+52, r23         ; Store Indirect From Register to Data Space
14FA0:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
14FA2:	98-7A       	andi r25, 0xa8        ; Logical AND with Immediate
14FA4:	CD-F8       	.data 0xf8cd          ; Binary data
14FA6:	20-80       	ld r2, Z              ; Load Indirect from Data Space to Register
14FA8:	DD-F8       	.data 0xf8dd          ; Binary data
14FAA:	30-80       	ld r3, Z              ; Load Indirect from Data Space to Register
14FAC:	CD-F8       	.data 0xf8cd          ; Binary data
14FAE:	10-A0       	ldd r1, Y+32          ; Load Indirect from Data Space to Register
14FB0:	03-EB       	ldi r16, 0xb3         ; Load Immediate
14FB2:	CB-0B       	sbc r28, r27          ; Subtract with Carry
14FB4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
14FB6:	00-09       	sbc r16, r0           ; Subtract with Carry
14FB8:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
14FBA:	00-0F       	add r16, r16          ; Add without Carry
14FBC:	C0-F2       	brbs 0, .-80          ; Branch if Bit in SREG is Set
14FBE:	22-81       	ldd r18, Y+2          ; Load Indirect from Data Space to Register
14FC0:	DF-F8       	.data 0xf8df          ; Binary data
14FC2:	84-A1       	ldd r24, Y+36         ; Load Indirect from Data Space to Register
14FC4:	5F-46       	sbci r21, 0x6f        ; Subtract Immediate with Carry SBI
14FC6:	00-24       	clr r0                ; Clear Register
14FC8:	00-25       	clr r256              ; Clear Register
14FCA:	00-26       	clr r512              ; Clear Register
14FCC:	01-E0       	ldi r16, 0x01         ; Load Immediate
14FCE:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
14FD0:	10-DC       	rcall .+6176          ; Relative Call to Subroutine
14FD2:	F7-E9       	ldi r31, 0x97         ; Load Immediate
14FD4:	02-23       	and r16, r18          ; Logical AND
14FD6:	FA-E9       	ldi r31, 0x9a         ; Load Immediate
14FD8:	02-01       	movw r0, r4           ; Copy Register Word
14FDA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14FDC:	1F-FE       	.data 0xfe1f          ; Binary data
14FDE:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
14FE0:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
14FE2:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
14FE4:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
14FE6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
14FE8:	67-FC       	sbrc r6, 7            ; Skip if Bit in Register is Cleared
14FEA:	01-36       	cpi r16, 0x61         ; Compare with Immediate
14FEC:	B0-45       	sbci r27, 0x50        ; Subtract Immediate with Carry SBI
14FEE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
14FF0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
14FF2:	EC-DA       	rcall .+5592          ; Relative Call to Subroutine
14FF4:	04-9E       	mul r0, r20           ; Multiply Unsigned
14FF6:	06-EB       	ldi r16, 0xb6         ; Load Immediate
14FF8:	C9-03       	fmulsu r20, r17       ; Fractional Multiply Signed with Unsigned
14FFA:	C3-E9       	ldi r28, 0x93         ; Load Immediate
14FFC:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
14FFE:	03-9C       	mul r0, r3            ; Multiply Unsigned
15000:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
15002:	01-09       	sbc r16, r1           ; Subtract with Carry
15004:	A1-45       	sbci r26, 0x51        ; Subtract Immediate with Carry SBI
15006:	AB-F1       	brbs 3, .+106         ; Branch if Bit in SREG is Set
15008:	08-0B       	sbc r16, r24          ; Subtract with Carry
1500A:	D5-D1       	rcall .+938           ; Relative Call to Subroutine
1500C:	DD-F8       	.data 0xf8dd          ; Binary data
1500E:	20-80       	ld r2, Z              ; Load Indirect from Data Space to Register
15010:	A6-9E       	mul r10, r22          ; Multiply Unsigned
15012:	03-2E       	mov r0, r19           ; Copy Register
15014:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
15016:	8A-80       	ldd r8, Y+2           ; Load Indirect from Data Space to Register
15018:	DF-E8       	ldi r29, 0x8f         ; Load Immediate
1501A:	16-F0       	brbs 6, .+4           ; Branch if Bit in SREG is Set
1501C:	D4-00       	.data 0x00d4          ; Binary data
1501E:	98-00       	.data 0x0098          ; Binary data
15020:	98-00       	.data 0x0098          ; Binary data
15022:	04-00       	.data 0x0004          ; Binary data
15024:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
15026:	00-0F       	add r16, r16          ; Add without Carry
15028:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
1502A:	0C-81       	ldd r16, Y+4          ; Load Indirect from Data Space to Register
1502C:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
1502E:	98-7A       	andi r25, 0xa8        ; Logical AND with Immediate
15030:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15032:	C8-0B       	sbc r28, r24          ; Subtract with Carry
15034:	0A-EB       	ldi r16, 0xba         ; Load Immediate
15036:	0B-03       	fmul r16, r19         ; Fractional Multiply Unsigned
15038:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1503A:	00-67       	ori r16, 0x70         ; Logical OR with Immediate
1503C:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
1503E:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
15040:	0A-EB       	ldi r16, 0xba         ; Load Immediate
15042:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
15044:	03-93       	.data 0x9303          ; Binary data
15046:	99-46       	sbci r25, 0x69        ; Subtract Immediate with Carry SBI
15048:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
1504A:	9C-7C       	andi r25, 0xcc        ; Logical AND with Immediate
1504C:	01-E0       	ldi r16, 0x01         ; Load Immediate
1504E:	26-46       	sbci r18, 0x66        ; Subtract Immediate with Carry SBI
15050:	2F-46       	sbci r18, 0x6f        ; Subtract Immediate with Carry SBI
15052:	59-E9       	ldi r21, 0x99         ; Load Immediate
15054:	04-01       	movw r0, r8           ; Copy Register Word
15056:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15058:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
1505A:	CD-F8       	.data 0xf8cd          ; Binary data
1505C:	04-C0       	rjmp .+8              ; Relative Jump
1505E:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
15060:	04-01       	movw r0, r8           ; Copy Register Word
15062:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15064:	29-FC       	.data 0xfc29          ; Binary data
15066:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
15068:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
1506A:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1506C:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
1506E:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
15070:	04-01       	movw r0, r8           ; Copy Register Word
15072:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15074:	1F-FC       	.data 0xfc1f          ; Binary data
15076:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15078:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
1507A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1507C:	1D-FC       	.data 0xfc1d          ; Binary data
1507E:	69-E9       	ldi r22, 0x99         ; Load Immediate
15080:	02-01       	movw r0, r4           ; Copy Register Word
15082:	DD-F8       	.data 0xf8dd          ; Binary data
15084:	04-C0       	rjmp .+8              ; Relative Jump
15086:	E1-45       	sbci r30, 0x51        ; Subtract Immediate with Carry SBI
15088:	49-E9       	ldi r20, 0x99         ; Load Immediate
1508A:	02-45       	sbci r16, 0x52        ; Subtract Immediate with Carry SBI
1508C:	DF-D1       	rcall .+958           ; Relative Call to Subroutine
1508E:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
15090:	01-0F       	add r16, r17          ; Add without Carry
15092:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
15094:	09-81       	ldd r16, Y+1          ; Load Indirect from Data Space to Register
15096:	DD-F8       	.data 0xf8dd          ; Binary data
15098:	0C-C0       	rjmp .+24             ; Relative Jump
1509A:	CD-F8       	.data 0xf8cd          ; Binary data
1509C:	10-A0       	ldd r1, Y+32          ; Load Indirect from Data Space to Register
1509E:	D3-44       	sbci r29, 0x43        ; Subtract Immediate with Carry SBI
150A0:	DB-E9       	ldi r29, 0x9b         ; Load Immediate
150A2:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
150A4:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
150A6:	10-0B       	sbc r17, r16          ; Subtract with Carry
150A8:	E2-46       	sbci r30, 0x62        ; Subtract Immediate with Carry SBI
150AA:	01-E0       	ldi r16, 0x01         ; Load Immediate
150AC:	34-46       	sbci r19, 0x64        ; Subtract Immediate with Carry SBI
150AE:	3D-46       	sbci r19, 0x6d        ; Subtract Immediate with Carry SBI
150B0:	5A-E9       	ldi r21, 0x9a         ; Load Immediate
150B2:	04-89       	std Y+20, r16         ; Store Indirect From Register to Data Space
150B4:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
150B6:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
150B8:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
150BA:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
150BC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
150BE:	FC-FB       	.data 0xfbfc          ; Binary data
150C0:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
150C2:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
150C4:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
150C6:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
150C8:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
150CA:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
150CC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
150CE:	F2-FB       	bst r31, 2            ; Bit Store from Bit in Register to T Flag in SREG
150D0:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
150D2:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
150D4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
150D6:	F0-FB       	bst r31, 0            ; Bit Store from Bit in Register to T Flag in SREG
150D8:	6A-E9       	ldi r22, 0x9a         ; Load Immediate
150DA:	02-01       	movw r0, r4           ; Copy Register Word
150DC:	DA-45       	sbci r29, 0x5a        ; Subtract Immediate with Carry SBI
150DE:	4A-E9       	ldi r20, 0x9a         ; Load Immediate
150E0:	02-67       	ori r16, 0x72         ; Logical OR with Immediate
150E2:	E3-D1       	rcall .+966           ; Relative Call to Subroutine
150E4:	DD-F8       	.data 0xf8dd          ; Binary data
150E6:	10-A0       	ldd r1, Y+32          ; Load Indirect from Data Space to Register
150E8:	03-9C       	mul r0, r3            ; Multiply Unsigned
150EA:	00-20       	and r0, r0            ; Logical AND
150EC:	00-21       	and r16, r0           ; Logical AND
150EE:	74-E9       	ldi r23, 0x94         ; Load Immediate
150F0:	02-23       	and r16, r18          ; Logical AND
150F2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
150F4:	E1-FB       	bst r30, 1            ; Bit Store from Bit in Register to T Flag in SREG
150F6:	A3-45       	sbci r26, 0x53        ; Subtract Immediate with Carry SBI
150F8:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
150FA:	06-9C       	mul r0, r6            ; Multiply Unsigned
150FC:	00-2C       	mov r0, r0            ; Copy Register
150FE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15100:	A9-80       	ldd r10, Y+1          ; Load Indirect from Data Space to Register
15102:	0B-9E       	mul r0, r27           ; Multiply Unsigned
15104:	DA-F8       	.data 0xf8da          ; Binary data
15106:	04-50       	subi r16, 0x04        ; Subtract Immediate
15108:	DA-F8       	.data 0xf8da          ; Binary data
1510A:	0C-40       	sbci r16, 0x0c        ; Subtract Immediate with Carry SBI
1510C:	DA-F8       	.data 0xf8da          ; Binary data
1510E:	00-20       	and r0, r0            ; Logical AND
15110:	DA-F8       	.data 0xf8da          ; Binary data
15112:	08-30       	cpi r16, 0x08         ; Compare with Immediate
15114:	32-60       	ori r19, 0x02         ; Logical OR with Immediate
15116:	05-F1       	brbs 5, .+64          ; Branch if Bit in SREG is Set
15118:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
1511A:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1511C:	00-44       	sbci r16, 0x40        ; Subtract Immediate with Carry SBI
1511E:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
15120:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
15122:	75-60       	ori r23, 0x05         ; Logical OR with Immediate
15124:	F4-60       	ori r31, 0x04         ; Logical OR with Immediate
15126:	B3-60       	ori r27, 0x03         ; Logical OR with Immediate
15128:	30-61       	ori r19, 0x10         ; Logical OR with Immediate
1512A:	72-61       	ori r23, 0x12         ; Logical OR with Immediate
1512C:	07-9C       	mul r0, r7            ; Multiply Unsigned
1512E:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
15130:	07-00       	.data 0x0007          ; Binary data
15132:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
15134:	1D-7D       	andi r17, 0xdd        ; Logical AND with Immediate
15136:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15138:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
1513A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1513C:	00-00       	nop                   ; No Operation
1513E:	70-41       	sbci r23, 0x10        ; Subtract Immediate with Carry SBI
15140:	00-00       	nop                   ; No Operation
15142:	70-3E       	cpi r23, 0xe0         ; Compare with Immediate
15144:	00-00       	nop                   ; No Operation
15146:	F0-3F       	cpi r31, 0xf0         ; Compare with Immediate
15148:	D8-85       	std Y+8, r29          ; Store Indirect From Register to Data Space
1514A:	01-00       	.data 0x0001          ; Binary data
1514C:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
1514E:	00-0F       	add r16, r16          ; Add without Carry
15150:	C0-F2       	brbs 0, .-80          ; Branch if Bit in SREG is Set
15152:	A5-80       	ldd r10, Y+5          ; Load Indirect from Data Space to Register
15154:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
15156:	98-7A       	andi r25, 0xa8        ; Logical AND with Immediate
15158:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
1515A:	01-04       	cpc r0, r1            ; Compare with Carry
1515C:	0A-EB       	ldi r16, 0xba         ; Load Immediate
1515E:	C4-04       	cpc r12, r4           ; Compare with Carry
15160:	00-20       	and r0, r0            ; Logical AND
15162:	00-21       	and r16, r0           ; Logical AND
15164:	74-E9       	ldi r23, 0x94         ; Load Immediate
15166:	02-23       	and r16, r18          ; Logical AND
15168:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1516A:	A6-FB       	bst r26, 6            ; Bit Store from Bit in Register to T Flag in SREG
1516C:	54-45       	sbci r21, 0x54        ; Subtract Immediate with Carry SBI
1516E:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
15170:	06-9C       	mul r0, r6            ; Multiply Unsigned
15172:	00-2C       	mov r0, r0            ; Copy Register
15174:	49-D0       	rcall .+146           ; Relative Call to Subroutine
15176:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15178:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
1517A:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
1517C:	0B-9E       	mul r0, r27           ; Multiply Unsigned
1517E:	C6-E9       	ldi r28, 0x96         ; Load Immediate
15180:	00-23       	and r16, r16          ; Logical AND
15182:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15184:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15186:	DA-E9       	ldi r29, 0x9a         ; Load Immediate
15188:	00-01       	movw r0, r0           ; Copy Register Word
1518A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1518C:	93-FB       	bst r25, 3            ; Bit Store from Bit in Register to T Flag in SREG
1518E:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
15190:	00-0F       	add r16, r16          ; Add without Carry
15192:	07-DD       	rcall .+6670          ; Relative Call to Subroutine
15194:	0A-EB       	ldi r16, 0xba         ; Load Immediate
15196:	C8-08       	sbc r12, r8           ; Subtract with Carry
15198:	FA-E9       	ldi r31, 0x9a         ; Load Immediate
1519A:	02-23       	and r16, r18          ; Logical AND
1519C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1519E:	8C-FB       	.data 0xfb8c          ; Binary data
151A0:	C2-45       	sbci r28, 0x52        ; Subtract Immediate with Carry SBI
151A2:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
151A4:	06-9C       	mul r0, r6            ; Multiply Unsigned
151A6:	00-2C       	mov r0, r0            ; Copy Register
151A8:	6A-D0       	rcall .+212           ; Relative Call to Subroutine
151AA:	0B-9E       	mul r0, r27           ; Multiply Unsigned
151AC:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
151AE:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
151B0:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
151B2:	C6-E9       	ldi r28, 0x96         ; Load Immediate
151B4:	02-23       	and r16, r18          ; Logical AND
151B6:	07-9C       	mul r0, r7            ; Multiply Unsigned
151B8:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
151BA:	07-00       	.data 0x0007          ; Binary data
151BC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
151BE:	1D-7D       	andi r17, 0xdd        ; Logical AND with Immediate
151C0:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
151C2:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
151C4:	B8-F1       	brbs 0, .+110         ; Branch if Bit in SREG is Set
151C6:	00-0F       	add r16, r16          ; Add without Carry
151C8:	66-DB       	rcall .+5836          ; Relative Call to Subroutine
151CA:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
151CC:	01-04       	cpc r0, r1            ; Compare with Carry
151CE:	4C-AD       	std Y+60, r20         ; Store Indirect From Register to Data Space
151D0:	05-EB       	ldi r16, 0xb5         ; Load Immediate
151D2:	C4-04       	cpc r12, r4           ; Compare with Carry
151D4:	00-20       	and r0, r0            ; Logical AND
151D6:	00-21       	and r16, r0           ; Logical AND
151D8:	74-E9       	ldi r23, 0x94         ; Load Immediate
151DA:	02-23       	and r16, r18          ; Logical AND
151DC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
151DE:	6C-FB       	.data 0xfb6c          ; Binary data
151E0:	AC-42       	sbci r26, 0x2c        ; Subtract Immediate with Carry SBI
151E2:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
151E4:	06-9C       	mul r0, r6            ; Multiply Unsigned
151E6:	00-2C       	mov r0, r0            ; Copy Register
151E8:	50-D0       	rcall .+160           ; Relative Call to Subroutine
151EA:	0B-9E       	mul r0, r27           ; Multiply Unsigned
151EC:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
151EE:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
151F0:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
151F2:	C6-E9       	ldi r28, 0x96         ; Load Immediate
151F4:	00-23       	and r16, r16          ; Logical AND
151F6:	07-9C       	mul r0, r7            ; Multiply Unsigned
151F8:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
151FA:	07-00       	.data 0x0007          ; Binary data
151FC:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
151FE:	1D-7D       	andi r17, 0xdd        ; Logical AND with Immediate
15200:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15202:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
15204:	00-24       	clr r0                ; Clear Register
15206:	00-25       	clr r256              ; Clear Register
15208:	F4-E6       	ldi r31, 0x64         ; Load Immediate
1520A:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1520C:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
1520E:	B5-E7       	ldi r27, 0x75         ; Load Immediate
15210:	01-23       	and r16, r17          ; Logical AND
15212:	C2-E5       	ldi r28, 0x52         ; Load Immediate
15214:	10-AE       	std Y+56, r1          ; Store Indirect From Register to Data Space
15216:	0A-9C       	mul r0, r10           ; Multiply Unsigned
15218:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
1521A:	28-30       	cpi r18, 0x08         ; Compare with Immediate
1521C:	CD-F8       	.data 0xf8cd          ; Binary data
1521E:	1C-A0       	ldd r1, Y+36          ; Load Indirect from Data Space to Register
15220:	18-3C       	cpi r17, 0xc8         ; Compare with Immediate
15222:	06-95       	lsr r16               ; Logical Shift Right
15224:	0A-94       	dec r0                ; Decrement
15226:	00-2B       	or r16, r16           ; Logical OR
15228:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
1522A:	8D-AE       	std Y+61, r8          ; Store Indirect From Register to Data Space
1522C:	06-EB       	ldi r16, 0xb6         ; Load Immediate
1522E:	88-03       	fmulsu r16, r16       ; Fractional Multiply Signed with Unsigned
15230:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
15232:	53-F8       	bld r5, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
15234:	04-1D       	adc r16, r4           ; Add with Carry
15236:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
15238:	FF-38       	cpi r31, 0x8f         ; Compare with Immediate
1523A:	18-3A       	cpi r17, 0xa8         ; Compare with Immediate
1523C:	00-29       	or r16, r0            ; Logical OR
1523E:	F8-D0       	rcall .+496           ; Relative Call to Subroutine
15240:	0A-92       	st -Y, r0             ; Store Indirect From Register to Data Space
15242:	80-E6       	ldi r24, 0x60         ; Load Immediate
15244:	06-9C       	mul r0, r6            ; Multiply Unsigned
15246:	00-20       	and r0, r0            ; Logical AND
15248:	00-21       	and r16, r0           ; Logical AND
1524A:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
1524C:	98-7A       	andi r25, 0xa8        ; Logical AND with Immediate
1524E:	00-2C       	mov r0, r0            ; Copy Register
15250:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
15252:	57-AF       	std Y+63, r21         ; Store Indirect From Register to Data Space
15254:	DA-E9       	ldi r29, 0x9a         ; Load Immediate
15256:	00-23       	and r16, r16          ; Logical AND
15258:	DA-E9       	ldi r29, 0x9a         ; Load Immediate
1525A:	02-45       	sbci r16, 0x52        ; Subtract Immediate with Carry SBI
1525C:	0B-9E       	mul r0, r27           ; Multiply Unsigned
1525E:	C6-E9       	ldi r28, 0x96         ; Load Immediate
15260:	04-01       	movw r0, r8           ; Copy Register Word
15262:	C6-E9       	ldi r28, 0x96         ; Load Immediate
15264:	00-23       	and r16, r16          ; Logical AND
15266:	C6-E9       	ldi r28, 0x96         ; Load Immediate
15268:	02-45       	sbci r16, 0x52        ; Subtract Immediate with Carry SBI
1526A:	5F-E7       	ldi r21, 0x7f         ; Load Immediate
1526C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1526E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
15270:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15272:	6E-FF       	.data 0xff6e          ; Binary data
15274:	10-AE       	std Y+56, r1          ; Store Indirect From Register to Data Space
15276:	03-9C       	mul r0, r3            ; Multiply Unsigned
15278:	46-F8       	bld r4, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
1527A:	24-00       	.data 0x0024          ; Binary data
1527C:	A0-46       	sbci r26, 0x60        ; Subtract Immediate with Carry SBI
1527E:	62-E6       	ldi r22, 0x62         ; Load Immediate
15280:	0B-9E       	mul r0, r27           ; Multiply Unsigned
15282:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15284:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15286:	C6-E9       	ldi r28, 0x96         ; Load Immediate
15288:	02-23       	and r16, r18          ; Logical AND
1528A:	94-E7       	ldi r25, 0x74         ; Load Immediate
1528C:	0B-9E       	mul r0, r27           ; Multiply Unsigned
1528E:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15290:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15292:	C6-E9       	ldi r28, 0x96         ; Load Immediate
15294:	00-23       	and r16, r16          ; Logical AND
15296:	AE-E7       	ldi r26, 0x7e         ; Load Immediate
15298:	00-20       	and r0, r0            ; Logical AND
1529A:	00-21       	and r16, r0           ; Logical AND
1529C:	A2-E7       	ldi r26, 0x72         ; Load Immediate
1529E:	00-20       	and r0, r0            ; Logical AND
152A0:	00-21       	and r16, r0           ; Logical AND
152A2:	0D-F5       	brbc 5, .+66          ; Branch if Bit in SREG is Cleared
152A4:	98-7A       	andi r25, 0xa8        ; Logical AND with Immediate
152A6:	63-E7       	ldi r22, 0x73         ; Load Immediate
152A8:	00-20       	and r0, r0            ; Logical AND
152AA:	00-21       	and r16, r0           ; Logical AND
152AC:	25-E7       	ldi r18, 0x75         ; Load Immediate
152AE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
152B0:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
152B2:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
152B4:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
152B6:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
152B8:	B6-F1       	brbs 6, .+108         ; Branch if Bit in SREG is Set
152BA:	79-5F       	subi r23, 0xf9        ; Subtract Immediate
152BC:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
152BE:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
152C0:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
152C2:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
152C4:	99-46       	sbci r25, 0x69        ; Subtract Immediate with Carry SBI
152C6:	04-DA       	rcall .+5128          ; Relative Call to Subroutine
152C8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
152CA:	42-FF       	sbrs r20, 2           ; Skip if Bit in Register is Set
152CC:	00-28       	or r0, r0             ; Logical OR
152CE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
152D0:	84-80       	ldd r8, Y+4           ; Load Indirect from Data Space to Register
152D2:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
152D4:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
152D6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
152D8:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
152DA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
152DC:	9F-FC       	.data 0xfc9f          ; Binary data
152DE:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
152E0:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
152E2:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
152E4:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
152E6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
152E8:	99-FC       	.data 0xfc99          ; Binary data
152EA:	3F-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
152EC:	D3-E9       	ldi r29, 0x93         ; Load Immediate
152EE:	00-23       	and r16, r16          ; Logical AND
152F0:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
152F2:	8B-46       	sbci r24, 0x6b        ; Subtract Immediate with Carry SBI
152F4:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
152F6:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
152F8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
152FA:	90-FC       	sbrc r9, 0            ; Skip if Bit in Register is Cleared
152FC:	3C-A3       	std Y+36, r19         ; Store Indirect From Register to Data Space
152FE:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15300:	00-23       	and r16, r16          ; Logical AND
15302:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15304:	D7-FA       	bst r13, 7            ; Bit Store from Bit in Register to T Flag in SREG
15306:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15308:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
1530A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1530C:	87-FC       	sbrc r8, 7            ; Skip if Bit in Register is Cleared
1530E:	3A-A3       	std Y+34, r19         ; Store Indirect From Register to Data Space
15310:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15312:	00-23       	and r16, r16          ; Logical AND
15314:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15316:	D0-FA       	bst r13, 0            ; Bit Store from Bit in Register to T Flag in SREG
15318:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
1531A:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
1531C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1531E:	7E-FC       	.data 0xfc7e          ; Binary data
15320:	37-A3       	std Y+39, r19         ; Store Indirect From Register to Data Space
15322:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15324:	00-23       	and r16, r16          ; Logical AND
15326:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15328:	C5-FA       	bst r12, 5            ; Bit Store from Bit in Register to T Flag in SREG
1532A:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
1532C:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
1532E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15330:	75-FC       	sbrc r7, 5            ; Skip if Bit in Register is Cleared
15332:	35-A3       	std Y+37, r19         ; Store Indirect From Register to Data Space
15334:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15336:	00-23       	and r16, r16          ; Logical AND
15338:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1533A:	BE-FA       	.data 0xfabe          ; Binary data
1533C:	0E-9B       	sbis 0x01, 6          ; Skip if Bit in I/O Register is Set
1533E:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
15340:	02-01       	movw r0, r4           ; Copy Register Word
15342:	00-2B       	or r16, r16           ; Logical OR
15344:	33-D0       	rcall .+102           ; Relative Call to Subroutine
15346:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
15348:	49-46       	sbci r20, 0x69        ; Subtract Immediate with Carry SBI
1534A:	00-22       	and r0, r16           ; Logical AND
1534C:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
1534E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15350:	65-FC       	sbrc r6, 5            ; Skip if Bit in Register is Cleared
15352:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
15354:	02-23       	and r16, r18          ; Logical AND
15356:	CD-E9       	ldi r28, 0x9d         ; Load Immediate
15358:	00-01       	movw r0, r0           ; Copy Register Word
1535A:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
1535C:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
1535E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15360:	5D-FC       	.data 0xfc5d          ; Binary data
15362:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15364:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15366:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
15368:	00-01       	movw r0, r0           ; Copy Register Word
1536A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1536C:	A3-FA       	bst r10, 3            ; Bit Store from Bit in Register to T Flag in SREG
1536E:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15370:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
15372:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15374:	53-FC       	sbrc r5, 3            ; Skip if Bit in Register is Cleared
15376:	42-46       	sbci r20, 0x62        ; Subtract Immediate with Carry SBI
15378:	4B-46       	sbci r20, 0x6b        ; Subtract Immediate with Carry SBI
1537A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1537C:	9B-FA       	.data 0xfa9b          ; Binary data
1537E:	24-A3       	std Y+36, r18         ; Store Indirect From Register to Data Space
15380:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15382:	00-23       	and r16, r16          ; Logical AND
15384:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
15386:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
15388:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
1538A:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
1538C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1538E:	46-FC       	sbrc r4, 6            ; Skip if Bit in Register is Cleared
15390:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15392:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15394:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
15396:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
15398:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1539A:	8E-FA       	.data 0xfa8e          ; Binary data
1539C:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1539E:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
153A0:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
153A2:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
153A4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
153A6:	86-FA       	bst r8, 6             ; Bit Store from Bit in Register to T Flag in SREG
153A8:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
153AA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
153AC:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
153AE:	DD-E9       	ldi r29, 0x9d         ; Load Immediate
153B0:	02-23       	and r16, r18          ; Logical AND
153B2:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
153B4:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
153B6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
153B8:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
153BA:	15-A3       	std Y+37, r17         ; Store Indirect From Register to Data Space
153BC:	D3-E9       	ldi r29, 0x93         ; Load Immediate
153BE:	00-23       	and r16, r16          ; Logical AND
153C0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
153C2:	78-FA       	.data 0xfa78          ; Binary data
153C4:	52-46       	sbci r21, 0x62        ; Subtract Immediate with Carry SBI
153C6:	5B-46       	sbci r21, 0x6b        ; Subtract Immediate with Carry SBI
153C8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
153CA:	28-FC       	.data 0xfc28          ; Binary data
153CC:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
153CE:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
153D0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
153D2:	72-FA       	bst r7, 2             ; Bit Store from Bit in Register to T Flag in SREG
153D4:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
153D6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
153D8:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
153DA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
153DC:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
153DE:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
153E0:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
153E2:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
153E4:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
153E6:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
153E8:	7C-D5       	rcall .+2808          ; Relative Call to Subroutine
153EA:	CF-5A       	subi r28, 0xaf        ; Subtract Immediate
153EC:	3A-D9       	rcall .+4724          ; Relative Call to Subroutine
153EE:	E5-3D       	cpi r30, 0xd5         ; Compare with Immediate
153F0:	EB-9C       	mul r14, r11          ; Multiply Unsigned
153F2:	2B-8A       	std Y+19, r2          ; Store Indirect From Register to Data Space
153F4:	E6-E5       	ldi r30, 0x56         ; Load Immediate
153F6:	5A-3E       	cpi r21, 0xea         ; Compare with Immediate
153F8:	7D-FE       	.data 0xfe7d          ; Binary data
153FA:	B1-57       	subi r27, 0x71        ; Subtract Immediate
153FC:	E3-1D       	adc r30, r3           ; Add with Carry
153FE:	C7-3E       	cpi r28, 0xe7         ; Compare with Immediate
15400:	D5-61       	ori r29, 0x15         ; Logical OR with Immediate
15402:	C1-19       	sub r28, r1           ; Subtract Without Carry
15404:	A0-01       	movw r20, r0          ; Copy Register Word
15406:	2A-3F       	cpi r18, 0xfa         ; Compare with Immediate
15408:	A6-F8       	bld r10, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
1540A:	10-11       	cpse r17, r0          ; Compare Skip if Equal
1540C:	11-11       	cpse r17, r1          ; Compare Skip if Equal
1540E:	81-3F       	cpi r24, 0xf1         ; Compare with Immediate
15410:	49-55       	subi r20, 0x59        ; Subtract Immediate
15412:	55-55       	subi r21, 0x55        ; Subtract Immediate
15414:	55-55       	subi r21, 0x55        ; Subtract Immediate
15416:	C5-3F       	cpi r28, 0xf5         ; Compare with Immediate
15418:	00-00       	nop                   ; No Operation
1541A:	E0-3F       	cpi r30, 0xf0         ; Compare with Immediate
1541C:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
1541E:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
15420:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
15422:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
15424:	B6-4B       	sbci r27, 0xb6        ; Subtract Immediate with Carry SBI
15426:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
15428:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
1542A:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
1542C:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
1542E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
15430:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
15432:	89-46       	sbci r24, 0x69        ; Subtract Immediate with Carry SBI
15434:	0F-DD       	rcall .+6686          ; Relative Call to Subroutine
15436:	B3-49       	sbci r27, 0x93        ; Subtract Immediate with Carry SBI
15438:	8E-42       	sbci r24, 0x2e        ; Subtract Immediate with Carry SBI
1543A:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
1543C:	B3-80       	ldd r11, Y+3          ; Load Indirect from Data Space to Register
1543E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15440:	AE-80       	ldd r10, Y+6          ; Load Indirect from Data Space to Register
15442:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
15444:	00-0F       	add r16, r16          ; Add without Carry
15446:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
15448:	EF-80       	ldd r14, Y+7          ; Load Indirect from Data Space to Register
1544A:	91-A1       	ldd r25, Y+33         ; Load Indirect from Data Space to Register
1544C:	D1-E9       	ldi r29, 0x91         ; Load Immediate
1544E:	00-01       	movw r0, r0           ; Copy Register Word
15450:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
15452:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15454:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
15456:	AC-4B       	sbci r26, 0xbc        ; Subtract Immediate with Carry SBI
15458:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
1545A:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
1545C:	BD-80       	ldd r11, Y+5          ; Load Indirect from Data Space to Register
1545E:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
15460:	DE-73       	andi r29, 0x3e        ; Logical AND with Immediate
15462:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
15464:	40-F3       	brbs 0, .-48          ; Branch if Bit in SREG is Set
15466:	A7-80       	ldd r10, Y+7          ; Load Indirect from Data Space to Register
15468:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1546A:	FF-3C       	cpi r31, 0xcf         ; Compare with Immediate
1546C:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1546E:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
15470:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
15472:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
15474:	CD-F8       	.data 0xf8cd          ; Binary data
15476:	04-C0       	rjmp .+8              ; Relative Jump
15478:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1547A:	D0-FB       	bst r29, 0            ; Bit Store from Bit in Register to T Flag in SREG
1547C:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
1547E:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15480:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
15482:	8B-46       	sbci r24, 0x6b        ; Subtract Immediate with Carry SBI
15484:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15486:	CA-FB       	.data 0xfbca          ; Binary data
15488:	83-A3       	std Y+35, r24         ; Store Indirect From Register to Data Space
1548A:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1548C:	00-23       	and r16, r16          ; Logical AND
1548E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
15490:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
15492:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15494:	C3-FB       	bst r28, 3            ; Bit Store from Bit in Register to T Flag in SREG
15496:	82-A3       	std Y+34, r24         ; Store Indirect From Register to Data Space
15498:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1549A:	00-23       	and r16, r16          ; Logical AND
1549C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1549E:	0C-FA       	.data 0xfa0c          ; Binary data
154A0:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
154A2:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
154A4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154A6:	BA-FB       	.data 0xfbba          ; Binary data
154A8:	7F-A3       	std Y+39, r23         ; Store Indirect From Register to Data Space
154AA:	D3-E9       	ldi r29, 0x93         ; Load Immediate
154AC:	00-23       	and r16, r16          ; Logical AND
154AE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154B0:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
154B2:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
154B4:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
154B6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154B8:	B1-FB       	bst r27, 1            ; Bit Store from Bit in Register to T Flag in SREG
154BA:	7D-A3       	std Y+37, r23         ; Store Indirect From Register to Data Space
154BC:	D3-E9       	ldi r29, 0x93         ; Load Immediate
154BE:	00-23       	and r16, r16          ; Logical AND
154C0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154C2:	FA-F9       	.data 0xf9fa          ; Binary data
154C4:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
154C6:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
154C8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154CA:	A8-FB       	.data 0xfba8          ; Binary data
154CC:	7A-A3       	std Y+34, r23         ; Store Indirect From Register to Data Space
154CE:	D3-E9       	ldi r29, 0x93         ; Load Immediate
154D0:	00-23       	and r16, r16          ; Logical AND
154D2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154D4:	F1-F9       	bld r31, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
154D6:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
154D8:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
154DA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154DC:	9F-FB       	.data 0xfb9f          ; Binary data
154DE:	78-A3       	std Y+32, r23         ; Store Indirect From Register to Data Space
154E0:	D3-E9       	ldi r29, 0x93         ; Load Immediate
154E2:	00-23       	and r16, r16          ; Logical AND
154E4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154E6:	E8-F9       	.data 0xf9e8          ; Binary data
154E8:	52-46       	sbci r21, 0x62        ; Subtract Immediate with Carry SBI
154EA:	5B-46       	sbci r21, 0x6b        ; Subtract Immediate with Carry SBI
154EC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
154EE:	96-FB       	bst r25, 6            ; Bit Store from Bit in Register to T Flag in SREG
154F0:	75-A3       	std Y+37, r23         ; Store Indirect From Register to Data Space
154F2:	D3-E9       	ldi r29, 0x93         ; Load Immediate
154F4:	00-23       	and r16, r16          ; Logical AND
154F6:	82-46       	sbci r24, 0x62        ; Subtract Immediate with Carry SBI
154F8:	8B-46       	sbci r24, 0x6b        ; Subtract Immediate with Carry SBI
154FA:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
154FC:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
154FE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15500:	8D-FB       	.data 0xfb8d          ; Binary data
15502:	73-A3       	std Y+35, r23         ; Store Indirect From Register to Data Space
15504:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15506:	00-23       	and r16, r16          ; Logical AND
15508:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1550A:	D4-F9       	bld r29, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1550C:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
1550E:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
15510:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15512:	84-FB       	bst r24, 4            ; Bit Store from Bit in Register to T Flag in SREG
15514:	70-A3       	std Y+32, r23         ; Store Indirect From Register to Data Space
15516:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15518:	00-23       	and r16, r16          ; Logical AND
1551A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1551C:	CB-F9       	.data 0xf9cb          ; Binary data
1551E:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15520:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
15522:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15524:	7B-FB       	.data 0xfb7b          ; Binary data
15526:	6E-A3       	std Y+38, r22         ; Store Indirect From Register to Data Space
15528:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1552A:	00-23       	and r16, r16          ; Logical AND
1552C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1552E:	C2-F9       	bld r28, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
15530:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15532:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
15534:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15536:	72-FB       	bst r23, 2            ; Bit Store from Bit in Register to T Flag in SREG
15538:	6B-A3       	std Y+35, r22         ; Store Indirect From Register to Data Space
1553A:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1553C:	00-23       	and r16, r16          ; Logical AND
1553E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15540:	B9-F9       	.data 0xf9b9          ; Binary data
15542:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15544:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
15546:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15548:	69-FB       	.data 0xfb69          ; Binary data
1554A:	DD-F8       	.data 0xf8dd          ; Binary data
1554C:	04-C0       	rjmp .+8              ; Relative Jump
1554E:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
15550:	FF-3F       	cpi r31, 0xff         ; Compare with Immediate
15552:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15554:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15556:	6B-D0       	rcall .+214           ; Relative Call to Subroutine
15558:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
1555A:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
1555C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1555E:	CC-06       	cpc r12, r28          ; Compare with Carry
15560:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15562:	AA-F9       	.data 0xf9aa          ; Binary data
15564:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
15566:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
15568:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1556A:	58-FB       	.data 0xfb58          ; Binary data
1556C:	67-4F       	sbci r22, 0xf7        ; Subtract Immediate with Carry SBI
1556E:	68-4B       	sbci r22, 0xb8        ; Subtract Immediate with Carry SBI
15570:	37-44       	sbci r19, 0x47        ; Subtract Immediate with Carry SBI
15572:	1E-44       	sbci r17, 0x4e        ; Subtract Immediate with Carry SBI
15574:	D6-E9       	ldi r29, 0x96         ; Load Immediate
15576:	00-23       	and r16, r16          ; Logical AND
15578:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1557A:	9C-F9       	.data 0xf99c          ; Binary data
1557C:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1557E:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
15580:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15582:	98-F9       	.data 0xf998          ; Binary data
15584:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15586:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15588:	D7-E9       	ldi r29, 0x97         ; Load Immediate
1558A:	00-01       	movw r0, r0           ; Copy Register Word
1558C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1558E:	92-F9       	bld r25, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
15590:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
15592:	00-0F       	add r16, r16          ; Add without Carry
15594:	0C-DA       	rcall .+5144          ; Relative Call to Subroutine
15596:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
15598:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
1559A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1559C:	08-E0       	ldi r16, 0x08         ; Load Immediate
1559E:	00-28       	or r0, r0             ; Logical OR
155A0:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
155A2:	4F-AF       	std Y+63, r20         ; Store Indirect From Register to Data Space
155A4:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
155A6:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
155A8:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
155AA:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
155AC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
155AE:	84-F9       	bld r24, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
155B0:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
155B2:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
155B4:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
155B6:	4E-A3       	std Y+38, r20         ; Store Indirect From Register to Data Space
155B8:	D3-E9       	ldi r29, 0x93         ; Load Immediate
155BA:	00-23       	and r16, r16          ; Logical AND
155BC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
155BE:	7C-F9       	.data 0xf97c          ; Binary data
155C0:	00-22       	and r0, r16           ; Logical AND
155C2:	54-4B       	sbci r21, 0xb4        ; Subtract Immediate with Carry SBI
155C4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
155C6:	BA-FD       	.data 0xfdba          ; Binary data
155C8:	00-28       	or r0, r0             ; Logical OR
155CA:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
155CC:	4D-AF       	std Y+61, r20         ; Store Indirect From Register to Data Space
155CE:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
155D0:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
155D2:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
155D4:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
155D6:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
155D8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
155DA:	CA-F8       	.data 0xf8ca          ; Binary data
155DC:	4E-4B       	sbci r20, 0xbe        ; Subtract Immediate with Carry SBI
155DE:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
155E0:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
155E2:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
155E4:	33-DC       	rcall .+6246          ; Relative Call to Subroutine
155E6:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
155E8:	50-23       	and r21, r16          ; Logical AND
155EA:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
155EC:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
155EE:	A5-80       	ldd r10, Y+5          ; Load Indirect from Data Space to Register
155F0:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
155F2:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
155F4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
155F6:	60-F9       	bld r22, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
155F8:	00-22       	and r0, r16           ; Logical AND
155FA:	46-4B       	sbci r20, 0xb6        ; Subtract Immediate with Carry SBI
155FC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
155FE:	5A-F9       	.data 0xf95a          ; Binary data
15600:	00-22       	and r0, r16           ; Logical AND
15602:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
15604:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
15606:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
15608:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1560A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1560C:	80-43       	sbci r24, 0x30        ; Subtract Immediate with Carry SBI
1560E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15610:	53-F9       	bld r21, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
15612:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15614:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15616:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
15618:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
1561A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1561C:	29-FC       	.data 0xfc29          ; Binary data
1561E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15620:	00-0C       	add r0, r0            ; Add without Carry
15622:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
15624:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
15626:	21-E7       	ldi r18, 0x71         ; Load Immediate
15628:	33-A1       	ldd r19, Y+35         ; Load Indirect from Data Space to Register
1562A:	D1-E9       	ldi r29, 0x91         ; Load Immediate
1562C:	00-01       	movw r0, r0           ; Copy Register Word
1562E:	BF-E7       	ldi r27, 0x7f         ; Load Immediate
15630:	50-46       	sbci r21, 0x60        ; Subtract Immediate with Carry SBI
15632:	59-46       	sbci r21, 0x69        ; Subtract Immediate with Carry SBI
15634:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15636:	40-F9       	bld r20, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
15638:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
1563A:	2B-46       	sbci r18, 0x6b        ; Subtract Immediate with Carry SBI
1563C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1563E:	EE-FA       	.data 0xfaee          ; Binary data
15640:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15642:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15644:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
15646:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
15648:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1564A:	34-F9       	bld r19, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
1564C:	B0-E7       	ldi r27, 0x70         ; Load Immediate
1564E:	33-4B       	sbci r19, 0xb3        ; Subtract Immediate with Carry SBI
15650:	9E-42       	sbci r25, 0x2e        ; Subtract Immediate with Carry SBI
15652:	67-DC       	rcall .+6350          ; Relative Call to Subroutine
15654:	00-22       	and r0, r16           ; Logical AND
15656:	32-4B       	sbci r19, 0xb2        ; Subtract Immediate with Carry SBI
15658:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1565A:	2C-F9       	.data 0xf92c          ; Binary data
1565C:	00-22       	and r0, r16           ; Logical AND
1565E:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
15660:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
15662:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
15664:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
15666:	2E-4B       	sbci r18, 0xbe        ; Subtract Immediate with Carry SBI
15668:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1566A:	D8-FA       	.data 0xfad8          ; Binary data
1566C:	00-22       	and r0, r16           ; Logical AND
1566E:	29-4B       	sbci r18, 0xb9        ; Subtract Immediate with Carry SBI
15670:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15672:	22-F9       	bld r18, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
15674:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15676:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15678:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1567A:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
1567C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1567E:	F8-FB       	.data 0xfbf8          ; Binary data
15680:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15682:	02-0C       	add r0, r2            ; Add without Carry
15684:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
15686:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
15688:	F0-E6       	ldi r31, 0x60         ; Load Immediate
1568A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1568C:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
1568E:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
15690:	18-2D       	mov r17, r8           ; Copy Register
15692:	44-54       	subi r20, 0x44        ; Subtract Immediate
15694:	FB-21       	and r31, r11          ; Logical AND
15696:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
15698:	11-DA       	rcall .+5154          ; Relative Call to Subroutine
1569A:	22-E3       	ldi r18, 0x32         ; Load Immediate
1569C:	3A-AD       	std Y+58, r19         ; Store Indirect From Register to Data Space
1569E:	90-3F       	cpi r25, 0xf0         ; Compare with Immediate
156A0:	EB-0D       	add r30, r11          ; Add without Carry
156A2:	76-24       	clr r118              ; Clear Register
156A4:	4B-7B       	andi r20, 0xbb        ; Logical AND with Immediate
156A6:	A9-3F       	cpi r26, 0xf9         ; Compare with Immediate
156A8:	51-3D       	cpi r21, 0xd1         ; Compare with Immediate
156AA:	D0-A0       	ldd r13, Y+32         ; Load Indirect from Data Space to Register
156AC:	66-0D       	add r22, r6           ; Add without Carry
156AE:	B1-3F       	cpi r27, 0xf1         ; Compare with Immediate
156B0:	6E-20       	and r6, r14           ; Logical AND
156B2:	4C-C5       	rjmp .+2712           ; Relative Jump
156B4:	CD-45       	sbci r28, 0x5d        ; Subtract Immediate with Carry SBI
156B6:	B7-3F       	cpi r27, 0xf7         ; Compare with Immediate
156B8:	FF-83       	std Y+7, r31          ; Store Indirect From Register to Data Space
156BA:	00-92-24-49 	sts 0x4924, r0        ; Store Direct to Data Space
156BE:	C2-3F       	cpi r28, 0xf2         ; Compare with Immediate
156C0:	0D-55       	subi r16, 0x5d        ; Subtract Immediate
156C2:	55-55       	subi r21, 0x55        ; Subtract Immediate
156C4:	55-55       	subi r21, 0x55        ; Subtract Immediate
156C6:	D5-3F       	cpi r29, 0xf5         ; Compare with Immediate
156C8:	2F-6C       	ori r18, 0xcf         ; Logical OR with Immediate
156CA:	6A-2C       	mov r6, r10           ; Copy Register
156CC:	44-B4       	in r4, 0x24           ; Load an I/O Location to Register
156CE:	A2-BF       	out 0x32, r26         ; Store Register to I/O Location
156D0:	9A-FD       	.data 0xfd9a          ; Binary data
156D2:	DE-52       	subi r29, 0x2e        ; Subtract Immediate
156D4:	2D-DE       	rcall .+7258          ; Relative Call to Subroutine
156D6:	AD-3F       	cpi r26, 0xfd         ; Compare with Immediate
156D8:	6D-9A       	sbi 0x0d, 5           ; Set Bit in I/O Register
156DA:	74-AF       	std Y+60, r23         ; Store Indirect From Register to Data Space
156DC:	F2-B0       	in r15, 0x02          ; Load an I/O Location to Register
156DE:	B3-3F       	cpi r27, 0xf3         ; Compare with Immediate
156E0:	71-16       	cp r7, r17            ; Compare
156E2:	23-FE       	sbrs r2, 3            ; Skip if Bit in Register is Set
156E4:	C6-71       	andi r28, 0x16        ; Logical AND with Immediate
156E6:	BC-3F       	cpi r27, 0xfc         ; Compare with Immediate
156E8:	C4-EB       	ldi r28, 0xb4         ; Load Immediate
156EA:	98-99       	sbic 0x13, 0          ; Skip if Bit in I/O Register is Cleared
156EC:	99-99       	sbic 0x13, 1          ; Skip if Bit in I/O Register is Cleared
156EE:	C9-3F       	cpi r28, 0xf9         ; Compare with Immediate
156F0:	9C-75       	andi r25, 0x5c        ; Logical AND with Immediate
156F2:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
156F4:	3C-E4       	ldi r19, 0x4c         ; Load Immediate
156F6:	37-7E       	andi r19, 0xe7        ; Logical AND with Immediate
156F8:	18-2D       	mov r17, r8           ; Copy Register
156FA:	44-54       	subi r20, 0x44        ; Subtract Immediate
156FC:	FB-21       	and r31, r11          ; Logical AND
156FE:	F9-BF       	out 0x39, r31         ; Store Register to I/O Location
15700:	FF-FF       	.data 0xffff          ; Binary data
15702:	0F-44       	sbci r16, 0x4f        ; Subtract Immediate with Carry SBI
15704:	00-00       	nop                   ; No Operation
15706:	F0-7F       	andi r31, 0xf0        ; Logical AND with Immediate
15708:	FF-FF       	.data 0xffff          ; Binary data
1570A:	DB-3F       	cpi r29, 0xfb         ; Compare with Immediate
1570C:	40-86       	std Y+8, r4           ; Store Indirect From Register to Data Space
1570E:	01-00       	.data 0x0001          ; Binary data
15710:	20-86       	std Y+8, r2           ; Store Indirect From Register to Data Space
15712:	01-00       	.data 0x0001          ; Binary data
15714:	00-00       	nop                   ; No Operation
15716:	F0-3F       	cpi r31, 0xf0         ; Compare with Immediate
15718:	FF-FF       	.data 0xffff          ; Binary data
1571A:	F2-3F       	cpi r31, 0xf2         ; Compare with Immediate
1571C:	FF-7F       	andi r31, 0xff        ; Logical AND with Immediate
1571E:	03-40       	sbci r16, 0x03        ; Subtract Immediate with Carry SBI
15720:	00-00       	nop                   ; No Operation
15722:	F8-3F       	cpi r31, 0xf8         ; Compare with Immediate
15724:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15726:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15728:	00-20       	and r0, r0            ; Logical AND
1572A:	0F-49       	sbci r16, 0x9f        ; Subtract Immediate with Carry SBI
1572C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1572E:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
15730:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15732:	03-0C       	add r0, r3            ; Add without Carry
15734:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
15736:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
15738:	98-E6       	ldi r25, 0x68         ; Load Immediate
1573A:	00-22       	and r0, r16           ; Logical AND
1573C:	0B-4B       	sbci r16, 0xbb        ; Subtract Immediate with Carry SBI
1573E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15740:	B9-F8       	.data 0xf8b9          ; Binary data
15742:	00-22       	and r0, r16           ; Logical AND
15744:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
15746:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
15748:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
1574A:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
1574C:	07-4B       	sbci r16, 0xb7        ; Subtract Immediate with Carry SBI
1574E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15750:	B3-F8       	bld r11, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
15752:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15754:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15756:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
15758:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
1575A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1575C:	89-FB       	.data 0xfb89          ; Binary data
1575E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15760:	01-0C       	add r0, r1            ; Add without Carry
15762:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
15764:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
15766:	81-E6       	ldi r24, 0x61         ; Load Immediate
15768:	00-00       	nop                   ; No Operation
1576A:	F0-BF       	out 0x30, r31         ; Store Register to I/O Location
1576C:	00-00       	nop                   ; No Operation
1576E:	F0-3F       	cpi r31, 0xf0         ; Compare with Immediate
15770:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
15772:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15774:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15776:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15778:	00-20       	and r0, r0            ; Logical AND
1577A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1577C:	FF-FF       	.data 0xffff          ; Binary data
1577E:	FF-FF       	.data 0xffff          ; Binary data
15780:	C1-F3       	brbs 1, .-16          ; Branch if Bit in SREG is Set
15782:	0A-53       	subi r16, 0x3a        ; Subtract Immediate
15784:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
15786:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
15788:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
1578A:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
1578C:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
1578E:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
15790:	1B-BB       	out 0x1b, r17         ; Store Register to I/O Location
15792:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
15794:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
15796:	03-43       	sbci r16, 0x33        ; Subtract Immediate with Carry SBI
15798:	34-D0       	rcall .+104           ; Relative Call to Subroutine
1579A:	3B-4B       	sbci r19, 0xbb        ; Subtract Immediate with Carry SBI
1579C:	00-22       	and r0, r16           ; Logical AND
1579E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
157A0:	3D-FA       	.data 0xfa3d          ; Binary data
157A2:	3A-4B       	sbci r19, 0xba        ; Subtract Immediate with Carry SBI
157A4:	98-45       	sbci r25, 0x58        ; Subtract Immediate with Carry SBI
157A6:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
157A8:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
157AA:	3B-DB       	rcall .+5750          ; Relative Call to Subroutine
157AC:	C1-F3       	brbs 1, .-16          ; Branch if Bit in SREG is Set
157AE:	0A-53       	subi r16, 0x3a        ; Subtract Immediate
157B0:	36-3B       	cpi r19, 0xb6         ; Compare with Immediate
157B2:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
157B4:	43-44       	sbci r20, 0x43        ; Subtract Immediate with Carry SBI
157B6:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
157B8:	FE-71       	andi r31, 0x1e        ; Logical AND with Immediate
157BA:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
157BC:	16-DD       	rcall .+6700          ; Relative Call to Subroutine
157BE:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
157C0:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
157C2:	2D-A1       	ldd r18, Y+37         ; Load Indirect from Data Space to Register
157C4:	D1-E9       	ldi r29, 0x91         ; Load Immediate
157C6:	00-01       	movw r0, r0           ; Copy Register Word
157C8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
157CA:	66-F8       	bld r6, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
157CC:	2A-A3       	std Y+34, r18         ; Store Indirect From Register to Data Space
157CE:	D3-E9       	ldi r29, 0x93         ; Load Immediate
157D0:	00-23       	and r16, r16          ; Logical AND
157D2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
157D4:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
157D6:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
157D8:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
157DA:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
157DC:	FF-74       	andi r31, 0x4f        ; Logical AND with Immediate
157DE:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
157E0:	27-D0       	rcall .+78            ; Relative Call to Subroutine
157E2:	43-44       	sbci r20, 0x43        ; Subtract Immediate with Carry SBI
157E4:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
157E6:	FE-71       	andi r31, 0x1e        ; Logical AND with Immediate
157E8:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
157EA:	E8-DC       	rcall .+6608          ; Relative Call to Subroutine
157EC:	00-2B       	or r16, r16           ; Logical OR
157EE:	0B-DD       	rcall .+6678          ; Relative Call to Subroutine
157F0:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
157F2:	FF-42       	sbci r31, 0x2f        ; Subtract Immediate with Carry SBI
157F4:	22-F4       	brbc 2, .+8           ; Branch if Bit in SREG is Cleared
157F6:	E0-02       	muls r30, r16         ; Multiply Signed
157F8:	42-EA       	ldi r20, 0xa2         ; Load Immediate
157FA:	03-57       	subi r16, 0x73        ; Subtract Immediate
157FC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
157FE:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
15800:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15802:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
15804:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15806:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
15808:	13-F1       	brbs 3, .+68          ; Branch if Bit in SREG is Set
1580A:	35-0F       	add r19, r21          ; Add without Carry
1580C:	17-DA       	rcall .+5166          ; Relative Call to Subroutine
1580E:	4C-F2       	brbs 4, .-110         ; Branch if Bit in SREG is Set
15810:	50-33       	cpi r21, 0x30         ; Compare with Immediate
15812:	98-45       	sbci r25, 0x58        ; Subtract Immediate with Carry SBI
15814:	32-46       	sbci r19, 0x62        ; Subtract Immediate with Carry SBI
15816:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
15818:	20-DC       	rcall .+6208          ; Relative Call to Subroutine
1581A:	19-A1       	ldd r17, Y+33         ; Load Indirect from Data Space to Register
1581C:	D1-E9       	ldi r29, 0x91         ; Load Immediate
1581E:	00-01       	movw r0, r0           ; Copy Register Word
15820:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15822:	3A-F8       	.data 0xf83a          ; Binary data
15824:	16-A3       	std Y+38, r17         ; Store Indirect From Register to Data Space
15826:	D3-E9       	ldi r29, 0x93         ; Load Immediate
15828:	00-23       	and r16, r16          ; Logical AND
1582A:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1582C:	F7-F9       	bld r31, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
1582E:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15830:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
15832:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15834:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15836:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15838:	3F-F8       	.data 0xf83f          ; Binary data
1583A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1583C:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1583E:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
15840:	FF-42       	sbci r31, 0x2f        ; Subtract Immediate with Carry SBI
15842:	22-F4       	brbc 2, .+8           ; Branch if Bit in SREG is Cleared
15844:	E0-02       	muls r30, r16         ; Multiply Signed
15846:	36-33       	cpi r19, 0x36         ; Compare with Immediate
15848:	42-EA       	ldi r20, 0xa2         ; Load Immediate
1584A:	03-57       	subi r16, 0x73        ; Subtract Immediate
1584C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1584E:	39-46       	sbci r19, 0x69        ; Subtract Immediate with Carry SBI
15850:	00-22       	and r0, r16           ; Logical AND
15852:	0F-4B       	sbci r16, 0xbf        ; Subtract Immediate with Carry SBI
15854:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15856:	E2-F9       	bld r30, 2            ; Bit Load from the T Flag in SREG to a Bit in Register
15858:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1585A:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
1585C:	06-A1       	ldd r16, Y+38         ; Load Indirect from Data Space to Register
1585E:	D1-E9       	ldi r29, 0x91         ; Load Immediate
15860:	00-01       	movw r0, r0           ; Copy Register Word
15862:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15864:	19-F8       	.data 0xf819          ; Binary data
15866:	04-A3       	std Y+36, r16         ; Store Indirect From Register to Data Space
15868:	D3-E9       	ldi r29, 0x93         ; Load Immediate
1586A:	00-23       	and r16, r16          ; Logical AND
1586C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1586E:	D6-F9       	bld r29, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
15870:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
15872:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
15874:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
15876:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
15878:	9C-75       	andi r25, 0x5c        ; Logical AND with Immediate
1587A:	00-88       	std Y+16, r0          ; Store Indirect From Register to Data Space
1587C:	3C-E4       	ldi r19, 0x4c         ; Load Immediate
1587E:	37-7E       	andi r19, 0xe7        ; Logical AND with Immediate
15880:	59-F3       	brbs 1, .-42          ; Branch if Bit in SREG is Set
15882:	F8-C2       	rjmp .+1520           ; Relative Jump
15884:	1F-6E       	ori r17, 0xef         ; Logical OR with Immediate
15886:	A5-01       	movw r20, r10         ; Copy Register Word
15888:	00-00       	nop                   ; No Operation
1588A:	50-43       	sbci r21, 0x30        ; Subtract Immediate with Carry SBI
1588C:	B0-3C       	cpi r27, 0xc0         ; Compare with Immediate
1588E:	FF-FF       	.data 0xffff          ; Binary data
15890:	00-00       	nop                   ; No Operation
15892:	90-3C       	cpi r25, 0xc0         ; Compare with Immediate
15894:	AF-F3       	brbs 7, .-22          ; Branch if Bit in SREG is Set
15896:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
15898:	30-B4       	in r3, 0x20           ; Load an I/O Location to Register
1589A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1589C:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
1589E:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
158A0:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
158A2:	43-EA       	ldi r20, 0xa3         ; Load Immediate
158A4:	02-01       	movw r0, r4           ; Copy Register Word
158A6:	30-BC       	out 0x20, r3          ; Store Register to I/O Location
158A8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
158AA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
158AC:	81-F0       	brbs 1, .+32          ; Branch if Bit in SREG is Set
158AE:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
158B0:	02-E0       	ldi r16, 0x02         ; Load Immediate
158B2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
158B4:	83-F0       	brbs 3, .+32          ; Branch if Bit in SREG is Set
158B6:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
158B8:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
158BA:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
158BC:	41-04       	cpc r4, r1            ; Compare with Carry
158BE:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
158C0:	43-05       	cpc r20, r3           ; Compare with Carry
158C2:	94-EA       	ldi r25, 0xa4         ; Load Immediate
158C4:	05-0F       	add r16, r21          ; Add without Carry
158C6:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
158C8:	90-EA       	ldi r25, 0xa0         ; Load Immediate
158CA:	02-0F       	add r16, r18          ; Add without Carry
158CC:	1F-BF       	out 0x3f, r17         ; Store Register to I/O Location
158CE:	54-EA       	ldi r21, 0xa4         ; Load Immediate
158D0:	00-0C       	add r0, r0            ; Add without Carry
158D2:	55-EA       	ldi r21, 0xa5         ; Load Immediate
158D4:	02-0C       	add r0, r2            ; Add without Carry
158D6:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
158D8:	64-5C       	subi r22, 0xc4        ; Subtract Immediate
158DA:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
158DC:	65-5C       	subi r22, 0xc5        ; Subtract Immediate
158DE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
158E0:	E2-80       	ldd r14, Y+2          ; Load Indirect from Data Space to Register
158E2:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
158E4:	54-54       	subi r21, 0x44        ; Subtract Immediate
158E6:	D4-EB       	ldi r29, 0xb4         ; Load Immediate
158E8:	55-55       	subi r21, 0x55        ; Subtract Immediate
158EA:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
158EC:	6D-42       	sbci r22, 0x2d        ; Subtract Immediate with Carry SBI
158EE:	0C-DD       	rcall .+6680          ; Relative Call to Subroutine
158F0:	2C-44       	sbci r18, 0x4c        ; Subtract Immediate with Carry SBI
158F2:	80-EA       	ldi r24, 0xa0         ; Load Immediate
158F4:	02-02       	muls r16, r18         ; Multiply Signed
158F6:	81-EA       	ldi r24, 0xa1         ; Load Immediate
158F8:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
158FA:	82-EA       	ldi r24, 0xa2         ; Load Immediate
158FC:	00-00       	nop                   ; No Operation
158FE:	83-EA       	ldi r24, 0xa3         ; Load Immediate
15900:	01-01       	movw r0, r2           ; Copy Register Word
15902:	80-EA       	ldi r24, 0xa0         ; Load Immediate
15904:	02-02       	muls r16, r18         ; Multiply Signed
15906:	81-EA       	ldi r24, 0xa1         ; Load Immediate
15908:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
1590A:	36-2D       	mov r19, r6           ; Copy Register
1590C:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
1590E:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15910:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
15912:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
15914:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15916:	01-31       	cpi r16, 0x11         ; Compare with Immediate
15918:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
1591A:	80-1C       	adc r8, r0            ; Add with Carry
1591C:	4C-EA       	ldi r20, 0xac         ; Load Immediate
1591E:	11-31       	cpi r17, 0x11         ; Compare with Immediate
15920:	02-D0       	rcall .+4             ; Relative Call to Subroutine
15922:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
15924:	61-EB       	ldi r22, 0xb1         ; Load Immediate
15926:	41-01       	movw r8, r2           ; Copy Register Word
15928:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
1592A:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
1592C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1592E:	03-33       	cpi r16, 0x33         ; Compare with Immediate
15930:	4C-EA       	ldi r20, 0xac         ; Load Immediate
15932:	13-33       	cpi r17, 0x33         ; Compare with Immediate
15934:	02-D0       	rcall .+4             ; Relative Call to Subroutine
15936:	52-42       	sbci r21, 0x22        ; Subtract Immediate with Carry SBI
15938:	63-EB       	ldi r22, 0xb3         ; Load Immediate
1593A:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
1593C:	94-EA       	ldi r25, 0xa4         ; Load Immediate
1593E:	05-0F       	add r16, r21          ; Add without Carry
15940:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15942:	A7-80       	ldd r10, Y+7          ; Load Indirect from Data Space to Register
15944:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
15946:	01-04       	cpc r0, r1            ; Compare with Carry
15948:	D5-F1       	brbs 5, .+116         ; Branch if Bit in SREG is Set
1594A:	20-0E       	add r2, r16           ; Add without Carry
1594C:	0D-DB       	rcall .+5658          ; Relative Call to Subroutine
1594E:	02-FA       	bst r0, 2             ; Bit Store from Bit in Register to T Flag in SREG
15950:	0E-FC       	.data 0xfc0e          ; Binary data
15952:	22-FA       	bst r2, 2             ; Bit Store from Bit in Register to T Flag in SREG
15954:	05-F2       	brbs 5, .-128         ; Branch if Bit in SREG is Set
15956:	80-18       	sub r8, r0            ; Subtract Without Carry
15958:	41-F1       	brbs 1, .+80          ; Branch if Bit in SREG is Set
1595A:	00-01       	movw r0, r0           ; Copy Register Word
1595C:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
1595E:	0E-F2       	brbs 6, .-126         ; Branch if Bit in SREG is Set
15960:	80-18       	sub r8, r0            ; Subtract Without Carry
15962:	43-FA       	bst r4, 3             ; Bit Store from Bit in Register to T Flag in SREG
15964:	05-F3       	brbs 5, .-64          ; Branch if Bit in SREG is Set
15966:	59-41       	sbci r21, 0x19        ; Subtract Immediate with Carry SBI
15968:	0E-E0       	ldi r16, 0x0e         ; Load Immediate
1596A:	A5-F1       	brbs 5, .+104         ; Branch if Bit in SREG is Set
1596C:	20-05       	cpc r18, r0           ; Compare with Carry
1596E:	0E-F1       	brbs 6, .+66          ; Branch if Bit in SREG is Set
15970:	20-0E       	add r2, r16           ; Add without Carry
15972:	01-2A       	or r0, r17            ; Logical OR
15974:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
15976:	0E-FC       	.data 0xfc0e          ; Binary data
15978:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
1597A:	4C-F0       	brbs 4, .+18          ; Branch if Bit in SREG is Set
1597C:	02-0C       	add r0, r2            ; Add without Carry
1597E:	43-FA       	bst r4, 3             ; Bit Store from Bit in Register to T Flag in SREG
15980:	05-F3       	brbs 5, .-64          ; Branch if Bit in SREG is Set
15982:	C0-18       	sub r12, r0           ; Subtract Without Carry
15984:	51-EB       	ldi r21, 0xb1         ; Load Immediate
15986:	E3-71       	andi r30, 0x13        ; Logical AND with Immediate
15988:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1598A:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
1598C:	07-D5       	rcall .+2574          ; Relative Call to Subroutine
1598E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15990:	00-0E       	add r0, r16           ; Add without Carry
15992:	DC-F1       	brbs 4, .+118         ; Branch if Bit in SREG is Set
15994:	00-0C       	add r0, r0            ; Add without Carry
15996:	7E-EB       	ldi r23, 0xbe         ; Load Immediate
15998:	00-00       	nop                   ; No Operation
1599A:	6E-EB       	ldi r22, 0xbe         ; Load Immediate
1599C:	01-01       	movw r0, r2           ; Copy Register Word
1599E:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
159A0:	80-1F       	adc r24, r16          ; Add with Carry
159A2:	1B-D3       	rcall .+1590          ; Relative Call to Subroutine
159A4:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
159A6:	00-1F       	adc r16, r16          ; Add with Carry
159A8:	0C-D3       	rcall .+1560          ; Relative Call to Subroutine
159AA:	49-08       	sbc r4, r9            ; Subtract with Carry
159AC:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
159AE:	30-00       	.data 0x0030          ; Binary data
159B0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
159B2:	3C-0C       	add r3, r12           ; Add without Carry
159B4:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
159B6:	01-04       	cpc r0, r1            ; Compare with Carry
159B8:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
159BA:	44-52       	subi r20, 0x24        ; Subtract Immediate
159BC:	12-F5       	brbc 2, .+68          ; Branch if Bit in SREG is Cleared
159BE:	80-0F       	add r24, r16          ; Add without Carry
159C0:	80-F0       	brbs 0, .+32          ; Branch if Bit in SREG is Set
159C2:	9A-80       	ldd r9, Y+2           ; Load Indirect from Data Space to Register
159C4:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
159C6:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
159C8:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
159CA:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
159CC:	50-0C       	add r5, r0            ; Add without Carry
159CE:	50-F1       	brbs 0, .+84          ; Branch if Bit in SREG is Set
159D0:	00-00       	nop                   ; No Operation
159D2:	41-EB       	ldi r20, 0xb1         ; Load Immediate
159D4:	04-51       	subi r16, 0x14        ; Subtract Immediate
159D6:	41-EA       	ldi r20, 0xa1         ; Load Immediate
159D8:	05-01       	movw r0, r10          ; Copy Register Word
159DA:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
159DC:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
159DE:	4C-0C       	add r4, r12           ; Add without Carry
159E0:	40-41       	sbci r20, 0x10        ; Subtract Immediate with Carry SBI
159E2:	41-EB       	ldi r20, 0xb1         ; Load Immediate
159E4:	01-01       	movw r0, r2           ; Copy Register Word
159E6:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
159E8:	80-1F       	adc r24, r16          ; Add with Carry
159EA:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
159EC:	01-04       	cpc r0, r1            ; Compare with Carry
159EE:	E9-D1       	rcall .+978           ; Relative Call to Subroutine
159F0:	91-F0       	brbs 1, .+36          ; Branch if Bit in SREG is Set
159F2:	00-0F       	add r16, r16          ; Add without Carry
159F4:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
159F6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
159F8:	00-20       	and r0, r0            ; Logical AND
159FA:	B1-FA       	bst r11, 1            ; Bit Store from Bit in Register to T Flag in SREG
159FC:	81-F3       	brbs 1, .-32          ; Branch if Bit in SREG is Set
159FE:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15A00:	20-33       	cpi r18, 0x30         ; Compare with Immediate
15A02:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
15A04:	0B-03       	fmul r16, r19         ; Fractional Multiply Unsigned
15A06:	B3-F1       	brbs 3, .+108         ; Branch if Bit in SREG is Set
15A08:	20-02       	muls r18, r16         ; Multiply Signed
15A0A:	0C-DA       	rcall .+5144          ; Relative Call to Subroutine
15A0C:	0C-32       	cpi r16, 0x2c         ; Compare with Immediate
15A0E:	08-DD       	rcall .+6672          ; Relative Call to Subroutine
15A10:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
15A12:	14-0C       	add r1, r4            ; Add without Carry
15A14:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
15A16:	0C-02       	muls r16, r28         ; Multiply Signed
15A18:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A1A:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
15A1C:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A1E:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
15A20:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
15A22:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
15A24:	14-02       	muls r17, r20         ; Multiply Signed
15A26:	D8-BF       	out 0x38, r29         ; Store Register to I/O Location
15A28:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
15A2A:	20-0C       	add r2, r0            ; Add without Carry
15A2C:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A2E:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
15A30:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15A32:	0C-FC       	.data 0xfc0c          ; Binary data
15A34:	DC-BF       	out 0x3c, r29         ; Store Register to I/O Location
15A36:	41-EA       	ldi r20, 0xa1         ; Load Immediate
15A38:	0C-01       	movw r0, r24          ; Copy Register Word
15A3A:	90-40       	sbci r25, 0x00        ; Subtract Immediate with Carry SBI
15A3C:	E4-1A       	sub r14, r20          ; Subtract Without Carry
15A3E:	A2-BF       	out 0x32, r26         ; Store Register to I/O Location
15A40:	01-EB       	ldi r16, 0xb1         ; Load Immediate
15A42:	04-51       	subi r16, 0x14        ; Subtract Immediate
15A44:	29-43       	sbci r18, 0x39        ; Subtract Immediate with Carry SBI
15A46:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15A48:	6F-EA       	ldi r22, 0xaf         ; Load Immediate
15A4A:	04-04       	cpc r0, r4            ; Compare with Carry
15A4C:	1F-3C       	cpi r17, 0xcf         ; Compare with Immediate
15A4E:	1C-DA       	rcall .+5176          ; Relative Call to Subroutine
15A50:	0C-34       	cpi r16, 0x4c         ; Compare with Immediate
15A52:	0E-DC       	rcall .+6172          ; Relative Call to Subroutine
15A54:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
15A56:	14-04       	cpc r1, r4            ; Compare with Carry
15A58:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15A5A:	20-02       	muls r18, r16         ; Multiply Signed
15A5C:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15A5E:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
15A60:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A62:	02-F3       	brbs 2, .-64          ; Branch if Bit in SREG is Set
15A64:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15A66:	03-00       	.data 0x0003          ; Binary data
15A68:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A6A:	04-F3       	brbs 4, .-64          ; Branch if Bit in SREG is Set
15A6C:	45-EA       	ldi r20, 0xa5         ; Load Immediate
15A6E:	03-01       	movw r0, r6           ; Copy Register Word
15A70:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15A72:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15A74:	0C-04       	cpc r0, r12           ; Compare with Carry
15A76:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15A78:	20-02       	muls r18, r16         ; Multiply Signed
15A7A:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15A7C:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
15A7E:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A80:	04-F3       	brbs 4, .-64          ; Branch if Bit in SREG is Set
15A82:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15A84:	03-00       	.data 0x0003          ; Binary data
15A86:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
15A88:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15A8A:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15A8C:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
15A8E:	29-46       	sbci r18, 0x69        ; Subtract Immediate with Carry SBI
15A90:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15A92:	94-F0       	brbs 4, .+36          ; Branch if Bit in SREG is Set
15A94:	00-0F       	add r16, r16          ; Add without Carry
15A96:	83-F4       	brbc 3, .+32          ; Branch if Bit in SREG is Cleared
15A98:	80-13       	cpse r24, r16         ; Compare Skip if Equal
15A9A:	06-BF       	out 0x36, r16         ; Store Register to I/O Location
15A9C:	81-F4       	brbc 1, .+32          ; Branch if Bit in SREG is Cleared
15A9E:	80-11       	cpse r24, r0          ; Compare Skip if Equal
15AA0:	01-34       	cpi r16, 0x41         ; Compare with Immediate
15AA2:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
15AA4:	4E-E7       	ldi r20, 0x7e         ; Load Immediate
15AA6:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
15AA8:	64-5C       	subi r22, 0xc4        ; Subtract Immediate
15AAA:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15AAC:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
15AAE:	65-5C       	subi r22, 0xc5        ; Subtract Immediate
15AB0:	29-D0       	rcall .+82            ; Relative Call to Subroutine
15AB2:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15AB4:	05-0F       	add r16, r21          ; Add without Carry
15AB6:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15AB8:	90-EA       	ldi r25, 0xa0         ; Load Immediate
15ABA:	02-0F       	add r16, r18          ; Add without Carry
15ABC:	05-D0       	rcall .+10            ; Relative Call to Subroutine
15ABE:	54-EA       	ldi r21, 0xa4         ; Load Immediate
15AC0:	00-0C       	add r0, r0            ; Add without Carry
15AC2:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
15AC4:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
15AC6:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
15AC8:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15ACA:	91-EA       	ldi r25, 0xa1         ; Load Immediate
15ACC:	03-0F       	add r16, r19          ; Add without Carry
15ACE:	1E-BF       	out 0x3e, r17         ; Store Register to I/O Location
15AD0:	00-21       	and r16, r0           ; Logical AND
15AD2:	00-20       	and r0, r0            ; Logical AND
15AD4:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15AD6:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15AD8:	54-5C       	subi r21, 0xc4        ; Subtract Immediate
15ADA:	05-D1       	rcall .+522           ; Relative Call to Subroutine
15ADC:	40-00       	.data 0x0040          ; Binary data
15ADE:	49-41       	sbci r20, 0x19        ; Subtract Immediate with Carry SBI
15AE0:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
15AE2:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
15AE4:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15AE6:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15AE8:	14-F5       	brbc 4, .+68          ; Branch if Bit in SREG is Cleared
15AEA:	80-04       	cpc r8, r0            ; Compare with Carry
15AEC:	3C-BF       	out 0x3c, r19         ; Store Register to I/O Location
15AEE:	01-F5       	brbc 1, .+64          ; Branch if Bit in SREG is Cleared
15AF0:	80-11       	cpse r24, r0          ; Compare Skip if Equal
15AF2:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15AF4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15AF6:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
15AF8:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
15AFA:	FE-41       	sbci r31, 0x1e        ; Subtract Immediate with Carry SBI
15AFC:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15AFE:	70-01       	movw r14, r0          ; Copy Register Word
15B00:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15B02:	00-00       	nop                   ; No Operation
15B04:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15B06:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
15B08:	64-5C       	subi r22, 0xc4        ; Subtract Immediate
15B0A:	1A-BF       	out 0x3a, r17         ; Store Register to I/O Location
15B0C:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
15B0E:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
15B10:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
15B12:	65-5C       	subi r22, 0xc5        ; Subtract Immediate
15B14:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
15B16:	0B-46       	sbci r16, 0x6b        ; Subtract Immediate with Carry SBI
15B18:	02-46       	sbci r16, 0x62        ; Subtract Immediate with Carry SBI
15B1A:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15B1C:	01-34       	cpi r16, 0x41         ; Compare with Immediate
15B1E:	06-BF       	out 0x36, r16         ; Store Register to I/O Location
15B20:	52-EA       	ldi r21, 0xa2         ; Load Immediate
15B22:	03-35       	cpi r16, 0x53         ; Compare with Immediate
15B24:	91-EA       	ldi r25, 0xa1         ; Load Immediate
15B26:	03-0F       	add r16, r19          ; Add without Carry
15B28:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15B2A:	00-21       	and r16, r0           ; Logical AND
15B2C:	30-BD       	out 0x20, r19         ; Store Register to I/O Location
15B2E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15B30:	90-F0       	brbs 0, .+36          ; Branch if Bit in SREG is Set
15B32:	00-0F       	add r16, r16          ; Add without Carry
15B34:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
15B36:	00-21       	and r16, r0           ; Logical AND
15B38:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15B3A:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
15B3C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
15B3E:	80-64       	ori r24, 0x40         ; Logical OR with Immediate
15B40:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
15B42:	32-04       	cpc r3, r2            ; Compare with Carry
15B44:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15B46:	00-05       	cpc r16, r0           ; Compare with Carry
15B48:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15B4A:	00-01       	movw r0, r0           ; Copy Register Word
15B4C:	50-E7       	ldi r21, 0x70         ; Load Immediate
15B4E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15B50:	90-F0       	brbs 0, .+36          ; Branch if Bit in SREG is Set
15B52:	00-0F       	add r16, r16          ; Add without Carry
15B54:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
15B56:	00-21       	and r16, r0           ; Logical AND
15B58:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15B5A:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
15B5C:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
15B5E:	80-64       	ori r24, 0x40         ; Logical OR with Immediate
15B60:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
15B62:	32-04       	cpc r3, r2            ; Compare with Carry
15B64:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
15B66:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
15B68:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
15B6A:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
15B6C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15B6E:	00-01       	movw r0, r0           ; Copy Register Word
15B70:	3E-E7       	ldi r19, 0x7e         ; Load Immediate
15B72:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15B74:	42-00       	.data 0x0042          ; Binary data
15B76:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15B78:	E2-01       	movw r28, r4          ; Copy Register Word
15B7A:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15B7C:	31-01       	movw r6, r2           ; Copy Register Word
15B7E:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15B80:	02-70       	andi r16, 0x02        ; Logical AND with Immediate
15B82:	1F-BF       	out 0x3f, r17         ; Store Register to I/O Location
15B84:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
15B86:	7F-43       	sbci r23, 0x3f        ; Subtract Immediate with Carry SBI
15B88:	93-F0       	brbs 3, .+36          ; Branch if Bit in SREG is Set
15B8A:	7F-4F       	sbci r23, 0xff        ; Subtract Immediate with Carry SBI
15B8C:	81-F0       	brbs 1, .+32          ; Branch if Bit in SREG is Set
15B8E:	60-51       	subi r22, 0x10        ; Subtract Immediate
15B90:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15B92:	92-F0       	brbs 2, .+36          ; Branch if Bit in SREG is Set
15B94:	00-0F       	add r16, r16          ; Add without Carry
15B96:	14-BF       	out 0x34, r17         ; Store Register to I/O Location
15B98:	93-F0       	brbs 3, .+36          ; Branch if Bit in SREG is Set
15B9A:	7F-4F       	sbci r23, 0xff        ; Subtract Immediate with Carry SBI
15B9C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15B9E:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
15BA0:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
15BA2:	60-74       	andi r22, 0x40        ; Logical AND with Immediate
15BA4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15BA6:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
15BA8:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
15BAA:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15BAC:	20-E7       	ldi r18, 0x70         ; Load Immediate
15BAE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15BB0:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15BB2:	01-02       	muls r16, r17         ; Multiply Signed
15BB4:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15BB6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15BB8:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
15BBA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15BBC:	00-05       	cpc r16, r0           ; Compare with Carry
15BBE:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
15BC0:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15BC2:	01-02       	muls r16, r17         ; Multiply Signed
15BC4:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15BC6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15BC8:	30-B5       	in r19, 0x20          ; Load an I/O Location to Register
15BCA:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
15BCC:	00-45       	sbci r16, 0x50        ; Subtract Immediate with Carry SBI
15BCE:	02-D5       	rcall .+2564          ; Relative Call to Subroutine
15BD0:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
15BD2:	61-EB       	ldi r22, 0xb1         ; Load Immediate
15BD4:	41-01       	movw r8, r2           ; Copy Register Word
15BD6:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
15BD8:	80-64       	ori r24, 0x40         ; Logical OR with Immediate
15BDA:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
15BDC:	32-04       	cpc r3, r2            ; Compare with Carry
15BDE:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15BE0:	91-5C       	subi r25, 0xc1        ; Subtract Immediate
15BE2:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
15BE4:	DC-AE       	std Y+60, r13         ; Store Indirect From Register to Data Space
15BE6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15BE8:	03-02       	muls r16, r19         ; Multiply Signed
15BEA:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15BEC:	DC-0C       	add r13, r12          ; Add without Carry
15BEE:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15BF0:	03-32       	cpi r16, 0x23         ; Compare with Immediate
15BF2:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15BF4:	DC-0C       	add r13, r12          ; Add without Carry
15BF6:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15BF8:	03-32       	cpi r16, 0x23         ; Compare with Immediate
15BFA:	02-EB       	ldi r16, 0xb2         ; Load Immediate
15BFC:	DC-02       	muls r29, r28         ; Multiply Signed
15BFE:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
15C00:	20-03       	mulsu r18, r16        ; Multiply Signed with Unsigned
15C02:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
15C04:	03-FC       	sbrc r0, 3            ; Skip if Bit in Register is Cleared
15C06:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15C08:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
15C0A:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15C0C:	03-FE       	sbrs r0, 3            ; Skip if Bit in Register is Set
15C0E:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15C10:	0E-00       	.data 0x000e          ; Binary data
15C12:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15C14:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
15C16:	14-44       	sbci r17, 0x44        ; Subtract Immediate with Carry SBI
15C18:	C1-E6       	ldi r28, 0x61         ; Load Immediate
15C1A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
15C1C:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
15C1E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15C20:	FF-0C       	add r15, r15          ; Add without Carry
15C22:	4C-F4       	brbc 4, .+18          ; Branch if Bit in SREG is Cleared
15C24:	E0-6C       	ori r30, 0xc0         ; Logical OR with Immediate
15C26:	1C-EA       	ldi r17, 0xac         ; Load Immediate
15C28:	11-54       	subi r17, 0x41        ; Subtract Immediate
15C2A:	1D-BF       	out 0x3d, r17         ; Store Register to I/O Location
15C2C:	1C-EA       	ldi r17, 0xac         ; Load Immediate
15C2E:	13-55       	subi r17, 0x53        ; Subtract Immediate
15C30:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15C32:	0C-0F       	add r16, r28          ; Add without Carry
15C34:	95-EA       	ldi r25, 0xa5         ; Load Immediate
15C36:	0C-0F       	add r16, r28          ; Add without Carry
15C38:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15C3A:	DE-F8       	.data 0xf8de          ; Binary data
15C3C:	2C-44       	sbci r18, 0x4c        ; Subtract Immediate with Carry SBI
15C3E:	81-EA       	ldi r24, 0xa1         ; Load Immediate
15C40:	03-06       	cpc r0, r19           ; Compare with Carry
15C42:	21-EA       	ldi r18, 0xa1         ; Load Immediate
15C44:	4C-51       	subi r20, 0x1c        ; Subtract Immediate
15C46:	23-EA       	ldi r18, 0xa3         ; Load Immediate
15C48:	4C-53       	subi r20, 0x3c        ; Subtract Immediate
15C4A:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15C4C:	01-35       	cpi r16, 0x51         ; Compare with Immediate
15C4E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15C50:	52-EA       	ldi r21, 0xa2         ; Load Immediate
15C52:	03-35       	cpi r16, 0x53         ; Compare with Immediate
15C54:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15C56:	80-11       	cpse r24, r0          ; Compare Skip if Equal
15C58:	43-F4       	brbc 3, .+16          ; Branch if Bit in SREG is Cleared
15C5A:	80-13       	cpse r24, r16         ; Compare Skip if Equal
15C5C:	38-D0       	rcall .+112           ; Relative Call to Subroutine
15C5E:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
15C60:	02-CE       	rjmp .-1020           ; Relative Jump
15C62:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15C64:	00-05       	cpc r16, r0           ; Compare with Carry
15C66:	E1-FB       	bst r30, 1            ; Bit Store from Bit in Register to T Flag in SREG
15C68:	02-E5       	ldi r16, 0x52         ; Load Immediate
15C6A:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
15C6C:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
15C6E:	E0-FB       	bst r30, 0            ; Bit Store from Bit in Register to T Flag in SREG
15C70:	03-E5       	ldi r16, 0x53         ; Load Immediate
15C72:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15C74:	00-06       	cpc r0, r16           ; Compare with Carry
15C76:	E1-FB       	bst r30, 1            ; Bit Store from Bit in Register to T Flag in SREG
15C78:	03-56       	subi r16, 0x63        ; Subtract Immediate
15C7A:	9C-F0       	brbs 4, .+38          ; Branch if Bit in SREG is Set
15C7C:	00-0F       	add r16, r16          ; Add without Carry
15C7E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15C80:	4E-F0       	brbs 6, .+18          ; Branch if Bit in SREG is Set
15C82:	01-0E       	add r0, r17           ; Add without Carry
15C84:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
15C86:	FF-04       	cpc r15, r15          ; Compare with Carry
15C88:	B6-F5       	brbc 6, .+108         ; Branch if Bit in SREG is Cleared
15C8A:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
15C8C:	64-F5       	brbc 4, .+88          ; Branch if Bit in SREG is Cleared
15C8E:	40-74       	andi r20, 0x40        ; Logical AND with Immediate
15C90:	04-D2       	rcall .+1032          ; Relative Call to Subroutine
15C92:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15C94:	4E-0E       	add r4, r30           ; Add without Carry
15C96:	6D-41       	sbci r22, 0x1d        ; Subtract Immediate with Carry SBI
15C98:	46-EB       	ldi r20, 0xb6         ; Load Immediate
15C9A:	06-06       	cpc r0, r22           ; Compare with Carry
15C9C:	42-EA       	ldi r20, 0xa2         ; Load Immediate
15C9E:	C6-21       	and r28, r6           ; Logical AND
15CA0:	41-EA       	ldi r20, 0xa1         ; Load Immediate
15CA2:	55-51       	subi r21, 0x15        ; Subtract Immediate
15CA4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15CA6:	C5-20       	and r12, r5           ; Logical AND
15CA8:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15CAA:	5E-50       	subi r21, 0x0e        ; Subtract Immediate
15CAC:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15CAE:	CE-2E       	mov r12, r30          ; Copy Register
15CB0:	B4-F1       	brbs 4, .+108         ; Branch if Bit in SREG is Set
15CB2:	FD-0C       	add r15, r13          ; Add without Carry
15CB4:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
15CB6:	BC-F5       	brbc 4, .+110         ; Branch if Bit in SREG is Cleared
15CB8:	E0-6F       	ori r30, 0xf0         ; Logical OR with Immediate
15CBA:	1E-D8       	rcall .+4156          ; Relative Call to Subroutine
15CBC:	BE-F1       	brbs 6, .+110         ; Branch if Bit in SREG is Set
15CBE:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
15CC0:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15CC2:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15CC4:	50-0E       	add r5, r16           ; Add without Carry
15CC6:	50-F1       	brbs 0, .+84          ; Branch if Bit in SREG is Set
15CC8:	00-00       	nop                   ; No Operation
15CCA:	41-EB       	ldi r20, 0xb1         ; Load Immediate
15CCC:	04-51       	subi r16, 0x14        ; Subtract Immediate
15CCE:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15CD0:	06-F0       	brbs 6, .+0           ; Branch if Bit in SREG is Set
15CD2:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
15CD4:	46-EA       	ldi r20, 0xa6         ; Load Immediate
15CD6:	01-01       	movw r0, r2           ; Copy Register Word
15CD8:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15CDA:	02-00       	.data 0x0002          ; Binary data
15CDC:	81-EA       	ldi r24, 0xa1         ; Load Immediate
15CDE:	03-01       	movw r0, r6           ; Copy Register Word
15CE0:	B4-EB       	ldi r27, 0xb4         ; Load Immediate
15CE2:	5C-04       	cpc r5, r12           ; Compare with Carry
15CE4:	C2-BF       	out 0x32, r28         ; Store Register to I/O Location
15CE6:	D4-EB       	ldi r29, 0xb4         ; Load Immediate
15CE8:	0C-05       	cpc r16, r12          ; Compare with Carry
15CEA:	41-EA       	ldi r20, 0xa1         ; Load Immediate
15CEC:	04-51       	subi r16, 0x14        ; Subtract Immediate
15CEE:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15CF0:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15CF2:	80-11       	cpse r24, r0          ; Compare Skip if Equal
15CF4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15CF6:	00-0E       	add r0, r16           ; Add without Carry
15CF8:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
15CFA:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
15CFC:	AB-80       	ldd r10, Y+3          ; Load Indirect from Data Space to Register
15CFE:	14-F1       	brbs 4, .+68          ; Branch if Bit in SREG is Set
15D00:	36-0F       	add r19, r22          ; Add without Carry
15D02:	DE-BF       	out 0x3e, r29         ; Store Register to I/O Location
15D04:	00-20       	and r0, r0            ; Logical AND
15D06:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15D08:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15D0A:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15D0C:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15D0E:	00-04       	cpc r0, r0            ; Compare with Carry
15D10:	20-3C       	cpi r18, 0xc0         ; Compare with Immediate
15D12:	35-DA       	rcall .+5226          ; Relative Call to Subroutine
15D14:	0C-34       	cpi r16, 0x4c         ; Compare with Immediate
15D16:	1B-DC       	rcall .+6198          ; Relative Call to Subroutine
15D18:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
15D1A:	14-04       	cpc r1, r4            ; Compare with Carry
15D1C:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15D1E:	20-05       	cpc r18, r0           ; Compare with Carry
15D20:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
15D22:	05-F3       	brbs 5, .-64          ; Branch if Bit in SREG is Set
15D24:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15D26:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
15D28:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15D2A:	05-F2       	brbs 5, .-128         ; Branch if Bit in SREG is Set
15D2C:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15D2E:	02-00       	.data 0x0002          ; Binary data
15D30:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15D32:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
15D34:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
15D36:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15D38:	10-EB       	ldi r17, 0xb0         ; Load Immediate
15D3A:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
15D3C:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15D3E:	04-F6       	brbc 4, .-128         ; Branch if Bit in SREG is Cleared
15D40:	42-EB       	ldi r20, 0xb2         ; Load Immediate
15D42:	06-01       	movw r0, r12          ; Copy Register Word
15D44:	5E-EA       	ldi r21, 0xae         ; Load Immediate
15D46:	43-0E       	add r4, r19           ; Add without Carry
15D48:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15D4A:	20-EA       	ldi r18, 0xa0         ; Load Immediate
15D4C:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
15D4E:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15D50:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15D52:	0C-04       	cpc r0, r12           ; Compare with Carry
15D54:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15D56:	20-05       	cpc r18, r0           ; Compare with Carry
15D58:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
15D5A:	04-F3       	brbs 4, .-64          ; Branch if Bit in SREG is Set
15D5C:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15D5E:	05-F0       	brbs 5, .+0           ; Branch if Bit in SREG is Set
15D60:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15D62:	04-F2       	brbs 4, .-128         ; Branch if Bit in SREG is Set
15D64:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15D66:	02-00       	.data 0x0002          ; Binary data
15D68:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15D6A:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15D6C:	10-EB       	ldi r17, 0xb0         ; Load Immediate
15D6E:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
15D70:	41-F1       	brbs 1, .+80          ; Branch if Bit in SREG is Set
15D72:	00-01       	movw r0, r0           ; Copy Register Word
15D74:	5E-EA       	ldi r21, 0xae         ; Load Immediate
15D76:	43-0E       	add r4, r19           ; Add without Carry
15D78:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15D7A:	20-EA       	ldi r18, 0xa0         ; Load Immediate
15D7C:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
15D7E:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15D80:	C4-F1       	brbs 4, .+112         ; Branch if Bit in SREG is Set
15D82:	20-05       	cpc r18, r0           ; Compare with Carry
15D84:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
15D86:	05-F2       	brbs 5, .-128         ; Branch if Bit in SREG is Set
15D88:	4E-EA       	ldi r20, 0xae         ; Load Immediate
15D8A:	02-0E       	add r0, r18           ; Add without Carry
15D8C:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
15D8E:	04-F3       	brbs 4, .-64          ; Branch if Bit in SREG is Set
15D90:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
15D92:	05-F2       	brbs 5, .-128         ; Branch if Bit in SREG is Set
15D94:	43-EA       	ldi r20, 0xa3         ; Load Immediate
15D96:	02-03       	mulsu r16, r18        ; Multiply Signed with Unsigned
15D98:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15D9A:	04-F0       	brbs 4, .+0           ; Branch if Bit in SREG is Set
15D9C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15D9E:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15DA0:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
15DA2:	04-F2       	brbs 4, .-128         ; Branch if Bit in SREG is Set
15DA4:	20-EA       	ldi r18, 0xa0         ; Load Immediate
15DA6:	02-00       	.data 0x0002          ; Binary data
15DA8:	00-EB       	ldi r16, 0xb0         ; Load Immediate
15DAA:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
15DAC:	5E-EA       	ldi r21, 0xae         ; Load Immediate
15DAE:	43-0E       	add r4, r19           ; Add without Carry
15DB0:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15DB2:	20-EA       	ldi r18, 0xa0         ; Load Immediate
15DB4:	D3-70       	andi r29, 0x03        ; Logical AND with Immediate
15DB6:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15DB8:	94-F0       	brbs 4, .+36          ; Branch if Bit in SREG is Set
15DBA:	00-0F       	add r16, r16          ; Add without Carry
15DBC:	0F-D1       	rcall .+542           ; Relative Call to Subroutine
15DBE:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15DC0:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
15DC2:	40-00       	.data 0x0040          ; Binary data
15DC4:	41-EB       	ldi r20, 0xb1         ; Load Immediate
15DC6:	01-01       	movw r0, r2           ; Copy Register Word
15DC8:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
15DCA:	80-1F       	adc r24, r16          ; Add with Carry
15DCC:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15DCE:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
15DD0:	F7-D0       	rcall .+494           ; Relative Call to Subroutine
15DD2:	41-EA       	ldi r20, 0xa1         ; Load Immediate
15DD4:	06-01       	movw r0, r12          ; Copy Register Word
15DD6:	95-F0       	brbs 5, .+36          ; Branch if Bit in SREG is Set
15DD8:	00-0F       	add r16, r16          ; Add without Carry
15DDA:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15DDC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15DDE:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
15DE0:	00-46       	sbci r16, 0x60        ; Subtract Immediate with Carry SBI
15DE2:	52-00       	.data 0x0052          ; Binary data
15DE4:	43-EB       	ldi r20, 0xb3         ; Load Immediate
15DE6:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
15DE8:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
15DEA:	80-1F       	adc r24, r16          ; Add with Carry
15DEC:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15DEE:	01-3D       	cpi r16, 0xd1         ; Compare with Immediate
15DF0:	F7-D0       	rcall .+494           ; Relative Call to Subroutine
15DF2:	43-EA       	ldi r20, 0xa3         ; Load Immediate
15DF4:	06-03       	mulsu r16, r22        ; Multiply Signed with Unsigned
15DF6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
15DF8:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15DFA:	0C-0F       	add r16, r28          ; Add without Carry
15DFC:	0C-EA       	ldi r16, 0xac         ; Load Immediate
15DFE:	13-55       	subi r17, 0x53        ; Subtract Immediate
15E00:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15E02:	95-EA       	ldi r25, 0xa5         ; Load Immediate
15E04:	0C-0F       	add r16, r28          ; Add without Carry
15E06:	0C-D0       	rcall .+24            ; Relative Call to Subroutine
15E08:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15E0A:	41-06       	cpc r4, r17           ; Compare with Carry
15E0C:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
15E0E:	52-EA       	ldi r21, 0xa2         ; Load Immediate
15E10:	43-06       	cpc r4, r19           ; Compare with Carry
15E12:	D1-D1       	rcall .+930           ; Relative Call to Subroutine
15E14:	81-EA       	ldi r24, 0xa1         ; Load Immediate
15E16:	03-01       	movw r0, r6           ; Copy Register Word
15E18:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15E1A:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15E1C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15E1E:	00-00       	nop                   ; No Operation
15E20:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15E22:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15E24:	41-06       	cpc r4, r17           ; Compare with Carry
15E26:	06-BF       	out 0x36, r16         ; Store Register to I/O Location
15E28:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
15E2A:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
15E2C:	52-EA       	ldi r21, 0xa2         ; Load Immediate
15E2E:	43-06       	cpc r4, r19           ; Compare with Carry
15E30:	19-D0       	rcall .+50            ; Relative Call to Subroutine
15E32:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15E34:	0C-0F       	add r16, r28          ; Add without Carry
15E36:	02-D1       	rcall .+516           ; Relative Call to Subroutine
15E38:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15E3A:	01-36       	cpi r16, 0x61         ; Compare with Immediate
15E3C:	13-D1       	rcall .+550           ; Relative Call to Subroutine
15E3E:	95-EA       	ldi r25, 0xa5         ; Load Immediate
15E40:	0C-0F       	add r16, r28          ; Add without Carry
15E42:	05-D1       	rcall .+522           ; Relative Call to Subroutine
15E44:	52-EA       	ldi r21, 0xa2         ; Load Immediate
15E46:	03-36       	cpi r16, 0x63         ; Compare with Immediate
15E48:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
15E4A:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
15E4C:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
15E4E:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
15E50:	81-EA       	ldi r24, 0xa1         ; Load Immediate
15E52:	03-01       	movw r0, r6           ; Copy Register Word
15E54:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
15E56:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15E58:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
15E5A:	FE-41       	sbci r31, 0x1e        ; Subtract Immediate with Carry SBI
15E5C:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15E5E:	70-01       	movw r14, r0          ; Copy Register Word
15E60:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15E62:	00-00       	nop                   ; No Operation
15E64:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15E66:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
15E68:	FE-41       	sbci r31, 0x1e        ; Subtract Immediate with Carry SBI
15E6A:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15E6C:	78-01       	movw r14, r16         ; Copy Register Word
15E6E:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15E70:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
15E72:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15E74:	FF-0C       	add r15, r15          ; Add without Carry
15E76:	4C-F4       	brbc 4, .+18          ; Branch if Bit in SREG is Cleared
15E78:	E0-6C       	ori r30, 0xc0         ; Logical OR with Immediate
15E7A:	1C-EA       	ldi r17, 0xac         ; Load Immediate
15E7C:	11-54       	subi r17, 0x41        ; Subtract Immediate
15E7E:	1D-BF       	out 0x3d, r17         ; Store Register to I/O Location
15E80:	1C-EA       	ldi r17, 0xac         ; Load Immediate
15E82:	13-55       	subi r17, 0x53        ; Subtract Immediate
15E84:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15E86:	0C-0F       	add r16, r28          ; Add without Carry
15E88:	95-EA       	ldi r25, 0xa5         ; Load Immediate
15E8A:	0C-0F       	add r16, r28          ; Add without Carry
15E8C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15E8E:	A7-F8       	bld r10, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
15E90:	A4-EB       	ldi r26, 0xb4         ; Load Immediate
15E92:	05-04       	cpc r0, r5            ; Compare with Carry
15E94:	81-EA       	ldi r24, 0xa1         ; Load Immediate
15E96:	03-0E       	add r0, r19           ; Add without Carry
15E98:	52-EA       	ldi r21, 0xa2         ; Load Immediate
15E9A:	03-35       	cpi r16, 0x53         ; Compare with Immediate
15E9C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15E9E:	01-31       	cpi r16, 0x11         ; Compare with Immediate
15EA0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
15EA2:	88-80       	ld r8, Y              ; Load Indirect from Data Space to Register
15EA4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15EA6:	03-33       	cpi r16, 0x33         ; Compare with Immediate
15EA8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15EAA:	80-55       	subi r24, 0x50        ; Subtract Immediate
15EAC:	45-EA       	ldi r20, 0xa5         ; Load Immediate
15EAE:	13-13       	cpse r17, r19         ; Compare Skip if Equal
15EB0:	43-EA       	ldi r20, 0xa3         ; Load Immediate
15EB2:	12-63       	ori r17, 0x32         ; Logical OR with Immediate
15EB4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15EB6:	02-22       	and r0, r18           ; Logical AND
15EB8:	45-EA       	ldi r20, 0xa5         ; Load Immediate
15EBA:	11-15       	cp r17, r1            ; Compare
15EBC:	45-EA       	ldi r20, 0xa5         ; Load Immediate
15EBE:	10-65       	ori r17, 0x50         ; Logical OR with Immediate
15EC0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15EC2:	00-26       	clr r512              ; Clear Register
15EC4:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
15EC6:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
15EC8:	9D-42       	sbci r25, 0x2d        ; Subtract Immediate with Carry SBI
15ECA:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15ECC:	96-42       	sbci r25, 0x26        ; Subtract Immediate with Carry SBI
15ECE:	44-F1       	brbs 4, .+80          ; Branch if Bit in SREG is Set
15ED0:	FD-04       	cpc r15, r13          ; Compare with Carry
15ED2:	04-F5       	brbc 4, .+64          ; Branch if Bit in SREG is Cleared
15ED4:	40-74       	andi r20, 0x40        ; Logical AND with Immediate
15ED6:	02-D2       	rcall .+1028          ; Relative Call to Subroutine
15ED8:	5B-08       	sbc r5, r11           ; Subtract with Carry
15EDA:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15EDC:	32-02       	muls r19, r18         ; Multiply Signed
15EDE:	B6-1A       	sub r11, r22          ; Subtract Without Carry
15EE0:	65-EB       	ldi r22, 0xb5         ; Load Immediate
15EE2:	03-05       	cpc r16, r3           ; Compare with Carry
15EE4:	5B-08       	sbc r5, r11           ; Subtract with Carry
15EE6:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15EE8:	32-02       	muls r19, r18         ; Multiply Signed
15EEA:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
15EEC:	80-10       	cpse r8, r0           ; Compare Skip if Equal
15EEE:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
15EF0:	00-2C       	mov r0, r0            ; Copy Register
15EF2:	B6-EB       	ldi r27, 0xb6         ; Load Immediate
15EF4:	02-0E       	add r0, r18           ; Add without Carry
15EF6:	75-EB       	ldi r23, 0xb5         ; Load Immediate
15EF8:	03-0E       	add r0, r19           ; Add without Carry
15EFA:	22-BF       	out 0x32, r18         ; Store Register to I/O Location
15EFC:	B6-1A       	sub r11, r22          ; Subtract Without Carry
15EFE:	75-46       	sbci r23, 0x65        ; Subtract Immediate with Carry SBI
15F00:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15F02:	0C-00       	.data 0x000c          ; Binary data
15F04:	5B-08       	sbc r5, r11           ; Subtract with Carry
15F06:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F08:	32-02       	muls r19, r18         ; Multiply Signed
15F0A:	B6-EB       	ldi r27, 0xb6         ; Load Immediate
15F0C:	02-0E       	add r0, r18           ; Add without Carry
15F0E:	75-EB       	ldi r23, 0xb5         ; Load Immediate
15F10:	03-0E       	add r0, r19           ; Add without Carry
15F12:	22-BF       	out 0x32, r18         ; Store Register to I/O Location
15F14:	B6-1A       	sub r11, r22          ; Subtract Without Carry
15F16:	75-46       	sbci r23, 0x65        ; Subtract Immediate with Carry SBI
15F18:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15F1A:	5C-00       	.data 0x005c          ; Binary data
15F1C:	5B-08       	sbc r5, r11           ; Subtract with Carry
15F1E:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F20:	32-02       	muls r19, r18         ; Multiply Signed
15F22:	B6-EB       	ldi r27, 0xb6         ; Load Immediate
15F24:	02-0E       	add r0, r18           ; Add without Carry
15F26:	75-EB       	ldi r23, 0xb5         ; Load Immediate
15F28:	03-0E       	add r0, r19           ; Add without Carry
15F2A:	22-BF       	out 0x32, r18         ; Store Register to I/O Location
15F2C:	B6-1A       	sub r11, r22          ; Subtract Without Carry
15F2E:	75-46       	sbci r23, 0x65        ; Subtract Immediate with Carry SBI
15F30:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15F32:	9C-00       	.data 0x009c          ; Binary data
15F34:	5B-08       	sbc r5, r11           ; Subtract with Carry
15F36:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F38:	32-02       	muls r19, r18         ; Multiply Signed
15F3A:	B6-EB       	ldi r27, 0xb6         ; Load Immediate
15F3C:	02-0E       	add r0, r18           ; Add without Carry
15F3E:	75-EB       	ldi r23, 0xb5         ; Load Immediate
15F40:	03-0E       	add r0, r19           ; Add without Carry
15F42:	22-BF       	out 0x32, r18         ; Store Register to I/O Location
15F44:	B6-1A       	sub r11, r22          ; Subtract Without Carry
15F46:	75-46       	sbci r23, 0x65        ; Subtract Immediate with Carry SBI
15F48:	40-EA       	ldi r20, 0xa0         ; Load Immediate
15F4A:	DC-00       	.data 0x00dc          ; Binary data
15F4C:	55-EA       	ldi r21, 0xa5         ; Load Immediate
15F4E:	06-0E       	add r0, r22           ; Add without Carry
15F50:	18-D0       	rcall .+48            ; Relative Call to Subroutine
15F52:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F54:	05-15       	cp r16, r5            ; Compare
15F56:	45-EA       	ldi r20, 0xa5         ; Load Immediate
15F58:	16-75       	andi r17, 0x56        ; Logical AND with Immediate
15F5A:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F5C:	06-16       	cp r0, r22            ; Compare
15F5E:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F60:	C3-03       	fmuls r20, r19        ; Fractional Multiply Signed
15F62:	43-EA       	ldi r20, 0xa3         ; Load Immediate
15F64:	52-73       	andi r21, 0x32        ; Logical AND with Immediate
15F66:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
15F68:	C2-02       	muls r28, r18         ; Multiply Signed
15F6A:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15F6C:	1C-1C       	adc r1, r12           ; Add with Carry
15F6E:	C0-D1       	rcall .+896           ; Relative Call to Subroutine
15F70:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
15F72:	80-1F       	adc r24, r16          ; Add with Carry
15F74:	0B-D1       	rcall .+534           ; Relative Call to Subroutine
15F76:	41-EA       	ldi r20, 0xa1         ; Load Immediate
15F78:	00-01       	movw r0, r0           ; Copy Register Word
15F7A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15F7C:	00-00       	nop                   ; No Operation
15F7E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15F80:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
15F82:	B6-E7       	ldi r27, 0x76         ; Load Immediate
15F84:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
15F86:	80-1F       	adc r24, r16          ; Add with Carry
15F88:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
15F8A:	01-43       	sbci r16, 0x31        ; Subtract Immediate with Carry SBI
15F8C:	00-20       	and r0, r0            ; Logical AND
15F8E:	B4-F1       	brbs 4, .+108         ; Branch if Bit in SREG is Set
15F90:	FD-0C       	add r15, r13          ; Add without Carry
15F92:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
15F94:	BC-F5       	brbc 4, .+110         ; Branch if Bit in SREG is Cleared
15F96:	E0-6F       	ori r30, 0xf0         ; Logical OR with Immediate
15F98:	3F-F6       	brbc 7, .-114         ; Branch if Bit in SREG is Cleared
15F9A:	AF-AE       	std Y+63, r10         ; Store Indirect From Register to Data Space
15F9C:	B5-EB       	ldi r27, 0xb5         ; Load Immediate
15F9E:	03-0C       	add r0, r3            ; Add without Carry
15FA0:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
15FA2:	B6-EB       	ldi r27, 0xb6         ; Load Immediate
15FA4:	02-0C       	add r0, r2            ; Add without Carry
15FA6:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
15FA8:	50-0C       	add r5, r0            ; Add without Carry
15FAA:	50-F1       	brbs 0, .+84          ; Branch if Bit in SREG is Set
15FAC:	00-00       	nop                   ; No Operation
15FAE:	41-EB       	ldi r20, 0xb1         ; Load Immediate
15FB0:	04-51       	subi r16, 0x14        ; Subtract Immediate
15FB2:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15FB4:	0E-F0       	brbs 6, .+2           ; Branch if Bit in SREG is Set
15FB6:	00-4E       	sbci r16, 0xe0        ; Subtract Immediate with Carry SBI
15FB8:	4E-EA       	ldi r20, 0xae         ; Load Immediate
15FBA:	11-31       	cpi r17, 0x11         ; Compare with Immediate
15FBC:	14-EB       	ldi r17, 0xb4         ; Load Immediate
15FBE:	5C-04       	cpc r5, r12           ; Compare with Carry
15FC0:	C2-BF       	out 0x32, r28         ; Store Register to I/O Location
15FC2:	D4-EB       	ldi r29, 0xb4         ; Load Immediate
15FC4:	0C-05       	cpc r16, r12          ; Compare with Carry
15FC6:	41-EA       	ldi r20, 0xa1         ; Load Immediate
15FC8:	04-51       	subi r16, 0x14        ; Subtract Immediate
15FCA:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
15FCC:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
15FCE:	80-11       	cpse r24, r0          ; Compare Skip if Equal
15FD0:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
15FD2:	00-0E       	add r0, r16           ; Add without Carry
15FD4:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
15FD6:	90-E6       	ldi r25, 0x60         ; Load Immediate
15FD8:	45-EA       	ldi r20, 0xa5         ; Load Immediate
15FDA:	06-0E       	add r0, r22           ; Add without Carry
15FDC:	8D-E6       	ldi r24, 0x6d         ; Load Immediate
15FDE:	0C-EA       	ldi r16, 0xac         ; Load Immediate
15FE0:	13-55       	subi r17, 0x53        ; Subtract Immediate
15FE2:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15FE4:	0C-0F       	add r16, r28          ; Add without Carry
15FE6:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
15FE8:	95-EA       	ldi r25, 0xa5         ; Load Immediate
15FEA:	0C-0F       	add r16, r28          ; Add without Carry
15FEC:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
15FEE:	3B-AF       	std Y+59, r19         ; Store Indirect From Register to Data Space
15FF0:	94-EA       	ldi r25, 0xa4         ; Load Immediate
15FF2:	0C-0F       	add r16, r28          ; Add without Carry
15FF4:	0A-D1       	rcall .+532           ; Relative Call to Subroutine
15FF6:	50-EA       	ldi r21, 0xa0         ; Load Immediate
15FF8:	01-34       	cpi r16, 0x41         ; Compare with Immediate
15FFA:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
15FFC:	34-AF       	std Y+60, r19         ; Store Indirect From Register to Data Space
15FFE:	95-EA       	ldi r25, 0xa5         ; Load Immediate
16000:	0C-0F       	add r16, r28          ; Add without Carry
16002:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16004:	25-AF       	std Y+61, r18         ; Store Indirect From Register to Data Space
16006:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
16008:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
1600A:	2C-E7       	ldi r18, 0x7c         ; Load Immediate
1600C:	95-EA       	ldi r25, 0xa5         ; Load Immediate
1600E:	0C-0F       	add r16, r28          ; Add without Carry
16010:	06-D1       	rcall .+524           ; Relative Call to Subroutine
16012:	52-EA       	ldi r21, 0xa2         ; Load Immediate
16014:	03-35       	cpi r16, 0x53         ; Compare with Immediate
16016:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
16018:	FD-AE       	std Y+61, r15         ; Store Indirect From Register to Data Space
1601A:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
1601C:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
1601E:	22-E7       	ldi r18, 0x72         ; Load Immediate
16020:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16022:	41-06       	cpc r4, r17           ; Compare with Carry
16024:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16026:	52-EA       	ldi r21, 0xa2         ; Load Immediate
16028:	43-06       	cpc r4, r19           ; Compare with Carry
1602A:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
1602C:	C5-AE       	std Y+61, r12         ; Store Indirect From Register to Data Space
1602E:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16030:	41-04       	cpc r4, r1            ; Compare with Carry
16032:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16034:	0D-AF       	std Y+61, r16         ; Store Indirect From Register to Data Space
16036:	52-EA       	ldi r21, 0xa2         ; Load Immediate
16038:	43-05       	cpc r20, r3           ; Compare with Carry
1603A:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
1603C:	EB-AE       	std Y+59, r14         ; Store Indirect From Register to Data Space
1603E:	12-E7       	ldi r17, 0x72         ; Load Immediate
16040:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16042:	FF-3C       	cpi r31, 0xcf         ; Compare with Immediate
16044:	06-E0       	ldi r16, 0x06         ; Load Immediate
16046:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16048:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1604A:	01-0C       	add r0, r1            ; Add without Carry
1604C:	02-E0       	ldi r16, 0x02         ; Load Immediate
1604E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16050:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16052:	01-0C       	add r0, r1            ; Add without Carry
16054:	4D-F8       	.data 0xf84d          ; Binary data
16056:	04-CD       	rjmp .-1528           ; Relative Jump
16058:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1605A:	41-0C       	add r4, r1            ; Add without Carry
1605C:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1605E:	6C-5C       	subi r22, 0xcc        ; Subtract Immediate
16060:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16062:	43-0C       	add r4, r3            ; Add without Carry
16064:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16066:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
16068:	6C-5C       	subi r22, 0xcc        ; Subtract Immediate
1606A:	1B-D0       	rcall .+54            ; Relative Call to Subroutine
1606C:	01-B0       	in r0, 0x01           ; Load an I/O Location to Register
1606E:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16070:	41-0C       	add r4, r1            ; Add without Carry
16072:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
16074:	52-EA       	ldi r21, 0xa2         ; Load Immediate
16076:	43-0C       	add r4, r3            ; Add without Carry
16078:	91-EA       	ldi r25, 0xa1         ; Load Immediate
1607A:	03-0F       	add r16, r19          ; Add without Carry
1607C:	02-BF       	out 0x32, r16         ; Store Register to I/O Location
1607E:	90-EA       	ldi r25, 0xa0         ; Load Immediate
16080:	02-0F       	add r16, r18          ; Add without Carry
16082:	00-20       	and r0, r0            ; Logical AND
16084:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16086:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
16088:	00-0F       	add r16, r16          ; Add without Carry
1608A:	91-EA       	ldi r25, 0xa1         ; Load Immediate
1608C:	03-0F       	add r16, r19          ; Add without Carry
1608E:	58-BF       	out 0x38, r21         ; Store Register to I/O Location
16090:	99-42       	sbci r25, 0x29        ; Subtract Immediate with Carry SBI
16092:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16094:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
16096:	2C-BF       	out 0x3c, r18         ; Store Register to I/O Location
16098:	D8-17       	cp r29, r24           ; Compare
1609A:	6F-EA       	ldi r22, 0xaf         ; Load Immediate
1609C:	E3-70       	andi r30, 0x03        ; Logical AND with Immediate
1609E:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
160A0:	01-00       	.data 0x0001          ; Binary data
160A2:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
160A4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
160A6:	41-0C       	add r4, r1            ; Add without Carry
160A8:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
160AA:	6C-5C       	subi r22, 0xcc        ; Subtract Immediate
160AC:	02-D1       	rcall .+516           ; Relative Call to Subroutine
160AE:	50-EA       	ldi r21, 0xa0         ; Load Immediate
160B0:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
160B2:	07-D1       	rcall .+526           ; Relative Call to Subroutine
160B4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
160B6:	43-0C       	add r4, r3            ; Add without Carry
160B8:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
160BA:	6C-5C       	subi r22, 0xcc        ; Subtract Immediate
160BC:	D6-D1       	rcall .+940           ; Relative Call to Subroutine
160BE:	52-EA       	ldi r21, 0xa2         ; Load Immediate
160C0:	03-3C       	cpi r16, 0xc3         ; Compare with Immediate
160C2:	D3-D0       	rcall .+422           ; Relative Call to Subroutine
160C4:	5D-F8       	.data 0xf85d          ; Binary data
160C6:	04-0B       	sbc r16, r20          ; Subtract with Carry
160C8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
160CA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
160CC:	84-46       	sbci r24, 0x64        ; Subtract Immediate with Carry SBI
160CE:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
160D0:	62-46       	sbci r22, 0x62        ; Subtract Immediate with Carry SBI
160D2:	8C-46       	sbci r24, 0x6c        ; Subtract Immediate with Carry SBI
160D4:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
160D6:	63-46       	sbci r22, 0x63        ; Subtract Immediate with Carry SBI
160D8:	00-E0       	ldi r16, 0x00         ; Load Immediate
160DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
160DC:	01-B5       	in r16, 0x21          ; Load an I/O Location to Register
160DE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
160E0:	B7-FF       	sbrs r27, 7           ; Skip if Bit in Register is Set
160E2:	00-28       	or r0, r0             ; Logical OR
160E4:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
160E6:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
160E8:	00-0F       	add r16, r16          ; Add without Carry
160EA:	01-BD       	out 0x21, r16         ; Store Register to I/O Location
160EC:	4D-F8       	.data 0xf84d          ; Binary data
160EE:	08-ED       	ldi r16, 0xd8         ; Load Immediate
160F0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
160F2:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
160F4:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
160F6:	01-20       	and r0, r1            ; Logical AND
160F8:	00-20       	and r0, r0            ; Logical AND
160FA:	5D-F8       	.data 0xf85d          ; Binary data
160FC:	08-FB       	.data 0xfb08          ; Binary data
160FE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16100:	4D-F8       	.data 0xf84d          ; Binary data
16102:	08-ED       	ldi r16, 0xd8         ; Load Immediate
16104:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
16106:	EA-FF       	.data 0xffea          ; Binary data
16108:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
1610A:	01-20       	and r0, r1            ; Logical AND
1610C:	00-20       	and r0, r0            ; Logical AND
1610E:	5D-F8       	.data 0xf85d          ; Binary data
16110:	08-FB       	.data 0xfb08          ; Binary data
16112:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16114:	4D-F8       	.data 0xf84d          ; Binary data
16116:	08-ED       	ldi r16, 0xd8         ; Load Immediate
16118:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1611A:	E0-FF       	sbrs r30, 0           ; Skip if Bit in Register is Set
1611C:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
1611E:	01-20       	and r0, r1            ; Logical AND
16120:	00-20       	and r0, r0            ; Logical AND
16122:	5D-F8       	.data 0xf85d          ; Binary data
16124:	08-FB       	.data 0xfb08          ; Binary data
16126:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16128:	4D-F8       	.data 0xf84d          ; Binary data
1612A:	08-ED       	ldi r16, 0xd8         ; Load Immediate
1612C:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1612E:	CE-FF       	.data 0xffce          ; Binary data
16130:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
16132:	01-20       	and r0, r1            ; Logical AND
16134:	00-20       	and r0, r0            ; Logical AND
16136:	5D-F8       	.data 0xf85d          ; Binary data
16138:	08-FB       	.data 0xfb08          ; Binary data
1613A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1613C:	4D-F8       	.data 0xf84d          ; Binary data
1613E:	08-ED       	ldi r16, 0xd8         ; Load Immediate
16140:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
16142:	C4-FF       	sbrs r28, 4           ; Skip if Bit in Register is Set
16144:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
16146:	01-20       	and r0, r1            ; Logical AND
16148:	00-20       	and r0, r0            ; Logical AND
1614A:	5D-F8       	.data 0xf85d          ; Binary data
1614C:	08-FB       	.data 0xfb08          ; Binary data
1614E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16150:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16152:	41-02       	muls r20, r17         ; Multiply Signed
16154:	12-F5       	brbc 2, .+68          ; Branch if Bit in SREG is Cleared
16156:	00-12       	cpse r0, r16          ; Compare Skip if Equal
16158:	15-D2       	rcall .+1066          ; Relative Call to Subroutine
1615A:	11-D5       	rcall .+2594          ; Relative Call to Subroutine
1615C:	6F-F4       	brbc 7, .+26          ; Branch if Bit in SREG is Cleared
1615E:	78-73       	andi r23, 0x38        ; Logical AND with Immediate
16160:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
16162:	62-52       	subi r22, 0x22        ; Subtract Immediate
16164:	12-D9       	rcall .+4644          ; Relative Call to Subroutine
16166:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16168:	C1-23       	and r28, r17          ; Logical AND
1616A:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
1616C:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
1616E:	43-EA       	ldi r20, 0xa3         ; Load Immediate
16170:	50-53       	subi r21, 0x30        ; Subtract Immediate
16172:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
16174:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
16176:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
16178:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
1617A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1617C:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
1617E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16180:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16182:	00-00       	nop                   ; No Operation
16184:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16186:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16188:	01-30       	cpi r16, 0x01         ; Compare with Immediate
1618A:	05-D1       	rcall .+522           ; Relative Call to Subroutine
1618C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1618E:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
16190:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16192:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
16194:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
16196:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16198:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1619A:	00-00       	nop                   ; No Operation
1619C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1619E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
161A0:	4A-00       	.data 0x004a          ; Binary data
161A2:	11-D2       	rcall .+1058          ; Relative Call to Subroutine
161A4:	12-F5       	brbc 2, .+68          ; Branch if Bit in SREG is Cleared
161A6:	00-12       	cpse r0, r16          ; Compare Skip if Equal
161A8:	11-D2       	rcall .+1058          ; Relative Call to Subroutine
161AA:	0D-D5       	rcall .+2586          ; Relative Call to Subroutine
161AC:	6F-F4       	brbc 7, .+26          ; Branch if Bit in SREG is Cleared
161AE:	78-73       	andi r23, 0x38        ; Logical AND with Immediate
161B0:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
161B2:	62-52       	subi r22, 0x22        ; Subtract Immediate
161B4:	0E-D4       	rcall .+2076          ; Relative Call to Subroutine
161B6:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
161B8:	C1-23       	and r28, r17          ; Logical AND
161BA:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
161BC:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
161BE:	43-EA       	ldi r20, 0xa3         ; Load Immediate
161C0:	50-53       	subi r21, 0x30        ; Subtract Immediate
161C2:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
161C4:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
161C6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
161C8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
161CA:	00-00       	nop                   ; No Operation
161CC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
161CE:	50-EA       	ldi r21, 0xa0         ; Load Immediate
161D0:	01-30       	cpi r16, 0x01         ; Compare with Immediate
161D2:	02-D1       	rcall .+516           ; Relative Call to Subroutine
161D4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
161D6:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
161D8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
161DA:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
161DC:	00-00       	nop                   ; No Operation
161DE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
161E0:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
161E2:	41-02       	muls r20, r17         ; Multiply Signed
161E4:	B2-F1       	brbs 2, .+108         ; Branch if Bit in SREG is Set
161E6:	E0-43       	sbci r30, 0x30        ; Subtract Immediate with Carry SBI
161E8:	24-BF       	out 0x34, r18         ; Store Register to I/O Location
161EA:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
161EC:	00-1C       	adc r0, r0            ; Add with Carry
161EE:	DC-F1       	brbs 4, .+118         ; Branch if Bit in SREG is Set
161F0:	FE-5C       	subi r31, 0xce        ; Subtract Immediate
161F2:	0D-D9       	rcall .+4634          ; Relative Call to Subroutine
161F4:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
161F6:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
161F8:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
161FA:	C0-02       	muls r28, r16         ; Multiply Signed
161FC:	4C-EA       	ldi r20, 0xac         ; Load Immediate
161FE:	50-70       	andi r21, 0x00        ; Logical AND with Immediate
16200:	B2-F1       	brbs 2, .+108         ; Branch if Bit in SREG is Set
16202:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
16204:	40-EB       	ldi r20, 0xb0         ; Load Immediate
16206:	83-00       	.data 0x0083          ; Binary data
16208:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
1620A:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
1620C:	01-00       	.data 0x0001          ; Binary data
1620E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16210:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
16212:	80-4F       	sbci r24, 0xf0        ; Subtract Immediate with Carry SBI
16214:	21-D1       	rcall .+578           ; Relative Call to Subroutine
16216:	13-F1       	brbs 3, .+68          ; Branch if Bit in SREG is Set
16218:	38-72       	andi r19, 0x28        ; Logical AND with Immediate
1621A:	BC-BF       	out 0x3c, r27         ; Store Register to I/O Location
1621C:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1621E:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
16220:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16222:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
16224:	80-11       	cpse r24, r0          ; Compare Skip if Equal
16226:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16228:	52-52       	subi r21, 0x22        ; Subtract Immediate
1622A:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
1622C:	18-02       	muls r17, r24         ; Multiply Signed
1622E:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
16230:	20-0C       	add r2, r0            ; Add without Carry
16232:	10-FA       	bst r1, 0             ; Bit Store from Bit in Register to T Flag in SREG
16234:	0C-F3       	brbs 4, .-62          ; Branch if Bit in SREG is Set
16236:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
16238:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
1623A:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1623C:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
1623E:	01-00       	.data 0x0001          ; Binary data
16240:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16242:	C1-23       	and r28, r17          ; Logical AND
16244:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16246:	D3-23       	and r29, r19          ; Logical AND
16248:	03-FA       	bst r0, 3             ; Bit Store from Bit in Register to T Flag in SREG
1624A:	0C-FC       	.data 0xfc0c          ; Binary data
1624C:	40-EA       	ldi r20, 0xa0         ; Load Immediate
1624E:	0C-00       	.data 0x000c          ; Binary data
16250:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
16252:	02-F3       	brbs 2, .-64          ; Branch if Bit in SREG is Set
16254:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16256:	43-03       	mulsu r20, r19        ; Multiply Signed with Unsigned
16258:	CC-E7       	ldi r28, 0x7c         ; Load Immediate
1625A:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1625C:	62-53       	subi r22, 0x32        ; Subtract Immediate
1625E:	07-D1       	rcall .+526           ; Relative Call to Subroutine
16260:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16262:	01-33       	cpi r16, 0x31         ; Compare with Immediate
16264:	1E-BF       	out 0x3e, r17         ; Store Register to I/O Location
16266:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16268:	FE-40       	sbci r31, 0x0e        ; Subtract Immediate with Carry SBI
1626A:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
1626C:	40-00       	.data 0x0040          ; Binary data
1626E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16270:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
16272:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
16274:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
16276:	FE-40       	sbci r31, 0x0e        ; Subtract Immediate with Carry SBI
16278:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
1627A:	00-00       	nop                   ; No Operation
1627C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1627E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16280:	80-F0       	brbs 0, .+32          ; Branch if Bit in SREG is Set
16282:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
16284:	02-E0       	ldi r16, 0x02         ; Load Immediate
16286:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16288:	81-F0       	brbs 1, .+32          ; Branch if Bit in SREG is Set
1628A:	00-41       	sbci r16, 0x10        ; Subtract Immediate with Carry SBI
1628C:	42-00       	.data 0x0042          ; Binary data
1628E:	1F-BF       	out 0x3f, r17         ; Store Register to I/O Location
16290:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
16292:	41-03       	mulsu r20, r17        ; Multiply Signed with Unsigned
16294:	92-EA       	ldi r25, 0xa2         ; Load Immediate
16296:	03-0F       	add r16, r19          ; Add without Carry
16298:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1629A:	22-6C       	ori r18, 0xc2         ; Logical OR with Immediate
1629C:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1629E:	23-6C       	ori r18, 0xc3         ; Logical OR with Immediate
162A0:	6A-D0       	rcall .+212           ; Relative Call to Subroutine
162A2:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
162A4:	12-62       	ori r17, 0x22         ; Logical OR with Immediate
162A6:	D2-EB       	ldi r29, 0xb2         ; Load Immediate
162A8:	13-63       	ori r17, 0x33         ; Logical OR with Immediate
162AA:	C1-BF       	out 0x31, r28         ; Store Register to I/O Location
162AC:	D2-18       	sub r13, r2           ; Subtract Without Carry
162AE:	41-40       	sbci r20, 0x01        ; Subtract Immediate with Carry SBI
162B0:	48-40       	sbci r20, 0x08        ; Subtract Immediate with Carry SBI
162B2:	41-40       	sbci r20, 0x01        ; Subtract Immediate with Carry SBI
162B4:	B8-BF       	out 0x38, r27         ; Store Register to I/O Location
162B6:	5B-42       	sbci r21, 0x2b        ; Subtract Immediate with Carry SBI
162B8:	19-2B       	or r17, r25           ; Logical OR
162BA:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
162BC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
162BE:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
162C0:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
162C2:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
162C4:	00-00       	nop                   ; No Operation
162C6:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
162C8:	7F-40       	sbci r23, 0x0f        ; Subtract Immediate with Carry SBI
162CA:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
162CC:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
162CE:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
162D0:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
162D2:	41-F4       	brbc 1, .+16          ; Branch if Bit in SREG is Cleared
162D4:	00-01       	movw r0, r0           ; Copy Register Word
162D6:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
162D8:	7F-41       	sbci r23, 0x1f        ; Subtract Immediate with Carry SBI
162DA:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
162DC:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
162DE:	92-EA       	ldi r25, 0xa2         ; Load Immediate
162E0:	03-0F       	add r16, r19          ; Add without Carry
162E2:	3F-D0       	rcall .+126           ; Relative Call to Subroutine
162E4:	A2-F1       	brbs 2, .+104         ; Branch if Bit in SREG is Set
162E6:	01-02       	muls r16, r17         ; Multiply Signed
162E8:	41-FA       	bst r4, 1             ; Bit Store from Bit in Register to T Flag in SREG
162EA:	03-FC       	sbrc r0, 3            ; Skip if Bit in Register is Cleared
162EC:	10-EB       	ldi r17, 0xb0         ; Load Immediate
162EE:	0C-00       	.data 0x000c          ; Binary data
162F0:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
162F2:	20-03       	mulsu r18, r16        ; Multiply Signed with Unsigned
162F4:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
162F6:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
162F8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
162FA:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
162FC:	02-D5       	rcall .+2564          ; Relative Call to Subroutine
162FE:	49-42       	sbci r20, 0x29        ; Subtract Immediate with Carry SBI
16300:	60-EB       	ldi r22, 0xb0         ; Load Immediate
16302:	40-00       	.data 0x0040          ; Binary data
16304:	B0-F5       	brbc 0, .+108         ; Branch if Bit in SREG is Cleared
16306:	00-0F       	add r16, r16          ; Add without Carry
16308:	13-D3       	rcall .+1574          ; Relative Call to Subroutine
1630A:	B0-F1       	brbs 0, .+108         ; Branch if Bit in SREG is Set
1630C:	80-7F       	andi r24, 0xf0        ; Logical AND with Immediate
1630E:	06-D3       	rcall .+1548          ; Relative Call to Subroutine
16310:	40-08       	sbc r4, r0            ; Subtract with Carry
16312:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16314:	31-01       	movw r6, r2           ; Copy Register Word
16316:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
16318:	01-02       	muls r16, r17         ; Multiply Signed
1631A:	FE-2A       	or r15, r30           ; Logical OR
1631C:	51-D2       	rcall .+1186          ; Relative Call to Subroutine
1631E:	B1-F1       	brbs 1, .+108         ; Branch if Bit in SREG is Set
16320:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
16322:	40-EB       	ldi r20, 0xb0         ; Load Immediate
16324:	C2-50       	subi r28, 0x02        ; Subtract Immediate
16326:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16328:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
1632A:	01-00       	.data 0x0001          ; Binary data
1632C:	40-EA       	ldi r20, 0xa0         ; Load Immediate
1632E:	03-00       	.data 0x0003          ; Binary data
16330:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16332:	49-00       	.data 0x0049          ; Binary data
16334:	40-EB       	ldi r20, 0xb0         ; Load Immediate
16336:	00-00       	nop                   ; No Operation
16338:	10-F4       	brbc 0, .+4           ; Branch if Bit in SREG is Cleared
1633A:	00-0F       	add r16, r16          ; Add without Carry
1633C:	A2-F1       	brbs 2, .+104         ; Branch if Bit in SREG is Set
1633E:	01-02       	muls r16, r17         ; Multiply Signed
16340:	ED-D1       	rcall .+986           ; Relative Call to Subroutine
16342:	B0-FA       	bst r11, 0            ; Bit Store from Bit in Register to T Flag in SREG
16344:	80-FC       	sbrc r8, 0            ; Skip if Bit in Register is Cleared
16346:	AC-F1       	brbs 4, .+106         ; Branch if Bit in SREG is Set
16348:	08-0C       	add r0, r8            ; Add without Carry
1634A:	B2-EB       	ldi r27, 0xb2         ; Load Immediate
1634C:	0C-02       	muls r16, r28         ; Multiply Signed
1634E:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
16350:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
16352:	AA-BF       	out 0x3a, r26         ; Store Register to I/O Location
16354:	00-EB       	ldi r16, 0xb0         ; Load Immediate
16356:	C2-50       	subi r28, 0x02        ; Subtract Immediate
16358:	52-42       	sbci r21, 0x22        ; Subtract Immediate with Carry SBI
1635A:	18-43       	sbci r17, 0x38        ; Subtract Immediate with Carry SBI
1635C:	BC-BF       	out 0x3c, r27         ; Store Register to I/O Location
1635E:	D0-40       	sbci r29, 0x00        ; Subtract Immediate with Carry SBI
16360:	18-43       	sbci r17, 0x38        ; Subtract Immediate with Carry SBI
16362:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16364:	92-F0       	brbs 2, .+36          ; Branch if Bit in SREG is Set
16366:	00-0F       	add r16, r16          ; Add without Carry
16368:	81-F4       	brbc 1, .+32          ; Branch if Bit in SREG is Cleared
1636A:	00-01       	movw r0, r0           ; Copy Register Word
1636C:	06-BF       	out 0x36, r16         ; Store Register to I/O Location
1636E:	80-F4       	brbc 0, .+32          ; Branch if Bit in SREG is Cleared
16370:	00-00       	nop                   ; No Operation
16372:	01-32       	cpi r16, 0x21         ; Compare with Immediate
16374:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
16376:	B5-E7       	ldi r27, 0x75         ; Load Immediate
16378:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1637A:	41-03       	mulsu r20, r17        ; Multiply Signed with Unsigned
1637C:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1637E:	22-6C       	ori r18, 0xc2         ; Logical OR with Immediate
16380:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16382:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
16384:	23-6C       	ori r18, 0xc3         ; Logical OR with Immediate
16386:	21-D0       	rcall .+66            ; Relative Call to Subroutine
16388:	92-EA       	ldi r25, 0xa2         ; Load Immediate
1638A:	03-0F       	add r16, r19          ; Add without Carry
1638C:	04-D0       	rcall .+8             ; Relative Call to Subroutine
1638E:	92-F0       	brbs 2, .+36          ; Branch if Bit in SREG is Set
16390:	00-0F       	add r16, r16          ; Add without Carry
16392:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16394:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
16396:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16398:	90-EA       	ldi r25, 0xa0         ; Load Immediate
1639A:	01-0F       	add r16, r17          ; Add without Carry
1639C:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
1639E:	00-20       	and r0, r0            ; Logical AND
163A0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
163A2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
163A4:	7F-4F       	sbci r23, 0xff        ; Subtract Immediate with Carry SBI
163A6:	04-D1       	rcall .+520           ; Relative Call to Subroutine
163A8:	40-00       	.data 0x0040          ; Binary data
163AA:	28-BF       	out 0x38, r18         ; Store Register to I/O Location
163AC:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
163AE:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
163B0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
163B2:	12-F1       	brbs 2, .+68          ; Branch if Bit in SREG is Set
163B4:	00-72       	andi r16, 0x20        ; Logical AND with Immediate
163B6:	3C-BF       	out 0x3c, r19         ; Store Register to I/O Location
163B8:	00-F5       	brbc 0, .+64          ; Branch if Bit in SREG is Cleared
163BA:	00-00       	nop                   ; No Operation
163BC:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
163BE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
163C0:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
163C2:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
163C4:	FE-40       	sbci r31, 0x0e        ; Subtract Immediate with Carry SBI
163C6:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
163C8:	00-00       	nop                   ; No Operation
163CA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
163CC:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
163CE:	22-62       	ori r18, 0x22         ; Logical OR with Immediate
163D0:	16-BF       	out 0x36, r17         ; Store Register to I/O Location
163D2:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
163D4:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
163D6:	23-63       	ori r18, 0x33         ; Logical OR with Immediate
163D8:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
163DA:	42-02       	muls r20, r18         ; Multiply Signed
163DC:	06-BF       	out 0x36, r16         ; Store Register to I/O Location
163DE:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
163E0:	41-23       	and r20, r17          ; Logical AND
163E2:	90-EA       	ldi r25, 0xa0         ; Load Immediate
163E4:	01-0F       	add r16, r17          ; Add without Carry
163E6:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
163E8:	80-00       	.data 0x0080          ; Binary data
163EA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
163EC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
163EE:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
163F0:	04-E0       	ldi r16, 0x04         ; Load Immediate
163F2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
163F4:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
163F6:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
163F8:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
163FA:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
163FC:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
163FE:	00-0C       	add r0, r0            ; Add without Carry
16400:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16402:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16404:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
16406:	96-43       	sbci r25, 0x36        ; Subtract Immediate with Carry SBI
16408:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
1640A:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1640C:	00-00       	nop                   ; No Operation
1640E:	1C-E0       	ldi r17, 0x0c         ; Load Immediate
16410:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16412:	01-02       	muls r16, r17         ; Multiply Signed
16414:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16416:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16418:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1641A:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
1641C:	0A-E0       	ldi r16, 0x0a         ; Load Immediate
1641E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16420:	50-EA       	ldi r21, 0xa0         ; Load Immediate
16422:	01-02       	muls r16, r17         ; Multiply Signed
16424:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16426:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16428:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1642A:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
1642C:	02-D5       	rcall .+2564          ; Relative Call to Subroutine
1642E:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
16430:	61-EB       	ldi r22, 0xb1         ; Load Immediate
16432:	41-01       	movw r8, r2           ; Copy Register Word
16434:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
16436:	01-0C       	add r0, r1            ; Add without Carry
16438:	02-BF       	out 0x32, r16         ; Store Register to I/O Location
1643A:	84-46       	sbci r24, 0x64        ; Subtract Immediate with Carry SBI
1643C:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
1643E:	00-20       	and r0, r0            ; Logical AND
16440:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
16442:	B6-43       	sbci r27, 0x36        ; Subtract Immediate with Carry SBI
16444:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16446:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
16448:	80-53       	subi r24, 0x30        ; Subtract Immediate
1644A:	A3-F5       	brbc 3, .+104         ; Branch if Bit in SREG is Cleared
1644C:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
1644E:	BC-FA       	.data 0xfabc          ; Binary data
16450:	8C-F2       	brbs 4, .-94          ; Branch if Bit in SREG is Set
16452:	08-3A       	cpi r16, 0xa8         ; Compare with Immediate
16454:	A3-EB       	ldi r26, 0xb3         ; Load Immediate
16456:	C2-53       	subi r28, 0x32        ; Subtract Immediate
16458:	10-DB       	rcall .+5664          ; Relative Call to Subroutine
1645A:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
1645C:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
1645E:	63-44       	sbci r22, 0x43        ; Subtract Immediate with Carry SBI
16460:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
16462:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
16464:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
16466:	20-02       	muls r18, r16         ; Multiply Signed
16468:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
1646A:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
1646C:	20-FA       	bst r2, 0             ; Bit Store from Bit in Register to T Flag in SREG
1646E:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
16470:	43-EB       	ldi r20, 0xb3         ; Load Immediate
16472:	02-00       	.data 0x0002          ; Binary data
16474:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16476:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
16478:	01-00       	.data 0x0001          ; Binary data
1647A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1647C:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
1647E:	20-02       	muls r18, r16         ; Multiply Signed
16480:	01-FA       	bst r0, 1             ; Bit Store from Bit in Register to T Flag in SREG
16482:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
16484:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
16486:	20-02       	muls r18, r16         ; Multiply Signed
16488:	50-EA       	ldi r21, 0xa0         ; Load Immediate
1648A:	4C-00       	.data 0x004c          ; Binary data
1648C:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
1648E:	02-F2       	brbs 2, .-128         ; Branch if Bit in SREG is Set
16490:	43-EB       	ldi r20, 0xb3         ; Load Immediate
16492:	02-00       	.data 0x0002          ; Binary data
16494:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16496:	20-EA       	ldi r18, 0xa0         ; Load Immediate
16498:	DC-70       	andi r29, 0x0c        ; Logical AND with Immediate
1649A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1649C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1649E:	FF-0C       	add r15, r15          ; Add without Carry
164A0:	1C-EA       	ldi r17, 0xac         ; Load Immediate
164A2:	D0-52       	subi r29, 0x20        ; Subtract Immediate
164A4:	1E-BF       	out 0x3e, r17         ; Store Register to I/O Location
164A6:	1C-EA       	ldi r17, 0xac         ; Load Immediate
164A8:	D1-53       	subi r29, 0x31        ; Subtract Immediate
164AA:	92-EA       	ldi r25, 0xa2         ; Load Immediate
164AC:	0C-0F       	add r16, r28          ; Add without Carry
164AE:	93-EA       	ldi r25, 0xa3         ; Load Immediate
164B0:	0C-0F       	add r16, r28          ; Add without Carry
164B2:	6F-D0       	rcall .+222           ; Relative Call to Subroutine
164B4:	1A-44       	sbci r17, 0x4a        ; Subtract Immediate with Carry SBI
164B6:	80-EA       	ldi r24, 0xa0         ; Load Immediate
164B8:	01-0C       	add r0, r1            ; Add without Carry
164BA:	40-02       	muls r20, r16         ; Multiply Signed
164BC:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
164BE:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
164C0:	41-21       	and r20, r1           ; Logical AND
164C2:	1E-D0       	rcall .+60            ; Relative Call to Subroutine
164C4:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
164C6:	00-63       	ori r16, 0x30         ; Logical OR with Immediate
164C8:	43-EA       	ldi r20, 0xa3         ; Load Immediate
164CA:	50-10       	cpse r5, r0           ; Compare Skip if Equal
164CC:	43-EA       	ldi r20, 0xa3         ; Load Immediate
164CE:	51-11       	cpse r21, r1          ; Compare Skip if Equal
164D0:	A0-FB       	bst r26, 0            ; Bit Store from Bit in Register to T Flag in SREG
164D2:	01-31       	cpi r16, 0x11         ; Compare with Immediate
164D4:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
164D6:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
164D8:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
164DA:	00-0F       	add r16, r16          ; Add without Carry
164DC:	3E-BF       	out 0x3e, r19         ; Store Register to I/O Location
164DE:	49-00       	.data 0x0049          ; Binary data
164E0:	41-EA       	ldi r20, 0xa1         ; Load Immediate
164E2:	D3-71       	andi r29, 0x13        ; Logical AND with Immediate
164E4:	5B-00       	.data 0x005b          ; Binary data
164E6:	40-EA       	ldi r20, 0xa0         ; Load Immediate
164E8:	01-00       	.data 0x0001          ; Binary data
164EA:	62-F1       	brbs 2, .+88          ; Branch if Bit in SREG is Set
164EC:	7F-02       	muls r23, r31         ; Multiply Signed
164EE:	FD-2A       	or r15, r29           ; Logical OR
164F0:	1D-D8       	rcall .+4154          ; Relative Call to Subroutine
164F2:	B3-F1       	brbs 3, .+108         ; Branch if Bit in SREG is Set
164F4:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
164F6:	40-EB       	ldi r20, 0xb0         ; Load Immediate
164F8:	C2-50       	subi r28, 0x02        ; Subtract Immediate
164FA:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
164FC:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
164FE:	01-00       	.data 0x0001          ; Binary data
16500:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16502:	90-F0       	brbs 0, .+36          ; Branch if Bit in SREG is Set
16504:	00-0F       	add r16, r16          ; Add without Carry
16506:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
16508:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
1650A:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
1650C:	49-02       	muls r20, r25         ; Multiply Signed
1650E:	4C-EA       	ldi r20, 0xac         ; Load Immediate
16510:	50-20       	and r5, r0            ; Logical AND
16512:	40-EA       	ldi r20, 0xa0         ; Load Immediate
16514:	51-20       	and r5, r1            ; Logical AND
16516:	7F-3A       	cpi r23, 0xaf         ; Compare with Immediate
16518:	C2-BF       	out 0x32, r28         ; Store Register to I/O Location
1651A:	D2-F1       	brbs 2, .+116         ; Branch if Bit in SREG is Set
1651C:	FF-03       	fmulsu r23, r23       ; Fractional Multiply Signed with Unsigned
1651E:	40-EA       	ldi r20, 0xa0         ; Load Immediate
16520:	C2-50       	subi r28, 0x02        ; Subtract Immediate
16522:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16524:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
16526:	00-00       	nop                   ; No Operation
16528:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1652A:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
1652C:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
1652E:	5D-DC       	rcall .+6330          ; Relative Call to Subroutine
16530:	12-F1       	brbs 2, .+68          ; Branch if Bit in SREG is Set
16532:	19-0F       	add r17, r25          ; Add without Carry
16534:	DC-BF       	out 0x3c, r29         ; Store Register to I/O Location
16536:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16538:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1653A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1653C:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
1653E:	00-02       	muls r16, r16         ; Multiply Signed
16540:	41-00       	.data 0x0041          ; Binary data
16542:	21-FA       	bst r2, 1             ; Bit Store from Bit in Register to T Flag in SREG
16544:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
16546:	C2-F1       	brbs 2, .+112         ; Branch if Bit in SREG is Set
16548:	20-02       	muls r18, r16         ; Multiply Signed
1654A:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
1654C:	02-FC       	sbrc r0, 2            ; Skip if Bit in Register is Cleared
1654E:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
16550:	31-00       	.data 0x0031          ; Binary data
16552:	40-F1       	brbs 0, .+80          ; Branch if Bit in SREG is Set
16554:	00-00       	nop                   ; No Operation
16556:	53-EA       	ldi r21, 0xa3         ; Load Immediate
16558:	4C-03       	fmul r20, r20         ; Fractional Multiply Unsigned
1655A:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
1655C:	20-EA       	ldi r18, 0xa0         ; Load Immediate
1655E:	DC-70       	andi r29, 0x0c        ; Logical AND with Immediate
16560:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16562:	92-F0       	brbs 2, .+36          ; Branch if Bit in SREG is Set
16564:	00-0F       	add r16, r16          ; Add without Carry
16566:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16568:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
1656A:	02-BF       	out 0x32, r16         ; Store Register to I/O Location
1656C:	40-00       	.data 0x0040          ; Binary data
1656E:	10-F4       	brbc 0, .+4           ; Branch if Bit in SREG is Cleared
16570:	00-0F       	add r16, r16          ; Add without Carry
16572:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
16574:	F9-D0       	rcall .+498           ; Relative Call to Subroutine
16576:	40-EA       	ldi r20, 0xa0         ; Load Immediate
16578:	0C-00       	.data 0x000c          ; Binary data
1657A:	93-F0       	brbs 3, .+36          ; Branch if Bit in SREG is Set
1657C:	00-0F       	add r16, r16          ; Add without Carry
1657E:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
16580:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
16582:	02-BF       	out 0x32, r16         ; Store Register to I/O Location
16584:	49-00       	.data 0x0049          ; Binary data
16586:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
16588:	00-0F       	add r16, r16          ; Add without Carry
1658A:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
1658C:	F9-D0       	rcall .+498           ; Relative Call to Subroutine
1658E:	41-EA       	ldi r20, 0xa1         ; Load Immediate
16590:	0C-01       	movw r0, r24          ; Copy Register Word
16592:	8F-E7       	ldi r24, 0x7f         ; Load Immediate
16594:	0C-EA       	ldi r16, 0xac         ; Load Immediate
16596:	D1-53       	subi r29, 0x31        ; Subtract Immediate
16598:	92-EA       	ldi r25, 0xa2         ; Load Immediate
1659A:	0C-0F       	add r16, r28          ; Add without Carry
1659C:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1659E:	93-EA       	ldi r25, 0xa3         ; Load Immediate
165A0:	0C-0F       	add r16, r28          ; Add without Carry
165A2:	0A-D0       	rcall .+20            ; Relative Call to Subroutine
165A4:	30-F0       	brbs 0, .+12          ; Branch if Bit in SREG is Set
165A6:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
165A8:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
165AA:	31-F0       	brbs 1, .+12          ; Branch if Bit in SREG is Set
165AC:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
165AE:	D8-D1       	rcall .+944           ; Relative Call to Subroutine
165B0:	80-EA       	ldi r24, 0xa0         ; Load Immediate
165B2:	01-00       	.data 0x0001          ; Binary data
165B4:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
165B6:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
165B8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
165BA:	90-F0       	brbs 0, .+36          ; Branch if Bit in SREG is Set
165BC:	00-0F       	add r16, r16          ; Add without Carry
165BE:	17-BF       	out 0x37, r17         ; Store Register to I/O Location
165C0:	90-F0       	brbs 0, .+36          ; Branch if Bit in SREG is Set
165C2:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
165C4:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
165C6:	91-F0       	brbs 1, .+36          ; Branch if Bit in SREG is Set
165C8:	00-0F       	add r16, r16          ; Add without Carry
165CA:	91-F0       	brbs 1, .+36          ; Branch if Bit in SREG is Set
165CC:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
165CE:	14-D0       	rcall .+40            ; Relative Call to Subroutine
165D0:	92-EA       	ldi r25, 0xa2         ; Load Immediate
165D2:	0C-0F       	add r16, r28          ; Add without Carry
165D4:	01-D1       	rcall .+514           ; Relative Call to Subroutine
165D6:	42-02       	muls r20, r18         ; Multiply Signed
165D8:	0F-D1       	rcall .+542           ; Relative Call to Subroutine
165DA:	93-EA       	ldi r25, 0xa3         ; Load Immediate
165DC:	0C-0F       	add r16, r28          ; Add without Carry
165DE:	03-D1       	rcall .+518           ; Relative Call to Subroutine
165E0:	4B-02       	muls r20, r27         ; Multiply Signed
165E2:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
165E4:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
165E6:	08-D1       	rcall .+528           ; Relative Call to Subroutine
165E8:	80-EA       	ldi r24, 0xa0         ; Load Immediate
165EA:	01-00       	.data 0x0001          ; Binary data
165EC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
165EE:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
165F0:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
165F2:	FE-40       	sbci r31, 0x0e        ; Subtract Immediate with Carry SBI
165F4:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
165F6:	00-00       	nop                   ; No Operation
165F8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
165FA:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
165FC:	FE-40       	sbci r31, 0x0e        ; Subtract Immediate with Carry SBI
165FE:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
16600:	40-00       	.data 0x0040          ; Binary data
16602:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16604:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16606:	FF-0C       	add r15, r15          ; Add without Carry
16608:	1C-EA       	ldi r17, 0xac         ; Load Immediate
1660A:	D0-52       	subi r29, 0x20        ; Subtract Immediate
1660C:	1E-BF       	out 0x3e, r17         ; Store Register to I/O Location
1660E:	1C-EA       	ldi r17, 0xac         ; Load Immediate
16610:	D1-53       	subi r29, 0x31        ; Subtract Immediate
16612:	92-EA       	ldi r25, 0xa2         ; Load Immediate
16614:	0C-0F       	add r16, r28          ; Add without Carry
16616:	93-EA       	ldi r25, 0xa3         ; Load Immediate
16618:	0C-0F       	add r16, r28          ; Add without Carry
1661A:	69-D0       	rcall .+210           ; Relative Call to Subroutine
1661C:	A2-EB       	ldi r26, 0xb2         ; Load Immediate
1661E:	03-02       	muls r16, r19         ; Multiply Signed
16620:	80-EA       	ldi r24, 0xa0         ; Load Immediate
16622:	01-0C       	add r0, r1            ; Add without Carry
16624:	49-02       	muls r20, r25         ; Multiply Signed
16626:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16628:	40-20       	and r4, r0            ; Logical AND
1662A:	37-D0       	rcall .+110           ; Relative Call to Subroutine
1662C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1662E:	80-53       	subi r24, 0x30        ; Subtract Immediate
16630:	43-EA       	ldi r20, 0xa3         ; Load Immediate
16632:	11-11       	cpse r17, r1          ; Compare Skip if Equal
16634:	43-EA       	ldi r20, 0xa3         ; Load Immediate
16636:	10-13       	cpse r17, r16         ; Compare Skip if Equal
16638:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
1663A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1663C:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
1663E:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
16640:	5B-00       	.data 0x005b          ; Binary data
16642:	42-F1       	brbs 2, .+80          ; Branch if Bit in SREG is Set
16644:	7D-02       	muls r23, r29         ; Multiply Signed
16646:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
16648:	00-0C       	add r0, r0            ; Add without Carry
1664A:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
1664C:	24-BF       	out 0x34, r18         ; Store Register to I/O Location
1664E:	5B-1A       	sub r5, r27           ; Subtract Without Carry
16650:	40-EA       	ldi r20, 0xa0         ; Load Immediate
16652:	0C-00       	.data 0x000c          ; Binary data
16654:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
16656:	51-0F       	add r21, r17          ; Add without Carry
16658:	24-BF       	out 0x34, r18         ; Store Register to I/O Location
1665A:	A3-EB       	ldi r26, 0xb3         ; Load Immediate
1665C:	51-03       	mulsu r21, r17        ; Multiply Signed with Unsigned
1665E:	40-EA       	ldi r20, 0xa0         ; Load Immediate
16660:	5C-00       	.data 0x005c          ; Binary data
16662:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
16664:	91-0F       	add r25, r17          ; Add without Carry
16666:	24-BF       	out 0x34, r18         ; Store Register to I/O Location
16668:	A3-EB       	ldi r26, 0xb3         ; Load Immediate
1666A:	91-03       	fmuls r17, r17        ; Fractional Multiply Signed
1666C:	40-EA       	ldi r20, 0xa0         ; Load Immediate
1666E:	9C-00       	.data 0x009c          ; Binary data
16670:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
16672:	D1-0F       	add r29, r17          ; Add without Carry
16674:	24-BF       	out 0x34, r18         ; Store Register to I/O Location
16676:	A3-EB       	ldi r26, 0xb3         ; Load Immediate
16678:	D1-03       	fmuls r21, r17        ; Fractional Multiply Signed
1667A:	40-EA       	ldi r20, 0xa0         ; Load Immediate
1667C:	DC-00       	.data 0x00dc          ; Binary data
1667E:	1B-01       	movw r2, r22          ; Copy Register Word
16680:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16682:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
16684:	1C-1C       	adc r1, r12           ; Add with Carry
16686:	E0-D1       	rcall .+960           ; Relative Call to Subroutine
16688:	FD-2A       	or r15, r29           ; Logical OR
1668A:	3F-F6       	brbc 7, .-114         ; Branch if Bit in SREG is Cleared
1668C:	50-AF       	std Y+56, r21         ; Store Indirect From Register to Data Space
1668E:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
16690:	40-EB       	ldi r20, 0xb0         ; Load Immediate
16692:	C2-50       	subi r28, 0x02        ; Subtract Immediate
16694:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16696:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
16698:	01-00       	.data 0x0001          ; Binary data
1669A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1669C:	0C-F0       	brbs 4, .+2           ; Branch if Bit in SREG is Set
1669E:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
166A0:	4C-EA       	ldi r20, 0xac         ; Load Immediate
166A2:	50-20       	and r5, r0            ; Logical AND
166A4:	7F-32       	cpi r23, 0x2f         ; Compare with Immediate
166A6:	C2-BF       	out 0x32, r28         ; Store Register to I/O Location
166A8:	D2-F1       	brbs 2, .+116         ; Branch if Bit in SREG is Set
166AA:	FF-03       	fmulsu r23, r23       ; Fractional Multiply Signed with Unsigned
166AC:	40-EA       	ldi r20, 0xa0         ; Load Immediate
166AE:	C2-50       	subi r28, 0x02        ; Subtract Immediate
166B0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
166B2:	40-F4       	brbc 0, .+16          ; Branch if Bit in SREG is Cleared
166B4:	00-00       	nop                   ; No Operation
166B6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
166B8:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
166BA:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
166BC:	37-E7       	ldi r19, 0x77         ; Load Immediate
166BE:	92-F0       	brbs 2, .+36          ; Branch if Bit in SREG is Set
166C0:	00-0F       	add r16, r16          ; Add without Carry
166C2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
166C4:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
166C6:	02-BF       	out 0x32, r16         ; Store Register to I/O Location
166C8:	40-00       	.data 0x0040          ; Binary data
166CA:	10-F4       	brbc 0, .+4           ; Branch if Bit in SREG is Cleared
166CC:	00-0F       	add r16, r16          ; Add without Carry
166CE:	01-3A       	cpi r16, 0xa1         ; Compare with Immediate
166D0:	F9-D0       	rcall .+498           ; Relative Call to Subroutine
166D2:	40-EA       	ldi r20, 0xa0         ; Load Immediate
166D4:	0C-00       	.data 0x000c          ; Binary data
166D6:	93-F0       	brbs 3, .+36          ; Branch if Bit in SREG is Set
166D8:	00-0F       	add r16, r16          ; Add without Carry
166DA:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
166DC:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
166DE:	02-BF       	out 0x32, r16         ; Store Register to I/O Location
166E0:	49-00       	.data 0x0049          ; Binary data
166E2:	11-F4       	brbc 1, .+4           ; Branch if Bit in SREG is Cleared
166E4:	00-0F       	add r16, r16          ; Add without Carry
166E6:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
166E8:	F9-D0       	rcall .+498           ; Relative Call to Subroutine
166EA:	41-EA       	ldi r20, 0xa1         ; Load Immediate
166EC:	0C-01       	movw r0, r24          ; Copy Register Word
166EE:	95-E7       	ldi r25, 0x75         ; Load Immediate
166F0:	0C-EA       	ldi r16, 0xac         ; Load Immediate
166F2:	D1-53       	subi r29, 0x31        ; Subtract Immediate
166F4:	92-EA       	ldi r25, 0xa2         ; Load Immediate
166F6:	0C-0F       	add r16, r28          ; Add without Carry
166F8:	08-D1       	rcall .+528           ; Relative Call to Subroutine
166FA:	42-02       	muls r20, r18         ; Multiply Signed
166FC:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
166FE:	7D-AF       	std Y+61, r23         ; Store Indirect From Register to Data Space
16700:	93-EA       	ldi r25, 0xa3         ; Load Immediate
16702:	0C-0F       	add r16, r28          ; Add without Carry
16704:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16706:	70-AF       	std Y+56, r23         ; Store Indirect From Register to Data Space
16708:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
1670A:	76-E7       	ldi r23, 0x76         ; Load Immediate
1670C:	93-EA       	ldi r25, 0xa3         ; Load Immediate
1670E:	0C-0F       	add r16, r28          ; Add without Carry
16710:	04-D1       	rcall .+520           ; Relative Call to Subroutine
16712:	4B-02       	muls r20, r27         ; Multiply Signed
16714:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
16716:	4C-AF       	std Y+60, r20         ; Store Indirect From Register to Data Space
16718:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
1671A:	6E-E7       	ldi r22, 0x7e         ; Load Immediate
1671C:	30-F0       	brbs 0, .+12          ; Branch if Bit in SREG is Set
1671E:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
16720:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16722:	31-F0       	brbs 1, .+12          ; Branch if Bit in SREG is Set
16724:	00-4C       	sbci r16, 0xc0        ; Subtract Immediate with Carry SBI
16726:	CA-D1       	rcall .+916           ; Relative Call to Subroutine
16728:	30-F0       	brbs 0, .+12          ; Branch if Bit in SREG is Set
1672A:	00-42       	sbci r16, 0x20        ; Subtract Immediate with Carry SBI
1672C:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
1672E:	5C-AF       	std Y+60, r21         ; Store Indirect From Register to Data Space
16730:	31-F0       	brbs 1, .+12          ; Branch if Bit in SREG is Set
16732:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
16734:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16736:	3C-AF       	std Y+60, r19         ; Store Indirect From Register to Data Space
16738:	5F-E7       	ldi r21, 0x7f         ; Load Immediate
1673A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1673C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1673E:	FF-3C       	cpi r31, 0xcf         ; Compare with Immediate
16740:	06-E0       	ldi r16, 0x06         ; Load Immediate
16742:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16744:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16746:	01-0C       	add r0, r1            ; Add without Carry
16748:	02-E0       	ldi r16, 0x02         ; Load Immediate
1674A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1674C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1674E:	01-0C       	add r0, r1            ; Add without Carry
16750:	4D-F8       	.data 0xf84d          ; Binary data
16752:	04-CD       	rjmp .-1528           ; Relative Jump
16754:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16756:	40-02       	muls r20, r16         ; Multiply Signed
16758:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1675A:	41-03       	mulsu r20, r17        ; Multiply Signed with Unsigned
1675C:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1675E:	22-6C       	ori r18, 0xc2         ; Logical OR with Immediate
16760:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16762:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
16764:	23-6C       	ori r18, 0xc3         ; Logical OR with Immediate
16766:	11-D0       	rcall .+34            ; Relative Call to Subroutine
16768:	01-B0       	in r0, 0x01           ; Load an I/O Location to Register
1676A:	52-EA       	ldi r21, 0xa2         ; Load Immediate
1676C:	53-0C       	add r5, r3            ; Add without Carry
1676E:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16770:	90-EA       	ldi r25, 0xa0         ; Load Immediate
16772:	01-0F       	add r16, r17          ; Add without Carry
16774:	58-BF       	out 0x38, r21         ; Store Register to I/O Location
16776:	B2-EB       	ldi r27, 0xb2         ; Load Immediate
16778:	03-00       	.data 0x0003          ; Binary data
1677A:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
1677C:	C8-17       	cp r28, r24           ; Compare
1677E:	38-BF       	out 0x38, r19         ; Store Register to I/O Location
16780:	6F-EA       	ldi r22, 0xaf         ; Load Immediate
16782:	E1-70       	andi r30, 0x01        ; Logical AND with Immediate
16784:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
16786:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
16788:	01-00       	.data 0x0001          ; Binary data
1678A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1678C:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1678E:	22-6C       	ori r18, 0xc2         ; Logical OR with Immediate
16790:	02-D1       	rcall .+516           ; Relative Call to Subroutine
16792:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
16794:	40-2C       	mov r4, r0            ; Copy Register
16796:	05-D1       	rcall .+522           ; Relative Call to Subroutine
16798:	7F-EA       	ldi r23, 0xaf         ; Load Immediate
1679A:	23-6C       	ori r18, 0xc3         ; Logical OR with Immediate
1679C:	E4-D1       	rcall .+968           ; Relative Call to Subroutine
1679E:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
167A0:	41-2C       	mov r4, r1            ; Copy Register
167A2:	E1-D0       	rcall .+450           ; Relative Call to Subroutine
167A4:	5D-F8       	.data 0xf85d          ; Binary data
167A6:	04-0B       	sbc r16, r20          ; Subtract with Carry
167A8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
167AA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
167AC:	84-46       	sbci r24, 0x64        ; Subtract Immediate with Carry SBI
167AE:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
167B0:	61-46       	sbci r22, 0x61        ; Subtract Immediate with Carry SBI
167B2:	FF-E7       	ldi r31, 0x7f         ; Load Immediate
167B4:	0F-B5       	in r16, 0x2f          ; Load an I/O Location to Register
167B6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
167B8:	C9-FF       	.data 0xffc9          ; Binary data
167BA:	00-28       	or r0, r0             ; Logical OR
167BC:	48-BF       	out 0x38, r20         ; Store Register to I/O Location
167BE:	10-F1       	brbs 0, .+68          ; Branch if Bit in SREG is Set
167C0:	00-0F       	add r16, r16          ; Add without Carry
167C2:	0F-BD       	out 0x2f, r16         ; Store Register to I/O Location
167C4:	4D-F8       	.data 0xf84d          ; Binary data
167C6:	08-ED       	ldi r16, 0xd8         ; Load Immediate
167C8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
167CA:	F4-FF       	sbrs r31, 4           ; Skip if Bit in Register is Set
167CC:	0C-BF       	out 0x3c, r16         ; Store Register to I/O Location
167CE:	01-20       	and r0, r1            ; Logical AND
167D0:	00-20       	and r0, r0            ; Logical AND
167D2:	5D-F8       	.data 0xf85d          ; Binary data
167D4:	08-FB       	.data 0xfb08          ; Binary data
167D6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
167D8:	4D-F8       	.data 0xf84d          ; Binary data
167DA:	08-ED       	ldi r16, 0xd8         ; Load Immediate
167DC:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
167DE:	EA-FF       	.data 0xffea          ; Binary data
167E0:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
167E2:	01-20       	and r0, r1            ; Logical AND
167E4:	00-20       	and r0, r0            ; Logical AND
167E6:	5D-F8       	.data 0xf85d          ; Binary data
167E8:	08-FB       	.data 0xfb08          ; Binary data
167EA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
167EC:	4D-F8       	.data 0xf84d          ; Binary data
167EE:	08-ED       	ldi r16, 0xd8         ; Load Immediate
167F0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
167F2:	E0-FF       	sbrs r30, 0           ; Skip if Bit in Register is Set
167F4:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
167F6:	01-20       	and r0, r1            ; Logical AND
167F8:	00-20       	and r0, r0            ; Logical AND
167FA:	5D-F8       	.data 0xf85d          ; Binary data
167FC:	08-FB       	.data 0xfb08          ; Binary data
167FE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16800:	4D-F8       	.data 0xf84d          ; Binary data
16802:	08-ED       	ldi r16, 0xd8         ; Load Immediate
16804:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
16806:	D2-FF       	sbrs r29, 2           ; Skip if Bit in Register is Set
16808:	94-BF       	out 0x34, r25         ; Store Register to I/O Location
1680A:	01-20       	and r0, r1            ; Logical AND
1680C:	00-20       	and r0, r0            ; Logical AND
1680E:	5D-F8       	.data 0xf85d          ; Binary data
16810:	08-FB       	.data 0xfb08          ; Binary data
16812:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16814:	4D-F8       	.data 0xf84d          ; Binary data
16816:	08-ED       	ldi r16, 0xd8         ; Load Immediate
16818:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1681A:	C8-FF       	.data 0xffc8          ; Binary data
1681C:	34-BF       	out 0x34, r19         ; Store Register to I/O Location
1681E:	01-20       	and r0, r1            ; Logical AND
16820:	00-20       	and r0, r0            ; Logical AND
16822:	5D-F8       	.data 0xf85d          ; Binary data
16824:	08-FB       	.data 0xfb08          ; Binary data
16826:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16828:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1682A:	40-02       	muls r20, r16         ; Multiply Signed
1682C:	B2-F1       	brbs 2, .+108         ; Branch if Bit in SREG is Set
1682E:	FE-4F       	sbci r31, 0xfe        ; Subtract Immediate with Carry SBI
16830:	0F-D3       	rcall .+1566          ; Relative Call to Subroutine
16832:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16834:	9E-03       	fmulsu r17, r22       ; Fractional Multiply Signed with Unsigned
16836:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
16838:	12-62       	ori r17, 0x22         ; Logical OR with Immediate
1683A:	0D-D9       	rcall .+4634          ; Relative Call to Subroutine
1683C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1683E:	00-23       	and r16, r16          ; Logical AND
16840:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
16842:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
16844:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
16846:	00-4F       	sbci r16, 0xf0        ; Subtract Immediate with Carry SBI
16848:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
1684A:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
1684C:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
1684E:	40-42       	sbci r20, 0x20        ; Subtract Immediate with Carry SBI
16850:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16852:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16854:	00-00       	nop                   ; No Operation
16856:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16858:	12-F1       	brbs 2, .+68          ; Branch if Bit in SREG is Set
1685A:	61-0F       	add r22, r17          ; Add without Carry
1685C:	01-D1       	rcall .+514           ; Relative Call to Subroutine
1685E:	42-02       	muls r20, r18         ; Multiply Signed
16860:	05-D1       	rcall .+522           ; Relative Call to Subroutine
16862:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
16864:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
16866:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16868:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
1686A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1686C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1686E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16870:	00-00       	nop                   ; No Operation
16872:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16874:	42-00       	.data 0x0042          ; Binary data
16876:	0E-D2       	rcall .+1052          ; Relative Call to Subroutine
16878:	B2-F1       	brbs 2, .+108         ; Branch if Bit in SREG is Set
1687A:	FE-4F       	sbci r31, 0xfe        ; Subtract Immediate with Carry SBI
1687C:	0B-D3       	rcall .+1558          ; Relative Call to Subroutine
1687E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16880:	9E-03       	fmulsu r17, r22       ; Fractional Multiply Signed with Unsigned
16882:	B3-EB       	ldi r27, 0xb3         ; Load Immediate
16884:	12-62       	ori r17, 0x22         ; Logical OR with Immediate
16886:	09-D4       	rcall .+2066          ; Relative Call to Subroutine
16888:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1688A:	00-23       	and r16, r16          ; Logical AND
1688C:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
1688E:	00-43       	sbci r16, 0x30        ; Subtract Immediate with Carry SBI
16890:	23-FA       	bst r2, 3             ; Bit Store from Bit in Register to T Flag in SREG
16892:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
16894:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16896:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16898:	00-00       	nop                   ; No Operation
1689A:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1689C:	12-F1       	brbs 2, .+68          ; Branch if Bit in SREG is Set
1689E:	61-0F       	add r22, r17          ; Add without Carry
168A0:	01-D1       	rcall .+514           ; Relative Call to Subroutine
168A2:	42-02       	muls r20, r18         ; Multiply Signed
168A4:	02-D1       	rcall .+516           ; Relative Call to Subroutine
168A6:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
168A8:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
168AA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
168AC:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
168AE:	00-00       	nop                   ; No Operation
168B0:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
168B2:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
168B4:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
168B6:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
168B8:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
168BA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
168BC:	01-B8       	out 0x01, r0          ; Store Register to I/O Location
168BE:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
168C0:	10-B4       	in r1, 0x20           ; Load an I/O Location to Register
168C2:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
168C4:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
168C6:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
168C8:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
168CA:	02-20       	and r0, r2            ; Logical AND
168CC:	5D-F8       	.data 0xf85d          ; Binary data
168CE:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
168D0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
168D2:	CC-BD       	out 0x2c, r28         ; Store Register to I/O Location
168D4:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
168D6:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
168D8:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
168DA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
168DC:	C8-98       	cbi 0x19, 0           ; Clear Bit in I/O Register
168DE:	FF-1F       	adc r31, r31          ; Add with Carry
168E0:	70-B5       	in r23, 0x20          ; Load an I/O Location to Register
168E2:	0F-4E       	sbci r16, 0xef        ; Subtract Immediate with Carry SBI
168E4:	0F-4D       	sbci r16, 0xdf        ; Subtract Immediate with Carry SBI
168E6:	76-1B       	sub r23, r22          ; Subtract Without Carry
168E8:	B6-10       	cpse r11, r6          ; Compare Skip if Equal
168EA:	07-D0       	rcall .+14            ; Relative Call to Subroutine
168EC:	04-3D       	cpi r16, 0xd4         ; Compare with Immediate
168EE:	00-24       	clr r0                ; Clear Register
168F0:	01-34       	cpi r16, 0x41         ; Compare with Immediate
168F2:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
168F4:	04-3F       	cpi r16, 0xf4         ; Compare with Immediate
168F6:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
168F8:	A6-42       	sbci r26, 0x26        ; Subtract Immediate with Carry SBI
168FA:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
168FC:	0A-4E       	sbci r16, 0xea        ; Subtract Immediate with Carry SBI
168FE:	0B-4D       	sbci r16, 0xdb        ; Subtract Immediate with Carry SBI
16900:	76-1B       	sub r23, r22          ; Subtract Without Carry
16902:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
16904:	B1-FE       	sbrs r11, 1           ; Skip if Bit in Register is Set
16906:	B6-10       	cpse r11, r6          ; Compare Skip if Equal
16908:	08-D0       	rcall .+16            ; Relative Call to Subroutine
1690A:	04-3D       	cpi r16, 0xd4         ; Compare with Immediate
1690C:	00-24       	clr r0                ; Clear Register
1690E:	01-34       	cpi r16, 0x41         ; Compare with Immediate
16910:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
16912:	04-3F       	cpi r16, 0xf4         ; Compare with Immediate
16914:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
16916:	A6-42       	sbci r26, 0x26        ; Subtract Immediate with Carry SBI
16918:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
1691A:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
1691C:	70-BD       	out 0x20, r23         ; Store Register to I/O Location
1691E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16920:	74-86       	std Y+12, r7          ; Store Indirect From Register to Data Space
16922:	01-00       	.data 0x0001          ; Binary data
16924:	74-86       	std Y+12, r7          ; Store Indirect From Register to Data Space
16926:	01-00       	.data 0x0001          ; Binary data
16928:	D4-86       	std Y+12, r13         ; Store Indirect From Register to Data Space
1692A:	01-00       	.data 0x0001          ; Binary data
1692C:	74-86       	std Y+12, r7          ; Store Indirect From Register to Data Space
1692E:	01-00       	.data 0x0001          ; Binary data
16930:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
16932:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
16934:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
16936:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16938:	0B-B8       	out 0x0b, r0          ; Store Register to I/O Location
1693A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1693C:	C8-98       	cbi 0x19, 0           ; Clear Bit in I/O Register
1693E:	FF-1F       	adc r31, r31          ; Add with Carry
16940:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
16942:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
16944:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
16946:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16948:	55-BE       	out 0x35, r5          ; Store Register to I/O Location
1694A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1694C:	C8-98       	cbi 0x19, 0           ; Clear Bit in I/O Register
1694E:	FF-1F       	adc r31, r31          ; Add with Carry
16950:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
16952:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
16954:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
16956:	0B-05       	cpc r16, r11          ; Compare with Carry
16958:	16-2D       	mov r17, r6           ; Copy Register
1695A:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
1695C:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
1695E:	27-D9       	rcall .+4686          ; Relative Call to Subroutine
16960:	35-F0       	brbs 5, .+12          ; Branch if Bit in SREG is Set
16962:	07-05       	cpc r16, r7           ; Compare with Carry
16964:	27-D4       	rcall .+2126          ; Relative Call to Subroutine
16966:	A9-42       	sbci r26, 0x29        ; Subtract Immediate with Carry SBI
16968:	25-D8       	rcall .+4170          ; Relative Call to Subroutine
1696A:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1696C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
1696E:	EC-FA       	.data 0xfaec          ; Binary data
16970:	B5-F5       	brbc 5, .+108         ; Branch if Bit in SREG is Cleared
16972:	FC-7F       	andi r31, 0xfc        ; Logical AND with Immediate
16974:	26-D2       	rcall .+1100          ; Relative Call to Subroutine
16976:	C1-4F       	sbci r28, 0xf1        ; Subtract Immediate with Carry SBI
16978:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
1697A:	D5-0C       	add r13, r5           ; Add without Carry
1697C:	07-EB       	ldi r16, 0xb7         ; Load Immediate
1697E:	CC-03       	fmulsu r20, r20       ; Fractional Multiply Signed with Unsigned
16980:	DC-68       	ori r29, 0x8c         ; Logical OR with Immediate
16982:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
16984:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16986:	D2-81       	ldd r29, Y+2          ; Load Indirect from Data Space to Register
16988:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
1698A:	E2-68       	ori r30, 0x82         ; Logical OR with Immediate
1698C:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
1698E:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
16990:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
16992:	23-44       	sbci r18, 0x43        ; Subtract Immediate with Carry SBI
16994:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16996:	5D-68       	ori r21, 0x8d         ; Logical OR with Immediate
16998:	CA-60       	ori r28, 0x0a         ; Logical OR with Immediate
1699A:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
1699C:	01-05       	cpc r16, r1           ; Compare with Carry
1699E:	91-60       	ori r25, 0x01         ; Logical OR with Immediate
169A0:	5D-60       	ori r21, 0x0d         ; Logical OR with Immediate
169A2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
169A4:	D3-FA       	bst r13, 3            ; Bit Store from Bit in Register to T Flag in SREG
169A6:	08-34       	cpi r16, 0x48         ; Compare with Immediate
169A8:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
169AA:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
169AC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
169AE:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
169B0:	10-25       	clr r272              ; Clear Register
169B2:	A9-42       	sbci r26, 0x29        ; Subtract Immediate with Carry SBI
169B4:	D9-D9       	rcall .+5042          ; Relative Call to Subroutine
169B6:	00-24       	clr r0                ; Clear Register
169B8:	0C-23       	and r16, r28          ; Logical AND
169BA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
169BC:	33-60       	ori r19, 0x03         ; Logical OR with Immediate
169BE:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
169C0:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
169C2:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
169C4:	5F-EA       	ldi r21, 0xaf         ; Load Immediate
169C6:	55-2C       	mov r5, r5            ; Copy Register
169C8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
169CA:	8A-80       	ldd r8, Y+2           ; Load Indirect from Data Space to Register
169CC:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
169CE:	04-0F       	add r16, r20          ; Add without Carry
169D0:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
169D2:	60-81       	ld r22, Z             ; Load Indirect from Data Space to Register
169D4:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
169D6:	95-1C       	adc r9, r5            ; Add with Carry
169D8:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
169DA:	38-0C       	add r3, r8            ; Add without Carry
169DC:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
169DE:	4C-01       	movw r8, r24          ; Copy Register Word
169E0:	A6-4F       	sbci r26, 0xf6        ; Subtract Immediate with Carry SBI
169E2:	07-EB       	ldi r16, 0xb7         ; Load Immediate
169E4:	81-01       	movw r16, r2          ; Copy Register Word
169E6:	CC-68       	ori r28, 0x8c         ; Logical OR with Immediate
169E8:	A1-42       	sbci r26, 0x21        ; Subtract Immediate with Carry SBI
169EA:	05-D1       	rcall .+522           ; Relative Call to Subroutine
169EC:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
169EE:	00-2B       	or r16, r16           ; Logical OR
169F0:	7A-DA       	rcall .+5364          ; Relative Call to Subroutine
169F2:	E4-68       	ori r30, 0x84         ; Logical OR with Immediate
169F4:	A1-42       	sbci r26, 0x21        ; Subtract Immediate with Carry SBI
169F6:	07-D0       	rcall .+14            ; Relative Call to Subroutine
169F8:	62-68       	ori r22, 0x82         ; Logical OR with Immediate
169FA:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
169FC:	03-02       	muls r16, r19         ; Multiply Signed
169FE:	53-1B       	sub r21, r19          ; Subtract Without Carry
16A00:	0F-2B       	or r16, r31           ; Logical OR
16A02:	F4-DD       	rcall .+7144          ; Relative Call to Subroutine
16A04:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16A06:	FF-3C       	cpi r31, 0xcf         ; Compare with Immediate
16A08:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16A0A:	01-0C       	add r0, r1            ; Add without Carry
16A0C:	9B-4B       	sbci r25, 0xbb        ; Subtract Immediate with Carry SBI
16A0E:	3C-69       	ori r19, 0x9c         ; Logical OR with Immediate
16A10:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
16A12:	08-0E       	add r0, r24           ; Add without Carry
16A14:	74-45       	sbci r23, 0x54        ; Subtract Immediate with Carry SBI
16A16:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16A18:	7E-81       	ldd r23, Y+6          ; Load Indirect from Data Space to Register
16A1A:	61-68       	ori r22, 0x81         ; Logical OR with Immediate
16A1C:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
16A1E:	03-01       	movw r0, r6           ; Copy Register Word
16A20:	4A-1B       	sub r20, r26          ; Subtract Without Carry
16A22:	0F-2A       	or r0, r31            ; Logical OR
16A24:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
16A26:	64-81       	ldd r22, Y+4          ; Load Indirect from Data Space to Register
16A28:	00-2A       	or r0, r16            ; Logical OR
16A2A:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
16A2C:	14-E0       	ldi r17, 0x04         ; Load Immediate
16A2E:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
16A30:	10-E0       	ldi r17, 0x00         ; Load Immediate
16A32:	6A-DA       	rcall .+5332          ; Relative Call to Subroutine
16A34:	B1-F5       	brbc 1, .+108         ; Branch if Bit in SREG is Cleared
16A36:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
16A38:	80-F0       	brbs 0, .+32          ; Branch if Bit in SREG is Set
16A3A:	3A-81       	ldd r19, Y+2          ; Load Indirect from Data Space to Register
16A3C:	C9-08       	sbc r12, r9           ; Subtract with Carry
16A3E:	03-EB       	ldi r16, 0xb3         ; Load Immediate
16A40:	C1-00       	.data 0x00c1          ; Binary data
16A42:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16A44:	A1-08       	sbc r10, r1           ; Subtract with Carry
16A46:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
16A48:	81-68       	ori r24, 0x81         ; Logical OR with Immediate
16A4A:	A1-60       	ori r26, 0x01         ; Logical OR with Immediate
16A4C:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16A4E:	01-09       	sbc r16, r1           ; Subtract with Carry
16A50:	09-FA       	.data 0xfa09          ; Binary data
16A52:	08-F8       	.data 0xf808          ; Binary data
16A54:	48-EA       	ldi r20, 0xa8         ; Load Immediate
16A56:	02-02       	muls r16, r18         ; Multiply Signed
16A58:	E0-60       	ori r30, 0x00         ; Logical OR with Immediate
16A5A:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
16A5C:	84-60       	ori r24, 0x04         ; Logical OR with Immediate
16A5E:	CC-60       	ori r28, 0x0c         ; Logical OR with Immediate
16A60:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16A62:	AC-03       	fmulsu r18, r20       ; Fractional Multiply Signed with Unsigned
16A64:	01-20       	and r0, r1            ; Logical AND
16A66:	98-40       	sbci r25, 0x08        ; Subtract Immediate with Carry SBI
16A68:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
16A6A:	5B-D8       	rcall .+4278          ; Relative Call to Subroutine
16A6C:	02-42       	sbci r16, 0x22        ; Subtract Immediate with Carry SBI
16A6E:	06-D1       	rcall .+524           ; Relative Call to Subroutine
16A70:	2C-F0       	brbs 4, .+10          ; Branch if Bit in SREG is Set
16A72:	03-0C       	add r0, r3            ; Add without Carry
16A74:	40-00       	.data 0x0040          ; Binary data
16A76:	02-42       	sbci r16, 0x22        ; Subtract Immediate with Carry SBI
16A78:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16A7A:	04-0C       	add r0, r4            ; Add without Carry
16A7C:	FA-D0       	rcall .+500           ; Relative Call to Subroutine
16A7E:	07-EB       	ldi r16, 0xb7         ; Load Immediate
16A80:	CC-08       	sbc r12, r12          ; Subtract with Carry
16A82:	44-46       	sbci r20, 0x64        ; Subtract Immediate with Carry SBI
16A84:	E1-46       	sbci r30, 0x61        ; Subtract Immediate with Carry SBI
16A86:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
16A88:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
16A8A:	07-D1       	rcall .+526           ; Relative Call to Subroutine
16A8C:	45-E1       	ldi r20, 0x15         ; Load Immediate
16A8E:	00-2A       	or r0, r16            ; Logical OR
16A90:	80-F2       	brbs 0, .-96          ; Branch if Bit in SREG is Set
16A92:	56-81       	ldd r21, Y+6          ; Load Indirect from Data Space to Register
16A94:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
16A96:	9C-42       	sbci r25, 0x2c        ; Subtract Immediate with Carry SBI
16A98:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16A9A:	3F-81       	ldd r19, Y+7          ; Load Indirect from Data Space to Register
16A9C:	59-68       	ori r21, 0x89         ; Logical OR with Immediate
16A9E:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
16AA0:	03-01       	movw r0, r6           ; Copy Register Word
16AA2:	4A-1B       	sub r20, r26          ; Subtract Without Carry
16AA4:	0F-2A       	or r0, r31            ; Logical OR
16AA6:	F2-DD       	rcall .+7140          ; Relative Call to Subroutine
16AA8:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
16AAA:	D3-F8       	bld r13, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
16AAC:	0C-C0       	rjmp .+24             ; Relative Jump
16AAE:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
16AB0:	08-8F       	std Y+24, r16         ; Store Indirect From Register to Data Space
16AB2:	59-19       	sub r21, r9           ; Subtract Without Carry
16AB4:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
16AB6:	01-09       	sbc r16, r1           ; Subtract with Carry
16AB8:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
16ABA:	01-05       	cpc r16, r1           ; Compare with Carry
16ABC:	C3-F8       	bld r12, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
16ABE:	04-90       	lpm r0, Z             ; Load Program Memory
16AC0:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16AC2:	C8-F8       	.data 0xf8c8          ; Binary data
16AC4:	0C-C0       	rjmp .+24             ; Relative Jump
16AC6:	CC-F8       	.data 0xf8cc          ; Binary data
16AC8:	08-80       	ld r0, Y              ; Load Indirect from Data Space to Register
16ACA:	79-61       	ori r23, 0x19         ; Logical OR with Immediate
16ACC:	39-61       	ori r19, 0x19         ; Logical OR with Immediate
16ACE:	C1-F8       	bld r12, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
16AD0:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
16AD2:	C1-F8       	bld r12, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
16AD4:	08-E0       	ldi r16, 0x08         ; Load Immediate
16AD6:	4D-60       	ori r20, 0x0d         ; Logical OR with Immediate
16AD8:	8A-50       	subi r24, 0x0a        ; Subtract Immediate
16ADA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16ADC:	37-FA       	bst r3, 7             ; Bit Store from Bit in Register to T Flag in SREG
16ADE:	63-E7       	ldi r22, 0x73         ; Load Immediate
16AE0:	7E-21       	and r23, r14          ; Logical AND
16AE2:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16AE4:	3F-0C       	add r3, r15           ; Add without Carry
16AE6:	7B-E7       	ldi r23, 0x7b         ; Load Immediate
16AE8:	22-44       	sbci r18, 0x42        ; Subtract Immediate with Carry SBI
16AEA:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
16AEC:	50-68       	ori r21, 0x80         ; Logical OR with Immediate
16AEE:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
16AF0:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
16AF2:	01-05       	cpc r16, r1           ; Compare with Carry
16AF4:	CB-60       	ori r28, 0x0b         ; Logical OR with Immediate
16AF6:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16AF8:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
16AFA:	55-60       	ori r21, 0x05         ; Logical OR with Immediate
16AFC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16AFE:	26-FA       	bst r2, 6             ; Bit Store from Bit in Register to T Flag in SREG
16B00:	08-34       	cpi r16, 0x48         ; Compare with Immediate
16B02:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
16B04:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
16B06:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
16B08:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
16B0A:	21-44       	sbci r18, 0x41        ; Subtract Immediate with Carry SBI
16B0C:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16B0E:	4B-68       	ori r20, 0x8b         ; Logical OR with Immediate
16B10:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
16B12:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
16B14:	4B-60       	ori r20, 0x0b         ; Logical OR with Immediate
16B16:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16B18:	19-FA       	.data 0xfa19          ; Binary data
16B1A:	08-34       	cpi r16, 0x48         ; Compare with Immediate
16B1C:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
16B1E:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
16B20:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
16B22:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
16B24:	BC-68       	ori r27, 0x8c         ; Logical OR with Immediate
16B26:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
16B28:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
16B2A:	03-09       	sbc r16, r3           ; Subtract with Carry
16B2C:	A9-45       	sbci r26, 0x59        ; Subtract Immediate with Carry SBI
16B2E:	04-D3       	rcall .+1544          ; Relative Call to Subroutine
16B30:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
16B32:	09-03       	fmul r16, r17         ; Fractional Multiply Unsigned
16B34:	0F-2B       	or r16, r31           ; Logical OR
16B36:	00-F3       	brbs 0, .-64          ; Branch if Bit in SREG is Set
16B38:	91-80       	ldd r9, Y+1           ; Load Indirect from Data Space to Register
16B3A:	51-4B       	sbci r21, 0xb1        ; Subtract Immediate with Carry SBI
16B3C:	51-4A       	sbci r21, 0xa1        ; Subtract Immediate with Carry SBI
16B3E:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
16B40:	13-68       	ori r17, 0x83         ; Logical OR with Immediate
16B42:	01-33       	cpi r16, 0x31         ; Compare with Immediate
16B44:	05-EB       	ldi r16, 0xb5         ; Load Immediate
16B46:	01-0A       	sbc r0, r17           ; Subtract with Carry
16B48:	04-EB       	ldi r16, 0xb4         ; Load Immediate
16B4A:	09-0B       	sbc r16, r25          ; Subtract with Carry
16B4C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16B4E:	61-81       	ldd r22, Y+1          ; Load Indirect from Data Space to Register
16B50:	0A-F5       	brbc 2, .+66          ; Branch if Bit in SREG is Cleared
16B52:	80-5A       	subi r24, 0xa0        ; Subtract Immediate
16B54:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
16B56:	0F-0A       	sbc r0, r31           ; Subtract with Carry
16B58:	2A-F4       	brbc 2, .+10          ; Branch if Bit in SREG is Cleared
16B5A:	7F-6A       	ori r23, 0xaf         ; Logical OR with Immediate
16B5C:	2A-F0       	brbs 2, .+10          ; Branch if Bit in SREG is Set
16B5E:	0F-0A       	sbc r0, r31           ; Subtract with Carry
16B60:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16B62:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
16B64:	01-92       	st Z+, r0             ; Store Indirect From Register to Data Space
16B66:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16B68:	E1-FB       	bst r30, 1            ; Bit Store from Bit in Register to T Flag in SREG
16B6A:	B0-F1       	brbs 0, .+108         ; Branch if Bit in SREG is Set
16B6C:	FF-3F       	cpi r31, 0xff         ; Compare with Immediate
16B6E:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
16B70:	01-9A       	sbi 0x00, 1           ; Set Bit in I/O Register
16B72:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16B74:	00-81       	ld r16, Z             ; Load Indirect from Data Space to Register
16B76:	83-45       	sbci r24, 0x53        ; Subtract Immediate with Carry SBI
16B78:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
16B7A:	FA-80       	ldd r15, Y+2          ; Load Indirect from Data Space to Register
16B7C:	DF-F8       	.data 0xf8df          ; Binary data
16B7E:	10-C1       	rjmp .+544            ; Relative Jump
16B80:	DC-F8       	.data 0xf8dc          ; Binary data
16B82:	00-30       	cpi r16, 0x00         ; Compare with Immediate
16B84:	C3-45       	sbci r28, 0x53        ; Subtract Immediate with Carry SBI
16B86:	53-44       	sbci r21, 0x43        ; Subtract Immediate with Carry SBI
16B88:	CC-F8       	.data 0xf8cc          ; Binary data
16B8A:	00-30       	cpi r16, 0x00         ; Compare with Immediate
16B8C:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16B8E:	4A-81       	ldd r20, Y+2          ; Load Indirect from Data Space to Register
16B90:	12-68       	ori r17, 0x82         ; Logical OR with Immediate
16B92:	3C-49       	sbci r19, 0x9c        ; Subtract Immediate with Carry SBI
16B94:	01-32       	cpi r16, 0x21         ; Compare with Immediate
16B96:	1B-BF       	out 0x3b, r17         ; Store Register to I/O Location
16B98:	CB-EB       	ldi r28, 0xbb         ; Load Immediate
16B9A:	08-0B       	sbc r16, r24          ; Subtract with Carry
16B9C:	5B-44       	sbci r21, 0x4b        ; Subtract Immediate with Carry SBI
16B9E:	C1-F8       	bld r12, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
16BA0:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
16BA2:	CC-F8       	.data 0xf8cc          ; Binary data
16BA4:	00-30       	cpi r16, 0x00         ; Compare with Immediate
16BA6:	18-F0       	brbs 0, .+6           ; Branch if Bit in SREG is Set
16BA8:	07-03       	mulsu r16, r23        ; Multiply Signed with Unsigned
16BAA:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16BAC:	13-81       	ldd r17, Y+3          ; Load Indirect from Data Space to Register
16BAE:	C3-F1       	brbs 3, .+112         ; Branch if Bit in SREG is Set
16BB0:	08-02       	muls r16, r24         ; Multiply Signed
16BB2:	C3-F5       	brbc 3, .+112         ; Branch if Bit in SREG is Cleared
16BB4:	80-53       	subi r24, 0x30        ; Subtract Immediate
16BB6:	90-44       	sbci r25, 0x40        ; Subtract Immediate with Carry SBI
16BB8:	08-33       	cpi r16, 0x38         ; Compare with Immediate
16BBA:	C2-44       	sbci r28, 0x42        ; Subtract Immediate with Carry SBI
16BBC:	CA-F3       	brbs 2, .-14          ; Branch if Bit in SREG is Set
16BBE:	0B-0A       	sbc r0, r27           ; Subtract with Carry
16BC0:	CA-EB       	ldi r28, 0xba         ; Load Immediate
16BC2:	03-0A       	sbc r0, r19           ; Subtract with Carry
16BC4:	51-46       	sbci r21, 0x61        ; Subtract Immediate with Carry SBI
16BC6:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16BC8:	CD-F8       	.data 0xf8cd          ; Binary data
16BCA:	04-C0       	rjmp .+8              ; Relative Jump
16BCC:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16BCE:	AE-FB       	.data 0xfbae          ; Binary data
16BD0:	43-1C       	adc r4, r3            ; Add with Carry
16BD2:	DD-F8       	.data 0xf8dd          ; Binary data
16BD4:	04-C0       	rjmp .+8              ; Relative Jump
16BD6:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16BD8:	35-81       	ldd r19, Y+5          ; Load Indirect from Data Space to Register
16BDA:	C8-EB       	ldi r28, 0xb8         ; Load Immediate
16BDC:	00-02       	muls r16, r16         ; Multiply Signed
16BDE:	52-44       	sbci r21, 0x42        ; Subtract Immediate with Carry SBI
16BE0:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
16BE2:	01-02       	muls r16, r17         ; Multiply Signed
16BE4:	DC-F8       	.data 0xf8dc          ; Binary data
16BE6:	00-30       	cpi r16, 0x00         ; Compare with Immediate
16BE8:	C7-F8       	bld r12, 7            ; Bit Load from the T Flag in SREG to a Bit in Register
16BEA:	08-80       	ld r0, Y              ; Load Indirect from Data Space to Register
16BEC:	53-44       	sbci r21, 0x43        ; Subtract Immediate with Carry SBI
16BEE:	BC-42       	sbci r27, 0x2c        ; Subtract Immediate with Carry SBI
16BF0:	C8-F8       	.data 0xf8c8          ; Binary data
16BF2:	04-20       	and r0, r4            ; Logical AND
16BF4:	CC-F8       	.data 0xf8cc          ; Binary data
16BF6:	00-30       	cpi r16, 0x00         ; Compare with Immediate
16BF8:	DF-F8       	.data 0xf8df          ; Binary data
16BFA:	94-A0       	ldd r9, Y+36          ; Load Indirect from Data Space to Register
16BFC:	15-D0       	rcall .+42            ; Relative Call to Subroutine
16BFE:	B9-F1       	brbs 1, .+110         ; Branch if Bit in SREG is Set
16C00:	0F-0F       	add r16, r31          ; Add without Carry
16C02:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
16C04:	EA-80       	ldd r14, Y+2          ; Load Indirect from Data Space to Register
16C06:	61-68       	ori r22, 0x81         ; Logical OR with Immediate
16C08:	A9-F1       	brbs 1, .+106         ; Branch if Bit in SREG is Set
16C0A:	0C-02       	muls r16, r28         ; Multiply Signed
16C0C:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
16C0E:	07-02       	muls r16, r23         ; Multiply Signed
16C10:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
16C12:	01-0E       	add r0, r17           ; Add without Carry
16C14:	A1-18       	sub r10, r1           ; Subtract Without Carry
16C16:	05-20       	and r0, r5            ; Logical AND
16C18:	42-EA       	ldi r20, 0xa2         ; Load Immediate
16C1A:	0E-0E       	add r0, r30           ; Add without Carry
16C1C:	0F-2A       	or r0, r31            ; Logical OR
16C1E:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
16C20:	04-E0       	ldi r16, 0x04         ; Load Immediate
16C22:	48-60       	ori r20, 0x08         ; Logical OR with Immediate
16C24:	88-60       	ori r24, 0x08         ; Logical OR with Immediate
16C26:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
16C28:	11-81       	ldd r17, Y+1          ; Load Indirect from Data Space to Register
16C2A:	17-4A       	sbci r17, 0xa7        ; Subtract Immediate with Carry SBI
16C2C:	BC-68       	ori r27, 0x8c         ; Logical OR with Immediate
16C2E:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
16C30:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
16C32:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
16C34:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
16C36:	15-4A       	sbci r17, 0xa5        ; Subtract Immediate with Carry SBI
16C38:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
16C3A:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
16C3C:	88-BF       	out 0x38, r24         ; Store Register to I/O Location
16C3E:	13-60       	ori r17, 0x03         ; Logical OR with Immediate
16C40:	62-68       	ori r22, 0x82         ; Logical OR with Immediate
16C42:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
16C44:	03-02       	muls r16, r19         ; Multiply Signed
16C46:	95-42       	sbci r25, 0x25        ; Subtract Immediate with Carry SBI
16C48:	C5-EB       	ldi r28, 0xb5         ; Load Immediate
16C4A:	02-03       	mulsu r16, r18        ; Multiply Signed with Unsigned
16C4C:	01-D8       	rcall .+4098          ; Relative Call to Subroutine
16C4E:	0F-2B       	or r16, r31           ; Logical OR
16C50:	04-DC       	rcall .+6152          ; Relative Call to Subroutine
16C52:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16C54:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16C56:	7A-F9       	.data 0xf97a          ; Binary data
16C58:	00-24       	clr r0                ; Clear Register
16C5A:	A5-E6       	ldi r26, 0x65         ; Load Immediate
16C5C:	62-19       	sub r22, r2           ; Subtract Without Carry
16C5E:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
16C60:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
16C62:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
16C64:	01-05       	cpc r16, r1           ; Compare with Carry
16C66:	65-60       	ori r22, 0x05         ; Logical OR with Immediate
16C68:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16C6A:	BA-60       	ori r27, 0x0a         ; Logical OR with Immediate
16C6C:	53-60       	ori r21, 0x03         ; Logical OR with Immediate
16C6E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16C70:	6D-F9       	.data 0xf96d          ; Binary data
16C72:	08-34       	cpi r16, 0x48         ; Compare with Immediate
16C74:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
16C76:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
16C78:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
16C7A:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
16C7C:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
16C7E:	FF-1F       	adc r31, r31          ; Add with Carry
16C80:	14-03       	mulsu r17, r20        ; Multiply Signed with Unsigned
16C82:	00-20       	and r0, r0            ; Logical AND
16C84:	D8-9C       	mul r13, r8           ; Multiply Unsigned
16C86:	FF-1F       	adc r31, r31          ; Add with Carry
16C88:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
16C8A:	00-20       	and r0, r0            ; Logical AND
16C8C:	0C-03       	fmul r16, r20         ; Fractional Multiply Unsigned
16C8E:	00-20       	and r0, r0            ; Logical AND
16C90:	18-03       	fmul r17, r16         ; Fractional Multiply Unsigned
16C92:	00-20       	and r0, r0            ; Logical AND
16C94:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
16C96:	14-0F       	add r17, r20          ; Add without Carry
16C98:	61-D9       	rcall .+4802          ; Relative Call to Subroutine
16C9A:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
16C9C:	54-0F       	add r21, r20          ; Add without Carry
16C9E:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
16CA0:	8F-80       	ldd r8, Y+7           ; Load Indirect from Data Space to Register
16CA2:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16CA4:	15-3C       	cpi r17, 0xc5         ; Compare with Immediate
16CA6:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16CA8:	6E-0C       	add r6, r14           ; Add without Carry
16CAA:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16CAC:	4C-01       	movw r8, r24          ; Copy Register Word
16CAE:	97-E6       	ldi r25, 0x67         ; Load Immediate
16CB0:	4B-0A       	sbc r4, r27           ; Subtract with Carry
16CB2:	04-2B       	or r16, r20           ; Logical OR
16CB4:	58-D9       	rcall .+4784          ; Relative Call to Subroutine
16CB6:	14-2B       	or r17, r20           ; Logical OR
16CB8:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
16CBA:	AE-80       	ldd r10, Y+6          ; Load Indirect from Data Space to Register
16CBC:	03-F1       	brbs 3, .+64          ; Branch if Bit in SREG is Set
16CBE:	5B-02       	muls r21, r27         ; Multiply Signed
16CC0:	50-00       	.data 0x0050          ; Binary data
16CC2:	07-EB       	ldi r16, 0xb7         ; Load Immediate
16CC4:	80-00       	.data 0x0080          ; Binary data
16CC6:	DF-F8       	.data 0xf8df          ; Binary data
16CC8:	BC-81       	ldd r27, Y+4          ; Load Indirect from Data Space to Register
16CCA:	83-68       	ori r24, 0x83         ; Logical OR with Immediate
16CCC:	83-42       	sbci r24, 0x23        ; Subtract Immediate with Carry SBI
16CCE:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16CD0:	8A-80       	ldd r8, Y+2           ; Load Indirect from Data Space to Register
16CD2:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
16CD4:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
16CD6:	03-02       	muls r16, r19         ; Multiply Signed
16CD8:	91-42       	sbci r25, 0x21        ; Subtract Immediate with Carry SBI
16CDA:	02-D2       	rcall .+1028          ; Relative Call to Subroutine
16CDC:	9B-68       	ori r25, 0x8b         ; Logical OR with Immediate
16CDE:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
16CE0:	F7-D1       	rcall .+1006          ; Relative Call to Subroutine
16CE2:	D9-68       	ori r29, 0x89         ; Logical OR with Immediate
16CE4:	7A-68       	ori r23, 0x8a         ; Logical OR with Immediate
16CE6:	E1-60       	ori r30, 0x01         ; Logical OR with Immediate
16CE8:	A3-60       	ori r26, 0x03         ; Logical OR with Immediate
16CEA:	8C-60       	ori r24, 0x0c         ; Logical OR with Immediate
16CEC:	DC-60       	ori r29, 0x0c         ; Logical OR with Immediate
16CEE:	B7-E6       	ldi r27, 0x67         ; Load Immediate
16CF0:	61-19       	sub r22, r1           ; Subtract Without Carry
16CF2:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
16CF4:	01-07       	cpc r16, r17          ; Compare with Carry
16CF6:	45-F0       	brbs 5, .+16          ; Branch if Bit in SREG is Set
16CF8:	01-05       	cpc r16, r1           ; Compare with Carry
16CFA:	65-60       	ori r22, 0x05         ; Logical OR with Immediate
16CFC:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16CFE:	59-61       	ori r21, 0x19         ; Logical OR with Immediate
16D00:	19-61       	ori r17, 0x19         ; Logical OR with Immediate
16D02:	C1-F8       	bld r12, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
16D04:	0C-E0       	ldi r16, 0x0c         ; Load Immediate
16D06:	C1-F8       	bld r12, 1            ; Bit Load from the T Flag in SREG to a Bit in Register
16D08:	08-E0       	ldi r16, 0x08         ; Load Immediate
16D0A:	4F-60       	ori r20, 0x0f         ; Logical OR with Immediate
16D0C:	8A-50       	subi r24, 0x0a        ; Subtract Immediate
16D0E:	08-34       	cpi r16, 0x48         ; Compare with Immediate
16D10:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16D12:	1C-F9       	.data 0xf91c          ; Binary data
16D14:	48-E6       	ldi r20, 0x68         ; Load Immediate
16D16:	5A-68       	ori r21, 0x8a         ; Logical OR with Immediate
16D18:	A2-E6       	ldi r26, 0x62         ; Load Immediate
16D1A:	09-F1       	brbs 1, .+66          ; Branch if Bit in SREG is Set
16D1C:	01-09       	sbc r16, r1           ; Subtract with Carry
16D1E:	19-F0       	brbs 1, .+6           ; Branch if Bit in SREG is Set
16D20:	03-0F       	add r16, r19          ; Add without Carry
16D22:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
16D24:	08-04       	cpc r0, r8            ; Compare with Carry
16D26:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16D28:	AE-AE       	std Y+62, r10         ; Store Indirect From Register to Data Space
16D2A:	2D-E0       	ldi r18, 0x0d         ; Load Immediate
16D2C:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
16D2E:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
16D30:	64-69       	ori r22, 0x94         ; Logical OR with Immediate
16D32:	A3-42       	sbci r26, 0x23        ; Subtract Immediate with Carry SBI
16D34:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
16D36:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16D38:	02-0C       	add r0, r2            ; Add without Carry
16D3A:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
16D3C:	67-AE       	std Y+63, r6          ; Store Indirect From Register to Data Space
16D3E:	23-E6       	ldi r18, 0x63         ; Load Immediate
16D40:	19-44       	sbci r17, 0x49        ; Subtract Immediate with Carry SBI
16D42:	1C-46       	sbci r17, 0x6c        ; Subtract Immediate with Carry SBI
16D44:	48-68       	ori r20, 0x88         ; Logical OR with Immediate
16D46:	DB-68       	ori r29, 0x8b         ; Logical OR with Immediate
16D48:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
16D4A:	08-2F       	mov r16, r24          ; Copy Register
16D4C:	40-F0       	brbs 0, .+16          ; Branch if Bit in SREG is Set
16D4E:	01-05       	cpc r16, r1           ; Compare with Carry
16D50:	4D-60       	ori r20, 0x0d         ; Logical OR with Immediate
16D52:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16D54:	D3-60       	ori r29, 0x03         ; Logical OR with Immediate
16D56:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
16D58:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16D5A:	F8-F8       	.data 0xf8f8          ; Binary data
16D5C:	24-E6       	ldi r18, 0x64         ; Load Immediate
16D5E:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16D60:	5B-0C       	add r5, r11           ; Add without Carry
16D62:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16D64:	4C-01       	movw r8, r24          ; Copy Register Word
16D66:	3B-E6       	ldi r19, 0x6b         ; Load Immediate
16D68:	8A-09       	sbc r24, r10          ; Subtract with Carry
16D6A:	38-32       	cpi r19, 0x28         ; Compare with Immediate
16D6C:	50-00       	.data 0x0050          ; Binary data
16D6E:	A8-E7       	ldi r26, 0x78         ; Load Immediate
16D70:	BC-42       	sbci r27, 0x2c        ; Subtract Immediate with Carry SBI
16D72:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
16D74:	03-AF       	std Y+59, r16         ; Store Indirect From Register to Data Space
16D76:	BC-68       	ori r27, 0x8c         ; Logical OR with Immediate
16D78:	62-68       	ori r22, 0x82         ; Logical OR with Immediate
16D7A:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
16D7C:	03-02       	muls r16, r19         ; Multiply Signed
16D7E:	62-E7       	ldi r22, 0x72         ; Load Immediate
16D80:	D8-F8       	.data 0xf8d8          ; Binary data
16D82:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
16D84:	98-45       	sbci r25, 0x58        ; Subtract Immediate with Carry SBI
16D86:	7B-D1       	rcall .+758           ; Relative Call to Subroutine
16D88:	1C-F0       	brbs 4, .+6           ; Branch if Bit in SREG is Set
16D8A:	03-0F       	add r16, r19          ; Add without Carry
16D8C:	A8-F1       	brbs 0, .+106         ; Branch if Bit in SREG is Set
16D8E:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
16D90:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16D92:	FF-3C       	cpi r31, 0xcf         ; Compare with Immediate
16D94:	F4-D1       	rcall .+1000          ; Relative Call to Subroutine
16D96:	7B-68       	ori r23, 0x8b         ; Logical OR with Immediate
16D98:	23-EA       	ldi r18, 0xa3         ; Load Immediate
16D9A:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
16D9C:	7B-60       	ori r23, 0x0b         ; Logical OR with Immediate
16D9E:	40-00       	.data 0x0040          ; Binary data
16DA0:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
16DA2:	3F-F6       	brbc 7, .-114         ; Branch if Bit in SREG is Cleared
16DA4:	BF-AE       	std Y+63, r11         ; Store Indirect From Register to Data Space
16DA6:	00-28       	or r0, r0             ; Logical OR
16DA8:	3F-F4       	brbc 7, .+14          ; Branch if Bit in SREG is Cleared
16DAA:	BC-AE       	std Y+60, r11         ; Store Indirect From Register to Data Space
16DAC:	03-42       	sbci r16, 0x23        ; Subtract Immediate with Carry SBI
16DAE:	CC-46       	sbci r28, 0x6c        ; Subtract Immediate with Carry SBI
16DB0:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16DB2:	65-AE       	std Y+61, r6          ; Store Indirect From Register to Data Space
16DB4:	40-00       	.data 0x0040          ; Binary data
16DB6:	03-42       	sbci r16, 0x23        ; Subtract Immediate with Carry SBI
16DB8:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16DBA:	04-0C       	add r0, r4            ; Add without Carry
16DBC:	FA-D0       	rcall .+500           ; Relative Call to Subroutine
16DBE:	5E-E6       	ldi r21, 0x6e         ; Load Immediate
16DC0:	BC-F5       	brbc 4, .+110         ; Branch if Bit in SREG is Cleared
16DC2:	AA-7F       	andi r26, 0xfa        ; Logical AND with Immediate
16DC4:	1A-D8       	rcall .+4148          ; Relative Call to Subroutine
16DC6:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16DC8:	D5-3C       	cpi r29, 0xc5         ; Compare with Immediate
16DCA:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16DCC:	77-0C       	add r7, r7            ; Add without Carry
16DCE:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16DD0:	4C-01       	movw r8, r24          ; Copy Register Word
16DD2:	05-E6       	ldi r16, 0x65         ; Load Immediate
16DD4:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
16DD6:	80-53       	subi r24, 0x30        ; Subtract Immediate
16DD8:	EF-E6       	ldi r30, 0x6f         ; Load Immediate
16DDA:	01-23       	and r16, r17          ; Logical AND
16DDC:	C8-F8       	.data 0xf8c8          ; Binary data
16DDE:	04-30       	cpi r16, 0x04         ; Compare with Immediate
16DE0:	44-46       	sbci r20, 0x64        ; Subtract Immediate with Carry SBI
16DE2:	00-22       	and r0, r16           ; Logical AND
16DE4:	2F-E7       	ldi r18, 0x7f         ; Load Immediate
16DE6:	91-10       	cpse r9, r1           ; Compare Skip if Equal
16DE8:	01-20       	and r0, r1            ; Logical AND
16DEA:	D8-F8       	.data 0xf8d8          ; Binary data
16DEC:	04-20       	and r0, r4            ; Logical AND
16DEE:	00-FA       	bst r0, 0             ; Bit Store from Bit in Register to T Flag in SREG
16DF0:	01-F1       	brbs 1, .+64          ; Branch if Bit in SREG is Set
16DF2:	0A-43       	sbci r16, 0x3a        ; Subtract Immediate with Carry SBI
16DF4:	C8-F8       	.data 0xf8c8          ; Binary data
16DF6:	04-20       	and r0, r4            ; Logical AND
16DF8:	19-46       	sbci r17, 0x69        ; Subtract Immediate with Carry SBI
16DFA:	74-E7       	ldi r23, 0x74         ; Load Immediate
16DFC:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
16DFE:	54-53       	subi r21, 0x34        ; Subtract Immediate
16E00:	9C-45       	sbci r25, 0x5c        ; Subtract Immediate with Carry SBI
16E02:	1B-D8       	rcall .+4150          ; Relative Call to Subroutine
16E04:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16E06:	95-4C       	sbci r25, 0xc5        ; Subtract Immediate with Carry SBI
16E08:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
16E0A:	7C-0C       	add r7, r12           ; Add without Carry
16E0C:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
16E0E:	4C-01       	movw r8, r24          ; Copy Register Word
16E10:	E6-E5       	ldi r30, 0x56         ; Load Immediate
16E12:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
16E14:	10-0A       	sbc r1, r16           ; Subtract with Carry
16E16:	A3-E6       	ldi r26, 0x63         ; Load Immediate
16E18:	54-2B       	or r21, r20           ; Logical OR
16E1A:	1F-D8       	rcall .+4158          ; Relative Call to Subroutine
16E1C:	0A-0B       	sbc r16, r26          ; Subtract with Carry
16E1E:	6E-32       	cpi r22, 0x2e         ; Compare with Immediate
16E20:	50-00       	.data 0x0050          ; Binary data
16E22:	4E-E7       	ldi r20, 0x7e         ; Load Immediate
16E24:	CB-F3       	brbs 3, .-14          ; Branch if Bit in SREG is Set
16E26:	0B-01       	movw r0, r22          ; Copy Register Word
16E28:	00-29       	or r16, r0            ; Logical OR
16E2A:	7F-F4       	brbc 7, .+30          ; Branch if Bit in SREG is Cleared
16E2C:	B1-AE       	std Y+57, r11         ; Store Indirect From Register to Data Space
16E2E:	0A-EB       	ldi r16, 0xba         ; Load Immediate
16E30:	09-01       	movw r0, r18          ; Copy Register Word
16E32:	BA-68       	ori r27, 0x8a         ; Logical OR with Immediate
16E34:	41-F0       	brbs 1, .+16          ; Branch if Bit in SREG is Set
16E36:	01-01       	movw r0, r2           ; Copy Register Word
16E38:	51-60       	ori r21, 0x01         ; Logical OR with Immediate
16E3A:	F6-E6       	ldi r31, 0x66         ; Load Immediate
16E3C:	FC-21       	and r31, r12          ; Logical AND
16E3E:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16E40:	7E-0C       	add r7, r14           ; Add without Carry
16E42:	CD-E5       	ldi r28, 0x5d         ; Load Immediate
16E44:	01-22       	and r0, r17           ; Logical AND
16E46:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
16E48:	00-0A       	sbc r0, r16           ; Subtract with Carry
16E4A:	CB-E6       	ldi r28, 0x6b         ; Load Immediate
16E4C:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
16E4E:	08-01       	movw r0, r16          ; Copy Register Word
16E50:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
16E52:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16E54:	CF-FB       	.data 0xfbcf          ; Binary data
16E56:	DA-F8       	.data 0xf8da          ; Binary data
16E58:	00-30       	cpi r16, 0x00         ; Compare with Immediate
16E5A:	E6-E6       	ldi r30, 0x66         ; Load Immediate
16E5C:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
16E5E:	AA-7F       	andi r26, 0xfa        ; Logical AND with Immediate
16E60:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
16E62:	CA-0B       	sbc r28, r26          ; Subtract with Carry
16E64:	77-32       	cpi r23, 0x27         ; Compare with Immediate
16E66:	50-00       	.data 0x0050          ; Binary data
16E68:	2B-E7       	ldi r18, 0x7b         ; Load Immediate
16E6A:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
16E6C:	54-52       	subi r21, 0x24        ; Subtract Immediate
16E6E:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
16E70:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
16E72:	8A-0C       	add r8, r10           ; Add without Carry
16E74:	7C-32       	cpi r23, 0x2c         ; Compare with Immediate
16E76:	50-00       	.data 0x0050          ; Binary data
16E78:	23-E7       	ldi r18, 0x73         ; Load Immediate
16E7A:	FC-20       	and r15, r12          ; Logical AND
16E7C:	7E-22       	and r7, r30           ; Logical AND
16E7E:	20-E7       	ldi r18, 0x70         ; Load Immediate
16E80:	7B-68       	ori r23, 0x8b         ; Logical OR with Immediate
16E82:	8C-E7       	ldi r24, 0x7c         ; Load Immediate
16E84:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
16E86:	FF-1F       	adc r31, r31          ; Add with Carry
16E88:	88-42       	sbci r24, 0x28        ; Subtract Immediate with Carry SBI
16E8A:	F0-B4       	in r15, 0x20          ; Load an I/O Location to Register
16E8C:	10-D9       	rcall .+4640          ; Relative Call to Subroutine
16E8E:	8C-18       	sub r8, r12           ; Subtract Without Carry
16E90:	A0-42       	sbci r26, 0x20        ; Subtract Immediate with Carry SBI
16E92:	0D-D2       	rcall .+1050          ; Relative Call to Subroutine
16E94:	85-18       	sub r8, r5            ; Subtract Without Carry
16E96:	53-1E       	adc r5, r19           ; Add with Carry
16E98:	42-B1       	in r20, 0x02          ; Load an I/O Location to Register
16E9A:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
16E9C:	2A-46       	sbci r18, 0x6a        ; Subtract Immediate with Carry SBI
16E9E:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
16EA0:	01-4D       	sbci r16, 0xd1        ; Subtract Immediate with Carry SBI
16EA2:	02-F8       	bld r0, 2             ; Bit Load from the T Flag in SREG to a Bit in Register
16EA4:	01-4D       	sbci r16, 0xd1        ; Subtract Immediate with Carry SBI
16EA6:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
16EA8:	5C-1C       	adc r5, r12           ; Add with Carry
16EAA:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
16EAC:	F0-BC       	out 0x20, r15         ; Store Register to I/O Location
16EAE:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16EB0:	0F-2A       	or r0, r31            ; Logical OR
16EB2:	3F-D9       	rcall .+4734          ; Relative Call to Subroutine
16EB4:	40-EA       	ldi r20, 0xa0         ; Load Immediate
16EB6:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
16EB8:	9B-07       	cpc r25, r27          ; Compare with Carry
16EBA:	3F-D1       	rcall .+638           ; Relative Call to Subroutine
16EBC:	A2-F1       	brbs 2, .+104         ; Branch if Bit in SREG is Set
16EBE:	10-07       	cpc r17, r16          ; Compare with Carry
16EC0:	3F-09       	sbc r19, r15          ; Subtract with Carry
16EC2:	00-EB       	ldi r16, 0xb0         ; Load Immediate
16EC4:	07-16       	cp r0, r23            ; Compare
16EC6:	10-36       	cpi r17, 0x60         ; Compare with Immediate
16EC8:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
16ECA:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
16ECC:	25-68       	ori r18, 0x85         ; Logical OR with Immediate
16ECE:	1D-60       	ori r17, 0x0d         ; Logical OR with Immediate
16ED0:	65-68       	ori r22, 0x85         ; Logical OR with Immediate
16ED2:	5D-60       	ori r21, 0x0d         ; Logical OR with Immediate
16ED4:	A5-68       	ori r26, 0x85         ; Logical OR with Immediate
16ED6:	9D-60       	ori r25, 0x0d         ; Logical OR with Immediate
16ED8:	E5-68       	ori r30, 0x85         ; Logical OR with Immediate
16EDA:	DD-60       	ori r29, 0x0d         ; Logical OR with Immediate
16EDC:	10-33       	cpi r17, 0x30         ; Compare with Immediate
16EDE:	B3-42       	sbci r27, 0x23        ; Subtract Immediate with Carry SBI
16EE0:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
16EE2:	10-04       	cpc r1, r0            ; Compare with Carry
16EE4:	F2-D1       	rcall .+996           ; Relative Call to Subroutine
16EE6:	7B-1C       	adc r7, r11           ; Add with Carry
16EE8:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
16EEA:	0F-0C       	add r0, r15           ; Add without Carry
16EEC:	1B-01       	movw r2, r22          ; Copy Register Word
16EEE:	BC-F1       	brbs 4, .+110         ; Branch if Bit in SREG is Set
16EF0:	03-0F       	add r16, r19          ; Add without Carry
16EF2:	19-44       	sbci r17, 0x49        ; Subtract Immediate with Carry SBI
16EF4:	03-44       	sbci r16, 0x43        ; Subtract Immediate with Carry SBI
16EF6:	23-D9       	rcall .+4678          ; Relative Call to Subroutine
16EF8:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
16EFA:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
16EFC:	64-46       	sbci r22, 0x64        ; Subtract Immediate with Carry SBI
16EFE:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
16F00:	56-F8       	bld r5, 6             ; Bit Load from the T Flag in SREG to a Bit in Register
16F02:	04-7B       	andi r16, 0xb4        ; Logical AND with Immediate
16F04:	45-F8       	bld r4, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
16F06:	04-7B       	andi r16, 0xb4        ; Logical AND with Immediate
16F08:	03-2C       	mov r0, r3            ; Copy Register
16F0A:	F8-D8       	rcall .+4592          ; Relative Call to Subroutine
16F0C:	AC-F1       	brbs 4, .+106         ; Branch if Bit in SREG is Set
16F0E:	04-04       	cpc r0, r4            ; Compare with Carry
16F10:	24-F0       	brbs 4, .+8           ; Branch if Bit in SREG is Set
16F12:	03-04       	cpc r0, r3            ; Compare with Carry
16F14:	04-34       	cpi r16, 0x44         ; Compare with Immediate
16F16:	02-F0       	brbs 2, .+0           ; Branch if Bit in SREG is Set
16F18:	03-02       	muls r16, r19         ; Multiply Signed
16F1A:	23-44       	sbci r18, 0x43        ; Subtract Immediate with Carry SBI
16F1C:	21-44       	sbci r18, 0x41        ; Subtract Immediate with Carry SBI
16F1E:	00-2A       	or r0, r16            ; Logical OR
16F20:	C4-D0       	rcall .+392           ; Relative Call to Subroutine
16F22:	1A-44       	sbci r17, 0x4a        ; Subtract Immediate with Carry SBI
16F24:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
16F26:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
16F28:	03-F8       	bld r0, 3             ; Bit Load from the T Flag in SREG to a Bit in Register
16F2A:	01-4B       	sbci r16, 0xb1        ; Subtract Immediate with Carry SBI
16F2C:	93-42       	sbci r25, 0x23        ; Subtract Immediate with Carry SBI
16F2E:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
16F30:	F0-BC       	out 0x20, r15         ; Store Register to I/O Location
16F32:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16F34:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
16F36:	00-2A       	or r0, r16            ; Logical OR
16F38:	F3-D1       	rcall .+998           ; Relative Call to Subroutine
16F3A:	B7-E7       	ldi r27, 0x77         ; Load Immediate
16F3C:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
16F3E:	F0-E7       	ldi r31, 0x70         ; Load Immediate
16F40:	62-46       	sbci r22, 0x62        ; Subtract Immediate with Carry SBI
16F42:	00-2A       	or r0, r16            ; Logical OR
16F44:	ED-D1       	rcall .+986           ; Relative Call to Subroutine
16F46:	B1-E7       	ldi r27, 0x71         ; Load Immediate
16F48:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16F4A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16F4C:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
16F4E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
16F50:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
16F52:	0A-46       	sbci r16, 0x6a        ; Subtract Immediate with Carry SBI
16F54:	01-46       	sbci r16, 0x61        ; Subtract Immediate with Carry SBI
16F56:	18-68       	ori r17, 0x88         ; Logical OR with Immediate
16F58:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16F5A:	02-B8       	out 0x02, r0          ; Store Register to I/O Location
16F5C:	C8-98       	cbi 0x19, 0           ; Clear Bit in I/O Register
16F5E:	FF-1F       	adc r31, r31          ; Add with Carry
16F60:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
16F62:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
16F64:	0C-46       	sbci r16, 0x6c        ; Subtract Immediate with Carry SBI
16F66:	83-B0       	in r8, 0x03           ; Load an I/O Location to Register
16F68:	90-46       	sbci r25, 0x60        ; Subtract Immediate with Carry SBI
16F6A:	81-46       	sbci r24, 0x61        ; Subtract Immediate with Carry SBI
16F6C:	00-29       	or r16, r0            ; Logical OR
16F6E:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16F70:	E2-80       	ldd r14, Y+2          ; Load Indirect from Data Space to Register
16F72:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
16F74:	E9-FF       	.data 0xffe9          ; Binary data
16F76:	08-F1       	brbs 0, .+66          ; Branch if Bit in SREG is Set
16F78:	0B-06       	cpc r0, r27           ; Compare with Carry
16F7A:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
16F7C:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
16F7E:	16-2E       	mov r1, r22           ; Copy Register
16F80:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
16F82:	03-05       	cpc r16, r3           ; Compare with Carry
16F84:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
16F86:	08-07       	cpc r16, r24          ; Compare with Carry
16F88:	4B-D8       	rcall .+4246          ; Relative Call to Subroutine
16F8A:	10-21       	and r17, r0           ; Logical AND
16F8C:	0E-46       	sbci r16, 0x6e        ; Subtract Immediate with Carry SBI
16F8E:	B0-45       	sbci r27, 0x50        ; Subtract Immediate with Carry SBI
16F90:	4C-D8       	rcall .+4248          ; Relative Call to Subroutine
16F92:	8D-42       	sbci r24, 0x2d        ; Subtract Immediate with Carry SBI
16F94:	78-DA       	rcall .+5360          ; Relative Call to Subroutine
16F96:	DF-F8       	.data 0xf8df          ; Binary data
16F98:	90-B3       	in r25, 0x10          ; Load an I/O Location to Register
16F9A:	DB-F8       	.data 0xf8db          ; Binary data
16F9C:	08-E0       	ldi r16, 0x08         ; Load Immediate
16F9E:	78-19       	sub r23, r8           ; Subtract Without Carry
16FA0:	86-45       	sbci r24, 0x56        ; Subtract Immediate with Carry SBI
16FA2:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16FA4:	CE-80       	ldd r12, Y+6          ; Load Indirect from Data Space to Register
16FA6:	42-68       	ori r20, 0x82         ; Logical OR with Immediate
16FA8:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
16FAA:	01-0C       	add r0, r1            ; Add without Carry
16FAC:	84-44       	sbci r24, 0x44        ; Subtract Immediate with Carry SBI
16FAE:	DC-F8       	.data 0xf8dc          ; Binary data
16FB0:	04-C0       	rjmp .+8              ; Relative Jump
16FB2:	1C-F0       	brbs 4, .+6           ; Branch if Bit in SREG is Set
16FB4:	01-0F       	add r16, r17          ; Add without Carry
16FB6:	7A-D0       	rcall .+244           ; Relative Call to Subroutine
16FB8:	00-22       	and r0, r16           ; Logical AND
16FBA:	10-46       	sbci r17, 0x60        ; Subtract Immediate with Carry SBI
16FBC:	DB-07       	cpc r29, r27          ; Compare with Carry
16FBE:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
16FC0:	92-80       	ldd r9, Y+2           ; Load Indirect from Data Space to Register
16FC2:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
16FC4:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
16FC6:	C3-EB       	ldi r28, 0xb3         ; Load Immediate
16FC8:	07-0A       	sbc r0, r23           ; Subtract with Carry
16FCA:	DA-F8       	.data 0xf8da          ; Binary data
16FCC:	04-30       	cpi r16, 0x04         ; Compare with Immediate
16FCE:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
16FD0:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
16FD2:	2B-44       	sbci r18, 0x4b        ; Subtract Immediate with Carry SBI
16FD4:	88-B3       	in r24, 0x18          ; Load an I/O Location to Register
16FD6:	70-45       	sbci r23, 0x50        ; Subtract Immediate with Carry SBI
16FD8:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
16FDA:	ED-80       	ldd r14, Y+5          ; Load Indirect from Data Space to Register
16FDC:	02-EB       	ldi r16, 0xb2         ; Load Immediate
16FDE:	03-0E       	add r0, r19           ; Add without Carry
16FE0:	8E-45       	sbci r24, 0x5e        ; Subtract Immediate with Carry SBI
16FE2:	2A-DB       	rcall .+5716          ; Relative Call to Subroutine
16FE4:	C3-68       	ori r28, 0x83         ; Logical OR with Immediate
16FE6:	82-68       	ori r24, 0x82         ; Logical OR with Immediate
16FE8:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
16FEA:	D3-60       	ori r29, 0x03         ; Logical OR with Immediate
16FEC:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
16FEE:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
16FF0:	08-1F       	adc r16, r24          ; Add with Carry
16FF2:	DA-F8       	.data 0xf8da          ; Binary data
16FF4:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
16FF6:	CB-60       	ori r28, 0x0b         ; Logical OR with Immediate
16FF8:	2A-1F       	adc r18, r26          ; Add with Carry
16FFA:	24-2A       	or r2, r20            ; Logical OR
16FFC:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
16FFE:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
17000:	26-81       	ldd r18, Y+6          ; Load Indirect from Data Space to Register
17002:	13-2A       	or r1, r19            ; Logical OR
17004:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
17006:	B3-80       	ldd r11, Y+3          ; Load Indirect from Data Space to Register
17008:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1700A:	CA-F8       	.data 0xf8ca          ; Binary data
1700C:	08-30       	cpi r16, 0x08         ; Compare with Immediate
1700E:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
17010:	CA-F8       	.data 0xf8ca          ; Binary data
17012:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
17014:	1B-2A       	or r1, r27            ; Logical OR
17016:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
17018:	30-81       	ld r19, Z             ; Load Indirect from Data Space to Register
1701A:	08-34       	cpi r16, 0x48         ; Compare with Immediate
1701C:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
1701E:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
17020:	A6-E0       	ldi r26, 0x06         ; Load Immediate
17022:	26-F0       	brbs 6, .+8           ; Branch if Bit in SREG is Set
17024:	07-06       	cpc r0, r23           ; Compare with Carry
17026:	00-2E       	mov r0, r16           ; Copy Register
17028:	31-46       	sbci r19, 0x61        ; Subtract Immediate with Carry SBI
1702A:	B0-DA       	rcall .+5472          ; Relative Call to Subroutine
1702C:	0C-23       	and r16, r28          ; Logical AND
1702E:	00-20       	and r0, r0            ; Logical AND
17030:	C9-F8       	.data 0xf8c9          ; Binary data
17032:	00-30       	cpi r16, 0x00         ; Compare with Immediate
17034:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
17036:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
17038:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
1703A:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
1703C:	53-DB       	rcall .+5798          ; Relative Call to Subroutine
1703E:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
17040:	DA-F8       	.data 0xf8da          ; Binary data
17042:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
17044:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
17046:	08-0F       	add r16, r24          ; Add without Carry
17048:	2A-1F       	adc r18, r26          ; Add with Carry
1704A:	24-2A       	or r2, r20            ; Logical OR
1704C:	C1-60       	ori r28, 0x01         ; Logical OR with Immediate
1704E:	88-60       	ori r24, 0x08         ; Logical OR with Immediate
17050:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
17052:	09-81       	ldd r16, Y+1          ; Load Indirect from Data Space to Register
17054:	13-2A       	or r1, r19            ; Logical OR
17056:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
17058:	04-81       	ldd r16, Y+4          ; Load Indirect from Data Space to Register
1705A:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
1705C:	CA-F8       	.data 0xf8ca          ; Binary data
1705E:	08-10       	cpse r0, r8           ; Compare Skip if Equal
17060:	61-68       	ori r22, 0x81         ; Logical OR with Immediate
17062:	CA-F8       	.data 0xf8ca          ; Binary data
17064:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
17066:	1B-2A       	or r1, r27            ; Logical OR
17068:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
1706A:	1C-81       	ldd r17, Y+4          ; Load Indirect from Data Space to Register
1706C:	08-34       	cpi r16, 0x48         ; Compare with Immediate
1706E:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
17070:	10-02       	muls r17, r16         ; Multiply Signed
17072:	21-68       	ori r18, 0x81         ; Logical OR with Immediate
17074:	11-60       	ori r17, 0x01         ; Logical OR with Immediate
17076:	61-68       	ori r22, 0x81         ; Logical OR with Immediate
17078:	51-60       	ori r21, 0x01         ; Logical OR with Immediate
1707A:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
1707C:	91-60       	ori r25, 0x01         ; Logical OR with Immediate
1707E:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
17080:	DA-F8       	.data 0xf8da          ; Binary data
17082:	04-30       	cpi r16, 0x04         ; Compare with Immediate
17084:	3C-46       	sbci r19, 0x6c        ; Subtract Immediate with Carry SBI
17086:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
17088:	AA-1B       	sub r26, r26          ; Subtract Without Carry
1708A:	0F-2A       	or r0, r31            ; Logical OR
1708C:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1708E:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
17090:	19-D8       	rcall .+4146          ; Relative Call to Subroutine
17092:	2B-43       	sbci r18, 0x3b        ; Subtract Immediate with Carry SBI
17094:	3D-44       	sbci r19, 0x4d        ; Subtract Immediate with Carry SBI
17096:	7B-60       	ori r23, 0x0b         ; Logical OR with Immediate
17098:	6B-68       	ori r22, 0x8b         ; Logical OR with Immediate
1709A:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
1709C:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
1709E:	6B-60       	ori r22, 0x0b         ; Logical OR with Immediate
170A0:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
170A2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
170A4:	53-FF       	sbrs r21, 3           ; Skip if Bit in Register is Set
170A6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
170A8:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
170AA:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
170AC:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
170AE:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
170B0:	03-02       	muls r16, r19         ; Multiply Signed
170B2:	02-EB       	ldi r16, 0xb2         ; Load Immediate
170B4:	05-0C       	add r0, r5            ; Add without Carry
170B6:	8C-45       	sbci r24, 0x5c        ; Subtract Immediate with Carry SBI
170B8:	80-DB       	rcall .+5888          ; Relative Call to Subroutine
170BA:	C2-68       	ori r28, 0x82         ; Logical OR with Immediate
170BC:	81-68       	ori r24, 0x81         ; Logical OR with Immediate
170BE:	65-46       	sbci r22, 0x65        ; Subtract Immediate with Carry SBI
170C0:	CA-60       	ori r28, 0x0a         ; Logical OR with Immediate
170C2:	91-60       	ori r25, 0x01         ; Logical OR with Immediate
170C4:	E0-E7       	ldi r30, 0x70         ; Load Immediate
170C6:	B9-19       	sub r27, r9           ; Subtract Without Carry
170C8:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
170CA:	01-00       	.data 0x0001          ; Binary data
170CC:	1E-43       	sbci r17, 0x3e        ; Subtract Immediate with Carry SBI
170CE:	0A-44       	sbci r16, 0x4a        ; Subtract Immediate with Carry SBI
170D0:	7E-60       	ori r23, 0x0e         ; Logical OR with Immediate
170D2:	48-60       	ori r20, 0x08         ; Logical OR with Immediate
170D4:	53-68       	ori r21, 0x83         ; Logical OR with Immediate
170D6:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
170D8:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
170DA:	08-31       	cpi r16, 0x18         ; Compare with Immediate
170DC:	53-60       	ori r21, 0x03         ; Logical OR with Immediate
170DE:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
170E0:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
170E2:	88-FA       	.data 0xfa88          ; Binary data
170E4:	DC-E7       	ldi r29, 0x7c         ; Load Immediate
170E6:	41-46       	sbci r20, 0x61        ; Subtract Immediate with Carry SBI
170E8:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
170EA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
170EC:	31-FC       	sbrc r3, 1            ; Skip if Bit in Register is Cleared
170EE:	80-46       	sbci r24, 0x60        ; Subtract Immediate with Carry SBI
170F0:	D0-B1       	in r29, 0x00          ; Load an I/O Location to Register
170F2:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
170F4:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
170F6:	23-F0       	brbs 3, .+8           ; Branch if Bit in SREG is Set
170F8:	01-02       	muls r16, r17         ; Multiply Signed
170FA:	3A-44       	sbci r19, 0x4a        ; Subtract Immediate with Carry SBI
170FC:	A0-F1       	brbs 0, .+104         ; Branch if Bit in SREG is Set
170FE:	08-01       	movw r0, r16          ; Copy Register Word
17100:	91-42       	sbci r25, 0x21        ; Subtract Immediate with Carry SBI
17102:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
17104:	9E-80       	ldd r9, Y+6           ; Load Indirect from Data Space to Register
17106:	2A-1F       	adc r18, r26          ; Add with Carry
17108:	24-2A       	or r2, r20            ; Logical OR
1710A:	50-D8       	rcall .+4256          ; Relative Call to Subroutine
1710C:	13-2A       	or r1, r19            ; Logical OR
1710E:	23-D8       	rcall .+4166          ; Relative Call to Subroutine
17110:	03-46       	sbci r16, 0x63        ; Subtract Immediate with Carry SBI
17112:	22-46       	sbci r18, 0x62        ; Subtract Immediate with Carry SBI
17114:	11-68       	ori r17, 0x81         ; Logical OR with Immediate
17116:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
17118:	51-68       	ori r21, 0x81         ; Logical OR with Immediate
1711A:	59-60       	ori r21, 0x09         ; Logical OR with Immediate
1711C:	92-68       	ori r25, 0x82         ; Logical OR with Immediate
1711E:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
17120:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
17122:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
17124:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
17126:	66-FA       	bst r6, 6             ; Bit Store from Bit in Register to T Flag in SREG
17128:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
1712A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1712C:	0F-FF       	.data 0xff0f          ; Binary data
1712E:	40-46       	sbci r20, 0x60        ; Subtract Immediate with Carry SBI
17130:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
17132:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
17134:	F0-8F       	std Y+24, r31         ; Store Indirect From Register to Data Space
17136:	11-46       	sbci r17, 0x61        ; Subtract Immediate with Carry SBI
17138:	03-B0       	in r0, 0x03           ; Load an I/O Location to Register
1713A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1713C:	F0-4F       	sbci r31, 0xf0        ; Subtract Immediate with Carry SBI
1713E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17140:	07-BC       	out 0x27, r0          ; Store Register to I/O Location
17142:	DE-F8       	.data 0xf8de          ; Binary data
17144:	04-20       	and r0, r4            ; Logical AND
17146:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
17148:	03-02       	muls r16, r19         ; Multiply Signed
1714A:	50-19       	sub r21, r0           ; Subtract Without Carry
1714C:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
1714E:	10-0C       	add r1, r0            ; Add without Carry
17150:	60-45       	sbci r22, 0x50        ; Subtract Immediate with Carry SBI
17152:	19-DA       	rcall .+5170          ; Relative Call to Subroutine
17154:	70-46       	sbci r23, 0x60        ; Subtract Immediate with Carry SBI
17156:	31-E7       	ldi r19, 0x71         ; Load Immediate
17158:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
1715A:	03-60       	ori r16, 0x03         ; Logical OR with Immediate
1715C:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
1715E:	43-60       	ori r20, 0x03         ; Logical OR with Immediate
17160:	1B-2A       	or r1, r27            ; Logical OR
17162:	63-D8       	rcall .+4294          ; Relative Call to Subroutine
17164:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
17166:	08-03       	fmul r16, r16         ; Fractional Multiply Unsigned
17168:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1716A:	08-02       	muls r16, r24         ; Multiply Signed
1716C:	D2-E7       	ldi r29, 0x72         ; Load Immediate
1716E:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
17170:	22-68       	ori r18, 0x82         ; Logical OR with Immediate
17172:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
17174:	62-68       	ori r22, 0x82         ; Logical OR with Immediate
17176:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
17178:	A2-68       	ori r26, 0x82         ; Logical OR with Immediate
1717A:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
1717C:	3C-46       	sbci r19, 0x6c        ; Subtract Immediate with Carry SBI
1717E:	75-46       	sbci r23, 0x65        ; Subtract Immediate with Carry SBI
17180:	DA-F8       	.data 0xf8da          ; Binary data
17182:	04-30       	cpi r16, 0x04         ; Compare with Immediate
17184:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
17186:	7F-E7       	ldi r23, 0x7f         ; Load Immediate
17188:	37-44       	sbci r19, 0x47        ; Subtract Immediate with Carry SBI
1718A:	83-1B       	sub r24, r19          ; Subtract Without Carry
1718C:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
1718E:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
17190:	CB-F8       	.data 0xf8cb          ; Binary data
17192:	08-70       	andi r16, 0x08        ; Logical AND with Immediate
17194:	7B-60       	ori r23, 0x0b         ; Logical OR with Immediate
17196:	54-F8       	bld r5, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
17198:	04-3C       	cpi r16, 0xc4         ; Compare with Immediate
1719A:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1719C:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
1719E:	1E-43       	sbci r17, 0x3e        ; Subtract Immediate with Carry SBI
171A0:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
171A2:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
171A4:	04-6C       	ori r16, 0xc4         ; Logical OR with Immediate
171A6:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
171A8:	D1-FE       	sbrs r13, 1           ; Skip if Bit in Register is Set
171AA:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
171AC:	7C-E7       	ldi r23, 0x7c         ; Load Immediate
171AE:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
171B0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
171B2:	6A-FE       	.data 0xfe6a          ; Binary data
171B4:	B4-E7       	ldi r27, 0x74         ; Load Immediate
171B6:	02-EB       	ldi r16, 0xb2         ; Load Immediate
171B8:	03-0C       	add r0, r3            ; Add without Carry
171BA:	06-F1       	brbs 6, .+64          ; Branch if Bit in SREG is Set
171BC:	10-02       	muls r17, r16         ; Multiply Signed
171BE:	94-45       	sbci r25, 0x54        ; Subtract Immediate with Carry SBI
171C0:	FF-F6       	brbc 7, .-66          ; Branch if Bit in SREG is Cleared
171C2:	3B-AF       	std Y+59, r19         ; Store Indirect From Register to Data Space
171C4:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
171C6:	DA-F8       	.data 0xf8da          ; Binary data
171C8:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
171CA:	57-F8       	bld r5, 7             ; Bit Load from the T Flag in SREG to a Bit in Register
171CC:	08-1F       	adc r16, r24          ; Add with Carry
171CE:	2A-1F       	adc r18, r26          ; Add with Carry
171D0:	24-2A       	or r2, r20            ; Logical OR
171D2:	CB-60       	ori r28, 0x0b         ; Logical OR with Immediate
171D4:	99-60       	ori r25, 0x09         ; Logical OR with Immediate
171D6:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
171D8:	87-80       	ldd r8, Y+7           ; Load Indirect from Data Space to Register
171DA:	13-2A       	or r1, r19            ; Logical OR
171DC:	78-D9       	rcall .+4848          ; Relative Call to Subroutine
171DE:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
171E0:	CA-F8       	.data 0xf8ca          ; Binary data
171E2:	08-30       	cpi r16, 0x08         ; Compare with Immediate
171E4:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
171E6:	CA-F8       	.data 0xf8ca          ; Binary data
171E8:	0C-30       	cpi r16, 0x0c         ; Compare with Immediate
171EA:	1B-2A       	or r1, r27            ; Logical OR
171EC:	00-F2       	brbs 0, .-128         ; Branch if Bit in SREG is Set
171EE:	85-80       	ldd r8, Y+5           ; Load Indirect from Data Space to Register
171F0:	08-34       	cpi r16, 0x48         ; Compare with Immediate
171F2:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
171F4:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
171F6:	22-68       	ori r18, 0x82         ; Logical OR with Immediate
171F8:	1A-60       	ori r17, 0x0a         ; Logical OR with Immediate
171FA:	62-68       	ori r22, 0x82         ; Logical OR with Immediate
171FC:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
171FE:	A2-68       	ori r26, 0x82         ; Logical OR with Immediate
17200:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
17202:	0A-EB       	ldi r16, 0xba         ; Load Immediate
17204:	06-03       	mulsu r16, r22        ; Multiply Signed with Unsigned
17206:	C6-EB       	ldi r28, 0xb6         ; Load Immediate
17208:	0C-02       	muls r16, r28         ; Multiply Signed
1720A:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
1720C:	01-02       	muls r16, r17         ; Multiply Signed
1720E:	CB-F8       	.data 0xf8cb          ; Binary data
17210:	08-30       	cpi r16, 0x08         ; Compare with Immediate
17212:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
17214:	DA-F8       	.data 0xf8da          ; Binary data
17216:	04-30       	cpi r16, 0x04         ; Compare with Immediate
17218:	03-F0       	brbs 3, .+0           ; Branch if Bit in SREG is Set
1721A:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
1721C:	1E-43       	sbci r17, 0x3e        ; Subtract Immediate with Carry SBI
1721E:	48-46       	sbci r20, 0x68        ; Subtract Immediate with Carry SBI
17220:	CA-F8       	.data 0xf8ca          ; Binary data
17222:	04-60       	ori r16, 0x04         ; Logical OR with Immediate
17224:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17226:	92-FE       	sbrs r9, 2            ; Skip if Bit in Register is Set
17228:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
1722A:	3D-E7       	ldi r19, 0x7d         ; Load Immediate
1722C:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
1722E:	83-60       	ori r24, 0x03         ; Logical OR with Immediate
17230:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
17232:	C3-60       	ori r28, 0x03         ; Logical OR with Immediate
17234:	24-2A       	or r2, r20            ; Logical OR
17236:	2C-D0       	rcall .+88            ; Relative Call to Subroutine
17238:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
1723A:	10-03       	mulsu r17, r16        ; Multiply Signed with Unsigned
1723C:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1723E:	10-02       	muls r17, r16         ; Multiply Signed
17240:	68-E7       	ldi r22, 0x78         ; Load Immediate
17242:	50-F8       	bld r5, 0             ; Bit Load from the T Flag in SREG to a Bit in Register
17244:	04-2C       	mov r0, r4            ; Copy Register
17246:	22-F0       	brbs 2, .+8           ; Branch if Bit in SREG is Set
17248:	03-02       	muls r16, r19         ; Multiply Signed
1724A:	15-44       	sbci r17, 0x45        ; Subtract Immediate with Carry SBI
1724C:	1C-E7       	ldi r17, 0x7c         ; Load Immediate
1724E:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
17250:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
17252:	75-46       	sbci r23, 0x65        ; Subtract Immediate with Carry SBI
17254:	3C-46       	sbci r19, 0x6c        ; Subtract Immediate with Carry SBI
17256:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17258:	17-FE       	sbrs r1, 7            ; Skip if Bit in Register is Set
1725A:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
1725C:	DA-F8       	.data 0xf8da          ; Binary data
1725E:	04-30       	cpi r16, 0x04         ; Compare with Immediate
17260:	12-E7       	ldi r17, 0x72         ; Load Immediate
17262:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
17264:	05-E7       	ldi r16, 0x75         ; Load Immediate
17266:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
17268:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
1726A:	1D-46       	sbci r17, 0x6d        ; Subtract Immediate with Carry SBI
1726C:	3C-46       	sbci r19, 0x6c        ; Subtract Immediate with Carry SBI
1726E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17270:	0B-FE       	.data 0xfe0b          ; Binary data
17272:	57-46       	sbci r21, 0x67        ; Subtract Immediate with Carry SBI
17274:	DA-F8       	.data 0xf8da          ; Binary data
17276:	04-30       	cpi r16, 0x04         ; Compare with Immediate
17278:	06-E7       	ldi r16, 0x76         ; Load Immediate
1727A:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
1727C:	CA-F8       	.data 0xf8ca          ; Binary data
1727E:	10-30       	cpi r17, 0x00         ; Compare with Immediate
17280:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
17282:	CA-F8       	.data 0xf8ca          ; Binary data
17284:	14-30       	cpi r17, 0x04         ; Compare with Immediate
17286:	24-2A       	or r2, r20            ; Logical OR
17288:	18-D0       	rcall .+48            ; Relative Call to Subroutine
1728A:	10-34       	cpi r17, 0x40         ; Compare with Immediate
1728C:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
1728E:	18-03       	fmul r17, r16         ; Fractional Multiply Unsigned
17290:	6E-E7       	ldi r22, 0x7e         ; Load Immediate
17292:	23-69       	ori r18, 0x93         ; Logical OR with Immediate
17294:	03-61       	ori r16, 0x13         ; Logical OR with Immediate
17296:	63-69       	ori r22, 0x93         ; Logical OR with Immediate
17298:	43-61       	ori r20, 0x13         ; Logical OR with Immediate
1729A:	04-F1       	brbs 4, .+64          ; Branch if Bit in SREG is Set
1729C:	18-02       	muls r17, r24         ; Multiply Signed
1729E:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
172A0:	18-03       	fmul r17, r16         ; Fractional Multiply Unsigned
172A2:	37-E7       	ldi r19, 0x77         ; Load Immediate
172A4:	A1-68       	ori r26, 0x81         ; Logical OR with Immediate
172A6:	CA-F8       	.data 0xf8ca          ; Binary data
172A8:	10-10       	cpse r1, r0           ; Compare Skip if Equal
172AA:	E1-68       	ori r30, 0x81         ; Logical OR with Immediate
172AC:	CA-F8       	.data 0xf8ca          ; Binary data
172AE:	14-10       	cpse r1, r4           ; Compare Skip if Equal
172B0:	24-2A       	or r2, r20            ; Logical OR
172B2:	0F-D0       	rcall .+30            ; Relative Call to Subroutine
172B4:	10-34       	cpi r17, 0x40         ; Compare with Immediate
172B6:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
172B8:	18-02       	muls r17, r24         ; Multiply Signed
172BA:	DA-E6       	ldi r29, 0x6a         ; Load Immediate
172BC:	23-69       	ori r18, 0x93         ; Logical OR with Immediate
172BE:	CA-F8       	.data 0xf8ca          ; Binary data
172C0:	18-30       	cpi r17, 0x08         ; Compare with Immediate
172C2:	63-69       	ori r22, 0x93         ; Logical OR with Immediate
172C4:	CA-F8       	.data 0xf8ca          ; Binary data
172C6:	1C-30       	cpi r17, 0x0c         ; Compare with Immediate
172C8:	18-34       	cpi r17, 0x48         ; Compare with Immediate
172CA:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
172CC:	20-03       	mulsu r18, r16        ; Multiply Signed with Unsigned
172CE:	4F-E7       	ldi r20, 0x7f         ; Load Immediate
172D0:	3B-46       	sbci r19, 0x6b        ; Subtract Immediate with Carry SBI
172D2:	90-E7       	ldi r25, 0x70         ; Load Immediate
172D4:	22-69       	ori r18, 0x92         ; Logical OR with Immediate
172D6:	CA-F8       	.data 0xf8ca          ; Binary data
172D8:	18-20       	and r1, r8            ; Logical AND
172DA:	62-69       	ori r22, 0x92         ; Logical OR with Immediate
172DC:	CA-F8       	.data 0xf8ca          ; Binary data
172DE:	1C-20       	and r1, r12           ; Logical AND
172E0:	18-34       	cpi r17, 0x48         ; Compare with Immediate
172E2:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
172E4:	20-02       	muls r18, r16         ; Multiply Signed
172E6:	C4-E6       	ldi r28, 0x64         ; Load Immediate
172E8:	21-46       	sbci r18, 0x61        ; Subtract Immediate with Carry SBI
172EA:	38-46       	sbci r19, 0x68        ; Subtract Immediate with Carry SBI
172EC:	CD-F8       	.data 0xf8cd          ; Binary data
172EE:	04-C0       	rjmp .+8              ; Relative Jump
172F0:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
172F2:	CA-FD       	.data 0xfdca          ; Binary data
172F4:	DD-F8       	.data 0xf8dd          ; Binary data
172F6:	04-C0       	rjmp .+8              ; Relative Jump
172F8:	83-E7       	ldi r24, 0x73         ; Load Immediate
172FA:	A3-68       	ori r26, 0x83         ; Logical OR with Immediate
172FC:	CA-F8       	.data 0xf8ca          ; Binary data
172FE:	10-30       	cpi r17, 0x00         ; Compare with Immediate
17300:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
17302:	CA-F8       	.data 0xf8ca          ; Binary data
17304:	14-30       	cpi r17, 0x04         ; Compare with Immediate
17306:	24-2A       	or r2, r20            ; Logical OR
17308:	03-D0       	rcall .+6             ; Relative Call to Subroutine
1730A:	10-34       	cpi r17, 0x40         ; Compare with Immediate
1730C:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
1730E:	18-03       	fmul r17, r16         ; Fractional Multiply Unsigned
17310:	71-E7       	ldi r23, 0x71         ; Load Immediate
17312:	23-69       	ori r18, 0x93         ; Logical OR with Immediate
17314:	CA-F8       	.data 0xf8ca          ; Binary data
17316:	18-30       	cpi r17, 0x08         ; Compare with Immediate
17318:	63-69       	ori r22, 0x93         ; Logical OR with Immediate
1731A:	CA-F8       	.data 0xf8ca          ; Binary data
1731C:	1C-30       	cpi r17, 0x0c         ; Compare with Immediate
1731E:	18-34       	cpi r17, 0x48         ; Compare with Immediate
17320:	0A-F1       	brbs 2, .+66          ; Branch if Bit in SREG is Set
17322:	20-03       	mulsu r18, r16        ; Multiply Signed with Unsigned
17324:	67-E7       	ldi r22, 0x77         ; Load Immediate
17326:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
17328:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
1732A:	FF-1F       	adc r31, r31          ; Add with Carry
1732C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1732E:	07-4C       	sbci r16, 0xc7        ; Subtract Immediate with Carry SBI
17330:	00-23       	and r16, r16          ; Logical AND
17332:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
17334:	08-46       	sbci r16, 0x68        ; Subtract Immediate with Carry SBI
17336:	23-60       	ori r18, 0x03         ; Logical OR with Immediate
17338:	F9-F7       	brbc 1, .-2           ; Branch if Bit in SREG is Cleared
1733A:	FE-FA       	.data 0xfafe          ; Binary data
1733C:	43-1C       	adc r4, r3            ; Add with Carry
1733E:	00-D0       	rcall .+0             ; Relative Call to Subroutine
17340:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
17342:	23-68       	ori r18, 0x83         ; Logical OR with Immediate
17344:	00-2B       	or r16, r16           ; Logical OR
17346:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
17348:	2B-60       	ori r18, 0x0b         ; Logical OR with Immediate
1734A:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1734C:	54-03       	mulsu r21, r20        ; Multiply Signed with Unsigned
1734E:	00-20       	and r0, r0            ; Logical AND
17350:	80-EA       	ldi r24, 0xa0         ; Load Immediate
17352:	01-02       	muls r16, r17         ; Multiply Signed
17354:	84-46       	sbci r24, 0x64        ; Subtract Immediate with Carry SBI
17356:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
17358:	03-0F       	add r16, r19          ; Add without Carry
1735A:	4F-D1       	rcall .+670           ; Relative Call to Subroutine
1735C:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
1735E:	03-0F       	add r16, r19          ; Add without Carry
17360:	32-D1       	rcall .+612           ; Relative Call to Subroutine
17362:	4D-F8       	.data 0xf84d          ; Binary data
17364:	04-4D       	sbci r16, 0xd4        ; Subtract Immediate with Carry SBI
17366:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
17368:	04-0F       	add r16, r20          ; Add without Carry
1736A:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1736C:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1736E:	0B-D0       	rcall .+22            ; Relative Call to Subroutine
17370:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
17372:	01-32       	cpi r16, 0x21         ; Compare with Immediate
17374:	9A-43       	sbci r25, 0x3a        ; Subtract Immediate with Carry SBI
17376:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
17378:	80-3F       	cpi r24, 0xf0         ; Compare with Immediate
1737A:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
1737C:	4C-F8       	.data 0xf84c          ; Binary data
1737E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
17380:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
17382:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
17384:	16-D1       	rcall .+556           ; Relative Call to Subroutine
17386:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
17388:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1738A:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
1738C:	A3-F1       	brbs 3, .+104         ; Branch if Bit in SREG is Set
1738E:	01-32       	cpi r16, 0x21         ; Compare with Immediate
17390:	9A-43       	sbci r25, 0x3a        ; Subtract Immediate with Carry SBI
17392:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
17394:	80-3F       	cpi r24, 0xf0         ; Compare with Immediate
17396:	A4-F1       	brbs 4, .+104         ; Branch if Bit in SREG is Set
17398:	01-32       	cpi r16, 0x21         ; Compare with Immediate
1739A:	0B-D1       	rcall .+534           ; Relative Call to Subroutine
1739C:	4C-F8       	.data 0xf84c          ; Binary data
1739E:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
173A0:	A2-43       	sbci r26, 0x32        ; Subtract Immediate with Carry SBI
173A2:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
173A4:	80-3F       	cpi r24, 0xf0         ; Compare with Immediate
173A6:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
173A8:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
173AA:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
173AC:	4C-F8       	.data 0xf84c          ; Binary data
173AE:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
173B0:	EA-D0       	rcall .+468           ; Relative Call to Subroutine
173B2:	23-46       	sbci r18, 0x63        ; Subtract Immediate with Carry SBI
173B4:	0C-F8       	.data 0xf80c          ; Binary data
173B6:	01-3B       	cpi r16, 0xb1         ; Compare with Immediate
173B8:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
173BA:	FF-0F       	add r31, r31          ; Add without Carry
173BC:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
173BE:	33-23       	and r19, r19          ; Logical AND
173C0:	F8-D1       	rcall .+1008          ; Relative Call to Subroutine
173C2:	5D-F8       	.data 0xf85d          ; Binary data
173C4:	04-4B       	sbci r16, 0xb4        ; Subtract Immediate with Carry SBI
173C6:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
173C8:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
173CA:	01-0F       	add r16, r17          ; Add without Carry
173CC:	06-D0       	rcall .+12            ; Relative Call to Subroutine
173CE:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
173D0:	01-2B       	or r16, r17           ; Logical OR
173D2:	0C-F8       	.data 0xf80c          ; Binary data
173D4:	01-2B       	or r16, r17           ; Logical OR
173D6:	00-2A       	or r0, r16            ; Logical OR
173D8:	08-BF       	out 0x38, r16         ; Store Register to I/O Location
173DA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
173DC:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
173DE:	02-0F       	add r16, r18          ; Add without Carry
173E0:	BF-D0       	rcall .+382           ; Relative Call to Subroutine
173E2:	31-F8       	bld r3, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
173E4:	02-2B       	or r16, r18           ; Logical OR
173E6:	12-F0       	brbs 2, .+4           ; Branch if Bit in SREG is Set
173E8:	FF-0F       	add r31, r31          ; Add without Carry
173EA:	16-BF       	out 0x36, r17         ; Store Register to I/O Location
173EC:	2C-F8       	.data 0xf82c          ; Binary data
173EE:	02-2B       	or r16, r18           ; Logical OR
173F0:	8C-F8       	.data 0xf88c          ; Binary data
173F2:	00-20       	and r0, r0            ; Logical AND
173F4:	12-F4       	brbc 2, .+4           ; Branch if Bit in SREG is Cleared
173F6:	7F-4F       	sbci r23, 0xff        ; Subtract Immediate with Carry SBI
173F8:	B3-D1       	rcall .+870           ; Relative Call to Subroutine
173FA:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
173FC:	11-F8       	bld r1, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
173FE:	01-2B       	or r16, r17           ; Logical OR
17400:	0C-F8       	.data 0xf80c          ; Binary data
17402:	01-2B       	or r16, r17           ; Logical OR
17404:	00-2A       	or r0, r16            ; Logical OR
17406:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
17408:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1740A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1740C:	20-F0       	brbs 0, .+8           ; Branch if Bit in SREG is Set
1740E:	03-01       	movw r0, r6           ; Copy Register Word
17410:	10-F0       	brbs 0, .+4           ; Branch if Bit in SREG is Set
17412:	03-00       	.data 0x0003          ; Binary data
17414:	C0-F1       	brbs 0, .+112         ; Branch if Bit in SREG is Set
17416:	00-00       	nop                   ; No Operation
17418:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1741A:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1741C:	00-F1       	brbs 0, .+64          ; Branch if Bit in SREG is Set
1741E:	04-0C       	add r0, r4            ; Add without Carry
17420:	4F-EA       	ldi r20, 0xaf         ; Load Immediate
17422:	CC-0C       	add r12, r12          ; Add without Carry
17424:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
17426:	00-02       	muls r16, r16         ; Multiply Signed
17428:	1C-BF       	out 0x3c, r17         ; Store Register to I/O Location
1742A:	22-FA       	bst r2, 2             ; Bit Store from Bit in Register to T Flag in SREG
1742C:	0C-F2       	brbs 4, .-126         ; Branch if Bit in SREG is Set
1742E:	13-43       	sbci r17, 0x33        ; Subtract Immediate with Carry SBI
17430:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
17432:	01-0C       	add r0, r1            ; Add without Carry
17434:	4C-EA       	ldi r20, 0xac         ; Load Immediate
17436:	0C-2C       	mov r0, r12           ; Copy Register
17438:	4C-EA       	ldi r20, 0xac         ; Load Immediate
1743A:	0C-4C       	sbci r16, 0xcc        ; Subtract Immediate with Carry SBI
1743C:	A3-EB       	ldi r26, 0xb3         ; Load Immediate
1743E:	0C-02       	muls r16, r28         ; Multiply Signed
17440:	22-EA       	ldi r18, 0xa2         ; Load Immediate
17442:	03-02       	muls r16, r19         ; Multiply Signed
17444:	12-EA       	ldi r17, 0xa2         ; Load Immediate
17446:	CC-12       	cpse r12, r28         ; Compare Skip if Equal
17448:	04-BF       	out 0x34, r16         ; Store Register to I/O Location
1744A:	51-F8       	bld r5, 1             ; Bit Load from the T Flag in SREG to a Bit in Register
1744C:	04-3B       	cpi r16, 0xb4         ; Compare with Immediate
1744E:	04-30       	cpi r16, 0x04         ; Compare with Immediate
17450:	F4-D0       	rcall .+488           ; Relative Call to Subroutine
17452:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
17454:	FF-0F       	add r31, r31          ; Add without Carry
17456:	1F-BF       	out 0x3f, r17         ; Store Register to I/O Location
17458:	01-30       	cpi r16, 0x01         ; Compare with Immediate
1745A:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
1745C:	7F-4F       	sbci r23, 0xff        ; Subtract Immediate with Carry SBI
1745E:	01-30       	cpi r16, 0x01         ; Compare with Immediate
17460:	13-F4       	brbc 3, .+4           ; Branch if Bit in SREG is Cleared
17462:	7F-0F       	add r23, r31          ; Add without Carry
17464:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
17466:	01-30       	cpi r16, 0x01         ; Compare with Immediate
17468:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
1746A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1746C:	F0-B5       	in r31, 0x20          ; Load an I/O Location to Register
1746E:	27-4C       	sbci r18, 0xc7        ; Subtract Immediate with Carry SBI
17470:	26-68       	ori r18, 0x86         ; Logical OR with Immediate
17472:	D6-F8       	bld r13, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
17474:	48-41       	sbci r20, 0x18        ; Subtract Immediate with Carry SBI
17476:	85-B0       	in r8, 0x05           ; Load an I/O Location to Register
17478:	07-46       	sbci r16, 0x67        ; Subtract Immediate with Carry SBI
1747A:	00-2C       	mov r0, r0            ; Copy Register
1747C:	41-D0       	rcall .+130           ; Relative Call to Subroutine
1747E:	65-68       	ori r22, 0x85         ; Logical OR with Immediate
17480:	1F-2D       	mov r17, r15          ; Copy Register
17482:	1E-DD       	rcall .+6716          ; Relative Call to Subroutine
17484:	22-48       	sbci r18, 0x82        ; Subtract Immediate with Carry SBI
17486:	18-B9       	out 0x08, r17         ; Store Register to I/O Location
17488:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
1748A:	FF-30       	cpi r31, 0x0f         ; Compare with Immediate
1748C:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
1748E:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
17490:	4F-F4       	brbc 7, .+18          ; Branch if Bit in SREG is Cleared
17492:	C8-70       	andi r28, 0x08        ; Logical AND with Immediate
17494:	03-91       	.data 0x9103          ; Binary data
17496:	02-92       	st -Z, r0             ; Store Indirect From Register to Data Space
17498:	01-93       	st Z+, r16            ; Store Indirect From Register to Data Space
1749A:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1749C:	49-FA       	.data 0xfa49          ; Binary data
1749E:	03-99       	sbic 0x00, 3          ; Skip if Bit in I/O Register is Cleared
174A0:	02-9A       	sbi 0x00, 2           ; Set Bit in I/O Register
174A2:	01-9B       	sbis 0x00, 1          ; Skip if Bit in I/O Register is Set
174A4:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
174A6:	00-28       	or r0, r0             ; Logical OR
174A8:	EE-D0       	rcall .+476           ; Relative Call to Subroutine
174AA:	D6-F8       	bld r13, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
174AC:	48-51       	subi r20, 0x18        ; Subtract Immediate
174AE:	25-60       	ori r18, 0x05         ; Logical OR with Immediate
174B0:	00-20       	and r0, r0            ; Logical AND
174B2:	60-60       	ori r22, 0x00         ; Logical OR with Immediate
174B4:	05-46       	sbci r16, 0x65        ; Subtract Immediate with Carry SBI
174B6:	C6-F8       	bld r12, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
174B8:	48-41       	sbci r20, 0x18        ; Subtract Immediate with Carry SBI
174BA:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
174BC:	88-01       	movw r16, r16         ; Copy Register Word
174BE:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
174C0:	8C-01       	movw r16, r24         ; Copy Register Word
174C2:	3F-B9       	out 0x0f, r19         ; Store Register to I/O Location
174C4:	AB-1C       	adc r10, r11          ; Add with Carry
174C6:	00-20       	and r0, r0            ; Logical AND
174C8:	01-35       	cpi r16, 0x51         ; Compare with Immediate
174CA:	65-60       	ori r22, 0x05         ; Logical OR with Immediate
174CC:	44-F8       	bld r4, 4             ; Bit Load from the T Flag in SREG to a Bit in Register
174CE:	23-10       	cpse r2, r3           ; Compare Skip if Equal
174D0:	05-B0       	in r0, 0x05           ; Load an I/O Location to Register
174D2:	F0-BD       	out 0x20, r31         ; Store Register to I/O Location
174D4:	04-EB       	ldi r16, 0xb4         ; Load Immediate
174D6:	85-00       	.data 0x0085          ; Binary data
174D8:	4F-F0       	brbs 7, .+18          ; Branch if Bit in SREG is Set
174DA:	01-0C       	add r0, r1            ; Add without Carry
174DC:	C0-F8       	bld r12, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
174DE:	88-20       	and r8, r8            ; Logical AND
174E0:	D4-F8       	bld r13, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
174E2:	88-61       	ori r24, 0x18         ; Logical OR with Immediate
174E4:	0C-FA       	.data 0xfa0c          ; Binary data
174E6:	05-F2       	brbs 5, .-128         ; Branch if Bit in SREG is Set
174E8:	16-43       	sbci r17, 0x36        ; Subtract Immediate with Carry SBI
174EA:	02-2F       	mov r16, r18          ; Copy Register
174EC:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
174EE:	88-61       	ori r24, 0x18         ; Logical OR with Immediate
174F0:	C0-F8       	bld r12, 0            ; Bit Load from the T Flag in SREG to a Bit in Register
174F2:	08-31       	cpi r16, 0x18         ; Compare with Immediate
174F4:	E6-D1       	rcall .+972           ; Relative Call to Subroutine
174F6:	D4-F8       	bld r13, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
174F8:	8C-31       	cpi r24, 0x1c         ; Compare with Immediate
174FA:	1A-43       	sbci r17, 0x3a        ; Subtract Immediate with Carry SBI
174FC:	C4-F8       	bld r12, 4            ; Bit Load from the T Flag in SREG to a Bit in Register
174FE:	8C-21       	and r24, r12          ; Logical AND
17500:	E0-E7       	ldi r30, 0x70         ; Load Immediate
17502:	06-F5       	brbc 6, .+64          ; Branch if Bit in SREG is Cleared
17504:	A6-74       	andi r26, 0x46        ; Logical AND with Immediate
17506:	C6-F8       	bld r12, 6            ; Bit Load from the T Flag in SREG to a Bit in Register
17508:	48-41       	sbci r20, 0x18        ; Subtract Immediate with Carry SBI
1750A:	B8-E7       	ldi r27, 0x78         ; Load Immediate
1750C:	64-86       	std Y+12, r6          ; Store Indirect From Register to Data Space
1750E:	01-00       	.data 0x0001          ; Binary data
17510:	31-69       	ori r19, 0x91         ; Logical OR with Immediate
17512:	01-00       	.data 0x0001          ; Binary data
17514:	02-4B       	sbci r16, 0xb2        ; Subtract Immediate with Carry SBI
17516:	13-B1       	in r17, 0x03          ; Load an I/O Location to Register
17518:	02-48       	sbci r16, 0x82        ; Subtract Immediate with Carry SBI
1751A:	F7-F7       	brbc 7, .-4           ; Branch if Bit in SREG is Cleared
1751C:	7D-BB       	out 0x1d, r23         ; Store Register to I/O Location
1751E:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
17520:	00-00       	nop                   ; No Operation
17522:	00-00       	nop                   ; No Operation
17524:	29-75       	andi r18, 0x59        ; Logical AND with Immediate
17526:	01-00       	.data 0x0001          ; Binary data
17528:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1752A:	09-4D       	sbci r16, 0xd9        ; Subtract Immediate with Carry SBI
1752C:	09-4C       	sbci r16, 0xc9        ; Subtract Immediate with Carry SBI
1752E:	64-1B       	sub r22, r20          ; Subtract Without Carry
17530:	A4-10       	cpse r10, r4          ; Compare Skip if Equal
17532:	18-BF       	out 0x38, r17         ; Store Register to I/O Location
17534:	05-EB       	ldi r16, 0xb5         ; Load Immediate
17536:	84-05       	cpc r24, r4           ; Compare with Carry
17538:	05-D0       	rcall .+10            ; Relative Call to Subroutine
1753A:	01-3C       	cpi r16, 0xc1         ; Compare with Immediate
1753C:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
1753E:	04-3D       	cpi r16, 0xd4         ; Compare with Immediate
17540:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
17542:	00-2C       	mov r0, r0            ; Copy Register
17544:	F9-D1       	rcall .+1010          ; Relative Call to Subroutine
17546:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
17548:	38-40       	sbci r19, 0x08        ; Subtract Immediate with Carry SBI
1754A:	01-F0       	brbs 1, .+0           ; Branch if Bit in SREG is Set
1754C:	C3-B8       	out 0x03, r12         ; Store Register to I/O Location
1754E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
17550:	00-00       	nop                   ; No Operation
17552:	00-00       	nop                   ; No Operation
17554:	00-00       	nop                   ; No Operation
17556:	00-00       	nop                   ; No Operation
17558:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
1755A:	23-4D       	sbci r18, 0xd3        ; Subtract Immediate with Carry SBI
1755C:	0F-46       	sbci r16, 0x6f        ; Subtract Immediate with Carry SBI
1755E:	04-46       	sbci r16, 0x64        ; Subtract Immediate with Carry SBI
17560:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17562:	F2-FC       	sbrc r15, 2           ; Skip if Bit in Register is Cleared
17564:	AB-68       	ori r26, 0x8b         ; Logical OR with Immediate
17566:	5E-68       	ori r21, 0x8e         ; Logical OR with Immediate
17568:	26-F0       	brbs 6, .+8           ; Branch if Bit in SREG is Set
1756A:	03-06       	cpc r0, r19           ; Compare with Carry
1756C:	F1-1B       	sub r31, r17          ; Subtract Without Carry
1756E:	01-F6       	brbc 1, .-128         ; Branch if Bit in SREG is Cleared
17570:	EF-71       	andi r30, 0x1f        ; Logical AND with Immediate
17572:	21-F4       	brbc 1, .+8           ; Branch if Bit in SREG is Cleared
17574:	7F-61       	ori r23, 0x1f         ; Logical OR with Immediate
17576:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
17578:	0F-01       	movw r0, r30          ; Copy Register Word
1757A:	A1-F5       	brbc 1, .+104         ; Branch if Bit in SREG is Cleared
1757C:	80-57       	subi r24, 0x70        ; Subtract Immediate
1757E:	B7-F5       	brbc 7, .+108         ; Branch if Bit in SREG is Cleared
17580:	80-5F       	subi r24, 0xf0        ; Subtract Immediate
17582:	07-DB       	rcall .+5646          ; Relative Call to Subroutine
17584:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
17586:	00-21       	and r16, r0           ; Logical AND
17588:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
1758A:	D0-FE       	sbrs r13, 0           ; Skip if Bit in Register is Set
1758C:	AB-68       	ori r26, 0x8b         ; Logical OR with Immediate
1758E:	33-44       	sbci r19, 0x43        ; Subtract Immediate with Carry SBI
17590:	98-42       	sbci r25, 0x28        ; Subtract Immediate with Carry SBI
17592:	04-D0       	rcall .+8             ; Relative Call to Subroutine
17594:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
17596:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17598:	D9-FC       	.data 0xfcd9          ; Binary data
1759A:	00-20       	and r0, r0            ; Logical AND
1759C:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
1759E:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
175A0:	79-42       	sbci r23, 0x29        ; Subtract Immediate with Carry SBI
175A2:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
175A4:	C3-FE       	sbrs r12, 3           ; Skip if Bit in Register is Set
175A6:	01-30       	cpi r16, 0x01         ; Compare with Immediate
175A8:	0D-D0       	rcall .+26            ; Relative Call to Subroutine
175AA:	10-4B       	sbci r17, 0xb0        ; Subtract Immediate with Carry SBI
175AC:	AA-68       	ori r26, 0x8a         ; Logical OR with Immediate
175AE:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
175B0:	F6-1B       	sub r31, r22          ; Subtract Without Carry
175B2:	46-F0       	brbs 6, .+16          ; Branch if Bit in SREG is Set
175B4:	01-06       	cpc r0, r17           ; Compare with Carry
175B6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
175B8:	C9-1B       	sub r28, r25          ; Subtract Without Carry
175BA:	56-60       	ori r21, 0x06         ; Logical OR with Immediate
175BC:	19-60       	ori r17, 0x09         ; Logical OR with Immediate
175BE:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
175C0:	C5-FC       	sbrc r12, 5           ; Skip if Bit in Register is Cleared
175C2:	01-20       	and r0, r1            ; Logical AND
175C4:	F8-BD       	out 0x28, r31         ; Store Register to I/O Location
175C6:	20-46       	sbci r18, 0x60        ; Subtract Immediate with Carry SBI
175C8:	00-21       	and r16, r0           ; Logical AND
175CA:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
175CC:	AF-FE       	.data 0xfeaf          ; Binary data
175CE:	AB-68       	ori r26, 0x8b         ; Logical OR with Immediate
175D0:	C2-1A       	sub r12, r18          ; Subtract Without Carry
175D2:	0F-2A       	or r0, r31            ; Logical OR
175D4:	DE-DD       	rcall .+7100          ; Relative Call to Subroutine
175D6:	06-4D       	sbci r16, 0xd6        ; Subtract Immediate with Carry SBI
175D8:	04-49       	sbci r16, 0x94        ; Subtract Immediate with Carry SBI
175DA:	2D-68       	ori r18, 0x8d         ; Logical OR with Immediate
175DC:	42-F0       	brbs 2, .+16          ; Branch if Bit in SREG is Set
175DE:	01-02       	muls r16, r17         ; Multiply Signed
175E0:	40-1B       	sub r20, r16          ; Subtract Without Carry
175E2:	5A-60       	ori r21, 0x0a         ; Logical OR with Immediate
175E4:	08-60       	ori r16, 0x08         ; Logical OR with Immediate
175E6:	D5-E7       	ldi r29, 0x75         ; Load Immediate
175E8:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
175EA:	FF-1F       	adc r31, r31          ; Add with Carry
175EC:	18-03       	fmul r17, r16         ; Fractional Multiply Unsigned
175EE:	00-20       	and r0, r0            ; Logical AND
175F0:	D8-9C       	mul r13, r8           ; Multiply Unsigned
175F2:	FF-1F       	adc r31, r31          ; Add with Carry
175F4:	2D-E9       	ldi r18, 0x9d         ; Load Immediate
175F6:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
175F8:	0D-46       	sbci r16, 0x6d        ; Subtract Immediate with Carry SBI
175FA:	06-46       	sbci r16, 0x66        ; Subtract Immediate with Carry SBI
175FC:	00-29       	or r16, r0            ; Logical OR
175FE:	55-D0       	rcall .+170           ; Relative Call to Subroutine
17600:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17602:	A2-FC       	sbrc r10, 2           ; Skip if Bit in Register is Cleared
17604:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
17606:	04-1C       	adc r0, r4            ; Add with Carry
17608:	DF-F8       	.data 0xf8df          ; Binary data
1760A:	74-C1       	rjmp .+744            ; Relative Jump
1760C:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
1760E:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
17610:	A5-F1       	brbs 5, .+104         ; Branch if Bit in SREG is Set
17612:	08-04       	cpc r0, r8            ; Compare with Carry
17614:	E2-18       	sub r14, r2           ; Subtract Without Carry
17616:	DC-F8       	.data 0xf8dc          ; Binary data
17618:	08-00       	.data 0x0008          ; Binary data
1761A:	57-68       	ori r21, 0x87         ; Logical OR with Immediate
1761C:	90-42       	sbci r25, 0x20        ; Subtract Immediate with Carry SBI
1761E:	27-F0       	brbs 7, .+8           ; Branch if Bit in SREG is Set
17620:	03-07       	cpc r16, r19          ; Compare with Carry
17622:	69-D0       	rcall .+210           ; Relative Call to Subroutine
17624:	11-F0       	brbs 1, .+4           ; Branch if Bit in SREG is Set
17626:	01-01       	movw r0, r2           ; Copy Register Word
17628:	57-60       	ori r21, 0x07         ; Logical OR with Immediate
1762A:	32-D0       	rcall .+100           ; Relative Call to Subroutine
1762C:	00-21       	and r16, r0           ; Logical AND
1762E:	D0-19       	sub r29, r0           ; Subtract Without Carry
17630:	40-68       	ori r20, 0x80         ; Logical OR with Immediate
17632:	C0-07       	cpc r28, r16          ; Compare with Carry
17634:	06-D4       	rcall .+2060          ; Relative Call to Subroutine
17636:	3B-44       	sbci r19, 0x4b        ; Subtract Immediate with Carry SBI
17638:	90-68       	ori r25, 0x80         ; Logical OR with Immediate
1763A:	00-29       	or r16, r0            ; Logical OR
1763C:	4E-D0       	rcall .+156           ; Relative Call to Subroutine
1763E:	D2-68       	ori r29, 0x82         ; Logical OR with Immediate
17640:	C2-60       	ori r28, 0x02         ; Logical OR with Immediate
17642:	90-60       	ori r25, 0x00         ; Logical OR with Immediate
17644:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
17646:	01-02       	muls r16, r17         ; Multiply Signed
17648:	62-60       	ori r22, 0x02         ; Logical OR with Immediate
1764A:	E3-50       	subi r30, 0x03        ; Subtract Immediate
1764C:	E1-B9       	out 0x01, r30         ; Store Register to I/O Location
1764E:	B3-F5       	brbc 3, .+108         ; Branch if Bit in SREG is Cleared
17650:	00-7F       	andi r16, 0xf0        ; Logical AND with Immediate
17652:	2D-D3       	rcall .+1626          ; Relative Call to Subroutine
17654:	5A-0A       	sbc r5, r26           ; Subtract with Carry
17656:	04-2A       	or r0, r20            ; Logical OR
17658:	6A-D8       	rcall .+4308          ; Relative Call to Subroutine
1765A:	98-09       	sbc r25, r8           ; Subtract with Carry
1765C:	38-30       	cpi r19, 0x08         ; Compare with Immediate
1765E:	41-00       	.data 0x0041          ; Binary data
17660:	0C-EB       	ldi r16, 0xbc         ; Load Immediate
17662:	81-0C       	add r8, r1            ; Add without Carry
17664:	46-49       	sbci r20, 0x96        ; Subtract Immediate with Carry SBI
17666:	DC-F8       	.data 0xf8dc          ; Binary data
17668:	08-20       	and r0, r8            ; Logical AND
1766A:	62-45       	sbci r22, 0x52        ; Subtract Immediate with Carry SBI
1766C:	66-D0       	rcall .+204           ; Relative Call to Subroutine
1766E:	51-68       	ori r21, 0x81         ; Logical OR with Immediate
17670:	21-F0       	brbs 1, .+8           ; Branch if Bit in SREG is Set
17672:	03-01       	movw r0, r6           ; Copy Register Word
17674:	8B-42       	sbci r24, 0x2b        ; Subtract Immediate with Carry SBI
17676:	02-D2       	rcall .+1028          ; Relative Call to Subroutine
17678:	92-68       	ori r25, 0x82         ; Logical OR with Immediate
1767A:	94-45       	sbci r25, 0x54        ; Subtract Immediate with Carry SBI
1767C:	F7-D1       	rcall .+1006          ; Relative Call to Subroutine
1767E:	D3-68       	ori r29, 0x83         ; Logical OR with Immediate
17680:	E3-60       	ori r30, 0x03         ; Logical OR with Immediate
17682:	A2-60       	ori r26, 0x02         ; Logical OR with Immediate
17684:	9C-60       	ori r25, 0x0c         ; Logical OR with Immediate
17686:	D4-60       	ori r29, 0x04         ; Logical OR with Immediate
17688:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
1768A:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
1768C:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
1768E:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17690:	5D-BC       	out 0x2d, r5          ; Store Register to I/O Location
17692:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
17694:	08-5C       	subi r16, 0xc8        ; Subtract Immediate
17696:	64-1B       	sub r22, r20          ; Subtract Without Carry
17698:	0C-F1       	brbs 4, .+66          ; Branch if Bit in SREG is Set
1769A:	08-08       	sbc r0, r8            ; Subtract with Carry
1769C:	A0-68       	ori r26, 0x80         ; Logical OR with Immediate
1769E:	40-45       	sbci r20, 0x50        ; Subtract Immediate with Carry SBI
176A0:	2B-44       	sbci r18, 0x4b        ; Subtract Immediate with Carry SBI
176A2:	43-D0       	rcall .+134           ; Relative Call to Subroutine
176A4:	E5-68       	ori r30, 0x85         ; Logical OR with Immediate
176A6:	C5-60       	ori r28, 0x05         ; Logical OR with Immediate
176A8:	A8-60       	ori r26, 0x08         ; Logical OR with Immediate
176AA:	C0-E7       	ldi r28, 0x70         ; Load Immediate
176AC:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
176AE:	F0-81       	ld r31, Z             ; Load Indirect from Data Space to Register
176B0:	DB-08       	sbc r13, r11          ; Subtract with Carry
176B2:	0C-EB       	ldi r16, 0xbc         ; Load Immediate
176B4:	C3-02       	muls r28, r19         ; Multiply Signed
176B6:	01-25       	clr r257              ; Clear Register
176B8:	DC-F8       	.data 0xf8dc          ; Binary data
176BA:	04-00       	.data 0x0004          ; Binary data
176BC:	91-68       	ori r25, 0x81         ; Logical OR with Immediate
176BE:	A1-60       	ori r26, 0x01         ; Logical OR with Immediate
176C0:	9B-10       	cpse r9, r11          ; Compare Skip if Equal
176C2:	05-FA       	bst r0, 5             ; Bit Store from Bit in Register to T Flag in SREG
176C4:	03-F3       	brbs 3, .-64          ; Branch if Bit in SREG is Set
176C6:	18-43       	sbci r17, 0x38        ; Subtract Immediate with Carry SBI
176C8:	E2-60       	ori r30, 0x02         ; Logical OR with Immediate
176CA:	CC-F8       	.data 0xf8cc          ; Binary data
176CC:	04-00       	.data 0x0004          ; Binary data
176CE:	94-60       	ori r25, 0x04         ; Logical OR with Immediate
176D0:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
176D2:	CC-60       	ori r28, 0x0c         ; Logical OR with Immediate
176D4:	BD-E8       	ldi r27, 0x8d         ; Load Immediate
176D6:	F0-41       	sbci r31, 0x10        ; Subtract Immediate with Carry SBI
176D8:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
176DA:	38-BC       	out 0x28, r3          ; Store Register to I/O Location
176DC:	29-4D       	sbci r18, 0xd9        ; Subtract Immediate with Carry SBI
176DE:	A8-42       	sbci r26, 0x28        ; Subtract Immediate with Carry SBI
176E0:	AD-D1       	rcall .+858           ; Relative Call to Subroutine
176E2:	43-F0       	brbs 3, .+16          ; Branch if Bit in SREG is Set
176E4:	01-02       	muls r16, r17         ; Multiply Signed
176E6:	CC-F8       	.data 0xf8cc          ; Binary data
176E8:	14-40       	sbci r17, 0x04        ; Subtract Immediate with Carry SBI
176EA:	CC-F8       	.data 0xf8cc          ; Binary data
176EC:	10-40       	sbci r17, 0x00        ; Subtract Immediate with Carry SBI
176EE:	E0-60       	ori r30, 0x00         ; Logical OR with Immediate
176F0:	A0-60       	ori r26, 0x00         ; Logical OR with Immediate
176F2:	62-60       	ori r22, 0x02         ; Logical OR with Immediate
176F4:	E3-50       	subi r30, 0x03        ; Subtract Immediate
176F6:	C7-E7       	ldi r28, 0x77         ; Load Immediate
176F8:	1F-44       	sbci r17, 0x4f        ; Subtract Immediate with Carry SBI
176FA:	CB-07       	cpc r28, r27          ; Compare with Carry
176FC:	07-D4       	rcall .+2062          ; Relative Call to Subroutine
176FE:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
17700:	08-3C       	cpi r16, 0xc8         ; Compare with Immediate
17702:	E4-1A       	sub r14, r20          ; Subtract Without Carry
17704:	1F-44       	sbci r17, 0x4f        ; Subtract Immediate with Carry SBI
17706:	A2-68       	ori r26, 0x82         ; Logical OR with Immediate
17708:	E3-68       	ori r30, 0x83         ; Logical OR with Immediate
1770A:	D3-60       	ori r29, 0x03         ; Logical OR with Immediate
1770C:	9A-60       	ori r25, 0x0a         ; Logical OR with Immediate
1770E:	1E-4B       	sbci r17, 0xbe        ; Subtract Immediate with Carry SBI
17710:	1B-68       	ori r17, 0x8b         ; Logical OR with Immediate
17712:	47-F0       	brbs 7, .+16          ; Branch if Bit in SREG is Set
17714:	01-02       	muls r16, r17         ; Multiply Signed
17716:	9F-42       	sbci r25, 0x2f        ; Subtract Immediate with Carry SBI
17718:	62-60       	ori r22, 0x02         ; Logical OR with Immediate
1771A:	CC-F8       	.data 0xf8cc          ; Binary data
1771C:	08-40       	sbci r16, 0x08        ; Subtract Immediate with Carry SBI
1771E:	B3-D3       	rcall .+1894          ; Relative Call to Subroutine
17720:	1A-4B       	sbci r17, 0xba        ; Subtract Immediate with Carry SBI
17722:	30-46       	sbci r19, 0x60        ; Subtract Immediate with Carry SBI
17724:	19-68       	ori r17, 0x89         ; Logical OR with Immediate
17726:	FF-F7       	brbc 7, .-2           ; Branch if Bit in SREG is Cleared
17728:	17-FF       	sbrs r17, 7           ; Skip if Bit in Register is Set
1772A:	AD-E7       	ldi r26, 0x7d         ; Load Immediate
1772C:	01-21       	and r16, r1           ; Logical AND
1772E:	7E-E7       	ldi r23, 0x7e         ; Load Immediate
17730:	14-2A       	or r1, r20            ; Logical OR
17732:	0C-D8       	rcall .+4120          ; Relative Call to Subroutine
17734:	02-F1       	brbs 2, .+64          ; Branch if Bit in SREG is Set
17736:	5B-00       	.data 0x005b          ; Binary data
17738:	41-00       	.data 0x0041          ; Binary data
1773A:	91-E7       	ldi r25, 0x71         ; Load Immediate
1773C:	4B-68       	ori r20, 0x8b         ; Logical OR with Immediate
1773E:	80-10       	cpse r8, r0           ; Compare Skip if Equal
17740:	01-25       	clr r257              ; Clear Register
17742:	05-FA       	bst r0, 5             ; Bit Store from Bit in Register to T Flag in SREG
17744:	00-F0       	brbs 0, .+0           ; Branch if Bit in SREG is Set
17746:	03-43       	sbci r16, 0x33        ; Subtract Immediate with Carry SBI
17748:	4B-60       	ori r20, 0x0b         ; Logical OR with Immediate
1774A:	13-46       	sbci r17, 0x63        ; Subtract Immediate with Carry SBI
1774C:	98-E7       	ldi r25, 0x78         ; Load Immediate
1774E:	54-2A       	or r5, r20            ; Logical OR
17750:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
17752:	18-0B       	sbc r17, r24          ; Subtract with Carry
17754:	6E-30       	cpi r22, 0x0e         ; Compare with Immediate
17756:	41-00       	.data 0x0041          ; Binary data
17758:	82-E7       	ldi r24, 0x72         ; Load Immediate
1775A:	B2-F5       	brbc 2, .+108         ; Branch if Bit in SREG is Cleared
1775C:	AA-7F       	andi r26, 0xfa        ; Logical AND with Immediate
1775E:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
17760:	D8-0B       	sbc r29, r24          ; Subtract with Carry
17762:	77-30       	cpi r23, 0x07         ; Compare with Immediate
17764:	41-00       	.data 0x0041          ; Binary data
17766:	7B-E7       	ldi r23, 0x7b         ; Load Immediate
17768:	40-F2       	brbs 0, .-112         ; Branch if Bit in SREG is Set
1776A:	54-51       	subi r21, 0x14        ; Subtract Immediate
1776C:	8A-42       	sbci r24, 0x2a        ; Subtract Immediate with Carry SBI
1776E:	03-D8       	rcall .+4102          ; Relative Call to Subroutine
17770:	98-0C       	add r9, r8            ; Add without Carry
17772:	7C-30       	cpi r23, 0x0c         ; Compare with Immediate
17774:	41-00       	.data 0x0041          ; Binary data
17776:	73-E7       	ldi r23, 0x73         ; Load Immediate
17778:	FC-21       	and r31, r12          ; Logical AND
1777A:	7E-20       	and r7, r14           ; Logical AND
1777C:	70-E7       	ldi r23, 0x70         ; Load Immediate
1777E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
17780:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
17782:	FF-1F       	adc r31, r31          ; Add with Carry
17784:	D4-98       	cbi 0x1a, 4           ; Clear Bit in I/O Register
17786:	FF-1F       	adc r31, r31          ; Add with Carry
17788:	D4-9C       	mul r13, r4           ; Multiply Unsigned
1778A:	FF-1F       	adc r31, r31          ; Add with Carry
1778C:	14-03       	mulsu r17, r20        ; Multiply Signed with Unsigned
1778E:	00-20       	and r0, r0            ; Logical AND
17790:	00-00       	nop                   ; No Operation
17792:	00-00       	nop                   ; No Operation
17794:	00-00       	nop                   ; No Operation
17796:	00-00       	nop                   ; No Operation
17798:	49-09       	sbc r20, r9           ; Subtract with Carry
1779A:	01-00       	.data 0x0001          ; Binary data
1779C:	00-00       	nop                   ; No Operation
1779E:	00-00       	nop                   ; No Operation
177A0:	00-00       	nop                   ; No Operation
177A2:	00-00       	nop                   ; No Operation
177A4:	00-00       	nop                   ; No Operation
177A6:	00-00       	nop                   ; No Operation
177A8:	2D-08       	sbc r2, r13           ; Subtract with Carry
177AA:	00-00       	nop                   ; No Operation
177AC:	61-07       	cpc r22, r17          ; Compare with Carry
177AE:	00-00       	nop                   ; No Operation
177B0:	F5-08       	sbc r15, r5           ; Subtract with Carry
177B2:	00-00       	nop                   ; No Operation
177B4:	69-04       	cpc r6, r9            ; Compare with Carry
177B6:	00-00       	nop                   ; No Operation
177B8:	65-04       	cpc r6, r5            ; Compare with Carry
177BA:	00-00       	nop                   ; No Operation
177BC:	99-04       	cpc r9, r9            ; Compare with Carry
177BE:	00-00       	nop                   ; No Operation
177C0:	9D-04       	cpc r9, r13           ; Compare with Carry
177C2:	00-00       	nop                   ; No Operation
177C4:	00-00       	nop                   ; No Operation
177C6:	00-00       	nop                   ; No Operation
177C8:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
177CA:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
177CC:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
177CE:	52-53       	subi r21, 0x32        ; Subtract Immediate
177D0:	31-5D       	subi r19, 0xd1        ; Subtract Immediate
177D2:	20-2D       	mov r18, r0           ; Copy Register
177D4:	20-53       	subi r18, 0x30        ; Subtract Immediate
177D6:	74-6F       	ori r23, 0xf4         ; Logical OR with Immediate
177D8:	70-20       	and r7, r0            ; Logical AND
177DA:	4D-6F       	ori r20, 0xfd         ; Logical OR with Immediate
177DC:	64-65       	ori r22, 0x54         ; Logical OR with Immediate
177DE:	20-41       	sbci r18, 0x10        ; Subtract Immediate with Carry SBI
177E0:	63-6B       	ori r22, 0xb3         ; Logical OR with Immediate
177E2:	6E-6F       	ori r22, 0xfe         ; Logical OR with Immediate
177E4:	77-6C       	ori r23, 0xc7         ; Logical OR with Immediate
177E6:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
177E8:	67-65       	ori r22, 0x57         ; Logical OR with Immediate
177EA:	20-45       	sbci r18, 0x50        ; Subtract Immediate with Carry SBI
177EC:	72-72       	andi r23, 0x22        ; Logical AND with Immediate
177EE:	6F-72       	andi r22, 0x2f        ; Logical AND with Immediate
177F0:	20-52       	subi r18, 0x20        ; Subtract Immediate
177F2:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
177F4:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
177F6:	00-00       	nop                   ; No Operation
177F8:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
177FA:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
177FC:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
177FE:	52-53       	subi r21, 0x32        ; Subtract Immediate
17800:	31-5D       	subi r19, 0xd1        ; Subtract Immediate
17802:	20-2D       	mov r18, r0           ; Copy Register
17804:	20-4D       	sbci r18, 0xd0        ; Subtract Immediate with Carry SBI
17806:	44-4D       	sbci r20, 0xd4        ; Subtract Immediate with Carry SBI
17808:	2D-41       	sbci r18, 0x1d        ; Subtract Immediate with Carry SBI
1780A:	50-20       	and r5, r0            ; Logical AND
1780C:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
1780E:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17810:	74-00       	.data 0x0074          ; Binary data
17812:	00-00       	nop                   ; No Operation
17814:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
17816:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
17818:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
1781A:	52-53       	subi r21, 0x32        ; Subtract Immediate
1781C:	31-5D       	subi r19, 0xd1        ; Subtract Immediate
1781E:	20-2D       	mov r18, r0           ; Copy Register
17820:	20-53       	subi r18, 0x30        ; Subtract Immediate
17822:	6F-66       	ori r22, 0x6f         ; Logical OR with Immediate
17824:	74-77       	andi r23, 0x74        ; Logical AND with Immediate
17826:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17828:	65-20       	and r6, r5            ; Logical AND
1782A:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
1782C:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
1782E:	74-00       	.data 0x0074          ; Binary data
17830:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
17832:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
17834:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
17836:	52-53       	subi r21, 0x32        ; Subtract Immediate
17838:	31-5D       	subi r19, 0xd1        ; Subtract Immediate
1783A:	20-2D       	mov r18, r0           ; Copy Register
1783C:	20-43       	sbci r18, 0x30        ; Subtract Immediate with Carry SBI
1783E:	6F-72       	andi r22, 0x2f        ; Logical AND with Immediate
17840:	65-20       	and r6, r5            ; Logical AND
17842:	4C-6F       	ori r20, 0xfc         ; Logical OR with Immediate
17844:	63-6B       	ori r22, 0xb3         ; Logical OR with Immediate
17846:	75-70       	andi r23, 0x05        ; Logical AND with Immediate
17848:	20-45       	sbci r18, 0x50        ; Subtract Immediate with Carry SBI
1784A:	76-65       	ori r23, 0x56         ; Logical OR with Immediate
1784C:	6E-74       	andi r22, 0x4e        ; Logical AND with Immediate
1784E:	20-52       	subi r18, 0x20        ; Subtract Immediate
17850:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17852:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
17854:	00-00       	nop                   ; No Operation
17856:	00-00       	nop                   ; No Operation
17858:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
1785A:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
1785C:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
1785E:	52-53       	subi r21, 0x32        ; Subtract Immediate
17860:	30-5D       	subi r19, 0xd0        ; Subtract Immediate
17862:	20-2D       	mov r18, r0           ; Copy Register
17864:	20-50       	subi r18, 0x00        ; Subtract Immediate
17866:	6F-77       	andi r22, 0x7f        ; Logical AND with Immediate
17868:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
1786A:	2D-6F       	ori r18, 0xfd         ; Logical OR with Immediate
1786C:	6E-20       	and r6, r14           ; Logical AND
1786E:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17870:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17872:	74-00       	.data 0x0074          ; Binary data
17874:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
17876:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
17878:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
1787A:	52-53       	subi r21, 0x32        ; Subtract Immediate
1787C:	30-5D       	subi r19, 0xd0        ; Subtract Immediate
1787E:	20-2D       	mov r18, r0           ; Copy Register
17880:	20-45       	sbci r18, 0x50        ; Subtract Immediate with Carry SBI
17882:	78-74       	andi r23, 0x48        ; Logical AND with Immediate
17884:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
17886:	6E-61       	ori r22, 0x1e         ; Logical OR with Immediate
17888:	6C-20       	and r6, r12           ; Logical AND
1788A:	50-69       	ori r21, 0x90         ; Logical OR with Immediate
1788C:	6E-20       	and r6, r14           ; Logical AND
1788E:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17890:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17892:	74-00       	.data 0x0074          ; Binary data
17894:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
17896:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
17898:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
1789A:	52-53       	subi r21, 0x32        ; Subtract Immediate
1789C:	30-5D       	subi r19, 0xd0        ; Subtract Immediate
1789E:	20-2D       	mov r18, r0           ; Copy Register
178A0:	20-57       	subi r18, 0x70        ; Subtract Immediate
178A2:	61-74       	andi r22, 0x41        ; Logical AND with Immediate
178A4:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
178A6:	64-6F       	ori r22, 0xf4         ; Logical OR with Immediate
178A8:	67-28       	or r6, r7             ; Logical OR
178AA:	43-4F       	sbci r20, 0xf3        ; Subtract Immediate with Carry SBI
178AC:	50-29       	or r21, r0            ; Logical OR
178AE:	20-52       	subi r18, 0x20        ; Subtract Immediate
178B0:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
178B2:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
178B4:	00-00       	nop                   ; No Operation
178B6:	00-00       	nop                   ; No Operation
178B8:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
178BA:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
178BC:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
178BE:	52-53       	subi r21, 0x32        ; Subtract Immediate
178C0:	30-5D       	subi r19, 0xd0        ; Subtract Immediate
178C2:	20-2D       	mov r18, r0           ; Copy Register
178C4:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
178C6:	6F-73       	andi r22, 0x3f        ; Logical AND with Immediate
178C8:	73-20       	and r7, r3            ; Logical AND
178CA:	6F-66       	ori r22, 0x6f         ; Logical OR with Immediate
178CC:	20-45       	sbci r18, 0x50        ; Subtract Immediate with Carry SBI
178CE:	78-74       	andi r23, 0x48        ; Logical AND with Immediate
178D0:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
178D2:	6E-61       	ori r22, 0x1e         ; Logical OR with Immediate
178D4:	6C-20       	and r6, r12           ; Logical AND
178D6:	43-6C       	ori r20, 0xc3         ; Logical OR with Immediate
178D8:	6F-63       	ori r22, 0x3f         ; Logical OR with Immediate
178DA:	6B-20       	and r6, r11           ; Logical AND
178DC:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
178DE:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
178E0:	74-00       	.data 0x0074          ; Binary data
178E2:	00-00       	nop                   ; No Operation
178E4:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
178E6:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
178E8:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
178EA:	52-53       	subi r21, 0x32        ; Subtract Immediate
178EC:	30-5D       	subi r19, 0xd0        ; Subtract Immediate
178EE:	20-2D       	mov r18, r0           ; Copy Register
178F0:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
178F2:	6F-73       	andi r22, 0x3f        ; Logical AND with Immediate
178F4:	73-20       	and r7, r3            ; Logical AND
178F6:	6F-66       	ori r22, 0x6f         ; Logical OR with Immediate
178F8:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
178FA:	6F-63       	ori r22, 0x3f         ; Logical OR with Immediate
178FC:	6B-20       	and r6, r11           ; Logical AND
178FE:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17900:	20-50       	subi r18, 0x00        ; Subtract Immediate
17902:	4C-4C       	sbci r20, 0xcc        ; Subtract Immediate with Carry SBI
17904:	20-52       	subi r18, 0x20        ; Subtract Immediate
17906:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17908:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
1790A:	00-00       	nop                   ; No Operation
1790C:	5B-52       	subi r21, 0x2b        ; Subtract Immediate
1790E:	43-4D       	sbci r20, 0xd3        ; Subtract Immediate with Carry SBI
17910:	5F-53       	subi r21, 0x3f        ; Subtract Immediate
17912:	52-53       	subi r21, 0x32        ; Subtract Immediate
17914:	30-5D       	subi r19, 0xd0        ; Subtract Immediate
17916:	20-2D       	mov r18, r0           ; Copy Register
17918:	20-4C       	sbci r18, 0xc0        ; Subtract Immediate with Carry SBI
1791A:	6F-77       	andi r22, 0x7f        ; Logical AND with Immediate
1791C:	2D-76       	andi r18, 0x6d        ; Logical AND with Immediate
1791E:	6F-6C       	ori r22, 0xcf         ; Logical OR with Immediate
17920:	74-61       	ori r23, 0x14         ; Logical OR with Immediate
17922:	67-65       	ori r22, 0x57         ; Logical OR with Immediate
17924:	20-44       	sbci r18, 0x40        ; Subtract Immediate with Carry SBI
17926:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
17928:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
1792A:	74-20       	and r7, r4            ; Logical AND
1792C:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
1792E:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17930:	74-00       	.data 0x0074          ; Binary data
17932:	00-00       	nop                   ; No Operation
17934:	42-4D       	sbci r20, 0xd2        ; Subtract Immediate with Carry SBI
17936:	49-20       	and r4, r9            ; Logical AND
17938:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
1793A:	69-74       	andi r22, 0x49        ; Logical AND with Immediate
1793C:	20-66       	ori r18, 0x60         ; Logical OR with Immediate
1793E:	61-69       	ori r22, 0x91         ; Logical OR with Immediate
17940:	6C-65       	ori r22, 0x5c         ; Logical OR with Immediate
17942:	64-2E       	mov r6, r20           ; Copy Register
17944:	00-00       	nop                   ; No Operation
17946:	00-00       	nop                   ; No Operation
17948:	50-6F       	ori r21, 0xf0         ; Logical OR with Immediate
1794A:	6C-6F       	ori r22, 0xfc         ; Logical OR with Immediate
1794C:	6C-75       	andi r22, 0x5c        ; Logical AND with Immediate
1794E:	20-63       	ori r18, 0x30         ; Logical OR with Immediate
17950:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
17952:	6E-65       	ori r22, 0x5e         ; Logical OR with Immediate
17954:	63-74       	andi r22, 0x43        ; Logical AND with Immediate
17956:	69-6F       	ori r22, 0xf9         ; Logical OR with Immediate
17958:	6E-20       	and r6, r14           ; Logical AND
1795A:	73-75       	andi r23, 0x53        ; Logical AND with Immediate
1795C:	63-63       	ori r22, 0x33         ; Logical OR with Immediate
1795E:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17960:	73-66       	ori r23, 0x63         ; Logical OR with Immediate
17962:	75-6C       	ori r23, 0xc5         ; Logical OR with Immediate
17964:	00-00       	nop                   ; No Operation
17966:	00-00       	nop                   ; No Operation
17968:	50-6F       	ori r21, 0xf0         ; Logical OR with Immediate
1796A:	6C-6F       	ori r22, 0xfc         ; Logical OR with Immediate
1796C:	6C-75       	andi r22, 0x5c        ; Logical AND with Immediate
1796E:	20-63       	ori r18, 0x30         ; Logical OR with Immediate
17970:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
17972:	6E-65       	ori r22, 0x5e         ; Logical OR with Immediate
17974:	63-74       	andi r22, 0x43        ; Logical AND with Immediate
17976:	69-6F       	ori r22, 0xf9         ; Logical OR with Immediate
17978:	6E-20       	and r6, r14           ; Logical AND
1797A:	66-61       	ori r22, 0x16         ; Logical OR with Immediate
1797C:	69-6C       	ori r22, 0xc9         ; Logical OR with Immediate
1797E:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17980:	00-00       	nop                   ; No Operation
17982:	00-00       	nop                   ; No Operation
17984:	57-61       	ori r21, 0x17         ; Logical OR with Immediate
17986:	6B-69       	ori r22, 0x9b         ; Logical OR with Immediate
17988:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
1798A:	20-50       	subi r18, 0x00        ; Subtract Immediate
1798C:	6F-6C       	ori r22, 0xcf         ; Logical OR with Immediate
1798E:	6F-6C       	ori r22, 0xcf         ; Logical OR with Immediate
17990:	75-2E       	mov r7, r21           ; Copy Register
17992:	2E-2E       	mov r2, r30           ; Copy Register
17994:	00-00       	nop                   ; No Operation
17996:	00-00       	nop                   ; No Operation
17998:	4D-50       	subi r20, 0x0d        ; Subtract Immediate
1799A:	55-36       	cpi r21, 0x65         ; Compare with Immediate
1799C:	30-35       	cpi r19, 0x50         ; Compare with Immediate
1799E:	30-20       	and r3, r0            ; Logical AND
179A0:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
179A2:	6E-6E       	ori r22, 0xee         ; Logical OR with Immediate
179A4:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
179A6:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
179A8:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
179AA:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
179AC:	75-63       	ori r23, 0x35         ; Logical OR with Immediate
179AE:	63-65       	ori r22, 0x53         ; Logical OR with Immediate
179B0:	73-73       	andi r23, 0x33        ; Logical AND with Immediate
179B2:	66-75       	andi r22, 0x56        ; Logical AND with Immediate
179B4:	6C-00       	.data 0x006c          ; Binary data
179B6:	00-00       	nop                   ; No Operation
179B8:	4D-50       	subi r20, 0x0d        ; Subtract Immediate
179BA:	55-36       	cpi r21, 0x65         ; Compare with Immediate
179BC:	30-35       	cpi r19, 0x50         ; Compare with Immediate
179BE:	30-20       	and r3, r0            ; Logical AND
179C0:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
179C2:	6E-6E       	ori r22, 0xee         ; Logical OR with Immediate
179C4:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
179C6:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
179C8:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
179CA:	20-66       	ori r18, 0x60         ; Logical OR with Immediate
179CC:	61-69       	ori r22, 0x91         ; Logical OR with Immediate
179CE:	6C-65       	ori r22, 0x5c         ; Logical OR with Immediate
179D0:	64-00       	.data 0x0064          ; Binary data
179D2:	00-00       	nop                   ; No Operation
179D4:	77-61       	ori r23, 0x17         ; Logical OR with Immediate
179D6:	6B-69       	ori r22, 0x9b         ; Logical OR with Immediate
179D8:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
179DA:	20-61       	ori r18, 0x10         ; Logical OR with Immediate
179DC:	63-63       	ori r22, 0x33         ; Logical OR with Immediate
179DE:	65-6C       	ori r22, 0xc5         ; Logical OR with Immediate
179E0:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
179E2:	6F-6D       	ori r22, 0xdf         ; Logical OR with Immediate
179E4:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
179E6:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
179E8:	20-2E       	mov r2, r16           ; Copy Register
179EA:	2E-2E       	mov r2, r30           ; Copy Register
179EC:	00-00       	nop                   ; No Operation
179EE:	00-00       	nop                   ; No Operation
179F0:	54-65       	ori r21, 0x54         ; Logical OR with Immediate
179F2:	73-74       	andi r23, 0x43        ; Logical AND with Immediate
179F4:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
179F6:	67-20       	and r6, r7            ; Logical AND
179F8:	64-65       	ori r22, 0x54         ; Logical OR with Immediate
179FA:	76-69       	ori r23, 0x96         ; Logical OR with Immediate
179FC:	63-65       	ori r22, 0x53         ; Logical OR with Immediate
179FE:	20-63       	ori r18, 0x30         ; Logical OR with Immediate
17A00:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
17A02:	6E-65       	ori r22, 0x5e         ; Logical OR with Immediate
17A04:	63-74       	andi r22, 0x43        ; Logical AND with Immediate
17A06:	69-6F       	ori r22, 0xf9         ; Logical OR with Immediate
17A08:	6E-73       	andi r22, 0x3e        ; Logical AND with Immediate
17A0A:	2E-2E       	mov r2, r30           ; Copy Register
17A0C:	2E-00       	.data 0x002e          ; Binary data
17A0E:	00-00       	nop                   ; No Operation
17A10:	2C-00       	.data 0x002c          ; Binary data
17A12:	00-00       	nop                   ; No Operation
17A14:	43-61       	ori r20, 0x13         ; Logical OR with Immediate
17A16:	6C-69       	ori r22, 0x9c         ; Logical OR with Immediate
17A18:	62-72       	andi r22, 0x22        ; Logical AND with Immediate
17A1A:	61-74       	andi r22, 0x41        ; Logical AND with Immediate
17A1C:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17A1E:	67-20       	and r6, r7            ; Logical AND
17A20:	2E-2E       	mov r2, r30           ; Copy Register
17A22:	2E-00       	.data 0x002e          ; Binary data
17A24:	49-6E       	ori r20, 0xe9         ; Logical OR with Immediate
17A26:	69-74       	andi r22, 0x49        ; Logical AND with Immediate
17A28:	69-61       	ori r22, 0x19         ; Logical OR with Immediate
17A2A:	6C-69       	ori r22, 0x9c         ; Logical OR with Immediate
17A2C:	7A-69       	ori r23, 0x9a         ; Logical OR with Immediate
17A2E:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17A30:	20-57       	subi r18, 0x70        ; Subtract Immediate
17A32:	6F-62       	ori r22, 0x2f         ; Logical OR with Immediate
17A34:	62-6C       	ori r22, 0xc2         ; Logical OR with Immediate
17A36:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
17A38:	2E-20       	and r2, r14           ; Logical AND
17A3A:	43-75       	andi r20, 0x53        ; Logical AND with Immediate
17A3C:	72-72       	andi r23, 0x22        ; Logical AND with Immediate
17A3E:	65-6E       	ori r22, 0xe5         ; Logical OR with Immediate
17A40:	74-20       	and r7, r4            ; Logical AND
17A42:	4C-69       	ori r20, 0x9c         ; Logical OR with Immediate
17A44:	62-72       	andi r22, 0x22        ; Logical AND with Immediate
17A46:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17A48:	79-3A       	cpi r23, 0xa9         ; Compare with Immediate
17A4A:	20-00       	.data 0x0020          ; Binary data
17A4C:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17A4E:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17A50:	74-74       	andi r23, 0x44        ; Logical AND with Immediate
17A52:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17A54:	67-20       	and r6, r7            ; Logical AND
17A56:	45-45       	sbci r20, 0x55        ; Subtract Immediate with Carry SBI
17A58:	50-52       	subi r21, 0x20        ; Subtract Immediate
17A5A:	4F-4D       	sbci r20, 0xdf        ; Subtract Immediate with Carry SBI
17A5C:	20-64       	ori r18, 0x40         ; Logical OR with Immediate
17A5E:	61-74       	andi r22, 0x41        ; Logical AND with Immediate
17A60:	61-2E       	mov r6, r17           ; Copy Register
17A62:	2E-2E       	mov r2, r30           ; Copy Register
17A64:	00-00       	nop                   ; No Operation
17A66:	00-00       	nop                   ; No Operation
17A68:	50-6F       	ori r21, 0xf0         ; Logical OR with Immediate
17A6A:	73-3A       	cpi r23, 0xa3         ; Compare with Immediate
17A6C:	20-00       	.data 0x0020          ; Binary data
17A6E:	00-00       	nop                   ; No Operation
17A70:	20-65       	ori r18, 0x50         ; Logical OR with Immediate
17A72:	6E-63       	ori r22, 0x3e         ; Logical OR with Immediate
17A74:	6F-64       	ori r22, 0x4f         ; Logical OR with Immediate
17A76:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17A78:	3A-20       	and r3, r10           ; Logical AND
17A7A:	00-00       	nop                   ; No Operation
17A7C:	53-65       	ori r21, 0x53         ; Logical OR with Immediate
17A7E:	6E-74       	andi r22, 0x4e        ; Logical AND with Immediate
17A80:	20-63       	ori r18, 0x30         ; Logical OR with Immediate
17A82:	6F-6D       	ori r22, 0xdf         ; Logical OR with Immediate
17A84:	70-72       	andi r23, 0x20        ; Logical AND with Immediate
17A86:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17A88:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17A8A:	64-20       	and r6, r4            ; Logical AND
17A8C:	4C-45       	sbci r20, 0x5c        ; Subtract Immediate with Carry SBI
17A8E:	44-20       	and r4, r4            ; Logical AND
17A90:	66-72       	andi r22, 0x26        ; Logical AND with Immediate
17A92:	61-6D       	ori r22, 0xd1         ; Logical OR with Immediate
17A94:	65-2E       	mov r6, r21           ; Copy Register
17A96:	20-42       	sbci r18, 0x20        ; Subtract Immediate with Carry SBI
17A98:	79-74       	andi r23, 0x49        ; Logical AND with Immediate
17A9A:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17A9C:	20-75       	andi r18, 0x50        ; Logical AND with Immediate
17A9E:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17AA0:	64-3A       	cpi r22, 0xa4         ; Compare with Immediate
17AA2:	20-00       	.data 0x0020          ; Binary data
17AA4:	2C-20       	and r2, r12           ; Logical AND
17AA6:	75-6E       	ori r23, 0xe5         ; Logical OR with Immediate
17AA8:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
17AAA:	6D-70       	andi r22, 0x0d        ; Logical AND with Immediate
17AAC:	72-65       	ori r23, 0x52         ; Logical OR with Immediate
17AAE:	73-73       	andi r23, 0x33        ; Logical AND with Immediate
17AB0:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17AB2:	20-77       	andi r18, 0x70        ; Logical AND with Immediate
17AB4:	6F-75       	andi r22, 0x5f        ; Logical AND with Immediate
17AB6:	6C-64       	ori r22, 0x4c         ; Logical OR with Immediate
17AB8:	20-62       	ori r18, 0x20         ; Logical OR with Immediate
17ABA:	65-20       	and r6, r5            ; Logical AND
17ABC:	00-00       	nop                   ; No Operation
17ABE:	00-00       	nop                   ; No Operation
17AC0:	50-61       	ori r21, 0x10         ; Logical OR with Immediate
17AC2:	72-73       	andi r23, 0x32        ; Logical AND with Immediate
17AC4:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17AC6:	20-6E       	ori r18, 0xe0         ; Logical OR with Immediate
17AC8:	75-6D       	ori r23, 0xd5         ; Logical OR with Immediate
17ACA:	62-65       	ori r22, 0x52         ; Logical OR with Immediate
17ACC:	72-20       	and r7, r2            ; Logical AND
17ACE:	74-6F       	ori r23, 0xf4         ; Logical OR with Immediate
17AD0:	20-00       	.data 0x0020          ; Binary data
17AD2:	00-00       	nop                   ; No Operation
17AD4:	50-61       	ori r21, 0x10         ; Logical OR with Immediate
17AD6:	72-73       	andi r23, 0x32        ; Logical AND with Immediate
17AD8:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17ADA:	67-20       	and r6, r7            ; Logical AND
17ADC:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
17ADE:	72-6F       	ori r23, 0xf2         ; Logical OR with Immediate
17AE0:	72-20       	and r7, r2            ; Logical AND
17AE2:	77-68       	ori r23, 0x87         ; Logical OR with Immediate
17AE4:	69-6C       	ori r22, 0xc9         ; Logical OR with Immediate
17AE6:	65-20       	and r6, r5            ; Logical AND
17AE8:	74-72       	andi r23, 0x24        ; Logical AND with Immediate
17AEA:	79-69       	ori r23, 0x99         ; Logical OR with Immediate
17AEC:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17AEE:	20-74       	andi r18, 0x40        ; Logical AND with Immediate
17AF0:	6F-20       	and r6, r15           ; Logical AND
17AF2:	72-65       	ori r23, 0x52         ; Logical OR with Immediate
17AF4:	61-64       	ori r22, 0x41         ; Logical OR with Immediate
17AF6:	20-6F       	ori r18, 0xf0         ; Logical OR with Immediate
17AF8:	6E-65       	ori r22, 0x5e         ; Logical OR with Immediate
17AFA:	20-6E       	ori r18, 0xe0         ; Logical OR with Immediate
17AFC:	75-6D       	ori r23, 0xd5         ; Logical OR with Immediate
17AFE:	62-65       	ori r22, 0x52         ; Logical OR with Immediate
17B00:	72-20       	and r7, r2            ; Logical AND
17B02:	66-72       	andi r22, 0x26        ; Logical AND with Immediate
17B04:	6F-6D       	ori r22, 0xdf         ; Logical OR with Immediate
17B06:	20-42       	sbci r18, 0x20        ; Subtract Immediate with Carry SBI
17B08:	54-20       	and r5, r4            ; Logical AND
17B0A:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17B0C:	70-75       	andi r23, 0x50        ; Logical AND with Immediate
17B0E:	74-00       	.data 0x0074          ; Binary data
17B10:	4D-50       	subi r20, 0x0d        ; Subtract Immediate
17B12:	55-20       	and r5, r5            ; Logical AND
17B14:	44-49       	sbci r20, 0x94        ; Subtract Immediate with Carry SBI
17B16:	53-43       	sbci r21, 0x33        ; Subtract Immediate with Carry SBI
17B18:	4F-4E       	sbci r20, 0xef        ; Subtract Immediate with Carry SBI
17B1A:	4E-45       	sbci r20, 0x5e        ; Subtract Immediate with Carry SBI
17B1C:	43-54       	subi r20, 0x43        ; Subtract Immediate
17B1E:	20-45       	sbci r18, 0x50        ; Subtract Immediate with Carry SBI
17B20:	52-52       	subi r21, 0x22        ; Subtract Immediate
17B22:	4F-52       	subi r20, 0x2f        ; Subtract Immediate
17B24:	21-20       	and r2, r1            ; Logical AND
17B26:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
17B28:	75-6E       	ori r23, 0xe5         ; Logical OR with Immediate
17B2A:	74-3A       	cpi r23, 0xa4         ; Compare with Immediate
17B2C:	20-00       	.data 0x0020          ; Binary data
17B2E:	00-00       	nop                   ; No Operation
17B30:	50-6F       	ori r21, 0xf0         ; Logical OR with Immediate
17B32:	6C-6F       	ori r22, 0xfc         ; Logical OR with Immediate
17B34:	6C-75       	andi r22, 0x5c        ; Logical AND with Immediate
17B36:	20-53       	subi r18, 0x30        ; Subtract Immediate
17B38:	65-6E       	ori r22, 0xe5         ; Logical OR with Immediate
17B3A:	73-6F       	ori r23, 0xf3         ; Logical OR with Immediate
17B3C:	72-20       	and r7, r2            ; Logical AND
17B3E:	54-69       	ori r21, 0x94         ; Logical OR with Immediate
17B40:	6D-65       	ori r22, 0x5d         ; Logical OR with Immediate
17B42:	6F-75       	andi r22, 0x5f        ; Logical AND with Immediate
17B44:	74-21       	and r23, r4           ; Logical AND
17B46:	00-00       	nop                   ; No Operation
17B48:	42-4D       	sbci r20, 0xd2        ; Subtract Immediate with Carry SBI
17B4A:	49-20       	and r4, r9            ; Logical AND
17B4C:	53-65       	ori r21, 0x53         ; Logical OR with Immediate
17B4E:	6E-73       	andi r22, 0x3e        ; Logical AND with Immediate
17B50:	6F-72       	andi r22, 0x2f        ; Logical AND with Immediate
17B52:	20-54       	subi r18, 0x40        ; Subtract Immediate
17B54:	69-6D       	ori r22, 0xd9         ; Logical OR with Immediate
17B56:	65-6F       	ori r22, 0xf5         ; Logical OR with Immediate
17B58:	75-74       	andi r23, 0x45        ; Logical AND with Immediate
17B5A:	21-00       	.data 0x0021          ; Binary data
17B5C:	4D-65       	ori r20, 0x5d         ; Logical OR with Immediate
17B5E:	61-73       	andi r22, 0x31        ; Logical AND with Immediate
17B60:	75-72       	andi r23, 0x25        ; Logical AND with Immediate
17B62:	65-32       	cpi r22, 0x25         ; Compare with Immediate
17B64:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
17B66:	61-79       	andi r22, 0x91        ; Logical AND with Immediate
17B68:	73-20       	and r7, r3            ; Logical AND
17B6A:	6E-6F       	ori r22, 0xfe         ; Logical OR with Immediate
17B6C:	20-61       	ori r18, 0x10         ; Logical OR with Immediate
17B6E:	63-63       	ori r22, 0x33         ; Logical OR with Immediate
17B70:	65-6C       	ori r22, 0xc5         ; Logical OR with Immediate
17B72:	20-63       	ori r18, 0x30         ; Logical OR with Immediate
17B74:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
17B76:	6E-65       	ori r22, 0x5e         ; Logical OR with Immediate
17B78:	63-74       	andi r22, 0x43        ; Logical AND with Immediate
17B7A:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17B7C:	21-20       	and r2, r1            ; Logical AND
17B7E:	54-72       	andi r21, 0x24        ; Logical AND with Immediate
17B80:	79-69       	ori r23, 0x99         ; Logical OR with Immediate
17B82:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17B84:	20-74       	andi r18, 0x40        ; Logical AND with Immediate
17B86:	6F-20       	and r6, r15           ; Logical AND
17B88:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17B8A:	69-74       	andi r22, 0x49        ; Logical AND with Immediate
17B8C:	69-61       	ori r22, 0x19         ; Logical OR with Immediate
17B8E:	6C-69       	ori r22, 0x9c         ; Logical OR with Immediate
17B90:	7A-65       	ori r23, 0x5a         ; Logical OR with Immediate
17B92:	2E-2E       	mov r2, r30           ; Copy Register
17B94:	2E-00       	.data 0x002e          ; Binary data
17B96:	00-00       	nop                   ; No Operation
17B98:	45-72       	andi r20, 0x25        ; Logical AND with Immediate
17B9A:	72-6F       	ori r23, 0xf2         ; Logical OR with Immediate
17B9C:	72-3A       	cpi r23, 0xa2         ; Compare with Immediate
17B9E:	20-72       	andi r18, 0x20        ; Logical AND with Immediate
17BA0:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
17BA2:	65-69       	ori r22, 0x95         ; Logical OR with Immediate
17BA4:	76-65       	ori r23, 0x56         ; Logical OR with Immediate
17BA6:	64-20       	and r6, r4            ; Logical AND
17BA8:	70-61       	ori r23, 0x10         ; Logical OR with Immediate
17BAA:	63-6B       	ori r22, 0xb3         ; Logical OR with Immediate
17BAC:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
17BAE:	20-74       	andi r18, 0x40        ; Logical AND with Immediate
17BB0:	6F-6F       	ori r22, 0xff         ; Logical OR with Immediate
17BB2:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
17BB4:	68-6F       	ori r22, 0xf8         ; Logical OR with Immediate
17BB6:	72-74       	andi r23, 0x42        ; Logical AND with Immediate
17BB8:	21-20       	and r2, r1            ; Logical AND
17BBA:	65-78       	andi r22, 0x85        ; Logical AND with Immediate
17BBC:	70-65       	ori r23, 0x50         ; Logical OR with Immediate
17BBE:	63-74       	andi r22, 0x43        ; Logical AND with Immediate
17BC0:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17BC2:	3A-20       	and r3, r10           ; Logical AND
17BC4:	00-00       	nop                   ; No Operation
17BC6:	00-00       	nop                   ; No Operation
17BC8:	20-72       	andi r18, 0x20        ; Logical AND with Immediate
17BCA:	63-76       	andi r22, 0x63        ; Logical AND with Immediate
17BCC:	64-3A       	cpi r22, 0xa4         ; Compare with Immediate
17BCE:	20-00       	.data 0x0020          ; Binary data
17BD0:	41-64       	ori r20, 0x41         ; Logical OR with Immediate
17BD2:	64-69       	ori r22, 0x94         ; Logical OR with Immediate
17BD4:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17BD6:	20-68       	ori r18, 0x80         ; Logical OR with Immediate
17BD8:	69-64       	ori r22, 0x49         ; Logical OR with Immediate
17BDA:	64-65       	ori r22, 0x54         ; Logical OR with Immediate
17BDC:	6E-20       	and r6, r14           ; Logical AND
17BDE:	73-6C       	ori r23, 0xc3         ; Logical OR with Immediate
17BE0:	6F-70       	andi r22, 0x0f        ; Logical AND with Immediate
17BE2:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17BE4:	3A-20       	and r3, r10           ; Logical AND
17BE6:	00-00       	nop                   ; No Operation
17BE8:	57-41       	sbci r21, 0x17        ; Subtract Immediate with Carry SBI
17BEA:	52-4E       	sbci r21, 0xe2        ; Subtract Immediate with Carry SBI
17BEC:	49-4E       	sbci r20, 0xe9        ; Subtract Immediate with Carry SBI
17BEE:	47-3A       	cpi r20, 0xa7         ; Compare with Immediate
17BF0:	20-54       	subi r18, 0x40        ; Subtract Immediate
17BF2:	6F-6F       	ori r22, 0xff         ; Logical OR with Immediate
17BF4:	20-6D       	ori r18, 0xd0         ; Logical OR with Immediate
17BF6:	61-6E       	ori r22, 0xe1         ; Logical OR with Immediate
17BF8:	79-20       	and r7, r9            ; Logical AND
17BFA:	68-69       	ori r22, 0x98         ; Logical OR with Immediate
17BFC:	64-64       	ori r22, 0x44         ; Logical OR with Immediate
17BFE:	65-6E       	ori r22, 0xe5         ; Logical OR with Immediate
17C00:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
17C02:	6C-6F       	ori r22, 0xfc         ; Logical OR with Immediate
17C04:	70-65       	ori r23, 0x50         ; Logical OR with Immediate
17C06:	73-20       	and r7, r3            ; Logical AND
17C08:	64-65       	ori r22, 0x54         ; Logical OR with Immediate
17C0A:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
17C0C:	63-74       	andi r22, 0x43        ; Logical AND with Immediate
17C0E:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17C10:	20-69       	ori r18, 0x90         ; Logical OR with Immediate
17C12:	6E-20       	and r6, r14           ; Logical AND
17C14:	45-45       	sbci r20, 0x55        ; Subtract Immediate with Carry SBI
17C16:	50-52       	subi r21, 0x20        ; Subtract Immediate
17C18:	4F-4D       	sbci r20, 0xdf        ; Subtract Immediate with Carry SBI
17C1A:	21-00       	.data 0x0021          ; Binary data
17C1C:	45-52       	subi r20, 0x25        ; Subtract Immediate
17C1E:	52-4F       	sbci r21, 0xf2        ; Subtract Immediate with Carry SBI
17C20:	52-3A       	cpi r21, 0xa2         ; Compare with Immediate
17C22:	20-54       	subi r18, 0x40        ; Subtract Immediate
17C24:	4F-4F       	sbci r20, 0xff        ; Subtract Immediate with Carry SBI
17C26:	20-4D       	sbci r18, 0xd0        ; Subtract Immediate with Carry SBI
17C28:	41-4E       	sbci r20, 0xe1        ; Subtract Immediate with Carry SBI
17C2A:	59-20       	and r5, r9            ; Logical AND
17C2C:	57-41       	sbci r21, 0x17        ; Subtract Immediate with Carry SBI
17C2E:	56-45       	sbci r21, 0x56        ; Subtract Immediate with Carry SBI
17C30:	53-00       	.data 0x0053          ; Binary data
17C32:	00-00       	nop                   ; No Operation
17C34:	4C-6F       	ori r20, 0xfc         ; Logical OR with Immediate
17C36:	61-64       	ori r22, 0x41         ; Logical OR with Immediate
17C38:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17C3A:	67-20       	and r6, r7            ; Logical AND
17C3C:	68-61       	ori r22, 0x18         ; Logical OR with Immediate
17C3E:	72-64       	ori r23, 0x42         ; Logical OR with Immediate
17C40:	20-6C       	ori r18, 0xc0         ; Logical OR with Immediate
17C42:	65-76       	andi r22, 0x65        ; Logical AND with Immediate
17C44:	65-6C       	ori r22, 0xc5         ; Logical OR with Immediate
17C46:	20-00       	.data 0x0020          ; Binary data
17C48:	4C-6F       	ori r20, 0xfc         ; Logical OR with Immediate
17C4A:	61-64       	ori r22, 0x41         ; Logical OR with Immediate
17C4C:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17C4E:	67-20       	and r6, r7            ; Logical AND
17C50:	6C-65       	ori r22, 0x5c         ; Logical OR with Immediate
17C52:	76-65       	ori r23, 0x56         ; Logical OR with Immediate
17C54:	6C-20       	and r6, r12           ; Logical AND
17C56:	00-00       	nop                   ; No Operation
17C58:	73-69       	ori r23, 0x93         ; Logical OR with Immediate
17C5A:	64-65       	ori r22, 0x54         ; Logical OR with Immediate
17C5C:	56-65       	ori r21, 0x56         ; Logical OR with Immediate
17C5E:	6C-6F       	ori r22, 0xfc         ; Logical OR with Immediate
17C60:	63-69       	ori r22, 0x93         ; Logical OR with Immediate
17C62:	74-79       	andi r23, 0x94        ; Logical AND with Immediate
17C64:	3A-20       	and r3, r10           ; Logical AND
17C66:	00-00       	nop                   ; No Operation
17C68:	4D-69       	ori r20, 0x9d         ; Logical OR with Immediate
17C6A:	6E-75       	andi r22, 0x5e        ; Logical AND with Immediate
17C6C:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
17C6E:	73-20       	and r7, r3            ; Logical AND
17C70:	70-6C       	ori r23, 0xc0         ; Logical OR with Immediate
17C72:	61-79       	andi r22, 0x91        ; Logical AND with Immediate
17C74:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17C76:	3A-20       	and r3, r10           ; Logical AND
17C78:	00-00       	nop                   ; No Operation
17C7A:	00-00       	nop                   ; No Operation
17C7C:	4C-69       	ori r20, 0x9c         ; Logical OR with Immediate
17C7E:	76-65       	ori r23, 0x56         ; Logical OR with Immediate
17C80:	73-20       	and r7, r3            ; Logical AND
17C82:	50-65       	ori r21, 0x50         ; Logical OR with Immediate
17C84:	72-20       	and r7, r2            ; Logical AND
17C86:	47-61       	ori r20, 0x17         ; Logical OR with Immediate
17C88:	6D-65       	ori r22, 0x5d         ; Logical OR with Immediate
17C8A:	3A-20       	and r3, r10           ; Logical AND
17C8C:	00-00       	nop                   ; No Operation
17C8E:	00-00       	nop                   ; No Operation
17C90:	47-61       	ori r20, 0x17         ; Logical OR with Immediate
17C92:	6D-65       	ori r22, 0x5d         ; Logical OR with Immediate
17C94:	73-20       	and r7, r3            ; Logical AND
17C96:	50-6C       	ori r21, 0xc0         ; Logical OR with Immediate
17C98:	61-79       	andi r22, 0x91        ; Logical AND with Immediate
17C9A:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17C9C:	3A-20       	and r3, r10           ; Logical AND
17C9E:	00-00       	nop                   ; No Operation
17CA0:	41-63       	ori r20, 0x31         ; Logical OR with Immediate
17CA2:	63-65       	ori r22, 0x53         ; Logical OR with Immediate
17CA4:	6C-20       	and r6, r12           ; Logical AND
17CA6:	4C-69       	ori r20, 0x9c         ; Logical OR with Immediate
17CA8:	62-72       	andi r22, 0x22        ; Logical AND with Immediate
17CAA:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17CAC:	79-20       	and r7, r9            ; Logical AND
17CAE:	6C-61       	ori r22, 0x1c         ; Logical OR with Immediate
17CB0:	73-74       	andi r23, 0x43        ; Logical AND with Immediate
17CB2:	20-75       	andi r18, 0x50        ; Logical AND with Immediate
17CB4:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17CB6:	64-3A       	cpi r22, 0xa4         ; Compare with Immediate
17CB8:	20-00       	.data 0x0020          ; Binary data
17CBA:	00-00       	nop                   ; No Operation
17CBC:	53-65       	ori r21, 0x53         ; Logical OR with Immediate
17CBE:	72-69       	ori r23, 0x92         ; Logical OR with Immediate
17CC0:	61-6C       	ori r22, 0xc1         ; Logical OR with Immediate
17CC2:	3A-20       	and r3, r10           ; Logical AND
17CC4:	00-00       	nop                   ; No Operation
17CC6:	00-00       	nop                   ; No Operation
17CC8:	53-74       	andi r21, 0x43        ; Logical AND with Immediate
17CCA:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17CCC:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
17CCE:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17CD0:	21-00       	.data 0x0021          ; Binary data
17CD2:	00-00       	nop                   ; No Operation
17CD4:	53-65       	ori r21, 0x53         ; Logical OR with Immediate
17CD6:	74-75       	andi r23, 0x54        ; Logical AND with Immediate
17CD8:	70-20       	and r7, r0            ; Logical AND
17CDA:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
17CDC:	6D-70       	andi r22, 0x0d        ; Logical AND with Immediate
17CDE:	6C-65       	ori r22, 0x5c         ; Logical OR with Immediate
17CE0:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
17CE2:	00-00       	nop                   ; No Operation
17CE4:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17CE6:	73-74       	andi r23, 0x43        ; Logical AND with Immediate
17CE8:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17CEA:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
17CEC:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17CEE:	2E-2E       	mov r2, r30           ; Copy Register
17CF0:	2E-00       	.data 0x002e          ; Binary data
17CF2:	00-00       	nop                   ; No Operation
17CF4:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17CF6:	63-61       	ori r22, 0x13         ; Logical OR with Immediate
17CF8:	6C-69       	ori r22, 0x9c         ; Logical OR with Immediate
17CFA:	62-72       	andi r22, 0x22        ; Logical AND with Immediate
17CFC:	61-74       	andi r22, 0x41        ; Logical AND with Immediate
17CFE:	65-2E       	mov r6, r21           ; Copy Register
17D00:	2E-2E       	mov r2, r30           ; Copy Register
17D02:	00-00       	nop                   ; No Operation
17D04:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17D06:	73-65       	ori r23, 0x53         ; Logical OR with Immediate
17D08:	74-74       	andi r23, 0x44        ; Logical AND with Immediate
17D0A:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17D0C:	67-20       	and r6, r7            ; Logical AND
17D0E:	48-69       	ori r20, 0x98         ; Logical OR with Immediate
17D10:	67-68       	ori r22, 0x87         ; Logical OR with Immediate
17D12:	73-63       	ori r23, 0x33         ; Logical OR with Immediate
17D14:	6F-72       	andi r22, 0x2f        ; Logical AND with Immediate
17D16:	65-2E       	mov r6, r21           ; Copy Register
17D18:	2E-2E       	mov r2, r30           ; Copy Register
17D1A:	00-00       	nop                   ; No Operation
17D1C:	48-69       	ori r20, 0x98         ; Logical OR with Immediate
17D1E:	64-64       	ori r22, 0x44         ; Logical OR with Immediate
17D20:	65-6E       	ori r22, 0xe5         ; Logical OR with Immediate
17D22:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
17D24:	6C-6F       	ori r22, 0xfc         ; Logical OR with Immediate
17D26:	70-65       	ori r23, 0x50         ; Logical OR with Immediate
17D28:	20-76       	andi r18, 0x60        ; Logical AND with Immediate
17D2A:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17D2C:	69-61       	ori r22, 0x19         ; Logical OR with Immediate
17D2E:	62-6C       	ori r22, 0xc2         ; Logical OR with Immediate
17D30:	65-20       	and r6, r5            ; Logical AND
17D32:	6F-75       	andi r22, 0x5f        ; Logical AND with Immediate
17D34:	74-20       	and r7, r4            ; Logical AND
17D36:	6F-66       	ori r22, 0x6f         ; Logical OR with Immediate
17D38:	20-62       	ori r18, 0x20         ; Logical OR with Immediate
17D3A:	6F-75       	andi r22, 0x5f        ; Logical AND with Immediate
17D3C:	6E-64       	ori r22, 0x4e         ; Logical OR with Immediate
17D3E:	73-21       	and r23, r3           ; Logical AND
17D40:	00-00       	nop                   ; No Operation
17D42:	00-00       	nop                   ; No Operation
17D44:	47-61       	ori r20, 0x17         ; Logical OR with Immediate
17D46:	6D-65       	ori r22, 0x5d         ; Logical OR with Immediate
17D48:	20-65       	ori r18, 0x50         ; Logical OR with Immediate
17D4A:	6E-64       	ori r22, 0x4e         ; Logical OR with Immediate
17D4C:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
17D4E:	2E-20       	and r2, r14           ; Logical AND
17D50:	52-65       	ori r21, 0x52         ; Logical OR with Immediate
17D52:	73-74       	andi r23, 0x43        ; Logical AND with Immediate
17D54:	61-72       	andi r22, 0x21        ; Logical AND with Immediate
17D56:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
17D58:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17D5A:	21-00       	.data 0x0021          ; Binary data
17D5C:	41-64       	ori r20, 0x41         ; Logical OR with Immediate
17D5E:	64-69       	ori r22, 0x94         ; Logical OR with Immediate
17D60:	6E-67       	ori r22, 0x7e         ; Logical OR with Immediate
17D62:	20-6C       	ori r18, 0xc0         ; Logical OR with Immediate
17D64:	69-76       	andi r22, 0x69        ; Logical AND with Immediate
17D66:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17D68:	21-00       	.data 0x0021          ; Binary data
17D6A:	00-00       	nop                   ; No Operation
17D6C:	31-00       	.data 0x0031          ; Binary data
17D6E:	00-00       	nop                   ; No Operation
17D70:	32-00       	.data 0x0032          ; Binary data
17D72:	00-00       	nop                   ; No Operation
17D74:	52-75       	andi r21, 0x52        ; Logical AND with Immediate
17D76:	6E-20       	and r6, r14           ; Logical AND
17D78:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
17D7A:	6D-70       	andi r22, 0x0d        ; Logical AND with Immediate
17D7C:	6C-65       	ori r22, 0x5c         ; Logical OR with Immediate
17D7E:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
17D80:	64-21       	and r22, r4           ; Logical AND
17D82:	20-54       	subi r18, 0x40        ; Subtract Immediate
17D84:	69-6D       	ori r22, 0xd9         ; Logical OR with Immediate
17D86:	65-3A       	cpi r22, 0xa5         ; Compare with Immediate
17D88:	20-00       	.data 0x0020          ; Binary data
17D8A:	00-00       	nop                   ; No Operation
17D8C:	20-6D       	ori r18, 0xd0         ; Logical OR with Immediate
17D8E:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
17D90:	20-00       	.data 0x0020          ; Binary data
17D92:	00-00       	nop                   ; No Operation
17D94:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
17D96:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
17D98:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
17D9A:	64-73       	andi r22, 0x34        ; Logical AND with Immediate
17D9C:	2E-00       	.data 0x002e          ; Binary data
17D9E:	00-00       	nop                   ; No Operation
17DA0:	50-6F       	ori r21, 0xf0         ; Logical OR with Immediate
17DA2:	73-69       	ori r23, 0x93         ; Logical OR with Immediate
17DA4:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
17DA6:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
17DA8:	31-36       	cpi r19, 0x61         ; Compare with Immediate
17DAA:	20-00       	.data 0x0020          ; Binary data
17DAC:	4F-6E       	ori r20, 0xef         ; Logical OR with Immediate
17DAE:	65-20       	and r6, r5            ; Logical AND
17DB0:	6D-6F       	ori r22, 0xfd         ; Logical OR with Immediate
17DB2:	72-65       	ori r23, 0x52         ; Logical OR with Immediate
17DB4:	20-67       	ori r18, 0x70         ; Logical OR with Immediate
17DB6:	61-6D       	ori r22, 0xd1         ; Logical OR with Immediate
17DB8:	65-20       	and r6, r5            ; Logical AND
17DBA:	63-6F       	ori r22, 0xf3         ; Logical OR with Immediate
17DBC:	75-6E       	ori r23, 0xe5         ; Logical OR with Immediate
17DBE:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
17DC0:	64-2E       	mov r6, r20           ; Copy Register
17DC2:	20-4E       	sbci r18, 0xe0        ; Subtract Immediate with Carry SBI
17DC4:	6F-77       	andi r22, 0x7f        ; Logical AND with Immediate
17DC6:	3A-20       	and r3, r10           ; Logical AND
17DC8:	00-00       	nop                   ; No Operation
17DCA:	00-00       	nop                   ; No Operation
17DCC:	41-76       	andi r20, 0x61        ; Logical AND with Immediate
17DCE:	67-20       	and r6, r7            ; Logical AND
17DD0:	46-50       	subi r20, 0x06        ; Subtract Immediate
17DD2:	53-3A       	cpi r21, 0xa3         ; Compare with Immediate
17DD4:	20-00       	.data 0x0020          ; Binary data
17DD6:	00-00       	nop                   ; No Operation
17DD8:	20-20       	and r2, r0            ; Logical AND
17DDA:	4D-69       	ori r20, 0x9d         ; Logical OR with Immediate
17DDC:	6E-20       	and r6, r14           ; Logical AND
17DDE:	46-50       	subi r20, 0x06        ; Subtract Immediate
17DE0:	53-3A       	cpi r21, 0xa3         ; Compare with Immediate
17DE2:	20-00       	.data 0x0020          ; Binary data
17DE4:	20-20       	and r2, r0            ; Logical AND
17DE6:	4D-61       	ori r20, 0x1d         ; Logical OR with Immediate
17DE8:	78-20       	and r7, r8            ; Logical AND
17DEA:	46-50       	subi r20, 0x06        ; Subtract Immediate
17DEC:	53-3A       	cpi r21, 0xa3         ; Compare with Immediate
17DEE:	20-00       	.data 0x0020          ; Binary data
17DF0:	51-75       	andi r21, 0x51        ; Logical AND with Immediate
17DF2:	69-63       	ori r22, 0x39         ; Logical OR with Immediate
17DF4:	6B-52       	subi r22, 0x2b        ; Subtract Immediate
17DF6:	65-73       	andi r22, 0x35        ; Logical AND with Immediate
17DF8:	65-74       	andi r22, 0x45        ; Logical AND with Immediate
17DFA:	20-00       	.data 0x0020          ; Binary data
17DFC:	31-30       	cpi r19, 0x01         ; Compare with Immediate
17DFE:	2C-26       	clr r556              ; Clear Register
17E00:	1F-17       	cp r17, r31           ; Compare
17E02:	0E-04       	cpc r0, r14           ; Compare with Carry
17E04:	00-00       	nop                   ; No Operation
17E06:	F9-18       	sub r15, r9           ; Subtract Without Carry
17E08:	FB-30       	cpi r31, 0x0b         ; Compare with Immediate
17E0A:	1C-47       	sbci r17, 0x7c        ; Subtract Immediate with Carry SBI
17E0C:	82-5A       	subi r24, 0xa2        ; Subtract Immediate
17E0E:	6D-6A       	ori r22, 0xad         ; Logical OR with Immediate
17E10:	41-76       	andi r20, 0x61        ; Logical AND with Immediate
17E12:	89-7D       	andi r24, 0xd9        ; Logical AND with Immediate
17E14:	00-00       	nop                   ; No Operation
17E16:	24-03       	mulsu r18, r20        ; Multiply Signed with Unsigned
17E18:	48-06       	cpc r4, r24           ; Compare with Carry
17E1A:	6A-09       	sbc r22, r10          ; Subtract with Carry
17E1C:	8C-0C       	add r8, r12           ; Add without Carry
17E1E:	AB-0F       	add r26, r27          ; Add without Carry
17E20:	C8-12       	cpse r12, r24         ; Compare Skip if Equal
17E22:	E2-15       	cp r30, r2            ; Compare
17E24:	F9-18       	sub r15, r9           ; Subtract Without Carry
17E26:	0B-1C       	adc r0, r11           ; Add with Carry
17E28:	1A-1F       	adc r17, r26          ; Add with Carry
17E2A:	23-22       	and r2, r19           ; Logical AND
17E2C:	28-25       	clr r296              ; Clear Register
17E2E:	26-28       	or r2, r6             ; Logical OR
17E30:	1F-2B       	or r17, r31           ; Logical OR
17E32:	11-2E       	mov r1, r17           ; Copy Register
17E34:	FB-30       	cpi r31, 0x0b         ; Compare with Immediate
17E36:	DF-33       	cpi r29, 0x3f         ; Compare with Immediate
17E38:	BA-36       	cpi r27, 0x6a         ; Compare with Immediate
17E3A:	8C-39       	cpi r24, 0x9c         ; Compare with Immediate
17E3C:	56-3C       	cpi r21, 0xc6         ; Compare with Immediate
17E3E:	17-3F       	cpi r17, 0xf7         ; Compare with Immediate
17E40:	CE-41       	sbci r28, 0x1e        ; Subtract Immediate with Carry SBI
17E42:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
17E44:	1C-47       	sbci r17, 0x7c        ; Subtract Immediate with Carry SBI
17E46:	B4-49       	sbci r27, 0x94        ; Subtract Immediate with Carry SBI
17E48:	3F-4C       	sbci r19, 0xcf        ; Subtract Immediate with Carry SBI
17E4A:	BF-4E       	sbci r27, 0xef        ; Subtract Immediate with Carry SBI
17E4C:	33-51       	subi r19, 0x13        ; Subtract Immediate
17E4E:	9B-53       	subi r25, 0x3b        ; Subtract Immediate
17E50:	F5-55       	subi r31, 0x55        ; Subtract Immediate
17E52:	42-58       	subi r20, 0x82        ; Subtract Immediate
17E54:	82-5A       	subi r24, 0xa2        ; Subtract Immediate
17E56:	B3-5C       	subi r27, 0xc3        ; Subtract Immediate
17E58:	D7-5E       	subi r29, 0xe7        ; Subtract Immediate
17E5A:	EB-60       	ori r30, 0x0b         ; Logical OR with Immediate
17E5C:	F1-62       	ori r31, 0x21         ; Logical OR with Immediate
17E5E:	E8-64       	ori r30, 0x48         ; Logical OR with Immediate
17E60:	CF-66       	ori r28, 0x6f         ; Logical OR with Immediate
17E62:	A6-68       	ori r26, 0x86         ; Logical OR with Immediate
17E64:	6D-6A       	ori r22, 0xad         ; Logical OR with Immediate
17E66:	23-6C       	ori r18, 0xc3         ; Logical OR with Immediate
17E68:	C9-6D       	ori r28, 0xd9         ; Logical OR with Immediate
17E6A:	5E-6F       	ori r21, 0xfe         ; Logical OR with Immediate
17E6C:	E2-70       	andi r30, 0x02        ; Logical AND with Immediate
17E6E:	54-72       	andi r21, 0x24        ; Logical AND with Immediate
17E70:	B5-73       	andi r27, 0x35        ; Logical AND with Immediate
17E72:	04-75       	andi r16, 0x54        ; Logical AND with Immediate
17E74:	41-76       	andi r20, 0x61        ; Logical AND with Immediate
17E76:	6B-77       	andi r22, 0x7b        ; Logical AND with Immediate
17E78:	84-78       	andi r24, 0x84        ; Logical AND with Immediate
17E7A:	89-79       	andi r24, 0x99        ; Logical AND with Immediate
17E7C:	7C-7A       	andi r23, 0xac        ; Logical AND with Immediate
17E7E:	5C-7B       	andi r21, 0xbc        ; Logical AND with Immediate
17E80:	29-7C       	andi r18, 0xc9        ; Logical AND with Immediate
17E82:	E3-7C       	andi r30, 0xc3        ; Logical AND with Immediate
17E84:	89-7D       	andi r24, 0xd9        ; Logical AND with Immediate
17E86:	1D-7E       	andi r17, 0xed        ; Logical AND with Immediate
17E88:	9C-7E       	andi r25, 0xec        ; Logical AND with Immediate
17E8A:	09-7F       	andi r16, 0xf9        ; Logical AND with Immediate
17E8C:	61-7F       	andi r22, 0xf1        ; Logical AND with Immediate
17E8E:	A6-7F       	andi r26, 0xf6        ; Logical AND with Immediate
17E90:	D8-7F       	andi r29, 0xf8        ; Logical AND with Immediate
17E92:	F5-7F       	andi r31, 0xf5        ; Logical AND with Immediate
17E94:	FF-7F       	andi r31, 0xff        ; Logical AND with Immediate
17E96:	F5-7F       	andi r31, 0xf5        ; Logical AND with Immediate
17E98:	D8-7F       	andi r29, 0xf8        ; Logical AND with Immediate
17E9A:	A6-7F       	andi r26, 0xf6        ; Logical AND with Immediate
17E9C:	61-7F       	andi r22, 0xf1        ; Logical AND with Immediate
17E9E:	09-7F       	andi r16, 0xf9        ; Logical AND with Immediate
17EA0:	9C-7E       	andi r25, 0xec        ; Logical AND with Immediate
17EA2:	1D-7E       	andi r17, 0xed        ; Logical AND with Immediate
17EA4:	89-7D       	andi r24, 0xd9        ; Logical AND with Immediate
17EA6:	E3-7C       	andi r30, 0xc3        ; Logical AND with Immediate
17EA8:	29-7C       	andi r18, 0xc9        ; Logical AND with Immediate
17EAA:	5C-7B       	andi r21, 0xbc        ; Logical AND with Immediate
17EAC:	7C-7A       	andi r23, 0xac        ; Logical AND with Immediate
17EAE:	89-79       	andi r24, 0x99        ; Logical AND with Immediate
17EB0:	84-78       	andi r24, 0x84        ; Logical AND with Immediate
17EB2:	6B-77       	andi r22, 0x7b        ; Logical AND with Immediate
17EB4:	41-76       	andi r20, 0x61        ; Logical AND with Immediate
17EB6:	04-75       	andi r16, 0x54        ; Logical AND with Immediate
17EB8:	B5-73       	andi r27, 0x35        ; Logical AND with Immediate
17EBA:	54-72       	andi r21, 0x24        ; Logical AND with Immediate
17EBC:	E2-70       	andi r30, 0x02        ; Logical AND with Immediate
17EBE:	5E-6F       	ori r21, 0xfe         ; Logical OR with Immediate
17EC0:	C9-6D       	ori r28, 0xd9         ; Logical OR with Immediate
17EC2:	23-6C       	ori r18, 0xc3         ; Logical OR with Immediate
17EC4:	6D-6A       	ori r22, 0xad         ; Logical OR with Immediate
17EC6:	A6-68       	ori r26, 0x86         ; Logical OR with Immediate
17EC8:	CF-66       	ori r28, 0x6f         ; Logical OR with Immediate
17ECA:	E8-64       	ori r30, 0x48         ; Logical OR with Immediate
17ECC:	F1-62       	ori r31, 0x21         ; Logical OR with Immediate
17ECE:	EB-60       	ori r30, 0x0b         ; Logical OR with Immediate
17ED0:	D7-5E       	subi r29, 0xe7        ; Subtract Immediate
17ED2:	B3-5C       	subi r27, 0xc3        ; Subtract Immediate
17ED4:	82-5A       	subi r24, 0xa2        ; Subtract Immediate
17ED6:	42-58       	subi r20, 0x82        ; Subtract Immediate
17ED8:	F5-55       	subi r31, 0x55        ; Subtract Immediate
17EDA:	9B-53       	subi r25, 0x3b        ; Subtract Immediate
17EDC:	33-51       	subi r19, 0x13        ; Subtract Immediate
17EDE:	BF-4E       	sbci r27, 0xef        ; Subtract Immediate with Carry SBI
17EE0:	3F-4C       	sbci r19, 0xcf        ; Subtract Immediate with Carry SBI
17EE2:	B4-49       	sbci r27, 0x94        ; Subtract Immediate with Carry SBI
17EE4:	1C-47       	sbci r17, 0x7c        ; Subtract Immediate with Carry SBI
17EE6:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
17EE8:	CE-41       	sbci r28, 0x1e        ; Subtract Immediate with Carry SBI
17EEA:	17-3F       	cpi r17, 0xf7         ; Compare with Immediate
17EEC:	56-3C       	cpi r21, 0xc6         ; Compare with Immediate
17EEE:	8C-39       	cpi r24, 0x9c         ; Compare with Immediate
17EF0:	BA-36       	cpi r27, 0x6a         ; Compare with Immediate
17EF2:	DF-33       	cpi r29, 0x3f         ; Compare with Immediate
17EF4:	FB-30       	cpi r31, 0x0b         ; Compare with Immediate
17EF6:	11-2E       	mov r1, r17           ; Copy Register
17EF8:	1F-2B       	or r17, r31           ; Logical OR
17EFA:	26-28       	or r2, r6             ; Logical OR
17EFC:	28-25       	clr r296              ; Clear Register
17EFE:	23-22       	and r2, r19           ; Logical AND
17F00:	1A-1F       	adc r17, r26          ; Add with Carry
17F02:	0B-1C       	adc r0, r11           ; Add with Carry
17F04:	F9-18       	sub r15, r9           ; Subtract Without Carry
17F06:	E2-15       	cp r30, r2            ; Compare
17F08:	C8-12       	cpse r12, r24         ; Compare Skip if Equal
17F0A:	AB-0F       	add r26, r27          ; Add without Carry
17F0C:	8C-0C       	add r8, r12           ; Add without Carry
17F0E:	6A-09       	sbc r22, r10          ; Subtract with Carry
17F10:	48-06       	cpc r4, r24           ; Compare with Carry
17F12:	24-03       	mulsu r18, r20        ; Multiply Signed with Unsigned
17F14:	00-00       	nop                   ; No Operation
17F16:	DC-FC       	.data 0xfcdc          ; Binary data
17F18:	B8-F9       	.data 0xf9b8          ; Binary data
17F1A:	96-F6       	brbc 6, .-92          ; Branch if Bit in SREG is Cleared
17F1C:	74-F3       	brbs 4, .-36          ; Branch if Bit in SREG is Set
17F1E:	55-F0       	brbs 5, .+20          ; Branch if Bit in SREG is Set
17F20:	38-ED       	ldi r19, 0xd8         ; Load Immediate
17F22:	1E-EA       	ldi r17, 0xae         ; Load Immediate
17F24:	07-E7       	ldi r16, 0x77         ; Load Immediate
17F26:	F5-E3       	ldi r31, 0x35         ; Load Immediate
17F28:	E6-E0       	ldi r30, 0x06         ; Load Immediate
17F2A:	DD-DD       	rcall .+7098          ; Relative Call to Subroutine
17F2C:	D8-DA       	rcall .+5552          ; Relative Call to Subroutine
17F2E:	DA-D7       	rcall .+4020          ; Relative Call to Subroutine
17F30:	E1-D4       	rcall .+2498          ; Relative Call to Subroutine
17F32:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
17F34:	05-CF       	rjmp .-502            ; Relative Jump
17F36:	21-CC       	rjmp .-1982           ; Relative Jump
17F38:	46-C9       	rjmp .-3444           ; Relative Jump
17F3A:	74-C6       	rjmp .+3304           ; Relative Jump
17F3C:	AA-C3       	rjmp .+1876           ; Relative Jump
17F3E:	E9-C0       	rjmp .+466            ; Relative Jump
17F40:	32-BE       	out 0x32, r3          ; Store Register to I/O Location
17F42:	86-BB       	out 0x16, r24         ; Store Register to I/O Location
17F44:	E4-B8       	out 0x04, r14         ; Store Register to I/O Location
17F46:	4C-B6       	in r4, 0x3c           ; Load an I/O Location to Register
17F48:	C1-B3       	in r28, 0x11          ; Load an I/O Location to Register
17F4A:	41-B1       	in r20, 0x01          ; Load an I/O Location to Register
17F4C:	CD-AE       	std Y+61, r12         ; Store Indirect From Register to Data Space
17F4E:	65-AC       	std Y+61, r6          ; Store Indirect From Register to Data Space
17F50:	0B-AA       	std Y+51, r0          ; Store Indirect From Register to Data Space
17F52:	BE-A7       	std Y+46, r27         ; Store Indirect From Register to Data Space
17F54:	7E-A5       	std Y+46, r23         ; Store Indirect From Register to Data Space
17F56:	4D-A3       	std Y+37, r20         ; Store Indirect From Register to Data Space
17F58:	29-A1       	ldd r18, Y+33         ; Load Indirect from Data Space to Register
17F5A:	15-9F       	mul r17, r21          ; Multiply Unsigned
17F5C:	0F-9D       	mul r16, r15          ; Multiply Unsigned
17F5E:	18-9B       	sbis 0x03, 0          ; Skip if Bit in I/O Register is Set
17F60:	31-99       	sbic 0x06, 1          ; Skip if Bit in I/O Register is Cleared
17F62:	5A-97       	sbiw r26, 0x1a        ; Subtract Immediate from Word
17F64:	93-95       	inc r25               ; Increment
17F66:	DD-93       	st X+, r29            ; Store Indirect From Register to Data Space
17F68:	37-92       	lat Z, r3             ; Load and Toggle
17F6A:	A2-90       	ld r10, -Z            ; Load Indirect from Data Space to Register
17F6C:	1E-8F       	std Y+30, r17         ; Store Indirect From Register to Data Space
17F6E:	AC-8D       	std Y+28, r26         ; Store Indirect From Register to Data Space
17F70:	4B-8C       	std Y+27, r4          ; Store Indirect From Register to Data Space
17F72:	FC-8A       	std Y+20, r15         ; Store Indirect From Register to Data Space
17F74:	BF-89       	std Y+23, r27         ; Store Indirect From Register to Data Space
17F76:	95-88       	std Y+21, r9          ; Store Indirect From Register to Data Space
17F78:	7C-87       	std Y+12, r23         ; Store Indirect From Register to Data Space
17F7A:	77-86       	std Y+15, r7          ; Store Indirect From Register to Data Space
17F7C:	84-85       	std Y+12, r24         ; Store Indirect From Register to Data Space
17F7E:	A4-84       	std Y+12, r10         ; Store Indirect From Register to Data Space
17F80:	D7-83       	std Y+7, r29          ; Store Indirect From Register to Data Space
17F82:	1D-83       	std Y+5, r17          ; Store Indirect From Register to Data Space
17F84:	77-82       	std Y+7, r7           ; Store Indirect From Register to Data Space
17F86:	E3-81       	ldd r30, Y+3          ; Load Indirect from Data Space to Register
17F88:	64-81       	ldd r22, Y+4          ; Load Indirect from Data Space to Register
17F8A:	F7-80       	ldd r15, Y+7          ; Load Indirect from Data Space to Register
17F8C:	9F-80       	ldd r9, Y+7           ; Load Indirect from Data Space to Register
17F8E:	5A-80       	ldd r5, Y+2           ; Load Indirect from Data Space to Register
17F90:	28-80       	ld r2, Y              ; Load Indirect from Data Space to Register
17F92:	0B-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
17F94:	01-80       	ldd r0, Y+1           ; Load Indirect from Data Space to Register
17F96:	0B-80       	ldd r0, Y+3           ; Load Indirect from Data Space to Register
17F98:	28-80       	ld r2, Y              ; Load Indirect from Data Space to Register
17F9A:	5A-80       	ldd r5, Y+2           ; Load Indirect from Data Space to Register
17F9C:	9F-80       	ldd r9, Y+7           ; Load Indirect from Data Space to Register
17F9E:	F7-80       	ldd r15, Y+7          ; Load Indirect from Data Space to Register
17FA0:	64-81       	ldd r22, Y+4          ; Load Indirect from Data Space to Register
17FA2:	E3-81       	ldd r30, Y+3          ; Load Indirect from Data Space to Register
17FA4:	77-82       	std Y+7, r7           ; Store Indirect From Register to Data Space
17FA6:	1D-83       	std Y+5, r17          ; Store Indirect From Register to Data Space
17FA8:	D7-83       	std Y+7, r29          ; Store Indirect From Register to Data Space
17FAA:	A4-84       	std Y+12, r10         ; Store Indirect From Register to Data Space
17FAC:	84-85       	std Y+12, r24         ; Store Indirect From Register to Data Space
17FAE:	77-86       	std Y+15, r7          ; Store Indirect From Register to Data Space
17FB0:	7C-87       	std Y+12, r23         ; Store Indirect From Register to Data Space
17FB2:	95-88       	std Y+21, r9          ; Store Indirect From Register to Data Space
17FB4:	BF-89       	std Y+23, r27         ; Store Indirect From Register to Data Space
17FB6:	FC-8A       	std Y+20, r15         ; Store Indirect From Register to Data Space
17FB8:	4B-8C       	std Y+27, r4          ; Store Indirect From Register to Data Space
17FBA:	AC-8D       	std Y+28, r26         ; Store Indirect From Register to Data Space
17FBC:	1E-8F       	std Y+30, r17         ; Store Indirect From Register to Data Space
17FBE:	A2-90       	ld r10, -Z            ; Load Indirect from Data Space to Register
17FC0:	37-92       	lat Z, r3             ; Load and Toggle
17FC2:	DD-93       	st X+, r29            ; Store Indirect From Register to Data Space
17FC4:	93-95       	inc r25               ; Increment
17FC6:	5A-97       	sbiw r26, 0x1a        ; Subtract Immediate from Word
17FC8:	31-99       	sbic 0x06, 1          ; Skip if Bit in I/O Register is Cleared
17FCA:	18-9B       	sbis 0x03, 0          ; Skip if Bit in I/O Register is Set
17FCC:	0F-9D       	mul r16, r15          ; Multiply Unsigned
17FCE:	15-9F       	mul r17, r21          ; Multiply Unsigned
17FD0:	29-A1       	ldd r18, Y+33         ; Load Indirect from Data Space to Register
17FD2:	4D-A3       	std Y+37, r20         ; Store Indirect From Register to Data Space
17FD4:	7E-A5       	std Y+46, r23         ; Store Indirect From Register to Data Space
17FD6:	BE-A7       	std Y+46, r27         ; Store Indirect From Register to Data Space
17FD8:	0B-AA       	std Y+51, r0          ; Store Indirect From Register to Data Space
17FDA:	65-AC       	std Y+61, r6          ; Store Indirect From Register to Data Space
17FDC:	CD-AE       	std Y+61, r12         ; Store Indirect From Register to Data Space
17FDE:	41-B1       	in r20, 0x01          ; Load an I/O Location to Register
17FE0:	C1-B3       	in r28, 0x11          ; Load an I/O Location to Register
17FE2:	4C-B6       	in r4, 0x3c           ; Load an I/O Location to Register
17FE4:	E4-B8       	out 0x04, r14         ; Store Register to I/O Location
17FE6:	86-BB       	out 0x16, r24         ; Store Register to I/O Location
17FE8:	32-BE       	out 0x32, r3          ; Store Register to I/O Location
17FEA:	E9-C0       	rjmp .+466            ; Relative Jump
17FEC:	AA-C3       	rjmp .+1876           ; Relative Jump
17FEE:	74-C6       	rjmp .+3304           ; Relative Jump
17FF0:	46-C9       	rjmp .-3444           ; Relative Jump
17FF2:	21-CC       	rjmp .-1982           ; Relative Jump
17FF4:	05-CF       	rjmp .-502            ; Relative Jump
17FF6:	EF-D1       	rcall .+990           ; Relative Call to Subroutine
17FF8:	E1-D4       	rcall .+2498          ; Relative Call to Subroutine
17FFA:	DA-D7       	rcall .+4020          ; Relative Call to Subroutine
17FFC:	D8-DA       	rcall .+5552          ; Relative Call to Subroutine
17FFE:	DD-DD       	rcall .+7098          ; Relative Call to Subroutine
18000:	E6-E0       	ldi r30, 0x06         ; Load Immediate
18002:	F5-E3       	ldi r31, 0x35         ; Load Immediate
18004:	07-E7       	ldi r16, 0x77         ; Load Immediate
18006:	1E-EA       	ldi r17, 0xae         ; Load Immediate
18008:	38-ED       	ldi r19, 0xd8         ; Load Immediate
1800A:	55-F0       	brbs 5, .+20          ; Branch if Bit in SREG is Set
1800C:	74-F3       	brbs 4, .-36          ; Branch if Bit in SREG is Set
1800E:	96-F6       	brbc 6, .-92          ; Branch if Bit in SREG is Cleared
18010:	B8-F9       	.data 0xf9b8          ; Binary data
18012:	DC-FC       	.data 0xfcdc          ; Binary data
18014:	00-00       	nop                   ; No Operation
18016:	00-00       	nop                   ; No Operation
18018:	00-00       	nop                   ; No Operation
1801A:	00-00       	nop                   ; No Operation
1801C:	00-00       	nop                   ; No Operation
1801E:	00-00       	nop                   ; No Operation
18020:	DD-DF       	rcall .+8122          ; Relative Call to Subroutine
18022:	00-00       	nop                   ; No Operation
18024:	00-00       	nop                   ; No Operation
18026:	00-00       	nop                   ; No Operation
18028:	00-00       	nop                   ; No Operation
1802A:	00-00       	nop                   ; No Operation
1802C:	00-00       	nop                   ; No Operation
1802E:	00-00       	nop                   ; No Operation
18030:	E9-E2       	ldi r30, 0x29         ; Load Immediate
18032:	00-00       	nop                   ; No Operation
18034:	00-00       	nop                   ; No Operation
18036:	00-00       	nop                   ; No Operation
18038:	6F-76       	andi r22, 0x6f        ; Logical AND with Immediate
1803A:	65-72       	andi r22, 0x25        ; Logical AND with Immediate
1803C:	20-63       	ori r18, 0x30         ; Logical OR with Immediate
1803E:	6F-75       	andi r22, 0x5f        ; Logical AND with Immediate
18040:	6E-74       	andi r22, 0x4e        ; Logical AND with Immediate
18042:	21-00       	.data 0x0021          ; Binary data
18044:	FF-FF       	.data 0xffff          ; Binary data
18046:	FF-FF       	.data 0xffff          ; Binary data
18048:	00-00       	nop                   ; No Operation
1804A:	00-00       	nop                   ; No Operation
1804C:	00-00       	nop                   ; No Operation
1804E:	00-00       	nop                   ; No Operation
18050:	45-E9       	ldi r20, 0x95         ; Load Immediate
18052:	00-00       	nop                   ; No Operation
18054:	FD-E7       	ldi r31, 0x7d         ; Load Immediate
18056:	00-00       	nop                   ; No Operation
18058:	11-E9       	ldi r17, 0x91         ; Load Immediate
1805A:	00-00       	nop                   ; No Operation
1805C:	00-00       	nop                   ; No Operation
1805E:	00-00       	nop                   ; No Operation
18060:	42-4D       	sbci r20, 0xd2        ; Subtract Immediate with Carry SBI
18062:	49-31       	cpi r20, 0x19         ; Compare with Immediate
18064:	36-30       	cpi r19, 0x06         ; Compare with Immediate
18066:	47-65       	ori r20, 0x57         ; Logical OR with Immediate
18068:	6E-43       	sbci r22, 0x3e        ; Subtract Immediate with Carry SBI
1806A:	6C-61       	ori r22, 0x1c         ; Logical OR with Immediate
1806C:	73-73       	andi r23, 0x33        ; Logical AND with Immediate
1806E:	3A-3A       	cpi r19, 0xaa         ; Compare with Immediate
18070:	61-74       	andi r22, 0x41        ; Logical AND with Immediate
18072:	74-61       	ori r23, 0x14         ; Logical OR with Immediate
18074:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
18076:	49-6E       	ori r20, 0xe9         ; Logical OR with Immediate
18078:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
1807A:	72-72       	andi r23, 0x22        ; Logical AND with Immediate
1807C:	75-70       	andi r23, 0x05        ; Logical AND with Immediate
1807E:	74-3A       	cpi r23, 0xa4         ; Compare with Immediate
18080:	20-4E       	sbci r18, 0xe0        ; Subtract Immediate with Carry SBI
18082:	6F-20       	and r6, r15           ; Logical AND
18084:	76-61       	ori r23, 0x16         ; Logical OR with Immediate
18086:	6C-69       	ori r22, 0x9c         ; Logical OR with Immediate
18088:	64-20       	and r6, r4            ; Logical AND
1808A:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
1808C:	74-65       	ori r23, 0x54         ; Logical OR with Immediate
1808E:	72-72       	andi r23, 0x22        ; Logical AND with Immediate
18090:	75-70       	andi r23, 0x05        ; Logical AND with Immediate
18092:	74-69       	ori r23, 0x94         ; Logical OR with Immediate
18094:	6F-6E       	ori r22, 0xef         ; Logical OR with Immediate
18096:	20-70       	andi r18, 0x00        ; Logical AND with Immediate
18098:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
1809A:	2E-00       	.data 0x002e          ; Binary data
1809C:	42-4D       	sbci r20, 0xd2        ; Subtract Immediate with Carry SBI
1809E:	49-31       	cpi r20, 0x19         ; Compare with Immediate
180A0:	36-30       	cpi r19, 0x06         ; Compare with Immediate
180A2:	47-65       	ori r20, 0x57         ; Logical OR with Immediate
180A4:	6E-43       	sbci r22, 0x3e        ; Subtract Immediate with Carry SBI
180A6:	6C-61       	ori r22, 0x1c         ; Logical OR with Immediate
180A8:	73-73       	andi r23, 0x33        ; Logical AND with Immediate
180AA:	3A-3A       	cpi r19, 0xaa         ; Compare with Immediate
180AC:	69-32       	cpi r22, 0x29         ; Compare with Immediate
180AE:	63-5F       	subi r22, 0xf3        ; Subtract Immediate
180B0:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
180B2:	69-74       	andi r22, 0x49        ; Logical AND with Immediate
180B4:	28-29       	or r18, r8            ; Logical OR
180B6:	3A-20       	and r3, r10           ; Logical AND
180B8:	49-32       	cpi r20, 0x29         ; Compare with Immediate
180BA:	43-20       	and r4, r3            ; Logical AND
180BC:	66-61       	ori r22, 0x16         ; Logical OR with Immediate
180BE:	69-6C       	ori r22, 0xc9         ; Logical OR with Immediate
180C0:	65-64       	ori r22, 0x45         ; Logical OR with Immediate
180C2:	2E-00       	.data 0x002e          ; Binary data
180C4:	42-4D       	sbci r20, 0xd2        ; Subtract Immediate with Carry SBI
180C6:	49-31       	cpi r20, 0x19         ; Compare with Immediate
180C8:	36-30       	cpi r19, 0x06         ; Compare with Immediate
180CA:	47-65       	ori r20, 0x57         ; Logical OR with Immediate
180CC:	6E-43       	sbci r22, 0x3e        ; Subtract Immediate with Carry SBI
180CE:	6C-61       	ori r22, 0x1c         ; Logical OR with Immediate
180D0:	73-73       	andi r23, 0x33        ; Logical AND with Immediate
180D2:	3A-3A       	cpi r19, 0xaa         ; Compare with Immediate
180D4:	73-70       	andi r23, 0x03        ; Logical AND with Immediate
180D6:	69-5F       	subi r22, 0xf9        ; Subtract Immediate
180D8:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
180DA:	69-74       	andi r22, 0x49        ; Logical AND with Immediate
180DC:	28-29       	or r18, r8            ; Logical OR
180DE:	3A-20       	and r3, r10           ; Logical AND
180E0:	57-41       	sbci r21, 0x17        ; Subtract Immediate with Carry SBI
180E2:	52-4E       	sbci r21, 0xe2        ; Subtract Immediate with Carry SBI
180E4:	49-4E       	sbci r20, 0xe9        ; Subtract Immediate with Carry SBI
180E6:	47-3A       	cpi r20, 0xa7         ; Compare with Immediate
180E8:	20-4E       	sbci r18, 0xe0        ; Subtract Immediate with Carry SBI
180EA:	6F-20       	and r6, r15           ; Logical AND
180EC:	63-68       	ori r22, 0x83         ; Logical OR with Immediate
180EE:	69-70       	andi r22, 0x09        ; Logical AND with Immediate
180F0:	20-73       	andi r18, 0x30        ; Logical AND with Immediate
180F2:	65-6C       	ori r22, 0xc5         ; Logical OR with Immediate
180F4:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
180F6:	74-20       	and r7, r4            ; Logical AND
180F8:	70-69       	ori r23, 0x90         ; Logical OR with Immediate
180FA:	6E-20       	and r6, r14           ; Logical AND
180FC:	73-70       	andi r23, 0x03        ; Logical AND with Immediate
180FE:	65-63       	ori r22, 0x35         ; Logical OR with Immediate
18100:	69-66       	ori r22, 0x69         ; Logical OR with Immediate
18102:	69-65       	ori r22, 0x59         ; Logical OR with Immediate
18104:	64-2E       	mov r6, r20           ; Copy Register
18106:	00-FF       	sbrs r16, 0           ; Skip if Bit in Register is Set
18108:	00-00       	nop                   ; No Operation
1810A:	00-00       	nop                   ; No Operation
1810C:	00-00       	nop                   ; No Operation
1810E:	00-00       	nop                   ; No Operation
18110:	45-E9       	ldi r20, 0x95         ; Load Immediate
18112:	00-00       	nop                   ; No Operation
18114:	3D-E9       	ldi r19, 0x9d         ; Load Immediate
18116:	00-00       	nop                   ; No Operation
18118:	41-E9       	ldi r20, 0x91         ; Load Immediate
1811A:	00-00       	nop                   ; No Operation
1811C:	00-00       	nop                   ; No Operation
1811E:	00-00       	nop                   ; No Operation
18120:	00-00       	nop                   ; No Operation
18122:	00-00       	nop                   ; No Operation
18124:	00-00       	nop                   ; No Operation
18126:	00-00       	nop                   ; No Operation
18128:	89-FB       	.data 0xfb89          ; Binary data
1812A:	00-00       	nop                   ; No Operation
1812C:	3D-27       	clr r829              ; Clear Register
1812E:	01-00       	.data 0x0001          ; Binary data
18130:	3A-00       	.data 0x003a          ; Binary data
18132:	FF-FF       	.data 0xffff          ; Binary data
18134:	FF-FF       	.data 0xffff          ; Binary data
18136:	FF-FF       	.data 0xffff          ; Binary data
18138:	00-00       	nop                   ; No Operation
1813A:	00-00       	nop                   ; No Operation
1813C:	00-00       	nop                   ; No Operation
1813E:	00-00       	nop                   ; No Operation
18140:	BD-FF       	.data 0xffbd          ; Binary data
18142:	00-00       	nop                   ; No Operation
18144:	C1-00       	.data 0x00c1          ; Binary data
18146:	01-00       	.data 0x0001          ; Binary data
18148:	01-00       	.data 0x0001          ; Binary data
1814A:	01-00       	.data 0x0001          ; Binary data
1814C:	15-00       	.data 0x0015          ; Binary data
1814E:	01-00       	.data 0x0001          ; Binary data
18150:	41-00       	.data 0x0041          ; Binary data
18152:	01-00       	.data 0x0001          ; Binary data
18154:	FD-FF       	.data 0xfffd          ; Binary data
18156:	00-00       	nop                   ; No Operation
18158:	6F-F0       	brbs 7, .+26          ; Branch if Bit in SREG is Set
1815A:	7F-03       	fmul r23, r23         ; Fractional Multiply Unsigned
1815C:	03-70       	andi r16, 0x03        ; Logical AND with Immediate
1815E:	03-78       	andi r16, 0x83        ; Logical AND with Immediate
18160:	13-F0       	brbs 3, .+4           ; Branch if Bit in SREG is Set
18162:	80-0F       	add r24, r16          ; Add without Carry
18164:	FB-D0       	rcall .+502           ; Relative Call to Subroutine
18166:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
18168:	40-08       	sbc r4, r0            ; Subtract with Carry
1816A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1816C:	40-A0       	ldd r4, Y+32          ; Load Indirect from Data Space to Register
1816E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18170:	44-08       	sbc r4, r4            ; Subtract with Carry
18172:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18174:	44-A0       	ldd r4, Y+36          ; Load Indirect from Data Space to Register
18176:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18178:	00-18       	sub r0, r0            ; Subtract Without Carry
1817A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1817C:	00-C0       	rjmp .+0              ; Relative Jump
1817E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18180:	30-00       	.data 0x0030          ; Binary data
18182:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18184:	30-90-04-40 	lds r3, 0x4004        ; Load Direct from Data Space (32-bit)
18188:	34-00       	.data 0x0034          ; Binary data
1818A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1818C:	34-90       	lpm r3, Z             ; Load Program Memory
1818E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18190:	1C-18       	sub r1, r12           ; Subtract Without Carry
18192:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18194:	1C-C0       	rjmp .+56             ; Relative Jump
18196:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18198:	10-18       	sub r1, r0            ; Subtract Without Carry
1819A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1819C:	10-C0       	rjmp .+32             ; Relative Jump
1819E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181A0:	08-18       	sub r0, r8            ; Subtract Without Carry
181A2:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181A4:	08-C0       	rjmp .+16             ; Relative Jump
181A6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181A8:	0C-18       	sub r0, r12           ; Subtract Without Carry
181AA:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181AC:	0C-C0       	rjmp .+24             ; Relative Jump
181AE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181B0:	0C-10       	cpse r0, r12          ; Compare Skip if Equal
181B2:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181B4:	0C-B0       	in r0, 0x0c           ; Load an I/O Location to Register
181B6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181B8:	10-10       	cpse r1, r0           ; Compare Skip if Equal
181BA:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181BC:	10-B0       	in r1, 0x00           ; Load an I/O Location to Register
181BE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181C0:	18-10       	cpse r1, r8           ; Compare Skip if Equal
181C2:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181C4:	18-B0       	in r1, 0x08           ; Load an I/O Location to Register
181C6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181C8:	1C-10       	cpse r1, r12          ; Compare Skip if Equal
181CA:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181CC:	1C-B0       	in r1, 0x0c           ; Load an I/O Location to Register
181CE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181D0:	14-10       	cpse r1, r4           ; Compare Skip if Equal
181D2:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181D4:	14-B0       	in r1, 0x04           ; Load an I/O Location to Register
181D6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181D8:	04-18       	sub r0, r4            ; Subtract Without Carry
181DA:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181DC:	04-C0       	rjmp .+8              ; Relative Jump
181DE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181E0:	00-10       	cpse r0, r0           ; Compare Skip if Equal
181E2:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181E4:	00-B0       	in r0, 0x00           ; Load an I/O Location to Register
181E6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181E8:	00-08       	sbc r0, r0            ; Subtract with Carry
181EA:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181EC:	00-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
181EE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181F0:	04-08       	sbc r0, r4            ; Subtract with Carry
181F2:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181F4:	04-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
181F6:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
181F8:	0C-08       	sbc r0, r12           ; Subtract with Carry
181FA:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
181FC:	0C-A0       	ldd r0, Y+36          ; Load Indirect from Data Space to Register
181FE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18200:	08-08       	sbc r0, r8            ; Subtract with Carry
18202:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18204:	08-A0       	ldd r0, Y+32          ; Load Indirect from Data Space to Register
18206:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18208:	14-18       	sub r1, r4            ; Subtract Without Carry
1820A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1820C:	14-C0       	rjmp .+40             ; Relative Jump
1820E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18210:	18-18       	sub r1, r8            ; Subtract Without Carry
18212:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18214:	18-C0       	rjmp .+48             ; Relative Jump
18216:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18218:	04-10       	cpse r0, r4           ; Compare Skip if Equal
1821A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1821C:	04-B0       	in r0, 0x04           ; Load an I/O Location to Register
1821E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18220:	08-10       	cpse r0, r8           ; Compare Skip if Equal
18222:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18224:	08-B0       	in r0, 0x08           ; Load an I/O Location to Register
18226:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18228:	14-00       	.data 0x0014          ; Binary data
1822A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1822C:	14-90       	lpm r1, Z             ; Load Program Memory
1822E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18230:	4C-08       	sbc r4, r12           ; Subtract with Carry
18232:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18234:	4C-A0       	ldd r4, Y+36          ; Load Indirect from Data Space to Register
18236:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18238:	04-20       	and r0, r4            ; Logical AND
1823A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1823C:	04-D0       	rcall .+8             ; Relative Call to Subroutine
1823E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18240:	24-10       	cpse r2, r4           ; Compare Skip if Equal
18242:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18244:	24-B0       	in r2, 0x04           ; Load an I/O Location to Register
18246:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18248:	20-10       	cpse r2, r0           ; Compare Skip if Equal
1824A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1824C:	20-B0       	in r2, 0x00           ; Load an I/O Location to Register
1824E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18250:	28-10       	cpse r2, r8           ; Compare Skip if Equal
18252:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18254:	28-B0       	in r2, 0x08           ; Load an I/O Location to Register
18256:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18258:	2C-10       	cpse r2, r12          ; Compare Skip if Equal
1825A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1825C:	2C-B0       	in r2, 0x0c           ; Load an I/O Location to Register
1825E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18260:	00-20       	and r0, r0            ; Logical AND
18262:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18264:	00-D0       	rcall .+0             ; Relative Call to Subroutine
18266:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18268:	48-08       	sbc r4, r8            ; Subtract with Carry
1826A:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
1826C:	48-A0       	ldd r4, Y+32          ; Load Indirect from Data Space to Register
1826E:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18270:	10-00       	.data 0x0010          ; Binary data
18272:	FE-43       	sbci r31, 0x3e        ; Subtract Immediate with Carry SBI
18274:	10-90-04-40 	lds r1, 0x4004        ; Load Direct from Data Space (32-bit)
18278:	00-00       	nop                   ; No Operation
1827A:	00-00       	nop                   ; No Operation
1827C:	00-00       	nop                   ; No Operation
1827E:	00-00       	nop                   ; No Operation
18280:	CD-26       	clr r717              ; Clear Register
18282:	01-00       	.data 0x0001          ; Binary data
18284:	E5-26       	clr r741              ; Clear Register
18286:	01-00       	.data 0x0001          ; Binary data
18288:	9D-26       	clr r669              ; Clear Register
1828A:	01-00       	.data 0x0001          ; Binary data
1828C:	AD-26       	clr r685              ; Clear Register
1828E:	01-00       	.data 0x0001          ; Binary data
18290:	A5-26       	clr r677              ; Clear Register
18292:	01-00       	.data 0x0001          ; Binary data
18294:	B5-26       	clr r693              ; Clear Register
18296:	01-00       	.data 0x0001          ; Binary data
18298:	19-26       	clr r537              ; Clear Register
1829A:	01-00       	.data 0x0001          ; Binary data
1829C:	31-26       	clr r561              ; Clear Register
1829E:	01-00       	.data 0x0001          ; Binary data
182A0:	51-26       	clr r593              ; Clear Register
182A2:	01-00       	.data 0x0001          ; Binary data
182A4:	59-26       	clr r601              ; Clear Register
182A6:	01-00       	.data 0x0001          ; Binary data
182A8:	65-26       	clr r613              ; Clear Register
182AA:	01-00       	.data 0x0001          ; Binary data
182AC:	71-26       	clr r625              ; Clear Register
182AE:	01-00       	.data 0x0001          ; Binary data
182B0:	7D-26       	clr r637              ; Clear Register
182B2:	01-00       	.data 0x0001          ; Binary data
182B4:	8D-26       	clr r653              ; Clear Register
182B6:	01-00       	.data 0x0001          ; Binary data
182B8:	BD-26       	clr r701              ; Clear Register
182BA:	01-00       	.data 0x0001          ; Binary data
182BC:	C5-26       	clr r709              ; Clear Register
182BE:	01-00       	.data 0x0001          ; Binary data
182C0:	F5-24       	clr r245              ; Clear Register
182C2:	01-00       	.data 0x0001          ; Binary data
182C4:	01-25       	clr r257              ; Clear Register
182C6:	01-00       	.data 0x0001          ; Binary data
182C8:	0D-25       	clr r269              ; Clear Register
182CA:	01-00       	.data 0x0001          ; Binary data
182CC:	19-25       	clr r281              ; Clear Register
182CE:	01-00       	.data 0x0001          ; Binary data
182D0:	F5-26       	clr r757              ; Clear Register
182D2:	01-00       	.data 0x0001          ; Binary data
182D4:	D9-26       	clr r729              ; Clear Register
182D6:	01-00       	.data 0x0001          ; Binary data
182D8:	0D-0A       	sbc r0, r29           ; Subtract with Carry
182DA:	00-00       	nop                   ; No Operation
182DC:	6E-61       	ori r22, 0x1e         ; Logical OR with Immediate
182DE:	6E-00       	.data 0x006e          ; Binary data
182E0:	69-6E       	ori r22, 0xe9         ; Logical OR with Immediate
182E2:	66-00       	.data 0x0066          ; Binary data
182E4:	6F-76       	andi r22, 0x6f        ; Logical AND with Immediate
182E6:	66-00       	.data 0x0066          ; Binary data
182E8:	00-00       	nop                   ; No Operation
182EA:	00-00       	nop                   ; No Operation
182EC:	00-00       	nop                   ; No Operation
182EE:	00-00       	nop                   ; No Operation
182F0:	19-2A       	or r1, r25            ; Logical OR
182F2:	01-00       	.data 0x0001          ; Binary data
182F4:	25-2A       	or r2, r21            ; Logical OR
182F6:	01-00       	.data 0x0001          ; Binary data
182F8:	F1-29       	or r31, r1            ; Logical OR
182FA:	01-00       	.data 0x0001          ; Binary data
182FC:	F9-29       	or r31, r9            ; Logical OR
182FE:	01-00       	.data 0x0001          ; Binary data
18300:	01-2A       	or r0, r17            ; Logical OR
18302:	01-00       	.data 0x0001          ; Binary data
18304:	09-2A       	or r0, r25            ; Logical OR
18306:	01-00       	.data 0x0001          ; Binary data
18308:	11-2A       	or r1, r17            ; Logical OR
1830A:	01-00       	.data 0x0001          ; Binary data
1830C:	00-00       	nop                   ; No Operation
1830E:	00-00       	nop                   ; No Operation
18310:	00-15       	cp r16, r0            ; Compare
18312:	19-15       	cp r17, r9            ; Compare
18314:	00-01       	movw r0, r0           ; Copy Register Word
18316:	00-00       	nop                   ; No Operation
18318:	F8-93       	.data 0x93f8          ; Binary data
1831A:	FF-1F       	adc r31, r31          ; Add with Carry
1831C:	12-00       	.data 0x0012          ; Binary data
1831E:	00-00       	nop                   ; No Operation
18320:	00-02       	muls r16, r16         ; Multiply Signed
18322:	00-00       	nop                   ; No Operation
18324:	24-94       	.data 0x9424          ; Binary data
18326:	FF-1F       	adc r31, r31          ; Add with Carry
18328:	43-00       	.data 0x0043          ; Binary data
1832A:	00-00       	nop                   ; No Operation
1832C:	00-03       	mulsu r16, r16        ; Multiply Signed with Unsigned
1832E:	00-00       	nop                   ; No Operation
18330:	80-94       	com r8                ; One's Complement
18332:	FF-1F       	adc r31, r31          ; Add with Carry
18334:	00-00       	nop                   ; No Operation
18336:	00-00       	nop                   ; No Operation
18338:	01-03       	mulsu r16, r17        ; Multiply Signed with Unsigned
1833A:	09-04       	cpc r0, r9            ; Compare with Carry
1833C:	0C-94-FF-1F 	jmp 0x3ffe            ; Jump
18340:	00-00       	nop                   ; No Operation
18342:	00-00       	nop                   ; No Operation
18344:	02-03       	mulsu r16, r18        ; Multiply Signed with Unsigned
18346:	09-04       	cpc r0, r9            ; Compare with Carry
18348:	68-94       	bset 6                ; Bit Set in SREG
1834A:	FF-1F       	adc r31, r31          ; Add with Carry
1834C:	00-00       	nop                   ; No Operation
1834E:	00-00       	nop                   ; No Operation
18350:	03-03       	mulsu r16, r19        ; Multiply Signed with Unsigned
18352:	09-04       	cpc r0, r9            ; Compare with Carry
18354:	84-94       	.data 0x9484          ; Binary data
18356:	FF-1F       	adc r31, r31          ; Add with Carry
18358:	00-00       	nop                   ; No Operation
1835A:	00-00       	nop                   ; No Operation
1835C:	00-00       	nop                   ; No Operation
1835E:	00-00       	nop                   ; No Operation
18360:	00-00       	nop                   ; No Operation
18362:	00-00       	nop                   ; No Operation
18364:	00-00       	nop                   ; No Operation
18366:	00-00       	nop                   ; No Operation
18368:	00-00       	nop                   ; No Operation
1836A:	00-00       	nop                   ; No Operation
1836C:	00-00       	nop                   ; No Operation
1836E:	00-00       	nop                   ; No Operation
18370:	D9-25       	clr r473              ; Clear Register
18372:	01-00       	.data 0x0001          ; Binary data
18374:	F1-25       	clr r497              ; Clear Register
18376:	01-00       	.data 0x0001          ; Binary data
18378:	A9-25       	clr r425              ; Clear Register
1837A:	01-00       	.data 0x0001          ; Binary data
1837C:	B9-25       	clr r441              ; Clear Register
1837E:	01-00       	.data 0x0001          ; Binary data
18380:	B1-25       	clr r433              ; Clear Register
18382:	01-00       	.data 0x0001          ; Binary data
18384:	C1-25       	clr r449              ; Clear Register
18386:	01-00       	.data 0x0001          ; Binary data
18388:	25-25       	clr r293              ; Clear Register
1838A:	01-00       	.data 0x0001          ; Binary data
1838C:	3D-25       	clr r317              ; Clear Register
1838E:	01-00       	.data 0x0001          ; Binary data
18390:	5D-25       	clr r349              ; Clear Register
18392:	01-00       	.data 0x0001          ; Binary data
18394:	65-25       	clr r357              ; Clear Register
18396:	01-00       	.data 0x0001          ; Binary data
18398:	71-25       	clr r369              ; Clear Register
1839A:	01-00       	.data 0x0001          ; Binary data
1839C:	7D-25       	clr r381              ; Clear Register
1839E:	01-00       	.data 0x0001          ; Binary data
183A0:	89-25       	clr r393              ; Clear Register
183A2:	01-00       	.data 0x0001          ; Binary data
183A4:	99-25       	clr r409              ; Clear Register
183A6:	01-00       	.data 0x0001          ; Binary data
183A8:	C9-25       	clr r457              ; Clear Register
183AA:	01-00       	.data 0x0001          ; Binary data
183AC:	D1-25       	clr r465              ; Clear Register
183AE:	01-00       	.data 0x0001          ; Binary data
183B0:	C5-24       	clr r197              ; Clear Register
183B2:	01-00       	.data 0x0001          ; Binary data
183B4:	D1-24       	clr r209              ; Clear Register
183B6:	01-00       	.data 0x0001          ; Binary data
183B8:	DD-24       	clr r221              ; Clear Register
183BA:	01-00       	.data 0x0001          ; Binary data
183BC:	E9-24       	clr r233              ; Clear Register
183BE:	01-00       	.data 0x0001          ; Binary data
183C0:	01-26       	clr r513              ; Clear Register
183C2:	01-00       	.data 0x0001          ; Binary data
183C4:	E5-25       	clr r485              ; Clear Register
183C6:	01-00       	.data 0x0001          ; Binary data
183C8:	00-00       	nop                   ; No Operation
183CA:	00-00       	nop                   ; No Operation
183CC:	00-00       	nop                   ; No Operation
183CE:	00-00       	nop                   ; No Operation
183D0:	45-3A       	cpi r20, 0xa5         ; Compare with Immediate
183D2:	01-00       	.data 0x0001          ; Binary data
183D4:	5D-3A       	cpi r21, 0xad         ; Compare with Immediate
183D6:	01-00       	.data 0x0001          ; Binary data
183D8:	15-3A       	cpi r17, 0xa5         ; Compare with Immediate
183DA:	01-00       	.data 0x0001          ; Binary data
183DC:	25-3A       	cpi r18, 0xa5         ; Compare with Immediate
183DE:	01-00       	.data 0x0001          ; Binary data
183E0:	1D-3A       	cpi r17, 0xad         ; Compare with Immediate
183E2:	01-00       	.data 0x0001          ; Binary data
183E4:	2D-3A       	cpi r18, 0xad         ; Compare with Immediate
183E6:	01-00       	.data 0x0001          ; Binary data
183E8:	91-39       	cpi r25, 0x91         ; Compare with Immediate
183EA:	01-00       	.data 0x0001          ; Binary data
183EC:	A9-39       	cpi r26, 0x99         ; Compare with Immediate
183EE:	01-00       	.data 0x0001          ; Binary data
183F0:	C9-39       	cpi r28, 0x99         ; Compare with Immediate
183F2:	01-00       	.data 0x0001          ; Binary data
183F4:	D1-39       	cpi r29, 0x91         ; Compare with Immediate
183F6:	01-00       	.data 0x0001          ; Binary data
183F8:	DD-39       	cpi r29, 0x9d         ; Compare with Immediate
183FA:	01-00       	.data 0x0001          ; Binary data
183FC:	E9-39       	cpi r30, 0x99         ; Compare with Immediate
183FE:	01-00       	.data 0x0001          ; Binary data
18400:	F5-39       	cpi r31, 0x95         ; Compare with Immediate
18402:	01-00       	.data 0x0001          ; Binary data
18404:	05-3A       	cpi r16, 0xa5         ; Compare with Immediate
18406:	01-00       	.data 0x0001          ; Binary data
18408:	35-3A       	cpi r19, 0xa5         ; Compare with Immediate
1840A:	01-00       	.data 0x0001          ; Binary data
1840C:	3D-3A       	cpi r19, 0xad         ; Compare with Immediate
1840E:	01-00       	.data 0x0001          ; Binary data
18410:	61-39       	cpi r22, 0x91         ; Compare with Immediate
18412:	01-00       	.data 0x0001          ; Binary data
18414:	6D-39       	cpi r22, 0x9d         ; Compare with Immediate
18416:	01-00       	.data 0x0001          ; Binary data
18418:	79-39       	cpi r23, 0x99         ; Compare with Immediate
1841A:	01-00       	.data 0x0001          ; Binary data
1841C:	85-39       	cpi r24, 0x95         ; Compare with Immediate
1841E:	01-00       	.data 0x0001          ; Binary data
18420:	6D-3A       	cpi r22, 0xad         ; Compare with Immediate
18422:	01-00       	.data 0x0001          ; Binary data
18424:	51-3A       	cpi r21, 0xa1         ; Compare with Immediate
18426:	01-00       	.data 0x0001          ; Binary data
18428:	66-6D       	ori r22, 0xd6         ; Logical OR with Immediate
1842A:	6F-64       	ori r22, 0x4f         ; Logical OR with Immediate
1842C:	00-FF       	sbrs r16, 0           ; Skip if Bit in Register is Set
1842E:	FF-FF       	.data 0xffff          ; Binary data
18430:	73-71       	andi r23, 0x13        ; Logical AND with Immediate
18432:	72-74       	andi r23, 0x42        ; Logical AND with Immediate
18434:	00-FF       	sbrs r16, 0           ; Skip if Bit in Register is Set
18436:	FF-FF       	.data 0xffff          ; Binary data
18438:	00-00       	nop                   ; No Operation
1843A:	00-00       	nop                   ; No Operation
1843C:	00-00       	nop                   ; No Operation
1843E:	00-00       	nop                   ; No Operation
18440:	00-00       	nop                   ; No Operation
18442:	00-00       	nop                   ; No Operation
18444:	00-00       	nop                   ; No Operation
18446:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
18448:	FB-21       	and r31, r11          ; Logical AND
1844A:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
1844C:	FB-21       	and r31, r11          ; Logical AND
1844E:	09-40       	sbci r16, 0x09        ; Subtract Immediate with Carry SBI
18450:	7C-D9       	rcall .+4856          ; Relative Call to Subroutine
18452:	12-40       	sbci r17, 0x02        ; Subtract Immediate with Carry SBI
18454:	FB-21       	and r31, r11          ; Logical AND
18456:	19-40       	sbci r17, 0x09        ; Subtract Immediate with Carry SBI
18458:	7A-6A       	ori r23, 0xaa         ; Logical OR with Immediate
1845A:	1F-40       	sbci r17, 0x0f        ; Subtract Immediate with Carry SBI
1845C:	7C-D9       	rcall .+4856          ; Relative Call to Subroutine
1845E:	22-40       	sbci r18, 0x02        ; Subtract Immediate with Carry SBI
18460:	BB-FD       	.data 0xfdbb          ; Binary data
18462:	25-40       	sbci r18, 0x05        ; Subtract Immediate with Carry SBI
18464:	FB-21       	and r31, r11          ; Logical AND
18466:	29-40       	sbci r18, 0x09        ; Subtract Immediate with Carry SBI
18468:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
1846A:	2C-40       	sbci r18, 0x0c        ; Subtract Immediate with Carry SBI
1846C:	7A-6A       	ori r23, 0xaa         ; Logical OR with Immediate
1846E:	2F-40       	sbci r18, 0x0f        ; Subtract Immediate with Carry SBI
18470:	5C-47       	sbci r21, 0x7c        ; Subtract Immediate with Carry SBI
18472:	31-40       	sbci r19, 0x01        ; Subtract Immediate with Carry SBI
18474:	7C-D9       	rcall .+4856          ; Relative Call to Subroutine
18476:	32-40       	sbci r19, 0x02        ; Subtract Immediate with Carry SBI
18478:	9C-6B       	ori r25, 0xbc         ; Logical OR with Immediate
1847A:	34-40       	sbci r19, 0x04        ; Subtract Immediate with Carry SBI
1847C:	BB-FD       	.data 0xfdbb          ; Binary data
1847E:	35-40       	sbci r19, 0x05        ; Subtract Immediate with Carry SBI
18480:	DB-8F       	std Y+27, r29         ; Store Indirect From Register to Data Space
18482:	37-40       	sbci r19, 0x07        ; Subtract Immediate with Carry SBI
18484:	FB-21       	and r31, r11          ; Logical AND
18486:	39-40       	sbci r19, 0x09        ; Subtract Immediate with Carry SBI
18488:	1B-B4       	in r1, 0x2b           ; Load an I/O Location to Register
1848A:	3A-40       	sbci r19, 0x0a        ; Subtract Immediate with Carry SBI
1848C:	3A-46       	sbci r19, 0x6a        ; Subtract Immediate with Carry SBI
1848E:	3C-40       	sbci r19, 0x0c        ; Subtract Immediate with Carry SBI
18490:	5A-D8       	rcall .+4276          ; Relative Call to Subroutine
18492:	3D-40       	sbci r19, 0x0d        ; Subtract Immediate with Carry SBI
18494:	7A-6A       	ori r23, 0xaa         ; Logical OR with Immediate
18496:	3F-40       	sbci r19, 0x0f        ; Subtract Immediate with Carry SBI
18498:	4C-7E       	andi r20, 0xec        ; Logical AND with Immediate
1849A:	40-40       	sbci r20, 0x00        ; Subtract Immediate with Carry SBI
1849C:	5C-47       	sbci r21, 0x7c        ; Subtract Immediate with Carry SBI
1849E:	41-40       	sbci r20, 0x01        ; Subtract Immediate with Carry SBI
184A0:	6C-10       	cpse r6, r12          ; Compare Skip if Equal
184A2:	42-40       	sbci r20, 0x02        ; Subtract Immediate with Carry SBI
184A4:	7C-D9       	rcall .+4856          ; Relative Call to Subroutine
184A6:	42-40       	sbci r20, 0x02        ; Subtract Immediate with Carry SBI
184A8:	8C-A2       	std Y+36, r8          ; Store Indirect From Register to Data Space
184AA:	43-40       	sbci r20, 0x03        ; Subtract Immediate with Carry SBI
184AC:	9C-6B       	ori r25, 0xbc         ; Logical OR with Immediate
184AE:	44-40       	sbci r20, 0x04        ; Subtract Immediate with Carry SBI
184B0:	AC-34       	cpi r26, 0x4c         ; Compare with Immediate
184B2:	45-40       	sbci r20, 0x05        ; Subtract Immediate with Carry SBI
184B4:	BB-FD       	.data 0xfdbb          ; Binary data
184B6:	45-40       	sbci r20, 0x05        ; Subtract Immediate with Carry SBI
184B8:	CB-C6       	rjmp .+3478           ; Relative Jump
184BA:	46-40       	sbci r20, 0x06        ; Subtract Immediate with Carry SBI
184BC:	DB-8F       	std Y+27, r29         ; Store Indirect From Register to Data Space
184BE:	47-40       	sbci r20, 0x07        ; Subtract Immediate with Carry SBI
184C0:	EB-58       	subi r30, 0x8b        ; Subtract Immediate
184C2:	48-40       	sbci r20, 0x08        ; Subtract Immediate with Carry SBI
184C4:	FB-21       	and r31, r11          ; Logical AND
184C6:	49-40       	sbci r20, 0x09        ; Subtract Immediate with Carry SBI
184C8:	83-F9       	bld r24, 3            ; Bit Load from the T Flag in SREG to a Bit in Register
184CA:	A2-00       	.data 0x00a2          ; Binary data
184CC:	44-4E       	sbci r20, 0xe4        ; Subtract Immediate with Carry SBI
184CE:	6E-00       	.data 0x006e          ; Binary data
184D0:	FC-29       	or r31, r12           ; Logical OR
184D2:	15-00       	.data 0x0015          ; Binary data
184D4:	D1-57       	subi r29, 0x71        ; Subtract Immediate
184D6:	27-00       	.data 0x0027          ; Binary data
184D8:	DD-34       	cpi r29, 0x4d         ; Compare with Immediate
184DA:	F5-00       	.data 0x00f5          ; Binary data
184DC:	62-DB       	rcall .+5828          ; Relative Call to Subroutine
184DE:	C0-00       	.data 0x00c0          ; Binary data
184E0:	3C-99       	sbic 0x07, 4          ; Skip if Bit in I/O Register is Cleared
184E2:	95-00       	.data 0x0095          ; Binary data
184E4:	41-90       	ld r4, Z+             ; Load Indirect from Data Space to Register
184E6:	43-00       	.data 0x0043          ; Binary data
184E8:	63-51       	subi r22, 0x13        ; Subtract Immediate
184EA:	FE-00       	.data 0x00fe          ; Binary data
184EC:	BB-DE       	rcall .+7542          ; Relative Call to Subroutine
184EE:	AB-00       	.data 0x00ab          ; Binary data
184F0:	B7-61       	ori r27, 0x17         ; Logical OR with Immediate
184F2:	C5-00       	.data 0x00c5          ; Binary data
184F4:	3A-6E       	ori r19, 0xea         ; Logical OR with Immediate
184F6:	24-00       	.data 0x0024          ; Binary data
184F8:	D2-4D       	sbci r29, 0xd2        ; Subtract Immediate with Carry SBI
184FA:	42-00       	.data 0x0042          ; Binary data
184FC:	49-06       	cpc r4, r25           ; Compare with Carry
184FE:	E0-00       	.data 0x00e0          ; Binary data
18500:	09-EA       	ldi r16, 0xa9         ; Load Immediate
18502:	2E-00       	.data 0x002e          ; Binary data
18504:	1C-92       	st X, r1              ; Store Indirect From Register to Data Space
18506:	D1-00       	.data 0x00d1          ; Binary data
18508:	EB-1D       	adc r30, r11          ; Add with Carry
1850A:	FE-00       	.data 0x00fe          ; Binary data
1850C:	29-B1       	in r18, 0x09          ; Load an I/O Location to Register
1850E:	1C-00       	.data 0x001c          ; Binary data
18510:	E8-3E       	cpi r30, 0xe8         ; Compare with Immediate
18512:	A7-00       	.data 0x00a7          ; Binary data
18514:	F5-35       	cpi r31, 0x55         ; Compare with Immediate
18516:	82-00       	.data 0x0082          ; Binary data
18518:	44-BB       	out 0x14, r20         ; Store Register to I/O Location
1851A:	2E-00       	.data 0x002e          ; Binary data
1851C:	9C-E9       	ldi r25, 0x9c         ; Load Immediate
1851E:	84-00       	.data 0x0084          ; Binary data
18520:	B4-26       	clr r692              ; Clear Register
18522:	70-00       	.data 0x0070          ; Binary data
18524:	41-7E       	andi r20, 0xe1        ; Logical AND with Immediate
18526:	5F-00       	.data 0x005f          ; Binary data
18528:	D6-91       	elpm r29, Z           ; Extended Load Program Memory
1852A:	39-00       	.data 0x0039          ; Binary data
1852C:	53-83       	std Y+3, r21          ; Store Indirect From Register to Data Space
1852E:	39-00       	.data 0x0039          ; Binary data
18530:	9C-F4       	brbc 4, .+38          ; Branch if Bit in SREG is Cleared
18532:	39-00       	.data 0x0039          ; Binary data
18534:	8B-5F       	subi r24, 0xfb        ; Subtract Immediate
18536:	84-00       	.data 0x0084          ; Binary data
18538:	28-F9       	.data 0xf928          ; Binary data
1853A:	BD-00       	.data 0x00bd          ; Binary data
1853C:	F8-1F       	adc r31, r24          ; Add with Carry
1853E:	3B-00       	.data 0x003b          ; Binary data
18540:	DE-FF       	.data 0xffde          ; Binary data
18542:	97-00       	.data 0x0097          ; Binary data
18544:	0F-98       	cbi 0x01, 7           ; Clear Bit in I/O Register
18546:	05-00       	.data 0x0005          ; Binary data
18548:	11-2F       	mov r17, r17          ; Copy Register
1854A:	EF-00       	.data 0x00ef          ; Binary data
1854C:	0A-5A       	subi r16, 0xaa        ; Subtract Immediate
1854E:	8B-00       	.data 0x008b          ; Binary data
18550:	6D-1F       	adc r22, r29          ; Add with Carry
18552:	6D-00       	.data 0x006d          ; Binary data
18554:	CF-7E       	andi r28, 0xef        ; Logical AND with Immediate
18556:	36-00       	.data 0x0036          ; Binary data
18558:	09-CB       	rjmp .-2542           ; Relative Jump
1855A:	27-00       	.data 0x0027          ; Binary data
1855C:	46-4F       	sbci r20, 0xf6        ; Subtract Immediate with Carry SBI
1855E:	B7-00       	.data 0x00b7          ; Binary data
18560:	9E-66       	ori r25, 0x6e         ; Logical OR with Immediate
18562:	3F-00       	.data 0x003f          ; Binary data
18564:	2D-EA       	ldi r18, 0xad         ; Load Immediate
18566:	5F-00       	.data 0x005f          ; Binary data
18568:	BA-27       	clr r954              ; Clear Register
1856A:	75-00       	.data 0x0075          ; Binary data
1856C:	E5-EB       	ldi r30, 0xb5         ; Load Immediate
1856E:	C7-00       	.data 0x00c7          ; Binary data
18570:	3D-7B       	andi r19, 0xbd        ; Logical AND with Immediate
18572:	F1-00       	.data 0x00f1          ; Binary data
18574:	F7-39       	cpi r31, 0x97         ; Compare with Immediate
18576:	07-00       	.data 0x0007          ; Binary data
18578:	92-52       	subi r25, 0x22        ; Subtract Immediate
1857A:	8A-00       	.data 0x008a          ; Binary data
1857C:	FB-6B       	ori r31, 0xbb         ; Logical OR with Immediate
1857E:	EA-00       	.data 0x00ea          ; Binary data
18580:	1F-B1       	in r17, 0x0f          ; Load an I/O Location to Register
18582:	5F-00       	.data 0x005f          ; Binary data
18584:	08-5D       	subi r16, 0xd8        ; Subtract Immediate
18586:	8D-00       	.data 0x008d          ; Binary data
18588:	30-03       	mulsu r19, r16        ; Multiply Signed with Unsigned
1858A:	56-00       	.data 0x0056          ; Binary data
1858C:	7B-FC       	.data 0xfc7b          ; Binary data
1858E:	46-00       	.data 0x0046          ; Binary data
18590:	F0-AB       	std Y+48, r31         ; Store Indirect From Register to Data Space
18592:	6B-00       	.data 0x006b          ; Binary data
18594:	20-BC       	out 0x20, r2          ; Store Register to I/O Location
18596:	CF-00       	.data 0x00cf          ; Binary data
18598:	36-F4       	brbc 6, .+12          ; Branch if Bit in SREG is Cleared
1859A:	9A-00       	.data 0x009a          ; Binary data
1859C:	E3-A9       	std Y+51, r30         ; Store Indirect From Register to Data Space
1859E:	1D-00       	.data 0x001d          ; Binary data
185A0:	5E-61       	ori r21, 0x1e         ; Logical OR with Immediate
185A2:	91-00       	.data 0x0091          ; Binary data
185A4:	08-1B       	sub r16, r24          ; Subtract Without Carry
185A6:	E6-00       	.data 0x00e6          ; Binary data
185A8:	85-99       	sbic 0x10, 5          ; Skip if Bit in I/O Register is Cleared
185AA:	65-00       	.data 0x0065          ; Binary data
185AC:	A0-14       	cp r10, r0            ; Compare
185AE:	5F-00       	.data 0x005f          ; Binary data
185B0:	8D-40       	sbci r24, 0x0d        ; Subtract Immediate with Carry SBI
185B2:	68-00       	.data 0x0068          ; Binary data
185B4:	80-D8       	rcall .+4352          ; Relative Call to Subroutine
185B6:	FF-00       	.data 0x00ff          ; Binary data
185B8:	27-73       	andi r18, 0x37        ; Logical AND with Immediate
185BA:	4D-00       	.data 0x004d          ; Binary data
185BC:	06-06       	cpc r0, r22           ; Compare with Carry
185BE:	31-00       	.data 0x0031          ; Binary data
185C0:	CA-56       	subi r28, 0x6a        ; Subtract Immediate
185C2:	15-00       	.data 0x0015          ; Binary data
185C4:	C9-A8       	std Y+49, r12         ; Store Indirect From Register to Data Space
185C6:	73-00       	.data 0x0073          ; Binary data
185C8:	7B-E2       	ldi r23, 0x2b         ; Load Immediate
185CA:	60-00       	.data 0x0060          ; Binary data
185CC:	6B-8C       	std Y+27, r6          ; Store Indirect From Register to Data Space
185CE:	C0-00       	.data 0x00c0          ; Binary data
185D0:	02-00       	.data 0x0002          ; Binary data
185D2:	00-00       	nop                   ; No Operation
185D4:	03-00       	.data 0x0003          ; Binary data
185D6:	00-00       	nop                   ; No Operation
185D8:	04-00       	.data 0x0004          ; Binary data
185DA:	00-00       	nop                   ; No Operation
185DC:	06-00       	.data 0x0006          ; Binary data
185DE:	00-00       	nop                   ; No Operation
185E0:	00-00       	nop                   ; No Operation
185E2:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
185E4:	FB-21       	and r31, r11          ; Logical AND
185E6:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
185E8:	00-00       	nop                   ; No Operation
185EA:	00-00       	nop                   ; No Operation
185EC:	2D-44       	sbci r18, 0x4d        ; Subtract Immediate with Carry SBI
185EE:	74-3E       	cpi r23, 0xe4         ; Compare with Immediate
185F0:	00-00       	nop                   ; No Operation
185F2:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
185F4:	98-46       	sbci r25, 0x68        ; Subtract Immediate with Carry SBI
185F6:	F8-3C       	cpi r31, 0xc8         ; Compare with Immediate
185F8:	00-00       	nop                   ; No Operation
185FA:	00-60       	ori r16, 0x00         ; Logical OR with Immediate
185FC:	51-CC       	rjmp .-1886           ; Relative Jump
185FE:	78-3B       	cpi r23, 0xb8         ; Compare with Immediate
18600:	00-00       	nop                   ; No Operation
18602:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
18604:	83-1B       	sub r24, r19          ; Subtract Without Carry
18606:	F0-39       	cpi r31, 0x90         ; Compare with Immediate
18608:	00-00       	nop                   ; No Operation
1860A:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
1860C:	20-25       	clr r288              ; Clear Register
1860E:	7A-38       	cpi r23, 0x8a         ; Compare with Immediate
18610:	00-00       	nop                   ; No Operation
18612:	00-80       	ld r0, Z              ; Load Indirect from Data Space to Register
18614:	22-82       	std Y+2, r2           ; Store Indirect From Register to Data Space
18616:	E3-36       	cpi r30, 0x63         ; Compare with Immediate
18618:	00-00       	nop                   ; No Operation
1861A:	00-00       	nop                   ; No Operation
1861C:	1D-F3       	brbs 5, .-58          ; Branch if Bit in SREG is Set
1861E:	69-35       	cpi r22, 0x59         ; Compare with Immediate
18620:	E2-65       	ori r30, 0x52         ; Logical OR with Immediate
18622:	2F-22       	and r2, r31           ; Logical AND
18624:	7F-2B       	or r23, r31           ; Logical OR
18626:	7A-3C       	cpi r23, 0xca         ; Compare with Immediate
18628:	07-5C       	subi r16, 0xc7        ; Subtract Immediate
1862A:	14-33       	cpi r17, 0x34         ; Compare with Immediate
1862C:	26-A6       	std Y+46, r2          ; Store Indirect From Register to Data Space
1862E:	81-3C       	cpi r24, 0xc1         ; Compare with Immediate
18630:	BD-CB       	rjmp .-2182           ; Relative Jump
18632:	F0-7A       	andi r31, 0xa0        ; Logical AND with Immediate
18634:	88-07       	cpc r24, r24          ; Compare with Carry
18636:	70-3C       	cpi r23, 0xc0         ; Compare with Immediate
18638:	07-5C       	subi r16, 0xc7        ; Subtract Immediate
1863A:	14-33       	cpi r17, 0x34         ; Compare with Immediate
1863C:	26-A6       	std Y+46, r2          ; Store Indirect From Register to Data Space
1863E:	91-3C       	cpi r25, 0xc1         ; Compare with Immediate
18640:	4F-BB       	out 0x1f, r20         ; Store Register to I/O Location
18642:	61-05       	cpc r22, r1           ; Compare with Carry
18644:	67-AC       	std Y+63, r6          ; Store Indirect From Register to Data Space
18646:	DD-3F       	cpi r29, 0xfd         ; Compare with Immediate
18648:	18-2D       	mov r17, r8           ; Copy Register
1864A:	44-54       	subi r20, 0x44        ; Subtract Immediate
1864C:	FB-21       	and r31, r11          ; Logical AND
1864E:	E9-3F       	cpi r30, 0xf9         ; Compare with Immediate
18650:	9B-F6       	brbc 3, .-90          ; Branch if Bit in SREG is Cleared
18652:	81-D2       	rcall .+1282          ; Relative Call to Subroutine
18654:	0B-73       	andi r16, 0x3b        ; Logical AND with Immediate
18656:	EF-3F       	cpi r30, 0xff         ; Compare with Immediate
18658:	18-2D       	mov r17, r8           ; Copy Register
1865A:	44-54       	subi r20, 0x44        ; Subtract Immediate
1865C:	FB-21       	and r31, r11          ; Logical AND
1865E:	F9-3F       	cpi r31, 0xf9         ; Compare with Immediate
18660:	43-00       	.data 0x0043          ; Binary data
18662:	00-00       	nop                   ; No Operation
18664:	A0-94       	com r10               ; One's Complement
18666:	FF-1F       	adc r31, r31          ; Add with Carry
18668:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
1866A:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
1866C:	F8-BC       	out 0x28, r15         ; Store Register to I/O Location
1866E:	08-BC       	out 0x28, r0          ; Store Register to I/O Location
18670:	9E-46       	sbci r25, 0x6e        ; Subtract Immediate with Carry SBI
18672:	70-47       	sbci r23, 0x70        ; Subtract Immediate with Carry SBI
18674:	15-75       	andi r17, 0x55        ; Logical AND with Immediate
18676:	01-00       	.data 0x0001          ; Binary data
18678:	35-04       	cpc r3, r5            ; Compare with Carry
1867A:	00-00       	nop                   ; No Operation
1867C:	3D-DE       	rcall .+7290          ; Relative Call to Subroutine
1867E:	00-00       	nop                   ; No Operation
18680:	5D-DF       	rcall .+7866          ; Relative Call to Subroutine
18682:	00-00       	nop                   ; No Operation
18684:	79-DF       	rcall .+7922          ; Relative Call to Subroutine
18686:	00-00       	nop                   ; No Operation
18688:	A5-DF       	rcall .+8010          ; Relative Call to Subroutine
1868A:	00-00       	nop                   ; No Operation
1868C:	C1-DF       	rcall .+8066          ; Relative Call to Subroutine
1868E:	00-00       	nop                   ; No Operation
18690:	41-E2       	ldi r20, 0x21         ; Load Immediate
18692:	00-00       	nop                   ; No Operation
18694:	5D-E2       	ldi r21, 0x2d         ; Load Immediate
18696:	00-00       	nop                   ; No Operation
18698:	79-E2       	ldi r23, 0x29         ; Load Immediate
1869A:	00-00       	nop                   ; No Operation
1869C:	95-E2       	ldi r25, 0x25         ; Load Immediate
1869E:	00-00       	nop                   ; No Operation
186A0:	B1-E2       	ldi r27, 0x21         ; Load Immediate
186A2:	00-00       	nop                   ; No Operation
186A4:	CD-E2       	ldi r28, 0x2d         ; Load Immediate
186A6:	00-00       	nop                   ; No Operation
186A8:	89-E8       	ldi r24, 0x89         ; Load Immediate
186AA:	00-00       	nop                   ; No Operation
186AC:	D1-E9       	ldi r29, 0x91         ; Load Immediate
186AE:	00-00       	nop                   ; No Operation
186B0:	1D-EC       	ldi r17, 0xcd         ; Load Immediate
186B2:	00-00       	nop                   ; No Operation
186B4:	F9-F3       	brbs 1, .-2           ; Branch if Bit in SREG is Set
186B6:	00-00       	nop                   ; No Operation
186B8:	51-F4       	brbc 1, .+20          ; Branch if Bit in SREG is Cleared
186BA:	00-00       	nop                   ; No Operation
186BC:	65-F8       	bld r6, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
186BE:	00-00       	nop                   ; No Operation
186C0:	81-05       	cpc r24, r1           ; Compare with Carry
186C2:	01-00       	.data 0x0001          ; Binary data
186C4:	11-27       	clr r785              ; Clear Register
186C6:	01-00       	.data 0x0001          ; Binary data
186C8:	35-2A       	or r3, r21            ; Logical OR
186CA:	01-00       	.data 0x0001          ; Binary data
186CC:	45-39       	cpi r20, 0x95         ; Compare with Immediate
186CE:	01-00       	.data 0x0001          ; Binary data
186D0:	89-3A       	cpi r24, 0xa9         ; Compare with Immediate
186D2:	01-00       	.data 0x0001          ; Binary data
186D4:	F8-B5       	in r31, 0x28          ; Load an I/O Location to Register
186D6:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
186D8:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
186DA:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
186DC:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
186DE:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
186E0:	54-B1       	in r21, 0x04          ; Load an I/O Location to Register
186E2:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
186E4:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
186E6:	A4-F3       	brbs 4, .-24          ; Branch if Bit in SREG is Set
186E8:	B3-FA       	bst r11, 3            ; Bit Store from Bit in Register to T Flag in SREG
186EA:	83-F3       	brbs 3, .-32          ; Branch if Bit in SREG is Set
186EC:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
186EE:	23-30       	cpi r18, 0x03         ; Compare with Immediate
186F0:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
186F2:	63-1E       	adc r6, r19           ; Add with Carry
186F4:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
186F6:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
186F8:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
186FA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
186FC:	A0-D0       	rcall .+320           ; Relative Call to Subroutine
186FE:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18700:	E4-93       	xch Z, r30            ; Exchange
18702:	FF-1F       	adc r31, r31          ; Add with Carry
18704:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
18706:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
18708:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
1870A:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
1870C:	54-B1       	in r21, 0x04          ; Load an I/O Location to Register
1870E:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
18710:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
18712:	A4-F3       	brbs 4, .-24          ; Branch if Bit in SREG is Set
18714:	B3-FA       	bst r11, 3            ; Bit Store from Bit in Register to T Flag in SREG
18716:	83-F3       	brbs 3, .-32          ; Branch if Bit in SREG is Set
18718:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
1871A:	23-30       	cpi r18, 0x03         ; Compare with Immediate
1871C:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1871E:	63-1E       	adc r6, r19           ; Add with Carry
18720:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
18722:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
18724:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
18726:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
18728:	A0-C0       	rjmp .+320            ; Relative Jump
1872A:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
1872C:	C4-93       	xch Z, r28            ; Exchange
1872E:	FF-1F       	adc r31, r31          ; Add with Carry
18730:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
18732:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
18734:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
18736:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
18738:	54-B1       	in r21, 0x04          ; Load an I/O Location to Register
1873A:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
1873C:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
1873E:	A4-F3       	brbs 4, .-24          ; Branch if Bit in SREG is Set
18740:	B3-FA       	bst r11, 3            ; Bit Store from Bit in Register to T Flag in SREG
18742:	83-F3       	brbs 3, .-32          ; Branch if Bit in SREG is Set
18744:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
18746:	23-30       	cpi r18, 0x03         ; Compare with Immediate
18748:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
1874A:	63-1E       	adc r6, r19           ; Add with Carry
1874C:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
1874E:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
18750:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
18752:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
18754:	A0-B0       	in r10, 0x00          ; Load an I/O Location to Register
18756:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18758:	94-93       	xch Z, r25            ; Exchange
1875A:	FF-1F       	adc r31, r31          ; Add with Carry
1875C:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1875E:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
18760:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
18762:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
18764:	54-B1       	in r21, 0x04          ; Load an I/O Location to Register
18766:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
18768:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
1876A:	A4-F3       	brbs 4, .-24          ; Branch if Bit in SREG is Set
1876C:	B3-FA       	bst r11, 3            ; Bit Store from Bit in Register to T Flag in SREG
1876E:	83-F3       	brbs 3, .-32          ; Branch if Bit in SREG is Set
18770:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
18772:	23-30       	cpi r18, 0x03         ; Compare with Immediate
18774:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
18776:	63-1E       	adc r6, r19           ; Add with Carry
18778:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
1877A:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
1877C:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
1877E:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
18780:	A0-A0       	ldd r10, Y+32         ; Load Indirect from Data Space to Register
18782:	04-40       	sbci r16, 0x04        ; Subtract Immediate with Carry SBI
18784:	44-93       	xch Z, r20            ; Exchange
18786:	FF-1F       	adc r31, r31          ; Add with Carry
18788:	38-B5       	in r19, 0x28          ; Load an I/O Location to Register
1878A:	08-4B       	sbci r16, 0xb8        ; Subtract Immediate with Carry SBI
1878C:	1C-68       	ori r17, 0x8c         ; Logical OR with Immediate
1878E:	1C-60       	ori r17, 0x0c         ; Logical OR with Immediate
18790:	54-B1       	in r21, 0x04          ; Load an I/O Location to Register
18792:	07-4D       	sbci r16, 0xd7        ; Subtract Immediate with Carry SBI
18794:	94-FA       	bst r9, 4             ; Bit Store from Bit in Register to T Flag in SREG
18796:	A4-F3       	brbs 4, .-24          ; Branch if Bit in SREG is Set
18798:	B3-FA       	bst r11, 3            ; Bit Store from Bit in Register to T Flag in SREG
1879A:	83-F3       	brbs 3, .-32          ; Branch if Bit in SREG is Set
1879C:	55-F8       	bld r5, 5             ; Bit Load from the T Flag in SREG to a Bit in Register
1879E:	23-30       	cpi r18, 0x03         ; Compare with Immediate
187A0:	98-47       	sbci r25, 0x78        ; Subtract Immediate with Carry SBI
187A2:	63-1E       	adc r6, r19           ; Add with Carry
187A4:	1C-40       	sbci r17, 0x0c        ; Subtract Immediate with Carry SBI
187A6:	F5-D1       	rcall .+1002          ; Relative Call to Subroutine
187A8:	38-BD       	out 0x28, r19         ; Store Register to I/O Location
187AA:	00-BF       	out 0x30, r16         ; Store Register to I/O Location
187AC:	A0-90-04-40 	lds r10, 0x4004       ; Load Direct from Data Space (32-bit)
187B0:	0C-93       	st X, r16             ; Store Indirect From Register to Data Space
187B2:	FF-1F       	adc r31, r31          ; Add with Carry
187B4:	00-00       	nop                   ; No Operation
187B6:	00-00       	nop                   ; No Operation
187B8:	01-00       	.data 0x0001          ; Binary data
187BA:	00-00       	nop                   ; No Operation
187BC:	8C-00       	.data 0x008c          ; Binary data
187BE:	00-00       	nop                   ; No Operation
187C0:	40-2B       	or r20, r16           ; Logical OR
187C2:	00-00       	nop                   ; No Operation
187C4:	01-00       	.data 0x0001          ; Binary data
187C6:	00-00       	nop                   ; No Operation
187C8:	00-00       	nop                   ; No Operation
187CA:	A0-C1       	rjmp .+832            ; Relative Jump
187CC:	FF-00       	.data 0x00ff          ; Binary data
187CE:	00-00       	nop                   ; No Operation
187D0:	00-00       	nop                   ; No Operation
187D2:	E0-41       	sbci r30, 0x10        ; Subtract Immediate with Carry SBI
187D4:	05-00       	.data 0x0005          ; Binary data
187D6:	00-00       	nop                   ; No Operation
187D8:	05-00       	.data 0x0005          ; Binary data
187DA:	00-00       	nop                   ; No Operation
187DC:	64-00       	.data 0x0064          ; Binary data
187DE:	00-00       	nop                   ; No Operation
187E0:	9A-99       	sbic 0x13, 2          ; Skip if Bit in I/O Register is Cleared
187E2:	19-3F       	cpi r17, 0xf9         ; Compare with Immediate
187E4:	D0-07       	cpc r29, r16          ; Compare with Carry
187E6:	00-00       	nop                   ; No Operation
187E8:	0A-D7       	rcall .+3604          ; Relative Call to Subroutine
187EA:	A3-3C       	cpi r26, 0xc3         ; Compare with Immediate
187EC:	08-00       	.data 0x0008          ; Binary data
187EE:	00-00       	nop                   ; No Operation
187F0:	03-00       	.data 0x0003          ; Binary data
187F2:	00-00       	nop                   ; No Operation
187F4:	01-00       	.data 0x0001          ; Binary data
187F6:	00-00       	nop                   ; No Operation
187F8:	00-00       	nop                   ; No Operation
187FA:	00-00       	nop                   ; No Operation
187FC:	01-00       	.data 0x0001          ; Binary data
187FE:	00-00       	nop                   ; No Operation
18800:	02-00       	.data 0x0002          ; Binary data
18802:	00-00       	nop                   ; No Operation
18804:	03-00       	.data 0x0003          ; Binary data
18806:	00-00       	nop                   ; No Operation
18808:	04-00       	.data 0x0004          ; Binary data
1880A:	00-00       	nop                   ; No Operation
1880C:	05-00       	.data 0x0005          ; Binary data
1880E:	00-00       	nop                   ; No Operation
18810:	06-00       	.data 0x0006          ; Binary data
18812:	00-00       	nop                   ; No Operation
18814:	07-00       	.data 0x0007          ; Binary data
18816:	00-00       	nop                   ; No Operation
18818:	08-00       	.data 0x0008          ; Binary data
1881A:	00-00       	nop                   ; No Operation
1881C:	09-00       	.data 0x0009          ; Binary data
1881E:	00-00       	nop                   ; No Operation
18820:	0A-00       	.data 0x000a          ; Binary data
18822:	00-00       	nop                   ; No Operation
18824:	0B-00       	.data 0x000b          ; Binary data
18826:	00-00       	nop                   ; No Operation
18828:	F4-01       	movw r30, r8          ; Copy Register Word
1882A:	00-00       	nop                   ; No Operation
1882C:	96-00       	.data 0x0096          ; Binary data
1882E:	00-00       	nop                   ; No Operation
18830:	1E-00       	.data 0x001e          ; Binary data
18832:	00-00       	nop                   ; No Operation
18834:	0F-00       	.data 0x000f          ; Binary data
18836:	00-00       	nop                   ; No Operation
18838:	28-00       	.data 0x0028          ; Binary data
1883A:	00-00       	nop                   ; No Operation
1883C:	02-00       	.data 0x0002          ; Binary data
1883E:	00-00       	nop                   ; No Operation
18840:	06-00       	.data 0x0006          ; Binary data
18842:	00-00       	nop                   ; No Operation
18844:	0A-00       	.data 0x000a          ; Binary data
18846:	00-00       	nop                   ; No Operation
18848:	00-00       	nop                   ; No Operation
1884A:	7A-44       	sbci r23, 0x4a        ; Subtract Immediate with Carry SBI
1884C:	00-00       	nop                   ; No Operation
1884E:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
18850:	FF-FF       	.data 0xffff          ; Binary data
18852:	FF-FF       	.data 0xffff          ; Binary data
18854:	FF-FF       	.data 0xffff          ; Binary data
18856:	FF-FF       	.data 0xffff          ; Binary data
18858:	18-00       	.data 0x0018          ; Binary data
1885A:	00-00       	nop                   ; No Operation
1885C:	66-66       	ori r22, 0x66         ; Logical OR with Immediate
1885E:	66-3F       	cpi r22, 0xf6         ; Compare with Immediate
18860:	00-00       	nop                   ; No Operation
18862:	80-3F       	cpi r24, 0xf0         ; Compare with Immediate
18864:	02-00       	.data 0x0002          ; Binary data
18866:	00-00       	nop                   ; No Operation
18868:	14-00       	.data 0x0014          ; Binary data
1886A:	39-05       	cpc r19, r9           ; Compare with Carry
1886C:	E8-03       	fmulsu r22, r16       ; Fractional Multiply Signed with Unsigned
1886E:	00-00       	nop                   ; No Operation
18870:	FF-FF       	.data 0xffff          ; Binary data
18872:	FF-FF       	.data 0xffff          ; Binary data
18874:	12-00       	.data 0x0012          ; Binary data
18876:	00-00       	nop                   ; No Operation
18878:	FF-FF       	.data 0xffff          ; Binary data
1887A:	00-00       	nop                   ; No Operation
1887C:	13-0A       	sbc r1, r19           ; Subtract with Carry
1887E:	04-00       	.data 0x0004          ; Binary data
18880:	58-03       	fmul r21, r16         ; Fractional Multiply Unsigned
18882:	00-20       	and r0, r0            ; Logical AND
18884:	A1-09       	sbc r26, r1           ; Subtract with Carry
18886:	01-00       	.data 0x0001          ; Binary data
18888:	A1-09       	sbc r26, r1           ; Subtract with Carry
1888A:	01-00       	.data 0x0001          ; Binary data
1888C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1888E:	01-00       	.data 0x0001          ; Binary data
18890:	A1-09       	sbc r26, r1           ; Subtract with Carry
18892:	01-00       	.data 0x0001          ; Binary data
18894:	A1-09       	sbc r26, r1           ; Subtract with Carry
18896:	01-00       	.data 0x0001          ; Binary data
18898:	A1-09       	sbc r26, r1           ; Subtract with Carry
1889A:	01-00       	.data 0x0001          ; Binary data
1889C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1889E:	01-00       	.data 0x0001          ; Binary data
188A0:	A1-09       	sbc r26, r1           ; Subtract with Carry
188A2:	01-00       	.data 0x0001          ; Binary data
188A4:	A1-09       	sbc r26, r1           ; Subtract with Carry
188A6:	01-00       	.data 0x0001          ; Binary data
188A8:	A1-09       	sbc r26, r1           ; Subtract with Carry
188AA:	01-00       	.data 0x0001          ; Binary data
188AC:	A1-09       	sbc r26, r1           ; Subtract with Carry
188AE:	01-00       	.data 0x0001          ; Binary data
188B0:	A1-09       	sbc r26, r1           ; Subtract with Carry
188B2:	01-00       	.data 0x0001          ; Binary data
188B4:	A1-09       	sbc r26, r1           ; Subtract with Carry
188B6:	01-00       	.data 0x0001          ; Binary data
188B8:	A1-09       	sbc r26, r1           ; Subtract with Carry
188BA:	01-00       	.data 0x0001          ; Binary data
188BC:	A1-09       	sbc r26, r1           ; Subtract with Carry
188BE:	01-00       	.data 0x0001          ; Binary data
188C0:	A1-09       	sbc r26, r1           ; Subtract with Carry
188C2:	01-00       	.data 0x0001          ; Binary data
188C4:	A1-09       	sbc r26, r1           ; Subtract with Carry
188C6:	01-00       	.data 0x0001          ; Binary data
188C8:	A1-09       	sbc r26, r1           ; Subtract with Carry
188CA:	01-00       	.data 0x0001          ; Binary data
188CC:	A1-09       	sbc r26, r1           ; Subtract with Carry
188CE:	01-00       	.data 0x0001          ; Binary data
188D0:	A1-09       	sbc r26, r1           ; Subtract with Carry
188D2:	01-00       	.data 0x0001          ; Binary data
188D4:	A1-09       	sbc r26, r1           ; Subtract with Carry
188D6:	01-00       	.data 0x0001          ; Binary data
188D8:	A1-09       	sbc r26, r1           ; Subtract with Carry
188DA:	01-00       	.data 0x0001          ; Binary data
188DC:	A1-09       	sbc r26, r1           ; Subtract with Carry
188DE:	01-00       	.data 0x0001          ; Binary data
188E0:	A1-09       	sbc r26, r1           ; Subtract with Carry
188E2:	01-00       	.data 0x0001          ; Binary data
188E4:	A1-09       	sbc r26, r1           ; Subtract with Carry
188E6:	01-00       	.data 0x0001          ; Binary data
188E8:	A1-09       	sbc r26, r1           ; Subtract with Carry
188EA:	01-00       	.data 0x0001          ; Binary data
188EC:	A1-09       	sbc r26, r1           ; Subtract with Carry
188EE:	01-00       	.data 0x0001          ; Binary data
188F0:	A1-09       	sbc r26, r1           ; Subtract with Carry
188F2:	01-00       	.data 0x0001          ; Binary data
188F4:	A1-09       	sbc r26, r1           ; Subtract with Carry
188F6:	01-00       	.data 0x0001          ; Binary data
188F8:	A1-09       	sbc r26, r1           ; Subtract with Carry
188FA:	01-00       	.data 0x0001          ; Binary data
188FC:	A1-09       	sbc r26, r1           ; Subtract with Carry
188FE:	01-00       	.data 0x0001          ; Binary data
18900:	A1-09       	sbc r26, r1           ; Subtract with Carry
18902:	01-00       	.data 0x0001          ; Binary data
18904:	A1-09       	sbc r26, r1           ; Subtract with Carry
18906:	01-00       	.data 0x0001          ; Binary data
18908:	A1-09       	sbc r26, r1           ; Subtract with Carry
1890A:	01-00       	.data 0x0001          ; Binary data
1890C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1890E:	01-00       	.data 0x0001          ; Binary data
18910:	A1-09       	sbc r26, r1           ; Subtract with Carry
18912:	01-00       	.data 0x0001          ; Binary data
18914:	A1-09       	sbc r26, r1           ; Subtract with Carry
18916:	01-00       	.data 0x0001          ; Binary data
18918:	A1-09       	sbc r26, r1           ; Subtract with Carry
1891A:	01-00       	.data 0x0001          ; Binary data
1891C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1891E:	01-00       	.data 0x0001          ; Binary data
18920:	A1-09       	sbc r26, r1           ; Subtract with Carry
18922:	01-00       	.data 0x0001          ; Binary data
18924:	A1-09       	sbc r26, r1           ; Subtract with Carry
18926:	01-00       	.data 0x0001          ; Binary data
18928:	A1-09       	sbc r26, r1           ; Subtract with Carry
1892A:	01-00       	.data 0x0001          ; Binary data
1892C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1892E:	01-00       	.data 0x0001          ; Binary data
18930:	A1-09       	sbc r26, r1           ; Subtract with Carry
18932:	01-00       	.data 0x0001          ; Binary data
18934:	A1-09       	sbc r26, r1           ; Subtract with Carry
18936:	01-00       	.data 0x0001          ; Binary data
18938:	A1-09       	sbc r26, r1           ; Subtract with Carry
1893A:	01-00       	.data 0x0001          ; Binary data
1893C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1893E:	01-00       	.data 0x0001          ; Binary data
18940:	A1-09       	sbc r26, r1           ; Subtract with Carry
18942:	01-00       	.data 0x0001          ; Binary data
18944:	A1-09       	sbc r26, r1           ; Subtract with Carry
18946:	01-00       	.data 0x0001          ; Binary data
18948:	A1-09       	sbc r26, r1           ; Subtract with Carry
1894A:	01-00       	.data 0x0001          ; Binary data
1894C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1894E:	01-00       	.data 0x0001          ; Binary data
18950:	A1-09       	sbc r26, r1           ; Subtract with Carry
18952:	01-00       	.data 0x0001          ; Binary data
18954:	A1-09       	sbc r26, r1           ; Subtract with Carry
18956:	01-00       	.data 0x0001          ; Binary data
18958:	A1-09       	sbc r26, r1           ; Subtract with Carry
1895A:	01-00       	.data 0x0001          ; Binary data
1895C:	A1-09       	sbc r26, r1           ; Subtract with Carry
1895E:	01-00       	.data 0x0001          ; Binary data
18960:	A1-09       	sbc r26, r1           ; Subtract with Carry
18962:	01-00       	.data 0x0001          ; Binary data
18964:	09-0A       	sbc r0, r25           ; Subtract with Carry
18966:	00-00       	nop                   ; No Operation
18968:	FF-FF       	.data 0xffff          ; Binary data
1896A:	FF-FF       	.data 0xffff          ; Binary data
1896C:	01-08       	sbc r0, r1            ; Subtract with Carry
1896E:	00-00       	nop                   ; No Operation
18970:	12-01       	movw r2, r4           ; Copy Register Word
18972:	01-01       	movw r0, r2           ; Copy Register Word
18974:	02-00       	.data 0x0002          ; Binary data
18976:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
18978:	C0-16       	cp r12, r16           ; Compare
1897A:	83-04       	cpc r8, r3            ; Compare with Carry
1897C:	00-02       	muls r16, r16         ; Multiply Signed
1897E:	01-02       	muls r16, r17         ; Multiply Signed
18980:	03-01       	movw r0, r6           ; Copy Register Word
18982:	00-00       	nop                   ; No Operation
18984:	18-03       	fmul r17, r16         ; Fractional Multiply Unsigned
18986:	54-00       	.data 0x0054          ; Binary data
18988:	65-00       	.data 0x0065          ; Binary data
1898A:	65-00       	.data 0x0065          ; Binary data
1898C:	6E-00       	.data 0x006e          ; Binary data
1898E:	73-00       	.data 0x0073          ; Binary data
18990:	79-00       	.data 0x0079          ; Binary data
18992:	64-00       	.data 0x0064          ; Binary data
18994:	75-00       	.data 0x0075          ; Binary data
18996:	69-00       	.data 0x0069          ; Binary data
18998:	6E-00       	.data 0x006e          ; Binary data
1899A:	6F-00       	.data 0x006f          ; Binary data
1899C:	09-02       	muls r16, r25         ; Multiply Signed
1899E:	43-00       	.data 0x0043          ; Binary data
189A0:	02-01       	movw r0, r4           ; Copy Register Word
189A2:	00-C0       	rjmp .+0              ; Relative Jump
189A4:	32-09       	sbc r19, r2           ; Subtract with Carry
189A6:	04-00       	.data 0x0004          ; Binary data
189A8:	00-01       	movw r0, r0           ; Copy Register Word
189AA:	02-02       	muls r16, r18         ; Multiply Signed
189AC:	01-00       	.data 0x0001          ; Binary data
189AE:	05-24       	clr r5                ; Clear Register
189B0:	00-10       	cpse r0, r0           ; Compare Skip if Equal
189B2:	01-05       	cpc r16, r1           ; Compare with Carry
189B4:	24-01       	movw r4, r8           ; Copy Register Word
189B6:	01-01       	movw r0, r2           ; Copy Register Word
189B8:	04-24       	clr r4                ; Clear Register
189BA:	02-06       	cpc r0, r18           ; Compare with Carry
189BC:	05-24       	clr r5                ; Clear Register
189BE:	06-00       	.data 0x0006          ; Binary data
189C0:	01-07       	cpc r16, r17          ; Compare with Carry
189C2:	05-82       	std Y+5, r0           ; Store Indirect From Register to Data Space
189C4:	03-10       	cpse r0, r3           ; Compare Skip if Equal
189C6:	00-40       	sbci r16, 0x00        ; Subtract Immediate with Carry SBI
189C8:	09-04       	cpc r0, r9            ; Compare with Carry
189CA:	01-00       	.data 0x0001          ; Binary data
189CC:	02-0A       	sbc r0, r18           ; Subtract with Carry
189CE:	00-00       	nop                   ; No Operation
189D0:	00-07       	cpc r16, r16          ; Compare with Carry
189D2:	05-03       	mulsu r16, r21        ; Multiply Signed with Unsigned
189D4:	02-40       	sbci r16, 0x02        ; Subtract Immediate with Carry SBI
189D6:	00-00       	nop                   ; No Operation
189D8:	07-05       	cpc r16, r7           ; Compare with Carry
189DA:	84-02       	muls r24, r20         ; Multiply Signed
189DC:	40-00       	.data 0x0040          ; Binary data
189DE:	00-00       	nop                   ; No Operation
189E0:	16-03       	mulsu r17, r22        ; Multiply Signed with Unsigned
189E2:	55-00       	.data 0x0055          ; Binary data
189E4:	53-00       	.data 0x0053          ; Binary data
189E6:	42-00       	.data 0x0042          ; Binary data
189E8:	20-00       	.data 0x0020          ; Binary data
189EA:	53-00       	.data 0x0053          ; Binary data
189EC:	65-00       	.data 0x0065          ; Binary data
189EE:	72-00       	.data 0x0072          ; Binary data
189F0:	69-00       	.data 0x0069          ; Binary data
189F2:	61-00       	.data 0x0061          ; Binary data
189F4:	6C-00       	.data 0x006c          ; Binary data
189F6:	00-00       	nop                   ; No Operation
189F8:	04-03       	mulsu r16, r20        ; Multiply Signed with Unsigned
189FA:	09-04       	cpc r0, r9            ; Compare with Carry
189FC:	0C-03       	fmul r16, r20         ; Fractional Multiply Unsigned
189FE:	00-00       	nop                   ; No Operation
18A00:	00-00       	nop                   ; No Operation
18A02:	00-00       	nop                   ; No Operation
18A04:	00-00       	nop                   ; No Operation
18A06:	00-00       	nop                   ; No Operation
18A08:	00-00       	nop                   ; No Operation
18A0A:	00-00       	nop                   ; No Operation
18A0C:	00-00       	nop                   ; No Operation
18A0E:	00-00       	nop                   ; No Operation
18A10:	00-00       	nop                   ; No Operation
18A12:	00-00       	nop                   ; No Operation
18A14:	01-00       	.data 0x0001          ; Binary data
18A16:	00-00       	nop                   ; No Operation
18A18:	00-00       	nop                   ; No Operation
18A1A:	00-00       	nop                   ; No Operation
18A1C:	8C-97       	sbiw r24, 0x2c        ; Subtract Immediate from Word
18A1E:	FF-1F       	adc r31, r31          ; Add with Carry
18A20:	F4-97       	sbiw r30, 0x34        ; Subtract Immediate from Word
18A22:	FF-1F       	adc r31, r31          ; Add with Carry
18A24:	5C-98       	cbi 0x0b, 4           ; Clear Bit in I/O Register
18A26:	FF-1F       	adc r31, r31          ; Add with Carry
18A28:	00-00       	nop                   ; No Operation
18A2A:	00-00       	nop                   ; No Operation
18A2C:	00-00       	nop                   ; No Operation
18A2E:	00-00       	nop                   ; No Operation
18A30:	00-00       	nop                   ; No Operation
18A32:	00-00       	nop                   ; No Operation
18A34:	00-00       	nop                   ; No Operation
18A36:	00-00       	nop                   ; No Operation
18A38:	00-00       	nop                   ; No Operation
18A3A:	00-00       	nop                   ; No Operation
18A3C:	00-00       	nop                   ; No Operation
18A3E:	00-00       	nop                   ; No Operation
18A40:	00-00       	nop                   ; No Operation
18A42:	00-00       	nop                   ; No Operation
18A44:	00-00       	nop                   ; No Operation
18A46:	00-00       	nop                   ; No Operation
18A48:	00-00       	nop                   ; No Operation
18A4A:	00-00       	nop                   ; No Operation
18A4C:	60-86       	std Y+8, r6           ; Store Indirect From Register to Data Space
18A4E:	01-00       	.data 0x0001          ; Binary data
18A50:	00-00       	nop                   ; No Operation
18A52:	00-00       	nop                   ; No Operation
18A54:	00-00       	nop                   ; No Operation
18A56:	00-00       	nop                   ; No Operation
18A58:	00-00       	nop                   ; No Operation
18A5A:	00-00       	nop                   ; No Operation
18A5C:	00-00       	nop                   ; No Operation
18A5E:	00-00       	nop                   ; No Operation
18A60:	00-00       	nop                   ; No Operation
18A62:	00-00       	nop                   ; No Operation
18A64:	00-00       	nop                   ; No Operation
18A66:	00-00       	nop                   ; No Operation
18A68:	00-00       	nop                   ; No Operation
18A6A:	00-00       	nop                   ; No Operation
18A6C:	00-00       	nop                   ; No Operation
18A6E:	00-00       	nop                   ; No Operation
18A70:	00-00       	nop                   ; No Operation
18A72:	00-00       	nop                   ; No Operation
18A74:	00-00       	nop                   ; No Operation
18A76:	00-00       	nop                   ; No Operation
18A78:	00-00       	nop                   ; No Operation
18A7A:	00-00       	nop                   ; No Operation
18A7C:	00-00       	nop                   ; No Operation
18A7E:	00-00       	nop                   ; No Operation
18A80:	00-00       	nop                   ; No Operation
18A82:	00-00       	nop                   ; No Operation
18A84:	00-00       	nop                   ; No Operation
18A86:	00-00       	nop                   ; No Operation
18A88:	00-00       	nop                   ; No Operation
18A8A:	00-00       	nop                   ; No Operation
18A8C:	00-00       	nop                   ; No Operation
18A8E:	00-00       	nop                   ; No Operation
18A90:	00-00       	nop                   ; No Operation
18A92:	00-00       	nop                   ; No Operation
18A94:	00-00       	nop                   ; No Operation
18A96:	00-00       	nop                   ; No Operation
18A98:	00-00       	nop                   ; No Operation
18A9A:	00-00       	nop                   ; No Operation
18A9C:	00-00       	nop                   ; No Operation
18A9E:	00-00       	nop                   ; No Operation
18AA0:	00-00       	nop                   ; No Operation
18AA2:	00-00       	nop                   ; No Operation
18AA4:	00-00       	nop                   ; No Operation
18AA6:	00-00       	nop                   ; No Operation
18AA8:	00-00       	nop                   ; No Operation
18AAA:	00-00       	nop                   ; No Operation
18AAC:	00-00       	nop                   ; No Operation
18AAE:	00-00       	nop                   ; No Operation
18AB0:	00-00       	nop                   ; No Operation
18AB2:	00-00       	nop                   ; No Operation
18AB4:	00-00       	nop                   ; No Operation
18AB6:	00-00       	nop                   ; No Operation
18AB8:	00-00       	nop                   ; No Operation
18ABA:	00-00       	nop                   ; No Operation
18ABC:	00-00       	nop                   ; No Operation
18ABE:	00-00       	nop                   ; No Operation
18AC0:	01-00       	.data 0x0001          ; Binary data
18AC2:	00-00       	nop                   ; No Operation
18AC4:	00-00       	nop                   ; No Operation
18AC6:	00-00       	nop                   ; No Operation
18AC8:	0E-33       	cpi r16, 0x3e         ; Compare with Immediate
18ACA:	CD-AB       	std Y+53, r28         ; Store Indirect From Register to Data Space
18ACC:	34-12       	cpse r3, r20          ; Compare Skip if Equal
18ACE:	6D-E6       	ldi r22, 0x6d         ; Load Immediate
18AD0:	EC-DE       	rcall .+7640          ; Relative Call to Subroutine
18AD2:	05-00       	.data 0x0005          ; Binary data
18AD4:	0B-00       	.data 0x000b          ; Binary data
18AD6:	00-00       	nop                   ; No Operation
18AD8:	00-00       	nop                   ; No Operation
18ADA:	00-00       	nop                   ; No Operation
18ADC:	00-00       	nop                   ; No Operation
18ADE:	00-00       	nop                   ; No Operation
18AE0:	00-00       	nop                   ; No Operation
18AE2:	00-00       	nop                   ; No Operation
18AE4:	00-00       	nop                   ; No Operation
18AE6:	00-00       	nop                   ; No Operation
18AE8:	00-00       	nop                   ; No Operation
18AEA:	00-00       	nop                   ; No Operation
18AEC:	00-00       	nop                   ; No Operation
18AEE:	00-00       	nop                   ; No Operation
18AF0:	00-00       	nop                   ; No Operation
18AF2:	00-00       	nop                   ; No Operation
18AF4:	00-00       	nop                   ; No Operation
18AF6:	00-00       	nop                   ; No Operation
18AF8:	00-00       	nop                   ; No Operation
18AFA:	00-00       	nop                   ; No Operation
18AFC:	00-00       	nop                   ; No Operation
18AFE:	00-00       	nop                   ; No Operation
18B00:	00-00       	nop                   ; No Operation
18B02:	00-00       	nop                   ; No Operation
18B04:	00-00       	nop                   ; No Operation
18B06:	00-00       	nop                   ; No Operation
18B08:	00-00       	nop                   ; No Operation
18B0A:	00-00       	nop                   ; No Operation
18B0C:	00-00       	nop                   ; No Operation
18B0E:	00-00       	nop                   ; No Operation
18B10:	00-00       	nop                   ; No Operation
18B12:	00-00       	nop                   ; No Operation
18B14:	00-00       	nop                   ; No Operation
18B16:	00-00       	nop                   ; No Operation
18B18:	00-00       	nop                   ; No Operation
18B1A:	00-00       	nop                   ; No Operation
18B1C:	00-00       	nop                   ; No Operation
18B1E:	00-00       	nop                   ; No Operation
18B20:	00-00       	nop                   ; No Operation
18B22:	00-00       	nop                   ; No Operation
18B24:	00-00       	nop                   ; No Operation
18B26:	00-00       	nop                   ; No Operation
18B28:	00-00       	nop                   ; No Operation
18B2A:	00-00       	nop                   ; No Operation
18B2C:	00-00       	nop                   ; No Operation
18B2E:	00-00       	nop                   ; No Operation
18B30:	00-00       	nop                   ; No Operation
18B32:	00-00       	nop                   ; No Operation
18B34:	00-00       	nop                   ; No Operation
18B36:	00-00       	nop                   ; No Operation
18B38:	00-00       	nop                   ; No Operation
18B3A:	00-00       	nop                   ; No Operation
18B3C:	00-00       	nop                   ; No Operation
18B3E:	00-00       	nop                   ; No Operation
18B40:	00-00       	nop                   ; No Operation
18B42:	00-00       	nop                   ; No Operation
18B44:	00-00       	nop                   ; No Operation
18B46:	00-00       	nop                   ; No Operation
18B48:	00-00       	nop                   ; No Operation
18B4A:	00-00       	nop                   ; No Operation
18B4C:	00-00       	nop                   ; No Operation
18B4E:	00-00       	nop                   ; No Operation
18B50:	00-00       	nop                   ; No Operation
18B52:	00-00       	nop                   ; No Operation
18B54:	00-00       	nop                   ; No Operation
18B56:	00-00       	nop                   ; No Operation
18B58:	00-00       	nop                   ; No Operation
18B5A:	00-00       	nop                   ; No Operation
18B5C:	00-00       	nop                   ; No Operation
18B5E:	00-00       	nop                   ; No Operation
18B60:	00-00       	nop                   ; No Operation
18B62:	00-00       	nop                   ; No Operation
18B64:	00-00       	nop                   ; No Operation
18B66:	00-00       	nop                   ; No Operation
18B68:	00-00       	nop                   ; No Operation
18B6A:	00-00       	nop                   ; No Operation
18B6C:	00-00       	nop                   ; No Operation
18B6E:	00-00       	nop                   ; No Operation
18B70:	00-00       	nop                   ; No Operation
18B72:	00-00       	nop                   ; No Operation
18B74:	00-00       	nop                   ; No Operation
18B76:	00-00       	nop                   ; No Operation
18B78:	00-00       	nop                   ; No Operation
18B7A:	00-00       	nop                   ; No Operation
18B7C:	00-00       	nop                   ; No Operation
18B7E:	00-00       	nop                   ; No Operation
18B80:	00-00       	nop                   ; No Operation
18B82:	00-00       	nop                   ; No Operation
18B84:	00-00       	nop                   ; No Operation
18B86:	00-00       	nop                   ; No Operation
18B88:	00-00       	nop                   ; No Operation
18B8A:	00-00       	nop                   ; No Operation
18B8C:	00-00       	nop                   ; No Operation
18B8E:	00-00       	nop                   ; No Operation
18B90:	00-00       	nop                   ; No Operation
18B92:	00-00       	nop                   ; No Operation
18B94:	00-00       	nop                   ; No Operation
18B96:	00-00       	nop                   ; No Operation
18B98:	00-00       	nop                   ; No Operation
18B9A:	00-00       	nop                   ; No Operation
18B9C:	00-00       	nop                   ; No Operation
18B9E:	00-00       	nop                   ; No Operation
18BA0:	00-00       	nop                   ; No Operation
18BA2:	00-00       	nop                   ; No Operation
18BA4:	00-00       	nop                   ; No Operation
18BA6:	00-00       	nop                   ; No Operation
18BA8:	00-00       	nop                   ; No Operation
18BAA:	00-00       	nop                   ; No Operation
18BAC:	00-00       	nop                   ; No Operation
18BAE:	00-00       	nop                   ; No Operation
18BB0:	00-00       	nop                   ; No Operation
18BB2:	00-00       	nop                   ; No Operation
18BB4:	00-00       	nop                   ; No Operation
18BB6:	00-00       	nop                   ; No Operation
18BB8:	00-00       	nop                   ; No Operation
18BBA:	00-00       	nop                   ; No Operation
18BBC:	00-00       	nop                   ; No Operation
18BBE:	00-00       	nop                   ; No Operation
18BC0:	00-00       	nop                   ; No Operation
18BC2:	00-00       	nop                   ; No Operation
18BC4:	00-00       	nop                   ; No Operation
18BC6:	00-00       	nop                   ; No Operation
18BC8:	00-00       	nop                   ; No Operation
18BCA:	00-00       	nop                   ; No Operation
18BCC:	00-00       	nop                   ; No Operation
18BCE:	00-00       	nop                   ; No Operation
18BD0:	00-00       	nop                   ; No Operation
18BD2:	00-00       	nop                   ; No Operation
18BD4:	00-00       	nop                   ; No Operation
18BD6:	00-00       	nop                   ; No Operation
18BD8:	00-00       	nop                   ; No Operation
18BDA:	00-00       	nop                   ; No Operation
18BDC:	00-00       	nop                   ; No Operation
18BDE:	00-00       	nop                   ; No Operation
18BE0:	00-00       	nop                   ; No Operation
18BE2:	00-00       	nop                   ; No Operation
18BE4:	00-00       	nop                   ; No Operation
18BE6:	00-00       	nop                   ; No Operation
18BE8:	00-00       	nop                   ; No Operation
18BEA:	00-00       	nop                   ; No Operation
18BEC:	00-00       	nop                   ; No Operation
18BEE:	00-00       	nop                   ; No Operation
18BF0:	00-00       	nop                   ; No Operation
18BF2:	00-00       	nop                   ; No Operation
18BF4:	00-00       	nop                   ; No Operation
18BF6:	00-00       	nop                   ; No Operation
18BF8:	00-00       	nop                   ; No Operation
18BFA:	00-00       	nop                   ; No Operation
18BFC:	00-00       	nop                   ; No Operation
18BFE:	00-00       	nop                   ; No Operation
18C00:	00-00       	nop                   ; No Operation
18C02:	00-00       	nop                   ; No Operation
18C04:	00-00       	nop                   ; No Operation
18C06:	00-00       	nop                   ; No Operation
18C08:	00-00       	nop                   ; No Operation
18C0A:	00-00       	nop                   ; No Operation
18C0C:	00-00       	nop                   ; No Operation
18C0E:	00-00       	nop                   ; No Operation
18C10:	00-00       	nop                   ; No Operation
18C12:	00-00       	nop                   ; No Operation
18C14:	00-00       	nop                   ; No Operation
18C16:	00-00       	nop                   ; No Operation
18C18:	00-00       	nop                   ; No Operation
18C1A:	00-00       	nop                   ; No Operation
18C1C:	00-00       	nop                   ; No Operation
18C1E:	00-00       	nop                   ; No Operation
18C20:	00-00       	nop                   ; No Operation
18C22:	00-00       	nop                   ; No Operation
18C24:	00-00       	nop                   ; No Operation
18C26:	00-00       	nop                   ; No Operation
18C28:	00-00       	nop                   ; No Operation
18C2A:	00-00       	nop                   ; No Operation
18C2C:	00-00       	nop                   ; No Operation
18C2E:	00-00       	nop                   ; No Operation
18C30:	00-00       	nop                   ; No Operation
18C32:	00-00       	nop                   ; No Operation
18C34:	00-00       	nop                   ; No Operation
18C36:	00-00       	nop                   ; No Operation
18C38:	00-00       	nop                   ; No Operation
18C3A:	00-00       	nop                   ; No Operation
18C3C:	00-00       	nop                   ; No Operation
18C3E:	00-00       	nop                   ; No Operation
18C40:	00-00       	nop                   ; No Operation
18C42:	00-00       	nop                   ; No Operation
18C44:	00-00       	nop                   ; No Operation
18C46:	00-00       	nop                   ; No Operation
18C48:	00-00       	nop                   ; No Operation
18C4A:	00-00       	nop                   ; No Operation
18C4C:	00-00       	nop                   ; No Operation
18C4E:	00-00       	nop                   ; No Operation
18C50:	00-00       	nop                   ; No Operation
18C52:	00-00       	nop                   ; No Operation
18C54:	00-00       	nop                   ; No Operation
18C56:	00-00       	nop                   ; No Operation
18C58:	00-00       	nop                   ; No Operation
18C5A:	00-00       	nop                   ; No Operation
18C5C:	00-00       	nop                   ; No Operation
18C5E:	00-00       	nop                   ; No Operation
18C60:	00-00       	nop                   ; No Operation
18C62:	00-00       	nop                   ; No Operation
18C64:	00-00       	nop                   ; No Operation
18C66:	00-00       	nop                   ; No Operation
18C68:	00-00       	nop                   ; No Operation
18C6A:	00-00       	nop                   ; No Operation
18C6C:	00-00       	nop                   ; No Operation
18C6E:	00-00       	nop                   ; No Operation
18C70:	00-00       	nop                   ; No Operation
18C72:	00-00       	nop                   ; No Operation
18C74:	00-00       	nop                   ; No Operation
18C76:	00-00       	nop                   ; No Operation
18C78:	00-00       	nop                   ; No Operation
18C7A:	00-00       	nop                   ; No Operation
18C7C:	00-00       	nop                   ; No Operation
18C7E:	00-00       	nop                   ; No Operation
18C80:	00-00       	nop                   ; No Operation
18C82:	00-00       	nop                   ; No Operation
18C84:	00-00       	nop                   ; No Operation
18C86:	00-00       	nop                   ; No Operation
18C88:	00-00       	nop                   ; No Operation
18C8A:	00-00       	nop                   ; No Operation
18C8C:	00-00       	nop                   ; No Operation
18C8E:	00-00       	nop                   ; No Operation
18C90:	00-00       	nop                   ; No Operation
18C92:	00-00       	nop                   ; No Operation
18C94:	00-00       	nop                   ; No Operation
18C96:	00-00       	nop                   ; No Operation
18C98:	00-00       	nop                   ; No Operation
18C9A:	00-00       	nop                   ; No Operation
18C9C:	00-00       	nop                   ; No Operation
18C9E:	00-00       	nop                   ; No Operation
18CA0:	00-00       	nop                   ; No Operation
18CA2:	00-00       	nop                   ; No Operation
18CA4:	00-00       	nop                   ; No Operation
18CA6:	00-00       	nop                   ; No Operation
18CA8:	00-00       	nop                   ; No Operation
18CAA:	00-00       	nop                   ; No Operation
18CAC:	00-00       	nop                   ; No Operation
18CAE:	00-00       	nop                   ; No Operation
18CB0:	00-00       	nop                   ; No Operation
18CB2:	00-00       	nop                   ; No Operation
18CB4:	00-00       	nop                   ; No Operation
18CB6:	00-00       	nop                   ; No Operation
18CB8:	00-00       	nop                   ; No Operation
18CBA:	00-00       	nop                   ; No Operation
18CBC:	00-00       	nop                   ; No Operation
18CBE:	00-00       	nop                   ; No Operation
18CC0:	00-00       	nop                   ; No Operation
18CC2:	00-00       	nop                   ; No Operation
18CC4:	00-00       	nop                   ; No Operation
18CC6:	00-00       	nop                   ; No Operation
18CC8:	00-00       	nop                   ; No Operation
18CCA:	00-00       	nop                   ; No Operation
18CCC:	00-00       	nop                   ; No Operation
18CCE:	00-00       	nop                   ; No Operation
18CD0:	00-00       	nop                   ; No Operation
18CD2:	00-00       	nop                   ; No Operation
18CD4:	00-00       	nop                   ; No Operation
18CD6:	00-00       	nop                   ; No Operation
18CD8:	00-00       	nop                   ; No Operation
18CDA:	00-00       	nop                   ; No Operation
18CDC:	00-00       	nop                   ; No Operation
18CDE:	00-00       	nop                   ; No Operation
18CE0:	00-00       	nop                   ; No Operation
18CE2:	00-00       	nop                   ; No Operation
18CE4:	00-00       	nop                   ; No Operation
18CE6:	00-00       	nop                   ; No Operation
18CE8:	00-00       	nop                   ; No Operation
18CEA:	00-00       	nop                   ; No Operation
18CEC:	00-00       	nop                   ; No Operation
18CEE:	00-00       	nop                   ; No Operation
18CF0:	00-00       	nop                   ; No Operation
18CF2:	00-00       	nop                   ; No Operation
18CF4:	00-00       	nop                   ; No Operation
18CF6:	00-00       	nop                   ; No Operation
18CF8:	00-00       	nop                   ; No Operation
18CFA:	00-00       	nop                   ; No Operation
18CFC:	00-00       	nop                   ; No Operation
18CFE:	00-00       	nop                   ; No Operation
18D00:	00-00       	nop                   ; No Operation
18D02:	00-00       	nop                   ; No Operation
18D04:	00-00       	nop                   ; No Operation
18D06:	00-00       	nop                   ; No Operation
18D08:	00-00       	nop                   ; No Operation
18D0A:	00-00       	nop                   ; No Operation
18D0C:	00-00       	nop                   ; No Operation
18D0E:	00-00       	nop                   ; No Operation
18D10:	00-00       	nop                   ; No Operation
18D12:	00-00       	nop                   ; No Operation
18D14:	00-00       	nop                   ; No Operation
18D16:	00-00       	nop                   ; No Operation
18D18:	00-00       	nop                   ; No Operation
18D1A:	00-00       	nop                   ; No Operation
18D1C:	00-00       	nop                   ; No Operation
18D1E:	00-00       	nop                   ; No Operation
18D20:	00-00       	nop                   ; No Operation
18D22:	00-00       	nop                   ; No Operation
18D24:	00-00       	nop                   ; No Operation
18D26:	00-00       	nop                   ; No Operation
18D28:	00-00       	nop                   ; No Operation
18D2A:	00-00       	nop                   ; No Operation
18D2C:	00-00       	nop                   ; No Operation
18D2E:	00-00       	nop                   ; No Operation
18D30:	00-00       	nop                   ; No Operation
18D32:	00-00       	nop                   ; No Operation
18D34:	00-00       	nop                   ; No Operation
18D36:	00-00       	nop                   ; No Operation
18D38:	00-00       	nop                   ; No Operation
18D3A:	00-00       	nop                   ; No Operation
18D3C:	00-00       	nop                   ; No Operation
18D3E:	00-00       	nop                   ; No Operation
18D40:	00-00       	nop                   ; No Operation
18D42:	00-00       	nop                   ; No Operation
18D44:	00-00       	nop                   ; No Operation
18D46:	00-00       	nop                   ; No Operation
18D48:	00-00       	nop                   ; No Operation
18D4A:	00-00       	nop                   ; No Operation
18D4C:	00-00       	nop                   ; No Operation
18D4E:	00-00       	nop                   ; No Operation
18D50:	00-00       	nop                   ; No Operation
18D52:	00-00       	nop                   ; No Operation
18D54:	00-00       	nop                   ; No Operation
18D56:	00-00       	nop                   ; No Operation
18D58:	00-00       	nop                   ; No Operation
18D5A:	00-00       	nop                   ; No Operation
18D5C:	00-00       	nop                   ; No Operation
18D5E:	00-00       	nop                   ; No Operation
18D60:	00-00       	nop                   ; No Operation
18D62:	00-00       	nop                   ; No Operation
18D64:	00-00       	nop                   ; No Operation
18D66:	00-00       	nop                   ; No Operation
18D68:	00-00       	nop                   ; No Operation
18D6A:	00-00       	nop                   ; No Operation
18D6C:	00-00       	nop                   ; No Operation
18D6E:	00-00       	nop                   ; No Operation
18D70:	00-00       	nop                   ; No Operation
18D72:	00-00       	nop                   ; No Operation
18D74:	00-00       	nop                   ; No Operation
18D76:	00-00       	nop                   ; No Operation
18D78:	00-00       	nop                   ; No Operation
18D7A:	00-00       	nop                   ; No Operation
18D7C:	00-00       	nop                   ; No Operation
18D7E:	00-00       	nop                   ; No Operation
18D80:	00-00       	nop                   ; No Operation
18D82:	00-00       	nop                   ; No Operation
18D84:	00-00       	nop                   ; No Operation
18D86:	00-00       	nop                   ; No Operation
18D88:	00-00       	nop                   ; No Operation
18D8A:	00-00       	nop                   ; No Operation
18D8C:	00-00       	nop                   ; No Operation
18D8E:	00-00       	nop                   ; No Operation
18D90:	00-00       	nop                   ; No Operation
18D92:	00-00       	nop                   ; No Operation
18D94:	00-00       	nop                   ; No Operation
18D96:	00-00       	nop                   ; No Operation
18D98:	00-00       	nop                   ; No Operation
18D9A:	00-00       	nop                   ; No Operation
18D9C:	00-00       	nop                   ; No Operation
18D9E:	00-00       	nop                   ; No Operation
18DA0:	00-00       	nop                   ; No Operation
18DA2:	00-00       	nop                   ; No Operation
18DA4:	00-00       	nop                   ; No Operation
18DA6:	00-00       	nop                   ; No Operation
18DA8:	00-00       	nop                   ; No Operation
18DAA:	00-00       	nop                   ; No Operation
18DAC:	00-00       	nop                   ; No Operation
18DAE:	00-00       	nop                   ; No Operation
18DB0:	00-00       	nop                   ; No Operation
18DB2:	00-00       	nop                   ; No Operation
18DB4:	00-00       	nop                   ; No Operation
18DB6:	00-00       	nop                   ; No Operation
18DB8:	00-00       	nop                   ; No Operation
18DBA:	00-00       	nop                   ; No Operation
18DBC:	00-00       	nop                   ; No Operation
18DBE:	00-00       	nop                   ; No Operation
18DC0:	00-00       	nop                   ; No Operation
18DC2:	00-00       	nop                   ; No Operation
18DC4:	00-00       	nop                   ; No Operation
18DC6:	00-00       	nop                   ; No Operation
18DC8:	00-00       	nop                   ; No Operation
18DCA:	00-00       	nop                   ; No Operation
18DCC:	00-00       	nop                   ; No Operation
18DCE:	00-00       	nop                   ; No Operation
18DD0:	00-00       	nop                   ; No Operation
18DD2:	00-00       	nop                   ; No Operation
18DD4:	00-00       	nop                   ; No Operation
18DD6:	00-00       	nop                   ; No Operation
18DD8:	00-00       	nop                   ; No Operation
18DDA:	00-00       	nop                   ; No Operation
18DDC:	00-00       	nop                   ; No Operation
18DDE:	00-00       	nop                   ; No Operation
18DE0:	00-00       	nop                   ; No Operation
18DE2:	00-00       	nop                   ; No Operation
18DE4:	00-00       	nop                   ; No Operation
18DE6:	00-00       	nop                   ; No Operation
18DE8:	00-00       	nop                   ; No Operation
18DEA:	00-00       	nop                   ; No Operation
18DEC:	00-00       	nop                   ; No Operation
18DEE:	00-00       	nop                   ; No Operation
18DF0:	00-00       	nop                   ; No Operation
18DF2:	00-00       	nop                   ; No Operation
18DF4:	00-00       	nop                   ; No Operation
18DF6:	00-00       	nop                   ; No Operation
18DF8:	00-00       	nop                   ; No Operation
18DFA:	00-00       	nop                   ; No Operation
18DFC:	00-00       	nop                   ; No Operation
18DFE:	00-00       	nop                   ; No Operation
18E00:	00-00       	nop                   ; No Operation
18E02:	00-00       	nop                   ; No Operation
18E04:	00-00       	nop                   ; No Operation
18E06:	00-00       	nop                   ; No Operation
18E08:	00-00       	nop                   ; No Operation
18E0A:	00-00       	nop                   ; No Operation
18E0C:	00-00       	nop                   ; No Operation
18E0E:	00-00       	nop                   ; No Operation
18E10:	00-00       	nop                   ; No Operation
18E12:	00-00       	nop                   ; No Operation
18E14:	00-00       	nop                   ; No Operation
18E16:	00-00       	nop                   ; No Operation
18E18:	00-00       	nop                   ; No Operation
18E1A:	00-00       	nop                   ; No Operation
18E1C:	00-00       	nop                   ; No Operation
18E1E:	00-00       	nop                   ; No Operation
18E20:	00-00       	nop                   ; No Operation
18E22:	00-00       	nop                   ; No Operation
18E24:	00-00       	nop                   ; No Operation
18E26:	00-00       	nop                   ; No Operation
18E28:	00-00       	nop                   ; No Operation
18E2A:	00-00       	nop                   ; No Operation
18E2C:	00-00       	nop                   ; No Operation
18E2E:	00-00       	nop                   ; No Operation
18E30:	00-00       	nop                   ; No Operation
18E32:	00-00       	nop                   ; No Operation
18E34:	00-00       	nop                   ; No Operation
18E36:	00-00       	nop                   ; No Operation
18E38:	00-00       	nop                   ; No Operation
18E3A:	00-00       	nop                   ; No Operation
18E3C:	00-00       	nop                   ; No Operation
18E3E:	00-00       	nop                   ; No Operation
18E40:	A0-94       	com r10               ; One's Complement
18E42:	FF-1F       	adc r31, r31          ; Add with Carry
18E44:	00-00       	nop                   ; No Operation
18E46:	00-00       	nop                   ; No Operation
18E48:	00-00       	nop                   ; No Operation
18E4A:	00-00       	nop                   ; No Operation
18E4C:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
18E4E:	FF-1F       	adc r31, r31          ; Add with Carry
18E50:	CC-98       	cbi 0x19, 4           ; Clear Bit in I/O Register
18E52:	FF-1F       	adc r31, r31          ; Add with Carry
18E54:	D4-98       	cbi 0x1a, 4           ; Clear Bit in I/O Register
18E56:	FF-1F       	adc r31, r31          ; Add with Carry
18E58:	D4-98       	cbi 0x1a, 4           ; Clear Bit in I/O Register
18E5A:	FF-1F       	adc r31, r31          ; Add with Carry
18E5C:	DC-98       	cbi 0x1b, 4           ; Clear Bit in I/O Register
18E5E:	FF-1F       	adc r31, r31          ; Add with Carry
18E60:	DC-98       	cbi 0x1b, 4           ; Clear Bit in I/O Register
18E62:	FF-1F       	adc r31, r31          ; Add with Carry
18E64:	E4-98       	cbi 0x1c, 4           ; Clear Bit in I/O Register
18E66:	FF-1F       	adc r31, r31          ; Add with Carry
18E68:	E4-98       	cbi 0x1c, 4           ; Clear Bit in I/O Register
18E6A:	FF-1F       	adc r31, r31          ; Add with Carry
18E6C:	EC-98       	cbi 0x1d, 4           ; Clear Bit in I/O Register
18E6E:	FF-1F       	adc r31, r31          ; Add with Carry
18E70:	EC-98       	cbi 0x1d, 4           ; Clear Bit in I/O Register
18E72:	FF-1F       	adc r31, r31          ; Add with Carry
18E74:	F4-98       	cbi 0x1e, 4           ; Clear Bit in I/O Register
18E76:	FF-1F       	adc r31, r31          ; Add with Carry
18E78:	F4-98       	cbi 0x1e, 4           ; Clear Bit in I/O Register
18E7A:	FF-1F       	adc r31, r31          ; Add with Carry
18E7C:	FC-98       	cbi 0x1f, 4           ; Clear Bit in I/O Register
18E7E:	FF-1F       	adc r31, r31          ; Add with Carry
18E80:	FC-98       	cbi 0x1f, 4           ; Clear Bit in I/O Register
18E82:	FF-1F       	adc r31, r31          ; Add with Carry
18E84:	04-99       	sbic 0x00, 4          ; Skip if Bit in I/O Register is Cleared
18E86:	FF-1F       	adc r31, r31          ; Add with Carry
18E88:	04-99       	sbic 0x00, 4          ; Skip if Bit in I/O Register is Cleared
18E8A:	FF-1F       	adc r31, r31          ; Add with Carry
18E8C:	0C-99       	sbic 0x01, 4          ; Skip if Bit in I/O Register is Cleared
18E8E:	FF-1F       	adc r31, r31          ; Add with Carry
18E90:	0C-99       	sbic 0x01, 4          ; Skip if Bit in I/O Register is Cleared
18E92:	FF-1F       	adc r31, r31          ; Add with Carry
18E94:	14-99       	sbic 0x02, 4          ; Skip if Bit in I/O Register is Cleared
18E96:	FF-1F       	adc r31, r31          ; Add with Carry
18E98:	14-99       	sbic 0x02, 4          ; Skip if Bit in I/O Register is Cleared
18E9A:	FF-1F       	adc r31, r31          ; Add with Carry
18E9C:	1C-99       	sbic 0x03, 4          ; Skip if Bit in I/O Register is Cleared
18E9E:	FF-1F       	adc r31, r31          ; Add with Carry
18EA0:	1C-99       	sbic 0x03, 4          ; Skip if Bit in I/O Register is Cleared
18EA2:	FF-1F       	adc r31, r31          ; Add with Carry
18EA4:	24-99       	sbic 0x04, 4          ; Skip if Bit in I/O Register is Cleared
18EA6:	FF-1F       	adc r31, r31          ; Add with Carry
18EA8:	24-99       	sbic 0x04, 4          ; Skip if Bit in I/O Register is Cleared
18EAA:	FF-1F       	adc r31, r31          ; Add with Carry
18EAC:	2C-99       	sbic 0x05, 4          ; Skip if Bit in I/O Register is Cleared
18EAE:	FF-1F       	adc r31, r31          ; Add with Carry
18EB0:	2C-99       	sbic 0x05, 4          ; Skip if Bit in I/O Register is Cleared
18EB2:	FF-1F       	adc r31, r31          ; Add with Carry
18EB4:	34-99       	sbic 0x06, 4          ; Skip if Bit in I/O Register is Cleared
18EB6:	FF-1F       	adc r31, r31          ; Add with Carry
18EB8:	34-99       	sbic 0x06, 4          ; Skip if Bit in I/O Register is Cleared
18EBA:	FF-1F       	adc r31, r31          ; Add with Carry
18EBC:	3C-99       	sbic 0x07, 4          ; Skip if Bit in I/O Register is Cleared
18EBE:	FF-1F       	adc r31, r31          ; Add with Carry
18EC0:	3C-99       	sbic 0x07, 4          ; Skip if Bit in I/O Register is Cleared
18EC2:	FF-1F       	adc r31, r31          ; Add with Carry
18EC4:	44-99       	sbic 0x08, 4          ; Skip if Bit in I/O Register is Cleared
18EC6:	FF-1F       	adc r31, r31          ; Add with Carry
18EC8:	44-99       	sbic 0x08, 4          ; Skip if Bit in I/O Register is Cleared
18ECA:	FF-1F       	adc r31, r31          ; Add with Carry
18ECC:	4C-99       	sbic 0x09, 4          ; Skip if Bit in I/O Register is Cleared
18ECE:	FF-1F       	adc r31, r31          ; Add with Carry
18ED0:	4C-99       	sbic 0x09, 4          ; Skip if Bit in I/O Register is Cleared
18ED2:	FF-1F       	adc r31, r31          ; Add with Carry
18ED4:	54-99       	sbic 0x0a, 4          ; Skip if Bit in I/O Register is Cleared
18ED6:	FF-1F       	adc r31, r31          ; Add with Carry
18ED8:	54-99       	sbic 0x0a, 4          ; Skip if Bit in I/O Register is Cleared
18EDA:	FF-1F       	adc r31, r31          ; Add with Carry
18EDC:	5C-99       	sbic 0x0b, 4          ; Skip if Bit in I/O Register is Cleared
18EDE:	FF-1F       	adc r31, r31          ; Add with Carry
18EE0:	5C-99       	sbic 0x0b, 4          ; Skip if Bit in I/O Register is Cleared
18EE2:	FF-1F       	adc r31, r31          ; Add with Carry
18EE4:	64-99       	sbic 0x0c, 4          ; Skip if Bit in I/O Register is Cleared
18EE6:	FF-1F       	adc r31, r31          ; Add with Carry
18EE8:	64-99       	sbic 0x0c, 4          ; Skip if Bit in I/O Register is Cleared
18EEA:	FF-1F       	adc r31, r31          ; Add with Carry
18EEC:	6C-99       	sbic 0x0d, 4          ; Skip if Bit in I/O Register is Cleared
18EEE:	FF-1F       	adc r31, r31          ; Add with Carry
18EF0:	6C-99       	sbic 0x0d, 4          ; Skip if Bit in I/O Register is Cleared
18EF2:	FF-1F       	adc r31, r31          ; Add with Carry
18EF4:	74-99       	sbic 0x0e, 4          ; Skip if Bit in I/O Register is Cleared
18EF6:	FF-1F       	adc r31, r31          ; Add with Carry
18EF8:	74-99       	sbic 0x0e, 4          ; Skip if Bit in I/O Register is Cleared
18EFA:	FF-1F       	adc r31, r31          ; Add with Carry
18EFC:	7C-99       	sbic 0x0f, 4          ; Skip if Bit in I/O Register is Cleared
18EFE:	FF-1F       	adc r31, r31          ; Add with Carry
18F00:	7C-99       	sbic 0x0f, 4          ; Skip if Bit in I/O Register is Cleared
18F02:	FF-1F       	adc r31, r31          ; Add with Carry
18F04:	84-99       	sbic 0x10, 4          ; Skip if Bit in I/O Register is Cleared
18F06:	FF-1F       	adc r31, r31          ; Add with Carry
18F08:	84-99       	sbic 0x10, 4          ; Skip if Bit in I/O Register is Cleared
18F0A:	FF-1F       	adc r31, r31          ; Add with Carry
18F0C:	8C-99       	sbic 0x11, 4          ; Skip if Bit in I/O Register is Cleared
18F0E:	FF-1F       	adc r31, r31          ; Add with Carry
18F10:	8C-99       	sbic 0x11, 4          ; Skip if Bit in I/O Register is Cleared
18F12:	FF-1F       	adc r31, r31          ; Add with Carry
18F14:	94-99       	sbic 0x12, 4          ; Skip if Bit in I/O Register is Cleared
18F16:	FF-1F       	adc r31, r31          ; Add with Carry
18F18:	94-99       	sbic 0x12, 4          ; Skip if Bit in I/O Register is Cleared
18F1A:	FF-1F       	adc r31, r31          ; Add with Carry
18F1C:	9C-99       	sbic 0x13, 4          ; Skip if Bit in I/O Register is Cleared
18F1E:	FF-1F       	adc r31, r31          ; Add with Carry
18F20:	9C-99       	sbic 0x13, 4          ; Skip if Bit in I/O Register is Cleared
18F22:	FF-1F       	adc r31, r31          ; Add with Carry
18F24:	A4-99       	sbic 0x14, 4          ; Skip if Bit in I/O Register is Cleared
18F26:	FF-1F       	adc r31, r31          ; Add with Carry
18F28:	A4-99       	sbic 0x14, 4          ; Skip if Bit in I/O Register is Cleared
18F2A:	FF-1F       	adc r31, r31          ; Add with Carry
18F2C:	AC-99       	sbic 0x15, 4          ; Skip if Bit in I/O Register is Cleared
18F2E:	FF-1F       	adc r31, r31          ; Add with Carry
18F30:	AC-99       	sbic 0x15, 4          ; Skip if Bit in I/O Register is Cleared
18F32:	FF-1F       	adc r31, r31          ; Add with Carry
18F34:	B4-99       	sbic 0x16, 4          ; Skip if Bit in I/O Register is Cleared
18F36:	FF-1F       	adc r31, r31          ; Add with Carry
18F38:	B4-99       	sbic 0x16, 4          ; Skip if Bit in I/O Register is Cleared
18F3A:	FF-1F       	adc r31, r31          ; Add with Carry
18F3C:	BC-99       	sbic 0x17, 4          ; Skip if Bit in I/O Register is Cleared
18F3E:	FF-1F       	adc r31, r31          ; Add with Carry
18F40:	BC-99       	sbic 0x17, 4          ; Skip if Bit in I/O Register is Cleared
18F42:	FF-1F       	adc r31, r31          ; Add with Carry
18F44:	C4-99       	sbic 0x18, 4          ; Skip if Bit in I/O Register is Cleared
18F46:	FF-1F       	adc r31, r31          ; Add with Carry
18F48:	C4-99       	sbic 0x18, 4          ; Skip if Bit in I/O Register is Cleared
18F4A:	FF-1F       	adc r31, r31          ; Add with Carry
18F4C:	CC-99       	sbic 0x19, 4          ; Skip if Bit in I/O Register is Cleared
18F4E:	FF-1F       	adc r31, r31          ; Add with Carry
18F50:	CC-99       	sbic 0x19, 4          ; Skip if Bit in I/O Register is Cleared
18F52:	FF-1F       	adc r31, r31          ; Add with Carry
18F54:	D4-99       	sbic 0x1a, 4          ; Skip if Bit in I/O Register is Cleared
18F56:	FF-1F       	adc r31, r31          ; Add with Carry
18F58:	D4-99       	sbic 0x1a, 4          ; Skip if Bit in I/O Register is Cleared
18F5A:	FF-1F       	adc r31, r31          ; Add with Carry
18F5C:	DC-99       	sbic 0x1b, 4          ; Skip if Bit in I/O Register is Cleared
18F5E:	FF-1F       	adc r31, r31          ; Add with Carry
18F60:	DC-99       	sbic 0x1b, 4          ; Skip if Bit in I/O Register is Cleared
18F62:	FF-1F       	adc r31, r31          ; Add with Carry
18F64:	E4-99       	sbic 0x1c, 4          ; Skip if Bit in I/O Register is Cleared
18F66:	FF-1F       	adc r31, r31          ; Add with Carry
18F68:	E4-99       	sbic 0x1c, 4          ; Skip if Bit in I/O Register is Cleared
18F6A:	FF-1F       	adc r31, r31          ; Add with Carry
18F6C:	EC-99       	sbic 0x1d, 4          ; Skip if Bit in I/O Register is Cleared
18F6E:	FF-1F       	adc r31, r31          ; Add with Carry
18F70:	EC-99       	sbic 0x1d, 4          ; Skip if Bit in I/O Register is Cleared
18F72:	FF-1F       	adc r31, r31          ; Add with Carry
18F74:	F4-99       	sbic 0x1e, 4          ; Skip if Bit in I/O Register is Cleared
18F76:	FF-1F       	adc r31, r31          ; Add with Carry
18F78:	F4-99       	sbic 0x1e, 4          ; Skip if Bit in I/O Register is Cleared
18F7A:	FF-1F       	adc r31, r31          ; Add with Carry
18F7C:	FC-99       	sbic 0x1f, 4          ; Skip if Bit in I/O Register is Cleared
18F7E:	FF-1F       	adc r31, r31          ; Add with Carry
18F80:	FC-99       	sbic 0x1f, 4          ; Skip if Bit in I/O Register is Cleared
18F82:	FF-1F       	adc r31, r31          ; Add with Carry
18F84:	04-9A       	sbi 0x00, 4           ; Set Bit in I/O Register
18F86:	FF-1F       	adc r31, r31          ; Add with Carry
18F88:	04-9A       	sbi 0x00, 4           ; Set Bit in I/O Register
18F8A:	FF-1F       	adc r31, r31          ; Add with Carry
18F8C:	0C-9A       	sbi 0x01, 4           ; Set Bit in I/O Register
18F8E:	FF-1F       	adc r31, r31          ; Add with Carry
18F90:	0C-9A       	sbi 0x01, 4           ; Set Bit in I/O Register
18F92:	FF-1F       	adc r31, r31          ; Add with Carry
18F94:	14-9A       	sbi 0x02, 4           ; Set Bit in I/O Register
18F96:	FF-1F       	adc r31, r31          ; Add with Carry
18F98:	14-9A       	sbi 0x02, 4           ; Set Bit in I/O Register
18F9A:	FF-1F       	adc r31, r31          ; Add with Carry
18F9C:	1C-9A       	sbi 0x03, 4           ; Set Bit in I/O Register
18F9E:	FF-1F       	adc r31, r31          ; Add with Carry
18FA0:	1C-9A       	sbi 0x03, 4           ; Set Bit in I/O Register
18FA2:	FF-1F       	adc r31, r31          ; Add with Carry
18FA4:	24-9A       	sbi 0x04, 4           ; Set Bit in I/O Register
18FA6:	FF-1F       	adc r31, r31          ; Add with Carry
18FA8:	24-9A       	sbi 0x04, 4           ; Set Bit in I/O Register
18FAA:	FF-1F       	adc r31, r31          ; Add with Carry
18FAC:	2C-9A       	sbi 0x05, 4           ; Set Bit in I/O Register
18FAE:	FF-1F       	adc r31, r31          ; Add with Carry
18FB0:	2C-9A       	sbi 0x05, 4           ; Set Bit in I/O Register
18FB2:	FF-1F       	adc r31, r31          ; Add with Carry
18FB4:	34-9A       	sbi 0x06, 4           ; Set Bit in I/O Register
18FB6:	FF-1F       	adc r31, r31          ; Add with Carry
18FB8:	34-9A       	sbi 0x06, 4           ; Set Bit in I/O Register
18FBA:	FF-1F       	adc r31, r31          ; Add with Carry
18FBC:	3C-9A       	sbi 0x07, 4           ; Set Bit in I/O Register
18FBE:	FF-1F       	adc r31, r31          ; Add with Carry
18FC0:	3C-9A       	sbi 0x07, 4           ; Set Bit in I/O Register
18FC2:	FF-1F       	adc r31, r31          ; Add with Carry
18FC4:	44-9A       	sbi 0x08, 4           ; Set Bit in I/O Register
18FC6:	FF-1F       	adc r31, r31          ; Add with Carry
18FC8:	44-9A       	sbi 0x08, 4           ; Set Bit in I/O Register
18FCA:	FF-1F       	adc r31, r31          ; Add with Carry
18FCC:	4C-9A       	sbi 0x09, 4           ; Set Bit in I/O Register
18FCE:	FF-1F       	adc r31, r31          ; Add with Carry
18FD0:	4C-9A       	sbi 0x09, 4           ; Set Bit in I/O Register
18FD2:	FF-1F       	adc r31, r31          ; Add with Carry
18FD4:	54-9A       	sbi 0x0a, 4           ; Set Bit in I/O Register
18FD6:	FF-1F       	adc r31, r31          ; Add with Carry
18FD8:	54-9A       	sbi 0x0a, 4           ; Set Bit in I/O Register
18FDA:	FF-1F       	adc r31, r31          ; Add with Carry
18FDC:	5C-9A       	sbi 0x0b, 4           ; Set Bit in I/O Register
18FDE:	FF-1F       	adc r31, r31          ; Add with Carry
18FE0:	5C-9A       	sbi 0x0b, 4           ; Set Bit in I/O Register
18FE2:	FF-1F       	adc r31, r31          ; Add with Carry
18FE4:	64-9A       	sbi 0x0c, 4           ; Set Bit in I/O Register
18FE6:	FF-1F       	adc r31, r31          ; Add with Carry
18FE8:	64-9A       	sbi 0x0c, 4           ; Set Bit in I/O Register
18FEA:	FF-1F       	adc r31, r31          ; Add with Carry
18FEC:	6C-9A       	sbi 0x0d, 4           ; Set Bit in I/O Register
18FEE:	FF-1F       	adc r31, r31          ; Add with Carry
18FF0:	6C-9A       	sbi 0x0d, 4           ; Set Bit in I/O Register
18FF2:	FF-1F       	adc r31, r31          ; Add with Carry
18FF4:	74-9A       	sbi 0x0e, 4           ; Set Bit in I/O Register
18FF6:	FF-1F       	adc r31, r31          ; Add with Carry
18FF8:	74-9A       	sbi 0x0e, 4           ; Set Bit in I/O Register
18FFA:	FF-1F       	adc r31, r31          ; Add with Carry
18FFC:	7C-9A       	sbi 0x0f, 4           ; Set Bit in I/O Register
18FFE:	FF-1F       	adc r31, r31          ; Add with Carry
19000:	7C-9A       	sbi 0x0f, 4           ; Set Bit in I/O Register
19002:	FF-1F       	adc r31, r31          ; Add with Carry
19004:	84-9A       	sbi 0x10, 4           ; Set Bit in I/O Register
19006:	FF-1F       	adc r31, r31          ; Add with Carry
19008:	84-9A       	sbi 0x10, 4           ; Set Bit in I/O Register
1900A:	FF-1F       	adc r31, r31          ; Add with Carry
1900C:	8C-9A       	sbi 0x11, 4           ; Set Bit in I/O Register
1900E:	FF-1F       	adc r31, r31          ; Add with Carry
19010:	8C-9A       	sbi 0x11, 4           ; Set Bit in I/O Register
19012:	FF-1F       	adc r31, r31          ; Add with Carry
19014:	94-9A       	sbi 0x12, 4           ; Set Bit in I/O Register
19016:	FF-1F       	adc r31, r31          ; Add with Carry
19018:	94-9A       	sbi 0x12, 4           ; Set Bit in I/O Register
1901A:	FF-1F       	adc r31, r31          ; Add with Carry
1901C:	9C-9A       	sbi 0x13, 4           ; Set Bit in I/O Register
1901E:	FF-1F       	adc r31, r31          ; Add with Carry
19020:	9C-9A       	sbi 0x13, 4           ; Set Bit in I/O Register
19022:	FF-1F       	adc r31, r31          ; Add with Carry
19024:	A4-9A       	sbi 0x14, 4           ; Set Bit in I/O Register
19026:	FF-1F       	adc r31, r31          ; Add with Carry
19028:	A4-9A       	sbi 0x14, 4           ; Set Bit in I/O Register
1902A:	FF-1F       	adc r31, r31          ; Add with Carry
1902C:	AC-9A       	sbi 0x15, 4           ; Set Bit in I/O Register
1902E:	FF-1F       	adc r31, r31          ; Add with Carry
19030:	AC-9A       	sbi 0x15, 4           ; Set Bit in I/O Register
19032:	FF-1F       	adc r31, r31          ; Add with Carry
19034:	B4-9A       	sbi 0x16, 4           ; Set Bit in I/O Register
19036:	FF-1F       	adc r31, r31          ; Add with Carry
19038:	B4-9A       	sbi 0x16, 4           ; Set Bit in I/O Register
1903A:	FF-1F       	adc r31, r31          ; Add with Carry
1903C:	BC-9A       	sbi 0x17, 4           ; Set Bit in I/O Register
1903E:	FF-1F       	adc r31, r31          ; Add with Carry
19040:	BC-9A       	sbi 0x17, 4           ; Set Bit in I/O Register
19042:	FF-1F       	adc r31, r31          ; Add with Carry
19044:	C4-9A       	sbi 0x18, 4           ; Set Bit in I/O Register
19046:	FF-1F       	adc r31, r31          ; Add with Carry
19048:	C4-9A       	sbi 0x18, 4           ; Set Bit in I/O Register
1904A:	FF-1F       	adc r31, r31          ; Add with Carry
1904C:	CC-9A       	sbi 0x19, 4           ; Set Bit in I/O Register
1904E:	FF-1F       	adc r31, r31          ; Add with Carry
19050:	CC-9A       	sbi 0x19, 4           ; Set Bit in I/O Register
19052:	FF-1F       	adc r31, r31          ; Add with Carry
19054:	D4-9A       	sbi 0x1a, 4           ; Set Bit in I/O Register
19056:	FF-1F       	adc r31, r31          ; Add with Carry
19058:	D4-9A       	sbi 0x1a, 4           ; Set Bit in I/O Register
1905A:	FF-1F       	adc r31, r31          ; Add with Carry
1905C:	DC-9A       	sbi 0x1b, 4           ; Set Bit in I/O Register
1905E:	FF-1F       	adc r31, r31          ; Add with Carry
19060:	DC-9A       	sbi 0x1b, 4           ; Set Bit in I/O Register
19062:	FF-1F       	adc r31, r31          ; Add with Carry
19064:	E4-9A       	sbi 0x1c, 4           ; Set Bit in I/O Register
19066:	FF-1F       	adc r31, r31          ; Add with Carry
19068:	E4-9A       	sbi 0x1c, 4           ; Set Bit in I/O Register
1906A:	FF-1F       	adc r31, r31          ; Add with Carry
1906C:	EC-9A       	sbi 0x1d, 4           ; Set Bit in I/O Register
1906E:	FF-1F       	adc r31, r31          ; Add with Carry
19070:	EC-9A       	sbi 0x1d, 4           ; Set Bit in I/O Register
19072:	FF-1F       	adc r31, r31          ; Add with Carry
19074:	F4-9A       	sbi 0x1e, 4           ; Set Bit in I/O Register
19076:	FF-1F       	adc r31, r31          ; Add with Carry
19078:	F4-9A       	sbi 0x1e, 4           ; Set Bit in I/O Register
1907A:	FF-1F       	adc r31, r31          ; Add with Carry
1907C:	FC-9A       	sbi 0x1f, 4           ; Set Bit in I/O Register
1907E:	FF-1F       	adc r31, r31          ; Add with Carry
19080:	FC-9A       	sbi 0x1f, 4           ; Set Bit in I/O Register
19082:	FF-1F       	adc r31, r31          ; Add with Carry
19084:	04-9B       	sbis 0x00, 4          ; Skip if Bit in I/O Register is Set
19086:	FF-1F       	adc r31, r31          ; Add with Carry
19088:	04-9B       	sbis 0x00, 4          ; Skip if Bit in I/O Register is Set
1908A:	FF-1F       	adc r31, r31          ; Add with Carry
1908C:	0C-9B       	sbis 0x01, 4          ; Skip if Bit in I/O Register is Set
1908E:	FF-1F       	adc r31, r31          ; Add with Carry
19090:	0C-9B       	sbis 0x01, 4          ; Skip if Bit in I/O Register is Set
19092:	FF-1F       	adc r31, r31          ; Add with Carry
19094:	14-9B       	sbis 0x02, 4          ; Skip if Bit in I/O Register is Set
19096:	FF-1F       	adc r31, r31          ; Add with Carry
19098:	14-9B       	sbis 0x02, 4          ; Skip if Bit in I/O Register is Set
1909A:	FF-1F       	adc r31, r31          ; Add with Carry
1909C:	1C-9B       	sbis 0x03, 4          ; Skip if Bit in I/O Register is Set
1909E:	FF-1F       	adc r31, r31          ; Add with Carry
190A0:	1C-9B       	sbis 0x03, 4          ; Skip if Bit in I/O Register is Set
190A2:	FF-1F       	adc r31, r31          ; Add with Carry
190A4:	24-9B       	sbis 0x04, 4          ; Skip if Bit in I/O Register is Set
190A6:	FF-1F       	adc r31, r31          ; Add with Carry
190A8:	24-9B       	sbis 0x04, 4          ; Skip if Bit in I/O Register is Set
190AA:	FF-1F       	adc r31, r31          ; Add with Carry
190AC:	2C-9B       	sbis 0x05, 4          ; Skip if Bit in I/O Register is Set
190AE:	FF-1F       	adc r31, r31          ; Add with Carry
190B0:	2C-9B       	sbis 0x05, 4          ; Skip if Bit in I/O Register is Set
190B2:	FF-1F       	adc r31, r31          ; Add with Carry
190B4:	34-9B       	sbis 0x06, 4          ; Skip if Bit in I/O Register is Set
190B6:	FF-1F       	adc r31, r31          ; Add with Carry
190B8:	34-9B       	sbis 0x06, 4          ; Skip if Bit in I/O Register is Set
190BA:	FF-1F       	adc r31, r31          ; Add with Carry
190BC:	3C-9B       	sbis 0x07, 4          ; Skip if Bit in I/O Register is Set
190BE:	FF-1F       	adc r31, r31          ; Add with Carry
190C0:	3C-9B       	sbis 0x07, 4          ; Skip if Bit in I/O Register is Set
190C2:	FF-1F       	adc r31, r31          ; Add with Carry
190C4:	44-9B       	sbis 0x08, 4          ; Skip if Bit in I/O Register is Set
190C6:	FF-1F       	adc r31, r31          ; Add with Carry
190C8:	44-9B       	sbis 0x08, 4          ; Skip if Bit in I/O Register is Set
190CA:	FF-1F       	adc r31, r31          ; Add with Carry
190CC:	4C-9B       	sbis 0x09, 4          ; Skip if Bit in I/O Register is Set
190CE:	FF-1F       	adc r31, r31          ; Add with Carry
190D0:	4C-9B       	sbis 0x09, 4          ; Skip if Bit in I/O Register is Set
190D2:	FF-1F       	adc r31, r31          ; Add with Carry
190D4:	54-9B       	sbis 0x0a, 4          ; Skip if Bit in I/O Register is Set
190D6:	FF-1F       	adc r31, r31          ; Add with Carry
190D8:	54-9B       	sbis 0x0a, 4          ; Skip if Bit in I/O Register is Set
190DA:	FF-1F       	adc r31, r31          ; Add with Carry
190DC:	5C-9B       	sbis 0x0b, 4          ; Skip if Bit in I/O Register is Set
190DE:	FF-1F       	adc r31, r31          ; Add with Carry
190E0:	5C-9B       	sbis 0x0b, 4          ; Skip if Bit in I/O Register is Set
190E2:	FF-1F       	adc r31, r31          ; Add with Carry
190E4:	64-9B       	sbis 0x0c, 4          ; Skip if Bit in I/O Register is Set
190E6:	FF-1F       	adc r31, r31          ; Add with Carry
190E8:	64-9B       	sbis 0x0c, 4          ; Skip if Bit in I/O Register is Set
190EA:	FF-1F       	adc r31, r31          ; Add with Carry
190EC:	6C-9B       	sbis 0x0d, 4          ; Skip if Bit in I/O Register is Set
190EE:	FF-1F       	adc r31, r31          ; Add with Carry
190F0:	6C-9B       	sbis 0x0d, 4          ; Skip if Bit in I/O Register is Set
190F2:	FF-1F       	adc r31, r31          ; Add with Carry
190F4:	74-9B       	sbis 0x0e, 4          ; Skip if Bit in I/O Register is Set
190F6:	FF-1F       	adc r31, r31          ; Add with Carry
190F8:	74-9B       	sbis 0x0e, 4          ; Skip if Bit in I/O Register is Set
190FA:	FF-1F       	adc r31, r31          ; Add with Carry
190FC:	7C-9B       	sbis 0x0f, 4          ; Skip if Bit in I/O Register is Set
190FE:	FF-1F       	adc r31, r31          ; Add with Carry
19100:	7C-9B       	sbis 0x0f, 4          ; Skip if Bit in I/O Register is Set
19102:	FF-1F       	adc r31, r31          ; Add with Carry
19104:	84-9B       	sbis 0x10, 4          ; Skip if Bit in I/O Register is Set
19106:	FF-1F       	adc r31, r31          ; Add with Carry
19108:	84-9B       	sbis 0x10, 4          ; Skip if Bit in I/O Register is Set
1910A:	FF-1F       	adc r31, r31          ; Add with Carry
1910C:	8C-9B       	sbis 0x11, 4          ; Skip if Bit in I/O Register is Set
1910E:	FF-1F       	adc r31, r31          ; Add with Carry
19110:	8C-9B       	sbis 0x11, 4          ; Skip if Bit in I/O Register is Set
19112:	FF-1F       	adc r31, r31          ; Add with Carry
19114:	94-9B       	sbis 0x12, 4          ; Skip if Bit in I/O Register is Set
19116:	FF-1F       	adc r31, r31          ; Add with Carry
19118:	94-9B       	sbis 0x12, 4          ; Skip if Bit in I/O Register is Set
1911A:	FF-1F       	adc r31, r31          ; Add with Carry
1911C:	9C-9B       	sbis 0x13, 4          ; Skip if Bit in I/O Register is Set
1911E:	FF-1F       	adc r31, r31          ; Add with Carry
19120:	9C-9B       	sbis 0x13, 4          ; Skip if Bit in I/O Register is Set
19122:	FF-1F       	adc r31, r31          ; Add with Carry
19124:	A4-9B       	sbis 0x14, 4          ; Skip if Bit in I/O Register is Set
19126:	FF-1F       	adc r31, r31          ; Add with Carry
19128:	A4-9B       	sbis 0x14, 4          ; Skip if Bit in I/O Register is Set
1912A:	FF-1F       	adc r31, r31          ; Add with Carry
1912C:	AC-9B       	sbis 0x15, 4          ; Skip if Bit in I/O Register is Set
1912E:	FF-1F       	adc r31, r31          ; Add with Carry
19130:	AC-9B       	sbis 0x15, 4          ; Skip if Bit in I/O Register is Set
19132:	FF-1F       	adc r31, r31          ; Add with Carry
19134:	B4-9B       	sbis 0x16, 4          ; Skip if Bit in I/O Register is Set
19136:	FF-1F       	adc r31, r31          ; Add with Carry
19138:	B4-9B       	sbis 0x16, 4          ; Skip if Bit in I/O Register is Set
1913A:	FF-1F       	adc r31, r31          ; Add with Carry
1913C:	BC-9B       	sbis 0x17, 4          ; Skip if Bit in I/O Register is Set
1913E:	FF-1F       	adc r31, r31          ; Add with Carry
19140:	BC-9B       	sbis 0x17, 4          ; Skip if Bit in I/O Register is Set
19142:	FF-1F       	adc r31, r31          ; Add with Carry
19144:	C4-9B       	sbis 0x18, 4          ; Skip if Bit in I/O Register is Set
19146:	FF-1F       	adc r31, r31          ; Add with Carry
19148:	C4-9B       	sbis 0x18, 4          ; Skip if Bit in I/O Register is Set
1914A:	FF-1F       	adc r31, r31          ; Add with Carry
1914C:	CC-9B       	sbis 0x19, 4          ; Skip if Bit in I/O Register is Set
1914E:	FF-1F       	adc r31, r31          ; Add with Carry
19150:	CC-9B       	sbis 0x19, 4          ; Skip if Bit in I/O Register is Set
19152:	FF-1F       	adc r31, r31          ; Add with Carry
19154:	D4-9B       	sbis 0x1a, 4          ; Skip if Bit in I/O Register is Set
19156:	FF-1F       	adc r31, r31          ; Add with Carry
19158:	D4-9B       	sbis 0x1a, 4          ; Skip if Bit in I/O Register is Set
1915A:	FF-1F       	adc r31, r31          ; Add with Carry
1915C:	DC-9B       	sbis 0x1b, 4          ; Skip if Bit in I/O Register is Set
1915E:	FF-1F       	adc r31, r31          ; Add with Carry
19160:	DC-9B       	sbis 0x1b, 4          ; Skip if Bit in I/O Register is Set
19162:	FF-1F       	adc r31, r31          ; Add with Carry
19164:	E4-9B       	sbis 0x1c, 4          ; Skip if Bit in I/O Register is Set
19166:	FF-1F       	adc r31, r31          ; Add with Carry
19168:	E4-9B       	sbis 0x1c, 4          ; Skip if Bit in I/O Register is Set
1916A:	FF-1F       	adc r31, r31          ; Add with Carry
1916C:	EC-9B       	sbis 0x1d, 4          ; Skip if Bit in I/O Register is Set
1916E:	FF-1F       	adc r31, r31          ; Add with Carry
19170:	EC-9B       	sbis 0x1d, 4          ; Skip if Bit in I/O Register is Set
19172:	FF-1F       	adc r31, r31          ; Add with Carry
19174:	F4-9B       	sbis 0x1e, 4          ; Skip if Bit in I/O Register is Set
19176:	FF-1F       	adc r31, r31          ; Add with Carry
19178:	F4-9B       	sbis 0x1e, 4          ; Skip if Bit in I/O Register is Set
1917A:	FF-1F       	adc r31, r31          ; Add with Carry
1917C:	FC-9B       	sbis 0x1f, 4          ; Skip if Bit in I/O Register is Set
1917E:	FF-1F       	adc r31, r31          ; Add with Carry
19180:	FC-9B       	sbis 0x1f, 4          ; Skip if Bit in I/O Register is Set
19182:	FF-1F       	adc r31, r31          ; Add with Carry
19184:	04-9C       	mul r0, r4            ; Multiply Unsigned
19186:	FF-1F       	adc r31, r31          ; Add with Carry
19188:	04-9C       	mul r0, r4            ; Multiply Unsigned
1918A:	FF-1F       	adc r31, r31          ; Add with Carry
1918C:	0C-9C       	mul r0, r12           ; Multiply Unsigned
1918E:	FF-1F       	adc r31, r31          ; Add with Carry
19190:	0C-9C       	mul r0, r12           ; Multiply Unsigned
19192:	FF-1F       	adc r31, r31          ; Add with Carry
19194:	14-9C       	mul r1, r4            ; Multiply Unsigned
19196:	FF-1F       	adc r31, r31          ; Add with Carry
19198:	14-9C       	mul r1, r4            ; Multiply Unsigned
1919A:	FF-1F       	adc r31, r31          ; Add with Carry
1919C:	1C-9C       	mul r1, r12           ; Multiply Unsigned
1919E:	FF-1F       	adc r31, r31          ; Add with Carry
191A0:	1C-9C       	mul r1, r12           ; Multiply Unsigned
191A2:	FF-1F       	adc r31, r31          ; Add with Carry
191A4:	24-9C       	mul r2, r4            ; Multiply Unsigned
191A6:	FF-1F       	adc r31, r31          ; Add with Carry
191A8:	24-9C       	mul r2, r4            ; Multiply Unsigned
191AA:	FF-1F       	adc r31, r31          ; Add with Carry
191AC:	2C-9C       	mul r2, r12           ; Multiply Unsigned
191AE:	FF-1F       	adc r31, r31          ; Add with Carry
191B0:	2C-9C       	mul r2, r12           ; Multiply Unsigned
191B2:	FF-1F       	adc r31, r31          ; Add with Carry
191B4:	34-9C       	mul r3, r4            ; Multiply Unsigned
191B6:	FF-1F       	adc r31, r31          ; Add with Carry
191B8:	34-9C       	mul r3, r4            ; Multiply Unsigned
191BA:	FF-1F       	adc r31, r31          ; Add with Carry
191BC:	3C-9C       	mul r3, r12           ; Multiply Unsigned
191BE:	FF-1F       	adc r31, r31          ; Add with Carry
191C0:	3C-9C       	mul r3, r12           ; Multiply Unsigned
191C2:	FF-1F       	adc r31, r31          ; Add with Carry
191C4:	44-9C       	mul r4, r4            ; Multiply Unsigned
191C6:	FF-1F       	adc r31, r31          ; Add with Carry
191C8:	44-9C       	mul r4, r4            ; Multiply Unsigned
191CA:	FF-1F       	adc r31, r31          ; Add with Carry
191CC:	4C-9C       	mul r4, r12           ; Multiply Unsigned
191CE:	FF-1F       	adc r31, r31          ; Add with Carry
191D0:	4C-9C       	mul r4, r12           ; Multiply Unsigned
191D2:	FF-1F       	adc r31, r31          ; Add with Carry
191D4:	54-9C       	mul r5, r4            ; Multiply Unsigned
191D6:	FF-1F       	adc r31, r31          ; Add with Carry
191D8:	54-9C       	mul r5, r4            ; Multiply Unsigned
191DA:	FF-1F       	adc r31, r31          ; Add with Carry
191DC:	5C-9C       	mul r5, r12           ; Multiply Unsigned
191DE:	FF-1F       	adc r31, r31          ; Add with Carry
191E0:	5C-9C       	mul r5, r12           ; Multiply Unsigned
191E2:	FF-1F       	adc r31, r31          ; Add with Carry
191E4:	64-9C       	mul r6, r4            ; Multiply Unsigned
191E6:	FF-1F       	adc r31, r31          ; Add with Carry
191E8:	64-9C       	mul r6, r4            ; Multiply Unsigned
191EA:	FF-1F       	adc r31, r31          ; Add with Carry
191EC:	6C-9C       	mul r6, r12           ; Multiply Unsigned
191EE:	FF-1F       	adc r31, r31          ; Add with Carry
191F0:	6C-9C       	mul r6, r12           ; Multiply Unsigned
191F2:	FF-1F       	adc r31, r31          ; Add with Carry
191F4:	74-9C       	mul r7, r4            ; Multiply Unsigned
191F6:	FF-1F       	adc r31, r31          ; Add with Carry
191F8:	74-9C       	mul r7, r4            ; Multiply Unsigned
191FA:	FF-1F       	adc r31, r31          ; Add with Carry
191FC:	7C-9C       	mul r7, r12           ; Multiply Unsigned
191FE:	FF-1F       	adc r31, r31          ; Add with Carry
19200:	7C-9C       	mul r7, r12           ; Multiply Unsigned
19202:	FF-1F       	adc r31, r31          ; Add with Carry
19204:	84-9C       	mul r8, r4            ; Multiply Unsigned
19206:	FF-1F       	adc r31, r31          ; Add with Carry
19208:	84-9C       	mul r8, r4            ; Multiply Unsigned
1920A:	FF-1F       	adc r31, r31          ; Add with Carry
1920C:	8C-9C       	mul r8, r12           ; Multiply Unsigned
1920E:	FF-1F       	adc r31, r31          ; Add with Carry
19210:	8C-9C       	mul r8, r12           ; Multiply Unsigned
19212:	FF-1F       	adc r31, r31          ; Add with Carry
19214:	94-9C       	mul r9, r4            ; Multiply Unsigned
19216:	FF-1F       	adc r31, r31          ; Add with Carry
19218:	94-9C       	mul r9, r4            ; Multiply Unsigned
1921A:	FF-1F       	adc r31, r31          ; Add with Carry
1921C:	9C-9C       	mul r9, r12           ; Multiply Unsigned
1921E:	FF-1F       	adc r31, r31          ; Add with Carry
19220:	9C-9C       	mul r9, r12           ; Multiply Unsigned
19222:	FF-1F       	adc r31, r31          ; Add with Carry
19224:	A4-9C       	mul r10, r4           ; Multiply Unsigned
19226:	FF-1F       	adc r31, r31          ; Add with Carry
19228:	A4-9C       	mul r10, r4           ; Multiply Unsigned
1922A:	FF-1F       	adc r31, r31          ; Add with Carry
1922C:	AC-9C       	mul r10, r12          ; Multiply Unsigned
1922E:	FF-1F       	adc r31, r31          ; Add with Carry
19230:	AC-9C       	mul r10, r12          ; Multiply Unsigned
19232:	FF-1F       	adc r31, r31          ; Add with Carry
19234:	B4-9C       	mul r11, r4           ; Multiply Unsigned
19236:	FF-1F       	adc r31, r31          ; Add with Carry
19238:	B4-9C       	mul r11, r4           ; Multiply Unsigned
1923A:	FF-1F       	adc r31, r31          ; Add with Carry
1923C:	BC-9C       	mul r11, r12          ; Multiply Unsigned
1923E:	FF-1F       	adc r31, r31          ; Add with Carry
19240:	BC-9C       	mul r11, r12          ; Multiply Unsigned
19242:	FF-1F       	adc r31, r31          ; Add with Carry
19244:	C4-9C       	mul r12, r4           ; Multiply Unsigned
19246:	FF-1F       	adc r31, r31          ; Add with Carry
19248:	C4-9C       	mul r12, r4           ; Multiply Unsigned
1924A:	FF-1F       	adc r31, r31          ; Add with Carry
1924C:	00-00       	nop                   ; No Operation
1924E:	02-00       	.data 0x0002          ; Binary data
19250:	FF-FF       	.data 0xffff          ; Binary data
19252:	FF-FF       	.data 0xffff          ; Binary data
